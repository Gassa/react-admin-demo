{"version":3,"sources":["../static/js/0.73b4a4be.chunk.js","dataProvider/graphql.js","../../../node_modules/graphql/error/index.mjs","../../../node_modules/graphql/type/definition.mjs","../../../node_modules/graphql/language/kinds.mjs","../../../node_modules/graphql/language/printer.mjs","../../../node_modules/graphql/type/schema.mjs","../../../node_modules/graphql/jsutils/invariant.mjs","../../../node_modules/graphql/jsutils/isInvalid.mjs","../../../node_modules/graphql/type/directives.mjs","../../../node_modules/graphql/type/introspection.mjs","../../../node_modules/graphql/utilities/typeFromAST.mjs","../../../node_modules/graphql/error/GraphQLError.mjs","../../../node_modules/graphql/type/scalars.mjs","../../../node_modules/graphql/jsutils/objectValues.mjs","../../../node_modules/graphql/jsutils/keyMap.mjs","../../../node_modules/graphql/language/visitor.mjs","../../../node_modules/graphql/language/parser.mjs","../../../node_modules/graphql/language/directiveLocation.mjs","../../../node_modules/graphql/jsutils/find.mjs","../../../packages/ra-data-graphql/node_modules/apollo-client/core/networkStatus.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/core/networkStatus.js","../../../node_modules/core-js/library/modules/_object-sap.js","../../../node_modules/iterall/index.mjs","../../../node_modules/graphql/utilities/TypeInfo.mjs","../../../node_modules/graphql/jsutils/suggestionList.mjs","../../../packages/ra-data-graphql/node_modules/apollo-client/core/types.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/core/types.js","../../../node_modules/graphql/type/validate.mjs","../../../node_modules/graphql/jsutils/keyValMap.mjs","../../../node_modules/graphql/jsutils/isNullish.mjs","../../../node_modules/graphql/utilities/typeComparators.mjs","../../../node_modules/graphql/execution/execute.mjs","../../../node_modules/graphql/utilities/valueFromAST.mjs","../../../packages/ra-data-graphql/node_modules/apollo-client/core/ObservableQuery.js","../../../node_modules/apollo-utilities/lib/storeUtils.js","../../../node_modules/apollo-utilities/lib/util/environment.js","../../../node_modules/zen-observable-ts/lib/index.js","../../../packages/ra-data-graphql/node_modules/apollo-client/errors/ApolloError.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/core/ObservableQuery.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/errors/ApolloError.js","../../../node_modules/apollo-cache-inmemory/lib/objectCache.js","../../../node_modules/graphql-tag/src/index.js","../../../node_modules/graphql/language/location.mjs","../../../node_modules/graphql/language/lexer.mjs","../../../node_modules/graphql/jsutils/instanceOf.mjs","../../../node_modules/graphql/utilities/astFromValue.mjs","../../../node_modules/graphql/jsutils/quotedOrList.mjs","../../../node_modules/graphql/jsutils/orList.mjs","../../../node_modules/graphql/validation/rules/ValuesOfCorrectType.mjs","../../../node_modules/graphql/validation/ValidationContext.mjs","../../../node_modules/graphql/execution/values.mjs","../../../node_modules/graphql/utilities/coerceValue.mjs","../../../packages/ra-data-graphql-simple/lib/getFinalType.js","../../../node_modules/lodash/merge.js","../../../packages/ra-data-graphql/lib/index.js","../../../node_modules/apollo-utilities/lib/getFromAST.js","../../../node_modules/apollo-utilities/lib/util/assign.js","../../../node_modules/apollo-utilities/lib/util/cloneDeep.js","../../../packages/ra-data-graphql/node_modules/apollo-client/util/Observable.js","../../../node_modules/zen-observable-ts/lib/zenObservable.js","../../../node_modules/apollo-link/lib/linkUtils.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/index.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/util/Observable.js","../../../node_modules/apollo-cache-inmemory/lib/fragmentMatcher.js","../../../node_modules/apollo-cache-inmemory/lib/writeToStore.js","../../../node_modules/apollo-cache-inmemory/lib/readFromStore.js","../../../node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/graphql.js","../../../node_modules/apollo-cache-inmemory/lib/recordingCache.js","../../../node_modules/graphql/language/source.mjs","../../../node_modules/graphql/error/printError.mjs","../../../node_modules/graphql/error/locatedError.mjs","../../../node_modules/graphql/language/blockStringValue.mjs","../../../packages/ra-data-graphql/lib/constants.js","../../../node_modules/babel-runtime/helpers/taggedTemplateLiteral.js","../../../node_modules/graphql/utilities/valueFromASTUntyped.mjs","../../../node_modules/graphql/utilities/assertValidName.mjs","../../../node_modules/graphql/validation/validate.mjs","../../../node_modules/graphql/validation/specifiedRules.mjs","../../../node_modules/graphql/validation/rules/UniqueOperationNames.mjs","../../../node_modules/graphql/validation/rules/LoneAnonymousOperation.mjs","../../../node_modules/graphql/validation/rules/SingleFieldSubscriptions.mjs","../../../node_modules/graphql/validation/rules/KnownTypeNames.mjs","../../../node_modules/graphql/validation/rules/FragmentsOnCompositeTypes.mjs","../../../node_modules/graphql/validation/rules/VariablesAreInputTypes.mjs","../../../node_modules/graphql/validation/rules/ScalarLeafs.mjs","../../../node_modules/graphql/validation/rules/FieldsOnCorrectType.mjs","../../../node_modules/graphql/validation/rules/UniqueFragmentNames.mjs","../../../node_modules/graphql/validation/rules/KnownFragmentNames.mjs","../../../node_modules/graphql/validation/rules/NoUnusedFragments.mjs","../../../node_modules/graphql/validation/rules/PossibleFragmentSpreads.mjs","../../../node_modules/graphql/validation/rules/NoFragmentCycles.mjs","../../../node_modules/graphql/validation/rules/UniqueVariableNames.mjs","../../../node_modules/graphql/validation/rules/NoUndefinedVariables.mjs","../../../node_modules/graphql/validation/rules/NoUnusedVariables.mjs","../../../node_modules/graphql/validation/rules/KnownDirectives.mjs","../../../node_modules/graphql/validation/rules/UniqueDirectivesPerLocation.mjs","../../../node_modules/graphql/validation/rules/KnownArgumentNames.mjs","../../../node_modules/graphql/validation/rules/UniqueArgumentNames.mjs","../../../node_modules/graphql/validation/rules/ProvidedNonNullArguments.mjs","../../../node_modules/graphql/validation/rules/VariablesDefaultValueAllowed.mjs","../../../node_modules/graphql/validation/rules/VariablesInAllowedPosition.mjs","../../../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMerged.mjs","../../../node_modules/graphql/validation/rules/UniqueInputFieldNames.mjs","../../../node_modules/graphql/jsutils/isPromise.mjs","../../../node_modules/graphql/utilities/introspectionQuery.mjs","../../../node_modules/graphql/utilities/buildASTSchema.mjs","../../../packages/ra-data-graphql-simple/lib/isList.js","../../../packages/ra-data-graphql-simple/lib/index.js","../../../node_modules/pluralize/pluralize.js","../../../packages/ra-data-graphql/lib/buildApolloClient.js","../../../packages/ra-data-graphql/node_modules/apollo-client/index.js","../../../node_modules/apollo-utilities/lib/directives.js","../../../node_modules/fast-json-stable-stringify/index.js","../../../node_modules/apollo-utilities/lib/fragments.js","../../../node_modules/apollo-utilities/lib/transform.js","../../../node_modules/apollo-utilities/lib/util/errorHandling.js","../../../node_modules/apollo-utilities/lib/util/isEqual.js","../../../node_modules/apollo-utilities/lib/util/maybeDeepFreeze.js","../../../node_modules/apollo-utilities/lib/util/warnOnce.js","../../../node_modules/apollo-link/lib/link.js","../../../node_modules/zen-observable/index.js","../../../node_modules/zen-observable/lib/Observable.js","../../../packages/ra-data-graphql/node_modules/apollo-client/ApolloClient.js","../../../packages/ra-data-graphql/node_modules/apollo-client/core/QueryManager.js","../../../node_modules/apollo-link-dedup/lib/dedupLink.js","../../../packages/ra-data-graphql/node_modules/apollo-client/scheduler/scheduler.js","../../../packages/ra-data-graphql/node_modules/apollo-client/data/mutations.js","../../../packages/ra-data-graphql/node_modules/apollo-client/data/queries.js","../../../packages/ra-data-graphql/node_modules/apollo-client/data/store.js","../../../packages/ra-data-graphql/node_modules/apollo-client/version.js","../../../node_modules/apollo-client-preset/lib/index.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/ApolloClient.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/core/QueryManager.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/scheduler/scheduler.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/data/mutations.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/data/queries.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/data/store.js","../../../node_modules/apollo-client-preset/node_modules/apollo-client/version.js","../../../node_modules/apollo-link-http/lib/httpLink.js","../../../node_modules/apollo-link-http-common/lib/index.js","../../../node_modules/apollo-cache-inmemory/lib/inMemoryCache.js","../../../node_modules/apollo-cache/lib/cache.js","../../../node_modules/apollo-cache/lib/utils.js","../../../node_modules/apollo-cache/lib/types/Cache.js","../../../node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/index.js","../../../node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/utilities.js","../../../node_modules/graphql/error/syntaxError.mjs","../../../node_modules/graphql/error/formatError.mjs","../../../packages/ra-data-graphql/lib/introspection.js","../../../node_modules/babel-runtime/core-js/object/define-properties.js","../../../node_modules/core-js/library/fn/object/define-properties.js","../../../node_modules/core-js/library/modules/es6.object.define-properties.js","../../../node_modules/babel-runtime/core-js/object/freeze.js","../../../node_modules/core-js/library/fn/object/freeze.js","../../../node_modules/core-js/library/modules/es6.object.freeze.js","../../../node_modules/graphql/graphql.mjs","../../../node_modules/graphql/validation/rules/ExecutableDefinitions.mjs","../../../node_modules/graphql/jsutils/memoize3.mjs","../../../node_modules/graphql/jsutils/promiseForObject.mjs","../../../node_modules/graphql/jsutils/promiseReduce.mjs","../../../node_modules/graphql/type/index.mjs","../../../node_modules/graphql/language/index.mjs","../../../node_modules/graphql/execution/index.mjs","../../../node_modules/graphql/subscription/index.mjs","../../../node_modules/graphql/subscription/subscribe.mjs","../../../node_modules/graphql/subscription/mapAsyncIterator.mjs","../../../node_modules/graphql/validation/index.mjs","../../../node_modules/graphql/utilities/index.mjs","../../../node_modules/graphql/utilities/getOperationAST.mjs","../../../node_modules/graphql/utilities/introspectionFromSchema.mjs","../../../node_modules/graphql/utilities/buildClientSchema.mjs","../../../node_modules/graphql/utilities/extendSchema.mjs","../../../node_modules/graphql/utilities/lexicographicSortSchema.mjs","../../../node_modules/graphql/utilities/schemaPrinter.mjs","../../../node_modules/graphql/utilities/isValidJSValue.mjs","../../../node_modules/graphql/utilities/isValidLiteralValue.mjs","../../../node_modules/graphql/utilities/concatAST.mjs","../../../node_modules/graphql/utilities/separateOperations.mjs","../../../node_modules/graphql/utilities/findBreakingChanges.mjs","../../../node_modules/graphql/utilities/findDeprecatedUsages.mjs","../../../packages/ra-data-graphql-simple/lib/buildQuery.js","../../../packages/ra-data-graphql-simple/lib/buildVariables.js","../../../packages/ra-data-graphql-simple/lib/buildGqlQuery.js","../../../packages/ra-data-graphql-simple/lib/graphqlify/index.js","../../../packages/ra-data-graphql-simple/lib/isRequired.js","../../../packages/ra-data-graphql-simple/lib/getResponseParser.js"],"names":["webpackJsonp","1756","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple__","__WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple___default","n","getGqlResource","resource","Error","clientOptions","uri","then","dataProvider","type","params","1760","__WEBPACK_IMPORTED_MODULE_0__GraphQLError__","d","__WEBPACK_IMPORTED_MODULE_1__syntaxError__","__WEBPACK_IMPORTED_MODULE_2__locatedError__","__WEBPACK_IMPORTED_MODULE_3__printError__","__WEBPACK_IMPORTED_MODULE_4__formatError__","1761","_classCallCheck","instance","Constructor","TypeError","isType","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType","isNonNullType","assertType","__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__","String","__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__","GraphQLScalarType","assertScalarType","GraphQLObjectType","assertObjectType","GraphQLInterfaceType","assertInterfaceType","GraphQLUnionType","assertUnionType","GraphQLEnumType","assertEnumType","GraphQLInputObjectType","assertInputObjectType","GraphQLList","assertListType","GraphQLNonNull","assertNonNullType","isInputType","isWrappingType","ofType","assertInputType","isOutputType","assertOutputType","isLeafType","assertLeafType","isCompositeType","assertCompositeType","isAbstractType","assertAbstractType","this","assertNullableType","assertWrappingType","isNullableType","getNullableType","isNamedType","assertNamedType","getNamedType","unwrappedType","resolveThunk","thunk","defineInterfaces","interfacesThunk","interfaces","Array","isArray","name","defineFieldMap","fieldsThunk","fieldMap","isPlainObj","resultFieldMap","create","keys","forEach","fieldName","fieldConfig","hasOwnProperty","field","_extends","isDeprecated","Boolean","deprecationReason","isValidResolver","resolve","argsConfig","args","map","argName","arg","description","undefined","defaultValue","astNode","obj","_typeof","resolver","defineTypes","unionType","typesThunk","types","defineEnumValues","valueMap","valueName","__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__","__WEBPACK_IMPORTED_MODULE_3__language_kinds__","__WEBPACK_IMPORTED_MODULE_4__utilities_valueFromASTUntyped__","Symbol","iterator","constructor","prototype","assign","target","i","arguments","length","source","key","call","listProto","toString","toJSON","inspect","nonNullProto","config","_scalarConfig","serialize","parseValue","parseLiteral","serializer","parser","valueNode","variables","extensionASTNodes","isTypeOf","_typeConfig","getFields","_fields","fields","getInterfaces","_interfaces","resolveType","getTypes","_types","_enumConfig","getValues","_values","values","getValue","_getNameLookup","enumValue","_getValueLookup","get","_variables","kind","ENUM","_valueLookup","lookup","Map","set","_nameLookup","_defineFieldMap","_this","1762","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","VARIABLE","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","INT","FLOAT","STRING","BOOLEAN","NULL","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","DIRECTIVE_DEFINITION","1763","__WEBPACK_IMPORTED_MODULE_0__directives__","__WEBPACK_IMPORTED_MODULE_1__fragments__","__WEBPACK_IMPORTED_MODULE_2__getFromAST__","__WEBPACK_IMPORTED_MODULE_3__transform__","__WEBPACK_IMPORTED_MODULE_4__storeUtils__","__WEBPACK_IMPORTED_MODULE_5__util_assign__","__WEBPACK_IMPORTED_MODULE_7__util_environment__","__WEBPACK_IMPORTED_MODULE_8__util_errorHandling__","__WEBPACK_IMPORTED_MODULE_9__util_isEqual__","__WEBPACK_IMPORTED_MODULE_10__util_maybeDeepFreeze__","__WEBPACK_IMPORTED_MODULE_11__util_warnOnce__","1764","print","ast","__WEBPACK_IMPORTED_MODULE_0__visitor__","leave","printDocASTReducer","addDescription","cb","node","join","maybeArray","separator","filter","x","block","array","indent","wrap","start","maybeString","end","replace","printBlockString","isDescription","escaped","indexOf","Name","Variable","Document","definitions","OperationDefinition","op","operation","varDefs","variableDefinitions","directives","selectionSet","VariableDefinition","_ref","variable","SelectionSet","_ref2","selections","Field","_ref3","alias","Argument","_ref4","FragmentSpread","_ref5","InlineFragment","_ref6","typeCondition","FragmentDefinition","_ref7","IntValue","_ref8","FloatValue","_ref9","StringValue","_ref10","JSON","stringify","BooleanValue","_ref11","NullValue","EnumValue","_ref12","ListValue","_ref13","ObjectValue","_ref14","ObjectField","_ref15","Directive","_ref16","NamedType","_ref17","ListType","_ref18","NonNullType","_ref19","SchemaDefinition","_ref20","operationTypes","OperationTypeDefinition","_ref21","ScalarTypeDefinition","_ref22","ObjectTypeDefinition","_ref23","FieldDefinition","_ref24","InputValueDefinition","_ref25","InterfaceTypeDefinition","_ref26","UnionTypeDefinition","_ref27","EnumTypeDefinition","_ref28","EnumValueDefinition","_ref29","InputObjectTypeDefinition","_ref30","ScalarTypeExtension","_ref31","ObjectTypeExtension","_ref32","InterfaceTypeExtension","_ref33","UnionTypeExtension","_ref34","EnumTypeExtension","_ref35","InputObjectTypeExtension","_ref36","DirectiveDefinition","_ref37","locations","1765","isSchema","schema","__WEBPACK_IMPORTED_MODULE_4__jsutils_instanceOf__","GraphQLSchema","typeMapReducer","__WEBPACK_IMPORTED_MODULE_0__definition__","__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__","reducedMap","reduce","__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__","fieldArgTypes","typeMapDirectiveReducer","directive","__WEBPACK_IMPORTED_MODULE_1__directives__","_map","__WEBPACK_IMPORTED_MODULE_2__introspection__","__WEBPACK_IMPORTED_MODULE_3__jsutils_find__","assumeValid","__validationErrors","allowedLegacyNames","__allowedLegacyNames","_queryType","query","_mutationType","mutation","_subscriptionType","subscription","_directives","initialTypes","getQueryType","getMutationType","getSubscriptionType","concat","typeMap","_typeMap","_implementations","typeName","iface","impls","push","getTypeMap","getType","getPossibleTypes","abstractType","isPossibleType","possibleType","possibleTypeMap","_possibleTypeMap","possibleTypes","getDirectives","getDirective","1766","invariant","condition","message","1767","isInvalid","1768","isDirective","__WEBPACK_IMPORTED_MODULE_2__jsutils_instanceOf__","GraphQLDirective","isSpecifiedDirective","specifiedDirectives","some","specifiedDirective","GraphQLIncludeDirective","GraphQLSkipDirective","DEFAULT_DEPRECATION_REASON","GraphQLDeprecatedDirective","__WEBPACK_IMPORTED_MODULE_1__scalars__","__WEBPACK_IMPORTED_MODULE_3__jsutils_invariant__","__WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__","if","ENUM_VALUE","reason","1769","isIntrospectionType","__WEBPACK_IMPORTED_MODULE_4__definition__","__Schema","__Directive","__DirectiveLocation","__Type","__Field","__InputValue","__EnumValue","__TypeKind","TypeKind","SchemaMetaFieldDef","TypeMetaFieldDef","TypeNameMetaFieldDef","introspectionTypes","__WEBPACK_IMPORTED_MODULE_0__jsutils_isInvalid__","__WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__","__WEBPACK_IMPORTED_MODULE_2__utilities_astFromValue__","__WEBPACK_IMPORTED_MODULE_3__language_printer__","__WEBPACK_IMPORTED_MODULE_5__scalars__","__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__","isIntrospection","queryType","mutationType","subscriptionType","onOperation","QUERY","MUTATION","SUBSCRIPTION","onFragment","onField","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","INPUT_OBJECT","INPUT_FIELD_DEFINITION","NON_NULL","includeDeprecated","context","enumValues","inputFields","inputVal","parentType","1770","__WEBPACK_IMPORTED_MODULE_0__link__","__WEBPACK_IMPORTED_MODULE_1__linkUtils__","__WEBPACK_IMPORTED_MODULE_2_zen_observable_ts__","1771","typeFromAST","typeNode","innerType","__WEBPACK_IMPORTED_MODULE_0__language_kinds__","__WEBPACK_IMPORTED_MODULE_1__type_definition__","1772","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","_source","loc","_positions","list","_locations","pos","__WEBPACK_IMPORTED_MODULE_1__language_location__","defineProperties","enumerable","writable","stack","configurable","captureStackTrace","__WEBPACK_IMPORTED_MODULE_0__printError__","1773","coerceInt","num","Number","MAX_INT","MIN_INT","int","Math","floor","coerceFloat","coerceString","isSpecifiedScalarType","GraphQLString","GraphQLInt","GraphQLFloat","GraphQLBoolean","GraphQLID","specifiedScalarTypes","__WEBPACK_IMPORTED_MODULE_1__language_kinds__","parseInt","parseFloat","1774","objectValues","1775","keyMap","keyFn","item","1776","visit","root","visitor","visitorKeys","QueryDocumentKeys","inArray","index","edits","parent","ancestors","newRoot","isLeaving","isEdited","pop","slice","clone","k","editOffset","ii","editKey","editValue","splice","prev","result","isNode","visitFn","getVisitFn","BREAK","maybeNode","visitInParallel","visitors","skipping","enter","fn","apply","visitWithTypeInfo","typeInfo","kindVisitor","kindSpecificVisitor","specificVisitor","specificKindVisitor","1777","parse","options","sourceObj","__WEBPACK_IMPORTED_MODULE_0__source__","parseDocument","__WEBPACK_IMPORTED_MODULE_2__lexer__","lexer","expect","SOF","parseValueLiteral","EOF","parseType","parseTypeReference","parseName","token","__WEBPACK_IMPORTED_MODULE_3__kinds__","parseDefinition","skip","peek","parseExecutableDefinition","parseTypeSystemDefinition","BRACE_L","peekDescription","unexpected","parseOperationDefinition","parseFragmentDefinition","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","PAREN_L","many","parseVariableDefinition","PAREN_R","parseVariable","COLON","EQUALS","DOLLAR","parseSelection","BRACE_R","SPREAD","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","parseConstValue","parseFragmentName","advance","parseNamedType","expectKeyword","experimentalFragmentVariables","BRACKET_L","parseList","parseObject","BLOCK_STRING","parseStringLiteral","parseValueValue","any","BRACKET_R","parseObjectField","AT","parseDirective","BANG","keywordToken","lookahead","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseTypeExtension","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","AMP","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","PIPE","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseDirectiveLocations","parseDirectiveLocation","__WEBPACK_IMPORTED_MODULE_4__directiveLocation__","startToken","noLocation","Loc","lastToken","endToken","match","__WEBPACK_IMPORTED_MODULE_1__error__","atToken","openKind","parseFn","closeKind","1778","DirectiveLocation","1779","__WEBPACK_IMPORTED_MODULE_0__graphql__","__WEBPACK_IMPORTED_MODULE_1__type__","__WEBPACK_IMPORTED_MODULE_2__language__","__WEBPACK_IMPORTED_MODULE_3__execution__","__WEBPACK_IMPORTED_MODULE_4__subscription__","__WEBPACK_IMPORTED_MODULE_5__validation__","__WEBPACK_IMPORTED_MODULE_6__error__","__WEBPACK_IMPORTED_MODULE_7__utilities__","1780","find","predicate","1781","isNetworkRequestInFlight","networkStatus","NetworkStatus","1782","1783","exports","$export","core","fails","KEY","exec","exp","S","F","1784","isIterable","getIteratorMethod","isArrayLike","isCollection","getIterator","iterable","method","SYMBOL_ITERATOR","ArrayLikeIterator","_o","_i","collection","callback","thisArg","step","next","done","isAsyncIterable","getAsyncIteratorMethod","getAsyncIterator","asyncIterable","SYMBOL_ASYNC_ITERATOR","AsyncFromSyncIterator","$$asyncIterator","SYMBOL","$$iterator","asyncIterator","Promise","1785","getFieldDef","fieldNode","__WEBPACK_IMPORTED_MODULE_2__type_introspection__","TypeInfo","__WEBPACK_IMPORTED_MODULE_3__typeFromAST__","__WEBPACK_IMPORTED_MODULE_4__jsutils_find__","getFieldDefFn","initialType","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_directive","_argument","_enumValue","_getFieldDef","getParentType","getInputType","getParentInputType","getArgument","getEnumValue","namedType","fieldDef","fieldType","typeConditionAST","outputType","inputType","argDef","argType","fieldOrDirective","listType","itemType","objectType","inputFieldType","inputField","enumType","1786","suggestionList","input","optionsByDistance","oLength","inputThreshold","distance","lexicalDistance","max","sort","a","b","aStr","bStr","j","toLowerCase","aLength","bLength","cost","min","1793","FetchType","1794","1795","validateSchema","__WEBPACK_IMPORTED_MODULE_3__schema__","SchemaValidationContext","validateRootTypes","validateDirectives","validateTypes","errors","getErrors","assertValidSchema","error","reportError","getOperationTypeNode","operationTypeNode","operationType","validateName","argNames","getAllDirectiveArgNodes","getDirectiveArgTypeNode","__WEBPACK_IMPORTED_MODULE_8__utilities_assertValidName__","addError","validateFields","validateObjectInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","getAllObjectOrInterfaceNodes","fieldNodes","getAllFieldNodes","getFieldTypeNode","getAllFieldArgNodes","getFieldArgTypeNode","object","implementedTypeNames","getAllImplementsInterfaceNodes","validateObjectImplementsInterface","getImplementsInterfaceNode","objectFieldMap","ifaceFieldMap","objectField","ifaceField","getFieldNode","__WEBPACK_IMPORTED_MODULE_9__utilities_typeComparators__","ifaceArg","objectArg","getFieldArgNode","union","memberTypes","includedTypeNames","memberType","getUnionMemberTypeNodes","allNodes","getEnumValueNodes","inputObj","getAllObjectNodes","implementsNodes","astNodes","_astNode","_astNode2","argNodes","fieldArgNode","directiveNode","argNode","__WEBPACK_IMPORTED_MODULE_7__error_GraphQLError__","_errors","1796","keyValMap","valFn","1797","isNullish","1798","isEqualType","typeA","typeB","__WEBPACK_IMPORTED_MODULE_0__type_definition__","isTypeSubTypeOf","maybeSubType","superType","doTypesOverlap","1799","execute","argsOrSchema","document","rootValue","contextValue","variableValues","operationName","fieldResolver","executeImpl","assertValidExecutionArguments","buildExecutionContext","buildResponse","executeOperation","data","__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__","resolved","responsePathAsArray","flattened","curr","reverse","addPath","rawVariableValues","__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__","__WEBPACK_IMPORTED_MODULE_16__type_validate__","hasMultipleAssumedOperations","fragments","definition","__WEBPACK_IMPORTED_MODULE_10__language_kinds__","coercedVariableValues","__WEBPACK_IMPORTED_MODULE_11__values__","coerced","defaultFieldResolver","exeContext","getOperationRootType","collectFields","executeFieldsSerially","executeFields","sourceValue","__WEBPACK_IMPORTED_MODULE_8__jsutils_promiseReduce__","results","responseName","fieldPath","resolveField","resolvedResult","containsPromise","finalResults","__WEBPACK_IMPORTED_MODULE_7__jsutils_promiseForObject__","runtimeType","visitedFragmentNames","selection","shouldIncludeNode","getFieldEntryKey","doesFragmentConditionMatch","fragName","fragment","__WEBPACK_IMPORTED_MODULE_15__type_directives__","include","typeConditionNode","conditionalType","__WEBPACK_IMPORTED_MODULE_9__utilities_typeFromAST__","__WEBPACK_IMPORTED_MODULE_12__type_definition__","resolveFn","info","buildResolveInfo","resolveFieldValueOrError","completeValueCatchingError","returnType","asErrorInstance","completeValueWithLocatedError","completed","completeValue","reject","__WEBPACK_IMPORTED_MODULE_4__jsutils_isNullish__","completeListValue","completeLeafValue","completeAbstractValue","completeObjectValue","__WEBPACK_IMPORTED_MODULE_0_iterall__","completedResults","completedItem","all","serializedResult","__WEBPACK_IMPORTED_MODULE_3__jsutils_isInvalid__","defaultResolveTypeFn","resolvedRuntimeType","ensureValidRuntimeType","runtimeTypeOrName","resolvedIsTypeOf","invalidReturnTypeError","collectAndExecuteSubfields","collectSubfields","_collectSubfields","subFieldNodes","__typename","promisedIsTypeOfResults","isTypeOfResult","isTypeOfResults","__WEBPACK_IMPORTED_MODULE_14__type_introspection__","__WEBPACK_IMPORTED_MODULE_6__jsutils_memoize3__","property","1800","valueFromAST","__WEBPACK_IMPORTED_MODULE_4__type_definition__","variableName","__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__","coercedValues","itemNodes","isMissingVariable","itemValue","coercedValue","coercedObj","__WEBPACK_IMPORTED_MODULE_0__jsutils_keyMap__","__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__","fieldValue","_error","1801","ObservableQuery","__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__","__WEBPACK_IMPORTED_MODULE_1__networkStatus__","__WEBPACK_IMPORTED_MODULE_2__util_Observable__","__WEBPACK_IMPORTED_MODULE_3__errors_ApolloError__","__WEBPACK_IMPORTED_MODULE_4__types__","__extends","extendStatics","setPrototypeOf","__proto__","p","__","__assign","t","s","hasError","storeValue","policy","graphQLErrors","networkError","_super","_a","scheduler","_b","shouldSubscribe","observer","onSubscribe","isCurrentlyPolling","isTornDown","queryId","queryManager","generateQueryId","observers","subscriptionHandles","that","obs","removeQuery","setTimeout","unsubscribe","subscribe","currentResult","lastError","lastResult","loading","queryStoreValue","queryStore","errorPolicy","getCurrentQueryResult","partial","queryLoading","fetchPolicy","ready","stale","getLastResult","getLastError","resetLastResults","refetch","isNetworkFetchPolicy","combinedOptions","fetchQuery","fetchMore","fetchMoreOptions","updateQuery","qid","normal","fetchMoreResult","previousResult","subscribeToMore","startGraphQLSubscription","previous","subscriptionData","err","onError","console","setOptions","opts","oldOptions","pollInterval","startPolling","stopPolling","tryFetch","setVariables","fetchResults","newVariables","mapFn","getQueryWithPreviousResult","newResult","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","startPollingQuery","_subscription","_observer","setUpQuery","tearDownQuery","addObservableQuery","startQuery","queryListenerForObserver","sub","removeObservableQuery","stopQuery","1802","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","nestedArgObj_1","variableValue","listValue","nestedArgArrayObj","storeKeyNameFromField","directivesObj","getStoreKeyName","filterKeys","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","__WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify___default","KNOWN_DIRECTIVES","argumentsObjectFromField","argObj_1","resultKeyNameFromField","isField","isInlineFragment","isIdValue","idObject","toIdValue","idConfig","generated","id","typename","isJsonValue","jsonObject","__WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify__","1803","process","getEnv","isEnv","env","isProduction","isDevelopment","isTest","1804","__WEBPACK_IMPORTED_MODULE_0__zenObservable__","1805","isApolloError","ApolloError","generateErrorMessage","graphQLError","errorMessage","extraInfo","1806","1807","1808","defaultNormalizedCacheFactory","seed","ObjectCache","toObject","dataId","delete","clear","newData","1809","normalize","string","trim","cacheKeyFromLoc","body","substring","resetCaches","docCache","fragmentSourceMap","processFragments","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","printFragmentWarnings","warn","disableFragmentWarnings","stripLoc","doc","removeLocAtThisLevel","docType","valueType","cacheKey","parsed","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","gql","literals","default","1810","getLocation","position","lineRegexp","line","column","1811","createLexer","startOfFileToken","Tok","TokenKind","lineStart","advanceLexer","readToken","COMMENT","getTokenDesc","printCharCode","code","isNaN","fromCharCode","toUpperCase","bodyLength","positionAfterWhitespace","col","charCodeAt","__WEBPACK_IMPORTED_MODULE_0__error__","readComment","readName","readNumber","readBlockString","readString","unexpectedCharacterMessage","startPosition","firstCode","isFloat","readDigits","chunkStart","charCode","uniCharCode","rawValue","__WEBPACK_IMPORTED_MODULE_1__blockStringValue__","c","char2hex","1812","1813","astFromValue","__WEBPACK_IMPORTED_MODULE_5__type_definition__","astValue","__WEBPACK_IMPORTED_MODULE_4__language_kinds__","valuesNodes","itemNode","__WEBPACK_IMPORTED_MODULE_3__jsutils_objectValues__","serialized","__WEBPACK_IMPORTED_MODULE_1__jsutils_isNullish__","stringNum","integerStringRegExp","test","__WEBPACK_IMPORTED_MODULE_6__type_scalars__","1814","quotedOrList","items","__WEBPACK_IMPORTED_MODULE_0__orList__","1815","orList","selected","MAX_LENGTH","quoted","1816","badValueMessage","requiredFieldMessage","fieldTypeName","unknownFieldMessage","ValuesOfCorrectType","__WEBPACK_IMPORTED_MODULE_2__type_definition__","__WEBPACK_IMPORTED_MODULE_1__language_printer__","isValidScalar","fieldNodeMap","__WEBPACK_IMPORTED_MODULE_4__jsutils_keyMap__","suggestions","__WEBPACK_IMPORTED_MODULE_6__jsutils_suggestionList__","didYouMean","__WEBPACK_IMPORTED_MODULE_5__jsutils_orList__","enumTypeSuggestion","locationType","parseResult","1817","__WEBPACK_IMPORTED_MODULE_1__language_visitor__","__WEBPACK_IMPORTED_MODULE_2__language_kinds__","__WEBPACK_IMPORTED_MODULE_4__utilities_TypeInfo__","ValidationContext","_ast","_typeInfo","_fragmentSpreads","_recursivelyReferencedFragments","_variableUsages","_recursiveVariableUsages","getSchema","getDocument","getFragment","_fragments","frags","statement","getFragmentSpreads","spreads","setsToVisit","getRecursivelyReferencedFragments","collectedNames","nodesToVisit","_node","getVariableUsages","usages","newUsages","getRecursiveVariableUsages","1818","getVariableValues","varDefNodes","inputs","varDefNode","varName","varType","__WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__","__WEBPACK_IMPORTED_MODULE_9__type_definition__","__WEBPACK_IMPORTED_MODULE_6__utilities_valueFromAST__","_coerced","__WEBPACK_IMPORTED_MODULE_4__utilities_coerceValue__","coercionErrors","messagePrelude","__WEBPACK_IMPORTED_MODULE_8__language_printer__","getArgumentValues","def","argDefs","argNodeMap","__WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__","argumentNode","__WEBPACK_IMPORTED_MODULE_7__language_kinds__","getDirectiveValues","directiveDef","__WEBPACK_IMPORTED_MODULE_1__jsutils_find__","1819","coerceValue","blameNode","__WEBPACK_IMPORTED_MODULE_6__type_definition__","__WEBPACK_IMPORTED_MODULE_2__jsutils_isNullish__","ofErrors","coercionError","ofValue","__WEBPACK_IMPORTED_MODULE_4__jsutils_suggestionList__","__WEBPACK_IMPORTED_MODULE_3__jsutils_orList__","coercedItem","atPath","add","_errors2","_coercedValue","printPath","coercedField","_fieldName","_suggestions","_didYouMean","moreErrors","subMessage","pathStr","__WEBPACK_IMPORTED_MODULE_5__error__","currentPath","1820","_graphql","getFinalType","1858","baseMerge","createAssigner","merge","srcIndex","1859","_interopRequireDefault","__esModule","ALL_TYPES","MUTATION_TYPES","QUERY_TYPES","_operationNames","_regenerator","_regenerator2","_extends2","_extends3","_objectWithoutProperties2","_objectWithoutProperties3","_asyncToGenerator2","_asyncToGenerator3","_defineProperty2","_defineProperty3","_merge2","_merge3","_get","_get2","_pluralize","_pluralize2","_reactAdmin","_buildApolloClient","_buildApolloClient2","_constants","_introspection","_introspection2","defaultOptions","resolveIntrospection","introspection","operationNames","GET_LIST","GET_ONE","GET_MANY","GET_MANY_REFERENCE","CREATE","UPDATE","DELETE","exclude","getOptions","aorFetchType","mark","_callee","_merge","clientObject","buildQueryFactory","_merge$override","override","otherOptions","client","introspectionResults","buildQuery","raDataProvider","_context","sent","overridedbuildQuery","parseResponse","includes","_apolloQuery","apolloQuery","mutate","observeRequest","_buildQuery","watchQuery","saga","abrupt","stop","_x","1860","getMutationDefinition","checkDocument","mutationDef","operations","getOperationDefinition","getOperationDefinitionOrDie","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","createFragmentMap","symTable","getDefaultValues","defaultValues","defaultValueObj","__WEBPACK_IMPORTED_MODULE_1__storeUtils__","__WEBPACK_IMPORTED_MODULE_0__util_assign__","1861","sources","1862","cloneDeep","nextValue","1863","Observable","__WEBPACK_IMPORTED_MODULE_0_apollo_link__","__WEBPACK_IMPORTED_MODULE_1_symbol_observable__","1864","__WEBPACK_IMPORTED_MODULE_0_zen_observable__","__WEBPACK_IMPORTED_MODULE_0_zen_observable___default","1865","validateOperation","OPERATION_FIELDS","isTerminating","link","request","toPromise","observable","fromPromise","promise","__WEBPACK_IMPORTED_MODULE_1_zen_observable_ts__","complete","catch","bind","fromError","errorValue","transformOperation","transformedOperation","createOperation","starting","setContext","getContext","getKey","__WEBPACK_IMPORTED_MODULE_2_graphql_language_printer__","LinkError","makePromise","1866","__WEBPACK_IMPORTED_MODULE_0__dedupLink__","1867","__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__","__WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__","__WEBPACK_IMPORTED_MODULE_2__core_networkStatus__","__WEBPACK_IMPORTED_MODULE_3__core_types__","__WEBPACK_IMPORTED_MODULE_4__errors_ApolloError__","__WEBPACK_IMPORTED_MODULE_5__ApolloClient__","1868","1869","__WEBPACK_IMPORTED_MODULE_0__inMemoryCache__","__WEBPACK_IMPORTED_MODULE_1__readFromStore__","__WEBPACK_IMPORTED_MODULE_2__writeToStore__","__WEBPACK_IMPORTED_MODULE_3__fragmentMatcher__","__WEBPACK_IMPORTED_MODULE_4__objectCache__","__WEBPACK_IMPORTED_MODULE_5__recordingCache__","1870","HeuristicFragmentMatcher","IntrospectionFragmentMatcher","haveWarned","ensureReady","canBypassInit","idValue","store","returnPartialData","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","__schema","implementingType","1871","enhanceErrorWithDocument","enhancedError","WriteError","writeQueryToStore","storeFactory","__WEBPACK_IMPORTED_MODULE_2__objectCache__","_c","dataIdFromObject","_d","fragmentMap","fragmentMatcherFunction","queryDefinition","__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__","writeSelectionSetToStore","processedData","e","writeResultToStore","operationDefinition","included","resultFieldKey","writeFieldToStore","isDefered","matches","fakeContext","self","hasMissingField","cacheRedirects","isGeneratedId","mergeWithGenerated","generatedKey","realKey","cache","real","realValue","isDataProcessed","storeObject","storeFieldName","shouldMerge","generatedId","processArrayValue","valueDataId","semanticId","escapedId","hadTypename","hasTypename","typenameChanged","json","newStoreObj","itemDataId","1872","readQueryFromStore","diffQueryAgainstStore","rootId","rootIdValue","__WEBPACK_IMPORTED_MODULE_0_graphql_anywhere__","readStoreResolver","fragmentMatcher","resultMapper","assertIdValue","addPreviousResultToIdValues","idToPreviousResult_1","ID_KEY","itemPreviousResult","resultFields","currentResultKeys_1","every","areNestedArrayItemsStrictlyEqual","resultKey","objId","storeKeyName","getCacheKey","storeObj","1873","graphql","execOptions","mainDefinition","execContext","executeSelectionSet","fieldResult","executeField","fragmentResult","isLeaf","executeSubSelectedArray","dest","src","srcVal","hasOwn","1874","record","startingState","transaction","RecordingCache","recordedData","1875","Source","__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__","locationOffset","1876","printError","printedLocations","highlightSourceAtLocation","__WEBPACK_IMPORTED_MODULE_0__language_location__","location","lineOffset","columnOffset","getColumnOffset","contextLine","contextColumn","prevLineNum","lineNum","nextLineNum","padLen","lines","split","whitespace","lpad","len","str","1877","locatedError","1878","blockStringValue","rawString","commonIndent","leadingWhitespace","isBlank","shift","1879","UPDATE_MANY","DELETE_MANY","1880","_defineProperties","_defineProperties2","_freeze","_freeze2","strings","raw","1881","valueFromASTUntyped","__WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__","1882","assertValidName","isValidNameError","__WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__","NAME_RX","1883","validate","rules","__WEBPACK_IMPORTED_MODULE_4__type_validate__","visitUsingRules","__WEBPACK_IMPORTED_MODULE_5__utilities_TypeInfo__","__WEBPACK_IMPORTED_MODULE_6__specifiedRules__","documentAST","__WEBPACK_IMPORTED_MODULE_7__ValidationContext__","rule","__WEBPACK_IMPORTED_MODULE_2__language_visitor__","1884","specifiedRules","__WEBPACK_IMPORTED_MODULE_0__rules_ExecutableDefinitions__","__WEBPACK_IMPORTED_MODULE_1__rules_UniqueOperationNames__","__WEBPACK_IMPORTED_MODULE_2__rules_LoneAnonymousOperation__","__WEBPACK_IMPORTED_MODULE_3__rules_SingleFieldSubscriptions__","__WEBPACK_IMPORTED_MODULE_4__rules_KnownTypeNames__","__WEBPACK_IMPORTED_MODULE_5__rules_FragmentsOnCompositeTypes__","__WEBPACK_IMPORTED_MODULE_6__rules_VariablesAreInputTypes__","__WEBPACK_IMPORTED_MODULE_7__rules_ScalarLeafs__","__WEBPACK_IMPORTED_MODULE_8__rules_FieldsOnCorrectType__","__WEBPACK_IMPORTED_MODULE_9__rules_UniqueFragmentNames__","__WEBPACK_IMPORTED_MODULE_10__rules_KnownFragmentNames__","__WEBPACK_IMPORTED_MODULE_11__rules_NoUnusedFragments__","__WEBPACK_IMPORTED_MODULE_12__rules_PossibleFragmentSpreads__","__WEBPACK_IMPORTED_MODULE_13__rules_NoFragmentCycles__","__WEBPACK_IMPORTED_MODULE_14__rules_UniqueVariableNames__","__WEBPACK_IMPORTED_MODULE_15__rules_NoUndefinedVariables__","__WEBPACK_IMPORTED_MODULE_16__rules_NoUnusedVariables__","__WEBPACK_IMPORTED_MODULE_17__rules_KnownDirectives__","__WEBPACK_IMPORTED_MODULE_18__rules_UniqueDirectivesPerLocation__","__WEBPACK_IMPORTED_MODULE_19__rules_KnownArgumentNames__","__WEBPACK_IMPORTED_MODULE_20__rules_UniqueArgumentNames__","__WEBPACK_IMPORTED_MODULE_21__rules_ValuesOfCorrectType__","__WEBPACK_IMPORTED_MODULE_22__rules_ProvidedNonNullArguments__","__WEBPACK_IMPORTED_MODULE_23__rules_VariablesDefaultValueAllowed__","__WEBPACK_IMPORTED_MODULE_24__rules_VariablesInAllowedPosition__","__WEBPACK_IMPORTED_MODULE_25__rules_OverlappingFieldsCanBeMerged__","__WEBPACK_IMPORTED_MODULE_26__rules_UniqueInputFieldNames__","1885","duplicateOperationNameMessage","UniqueOperationNames","knownOperationNames","1886","anonOperationNotAloneMessage","LoneAnonymousOperation","operationCount","1887","singleFieldOnlyMessage","SingleFieldSubscriptions","1888","unknownTypeMessage","suggestedTypes","__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__","KnownTypeNames","__WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__","1889","inlineFragmentOnNonCompositeErrorMessage","fragmentOnNonCompositeErrorMessage","FragmentsOnCompositeTypes","__WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__","1890","nonInputTypeOnVarMessage","VariablesAreInputTypes","1891","noSubselectionAllowedMessage","requiredSubselectionMessage","ScalarLeafs","1892","undefinedFieldMessage","suggestedTypeNames","suggestedFieldNames","FieldsOnCorrectType","getSuggestedTypeNames","getSuggestedFieldNames","__WEBPACK_IMPORTED_MODULE_3__type_definition__","suggestedObjectTypes","interfaceUsageCount","possibleInterface","possibleFieldNames","1893","duplicateFragmentNameMessage","UniqueFragmentNames","knownFragmentNames","1894","unknownFragmentMessage","KnownFragmentNames","1895","unusedFragMessage","NoUnusedFragments","operationDefs","fragmentDefs","fragmentNameUsed","fragmentDef","1896","typeIncompatibleSpreadMessage","fragType","typeIncompatibleAnonSpreadMessage","PossibleFragmentSpreads","__WEBPACK_IMPORTED_MODULE_1__utilities_typeComparators__","getFragmentType","frag","__WEBPACK_IMPORTED_MODULE_2__utilities_typeFromAST__","1897","cycleErrorMessage","spreadNames","NoFragmentCycles","detectCycleRecursive","visitedFrags","spreadNodes","spreadPathIndexByName","spreadPath","spreadNode","spreadName","cycleIndex","spreadFragment","cyclePath","1898","duplicateVariableMessage","UniqueVariableNames","knownVariableNames","1899","undefinedVarMessage","opName","NoUndefinedVariables","variableNameDefined","1900","unusedVariableMessage","NoUnusedVariables","variableDefs","variableNameUsed","variableDef","1901","unknownDirectiveMessage","directiveName","misplacedDirectiveMessage","KnownDirectives","candidateLocation","getDirectiveLocationForASTPath","appliedTo","__WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__","1902","duplicateDirectiveMessage","UniqueDirectivesPerLocation","knownDirectives","1903","unknownArgMessage","suggestedArgs","unknownDirectiveArgMessage","KnownArgumentNames","argumentOf","1904","duplicateArgMessage","UniqueArgumentNames","knownArgNames","1905","missingFieldArgMessage","missingDirectiveArgMessage","ProvidedNonNullArguments","__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__","1906","defaultForRequiredVarMessage","guessType","VariablesDefaultValueAllowed","1907","badVarPosMessage","expectedType","VariablesInAllowedPosition","varDefMap","varDef","__WEBPACK_IMPORTED_MODULE_2__utilities_typeComparators__","effectiveType","1908","fieldsConflictMessage","reasonMessage","OverlappingFieldsCanBeMerged","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","findConflictsWithinSelectionSet","_ref2$","fields1","fields2","conflicts","_getFieldsAndFragment","getFieldsAndFragmentNames","fragmentNames","collectConflictsWithin","comparedFragments","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","fieldMap2","fragmentNames2","collectConflictsBetween","fragmentName1","fragmentName2","has","fragment1","fragment2","_getReferencedFieldsA2","fieldMap1","fragmentNames1","_getReferencedFieldsA3","findConflictsBetweenSubSelectionSets","parentType1","selectionSet1","parentType2","selectionSet2","_getFieldsAndFragment2","_getFieldsAndFragment3","_comparedFragments","_j","conflict","findConflict","parentFieldsAreMutuallyExclusive","field1","field2","node1","def1","node2","def2","type1","type2","name1","name2","sameArguments","doTypesConflict","subfieldConflicts","arguments1","arguments2","argument1","argument2","argument","sameValue","value1","value2","cached","nodeAndDefs","_collectFieldsAndFragmentNames","allFields","_pairSetAdd","_data","first","1909","duplicateInputFieldMessage","UniqueInputFieldNames","knownNameStack","knownNames","1910","isPromise","1911","getIntrospectionQuery","descriptions","introspectionQuery","1912","buildWrappedType","inputTypeNode","__WEBPACK_IMPORTED_MODULE_8__type_definition__","wrappedType","getNamedTypeNode","buildASTSchema","schemaDef","typeDefs","nodeMap","directiveDefs","opTypes","Query","Mutation","Subscription","definitionBuilder","ASTDefinitionBuilder","typeRef","buildTypes","buildDirective","__WEBPACK_IMPORTED_MODULE_9__type_directives__","__WEBPACK_IMPORTED_MODULE_12__type_schema__","buildType","getDeprecationReason","deprecated","__WEBPACK_IMPORTED_MODULE_6__execution_values__","getDescription","commentDescriptions","getLeadingCommentBlock","__WEBPACK_IMPORTED_MODULE_3__language_blockStringValue__","comments","__WEBPACK_IMPORTED_MODULE_4__language_lexer__","buildSchema","__WEBPACK_IMPORTED_MODULE_5__language_parser__","__WEBPACK_IMPORTED_MODULE_1__jsutils_keyValMap__","__WEBPACK_IMPORTED_MODULE_2__valueFromAST__","__WEBPACK_IMPORTED_MODULE_10__type_introspection__","__WEBPACK_IMPORTED_MODULE_11__type_scalars__","typeDefinitionsMap","_typeDefinitionsMap","_options","_resolveType","_cache","defNode","_makeSchemaDef","_buildWrappedType","_makeInputValues","buildField","_makeTypeDef","_makeInterfaceDef","_makeEnumDef","_makeUnionDef","_makeScalarDef","_makeInputObjectDef","_this2","_makeFieldDefMap","_this3","_this4","_this5","_this6","_this7","1913","isList","1915","_toConsumableArray2","_toConsumableArray3","_raDataGraphql","_raDataGraphql2","_buildQuery2","defaultDataProvider","fetchType","otherParams","ids","acc","_otherParams","1916","pluralize","sanitizeRule","RegExp","restoreCase","word","charAt","substr","interpolate","sanitizeWord","uncountables","replaceWord","replaceMap","keepMap","checkWord","bool","count","inclusive","pluralized","singular","plural","pluralRules","singularRules","irregularPlurals","irregularSingles","isPlural","isSingular","addPluralRule","replacement","addSingularRule","addUncountableRule","addIrregularRule","single","1917","_apolloClient","_apolloClientPreset","ApolloClient","finalLink","finalCache","HttpLink","InMemoryCache","restore","1918","1919","getDirectiveInfoFromField","directiveObj_1","__WEBPACK_IMPORTED_MODULE_0__storeUtils__","shouldInclude","res","directiveArguments","ifArgument","ifValue","evaledValue","flattenSelections","selectionNode","getDirectiveNames","hasDirectives","names","1920","cmp","cycles","f","aobj","bobj","seen","isFinite","out","seenIndex","1921","getFragmentQueryDocument","actualFragmentName","1922","isNotEmpty","getDirectiveMatcher","dir","addTypenameToSelectionSet","isRoot","TYPENAME_FIELD","lastIndexOf","removeDirectivesFromSelectionSet","agressiveRemove","remove","directiveMatcher","shouldKeep","removeDirectivesFromDocument","docClone","__WEBPACK_IMPORTED_MODULE_0__util_cloneDeep__","__WEBPACK_IMPORTED_MODULE_1__getFromAST__","addTypenameToDocument","removeConnectionDirectiveFromDocument","connectionRemoveConfig","willRemove","1923","tryFunctionOrLogError","graphQLResultHasError","1924","isEqual","Date","getTime","1925","deepFreeze","o","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","__WEBPACK_IMPORTED_MODULE_0__environment__","1926","warnOnceInDevelopment","msg","1927","1928","__WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__","of","empty","from","ApolloLink","passthrough","forward","toLink","handler","links","y","left","right","leftLink","rightLink","second","firstLink","nextLink","1929","1930","getMethod","getSpecies","ctor","getSymbol","isObservable","hostReportError","log","enqueue","cleanupSubscription","cleanup","_cleanup","closeSubscription","_queue","_state","flushSubscription","queue","notifySubscription","m","onNotify","_createClass","props","descriptor","protoProps","staticProps","hasSymbols","hasSymbol","subscriber","subscriptionObserver","SubscriptionObserver","_subscriber","C","hasSeed","hasValue","_len","_key","startNext","v","completeIfDone","outer","closed","subscriptions","inner","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","_len2","_key2","symbol","configurabe","1931","__WEBPACK_IMPORTED_MODULE_2__core_QueryManager__","__WEBPACK_IMPORTED_MODULE_3__data_store__","__WEBPACK_IMPORTED_MODULE_4__version__","hasSuggestedDevtools","supportedDirectives","resetStoreCallbacks","ssrMode","ssrForceFetchDelay","connectToDevTools","queryDeduplication","disableNetworkFetches","resetStore","reFetchObservableQueries","defaultConnectToDevTools","window","__APOLLO_CLIENT__","top","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","navigator","userAgent","debug","version","initQueryManager","readQuery","initProxy","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","devToolsHookCb","__requestRaw","payload","onBroadcast","action","state","queries","getStore","mutations","mutationStore","dataWithOptimisticResults","extract","clearStore","onResetStore","includeStandby","optimistic","serializedState","proxy","1932","QueryManager","__WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__","__WEBPACK_IMPORTED_MODULE_2_apollo_link_dedup__","__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__","__WEBPACK_IMPORTED_MODULE_4__scheduler_scheduler__","__WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__","__WEBPACK_IMPORTED_MODULE_6__util_Observable__","__WEBPACK_IMPORTED_MODULE_7__data_mutations__","__WEBPACK_IMPORTED_MODULE_8__data_queries__","__WEBPACK_IMPORTED_MODULE_9__ObservableQuery__","__WEBPACK_IMPORTED_MODULE_10__networkStatus__","__WEBPACK_IMPORTED_MODULE_11__types__","defaultQueryInfo","listeners","invalidated","lastRequestId","observableQuery","idCounter","fetchQueryPromises","queryIdsByName","deduplicator","optimisticResponse","updateQueriesByName","updateQueries","refetchQueries","updateWithProxyFn","update","mutationId","getCache","transformDocument","mutationString","setQuery","generateUpdateQueriesInfo","ret","queryName","updater","initMutation","markMutationInit","storeResult","buildOperationForLink","markMutationResult","markMutationError","markMutationComplete","refetchQuery","refetchQueryByName","fetchMoreForQueryId","metadata","needToFetch","diff","shouldFetch","requestId","generateRequestId","cancel","updateQueryWatch","invalidate","initQuery","storePreviousVariables","isPoll","poll","isRefetch","markQueryResultClient","networkResult","fetchRequest","getQuery","markQueryError","removeFetchQueryPromise","previouslyHadError","shouldNotifyIfLoading","previousVariables","networkStatusChanged","errorStatusChanged","notifyOnNetworkStatusChange","apolloError_1","isMissing","document_1","readResult","resultFromStore","transformedOptions","addFetchQueryPromise","stopQueryInStore","addQueryListener","listener","watch","val","resetIds","reset","getObservableQueryPromises","observableQueryPromises","transformedDoc","markSubscriptionResult","read","queryIdOrObservable","foundObserveableQuery","errorsFromStore","forceFetch","markQueryResult","refetchedQueries","newInfo","extraContext","transformForLink","1933","DedupLink","inFlightRequestObservables","subscribers","toKey","subscription_1","singleObserver_1","sharedObserver","1934","QueryScheduler","__WEBPACK_IMPORTED_MODULE_0__core_types__","inFlightQueries","registeredQueries","intervalQueries","pollingTimers","checkInFlight","addQueryOnInterval","fetchQueriesOnInterval","interval","queryOptions","pollingOptions","clearInterval","setInterval","registerPollingQuery","1935","MutationStore","1936","QueryStore","previousQuery","isSetVariables","observableQueryIds","1937","DataStore","initialCache","ignoreErrors","writeWithErrors","write","optimistic_1","changeFn_1","recordOptimisticTransaction","orig","cacheWrites_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","performTransaction","update_1","removeOptimistic","1938","1939","__export","apollo_link_http_1","apollo_cache_inmemory_1","graphql_tag_1","apollo_client_1","DefaultClient","1940","1941","1942","1943","1944","1945","1946","1947","__WEBPACK_IMPORTED_MODULE_0__httpLink__","1948","rewriteURIForGET","chosenURI","queryParams","addQueryParam","encodeURIComponent","serializedVariables","__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__","parseError","serializedExtensions","preFragment","fragmentStart","newURI","createHttpLink","__rest","getOwnPropertySymbols","linkOptions","fetcher","fetch","includeExtensions","useGETForQueries","requestOptions","linkConfig","http","fetchOptions","credentials","headers","controller","contextConfig","signal","_controller","definitionIsMutation","response","abort","1949","fallbackHttpConfig","parseAndCheckHttpResponse","checkFetcher","createSignalIfSupported","selectHttpOptionsAndBody","serializeFetchParameter","selectURI","defaultHttpOptions","includeQuery","defaultHeaders","accept","content-type","throwServerError","statusCode","status","text","bodyText","library","AbortController","fallbackConfig","configs","label","fallbackURI","contextURI","1950","defaultDataIdFromObject","_id","__WEBPACK_IMPORTED_MODULE_0_apollo_cache__","__WEBPACK_IMPORTED_MODULE_2__fragmentMatcher__","__WEBPACK_IMPORTED_MODULE_3__writeToStore__","__WEBPACK_IMPORTED_MODULE_4__readFromStore__","__WEBPACK_IMPORTED_MODULE_5__objectCache__","__WEBPACK_IMPORTED_MODULE_6__recordingCache__","defaultConfig","addTypename","watches","typenameDocumentCache","WeakMap","silenceBroadcast","customResolvers","cacheResolvers","patches","opt","broadcastWatches","evict","toPerform","change","alreadySilenced","patch","recordingCache","dataCache","1951","__WEBPACK_IMPORTED_MODULE_0__cache__","1952","ApolloCache","__WEBPACK_IMPORTED_MODULE_1__utils__","typenameResult","dataToWrite","1953","queryFromPojo","selectionSetFromObj","fragmentFromPojo","nestedSelSet","justTypenameQuery","1954","1955","Cache","1956","__WEBPACK_IMPORTED_MODULE_1__graphql__","1957","PropTypeError","1958","syntaxError","1959","formatError","1960","filterTypesByIncludeExclude","_extends4","_taggedTemplateLiteral2","_taggedTemplateLiteral3","_templateObject","_graphqlTag","_graphqlTag2","isResource","buildResource","potentialResources","filteredResources","resources","t0","_x2","1961","1962","$Object","T","D","1963","1964","1965","1966","isObject","meta","onFreeze","$freeze","it","1967","_arguments","graphqlImpl","graphqlSync","schemaValidationErrors","__WEBPACK_IMPORTED_MODULE_0__type_validate__","__WEBPACK_IMPORTED_MODULE_1__language_parser__","validationErrors","__WEBPACK_IMPORTED_MODULE_2__validation_validate__","__WEBPACK_IMPORTED_MODULE_3__execution_execute__","1968","nonExecutableDefinitionMessage","defName","ExecutableDefinitions","1969","memoize3","memoized","a1","a2","a3","cache0","cache1","cache2","cachedValue","newValue","1970","promiseForObject","valuesAndPromises","resolvedObject","1971","promiseReduce","initialValue","__WEBPACK_IMPORTED_MODULE_0__isPromise__","1972","__WEBPACK_IMPORTED_MODULE_0__schema__","__WEBPACK_IMPORTED_MODULE_1__definition__","__WEBPACK_IMPORTED_MODULE_2__directives__","__WEBPACK_IMPORTED_MODULE_3__scalars__","__WEBPACK_IMPORTED_MODULE_4__introspection__","__WEBPACK_IMPORTED_MODULE_5__validate__","1973","__WEBPACK_IMPORTED_MODULE_0__location__","__WEBPACK_IMPORTED_MODULE_1__kinds__","__WEBPACK_IMPORTED_MODULE_3__parser__","__WEBPACK_IMPORTED_MODULE_4__printer__","__WEBPACK_IMPORTED_MODULE_5__source__","__WEBPACK_IMPORTED_MODULE_6__visitor__","__WEBPACK_IMPORTED_MODULE_7__directiveLocation__","1974","__WEBPACK_IMPORTED_MODULE_0__execute__","__WEBPACK_IMPORTED_MODULE_1__values__","1975","__WEBPACK_IMPORTED_MODULE_0__subscribe__","1976","subscribeFieldResolver","subscribeImpl","reportGraphQLError","__WEBPACK_IMPORTED_MODULE_1__error_GraphQLError__","mapSourceToResponse","createSourceEventStream","resultOrStream","__WEBPACK_IMPORTED_MODULE_5__mapAsyncIterator__","responseNames","eventStream","__WEBPACK_IMPORTED_MODULE_2__error_locatedError__","1977","_defineProperty","mapAsyncIterator","rejectCallback","mapResult","asyncMapValue","iteratorResult","abruptClose","$return","rethrow","mapReject","throw","1978","__WEBPACK_IMPORTED_MODULE_0__validate__","__WEBPACK_IMPORTED_MODULE_1__ValidationContext__","__WEBPACK_IMPORTED_MODULE_2__specifiedRules__","__WEBPACK_IMPORTED_MODULE_3__rules_FieldsOnCorrectType__","__WEBPACK_IMPORTED_MODULE_4__rules_FragmentsOnCompositeTypes__","__WEBPACK_IMPORTED_MODULE_5__rules_KnownArgumentNames__","__WEBPACK_IMPORTED_MODULE_6__rules_KnownDirectives__","__WEBPACK_IMPORTED_MODULE_7__rules_KnownFragmentNames__","__WEBPACK_IMPORTED_MODULE_8__rules_KnownTypeNames__","__WEBPACK_IMPORTED_MODULE_9__rules_LoneAnonymousOperation__","__WEBPACK_IMPORTED_MODULE_10__rules_NoFragmentCycles__","__WEBPACK_IMPORTED_MODULE_11__rules_NoUndefinedVariables__","__WEBPACK_IMPORTED_MODULE_12__rules_NoUnusedFragments__","__WEBPACK_IMPORTED_MODULE_13__rules_NoUnusedVariables__","__WEBPACK_IMPORTED_MODULE_14__rules_OverlappingFieldsCanBeMerged__","__WEBPACK_IMPORTED_MODULE_15__rules_PossibleFragmentSpreads__","__WEBPACK_IMPORTED_MODULE_16__rules_ProvidedNonNullArguments__","__WEBPACK_IMPORTED_MODULE_17__rules_ScalarLeafs__","__WEBPACK_IMPORTED_MODULE_18__rules_SingleFieldSubscriptions__","__WEBPACK_IMPORTED_MODULE_19__rules_UniqueArgumentNames__","__WEBPACK_IMPORTED_MODULE_20__rules_UniqueDirectivesPerLocation__","__WEBPACK_IMPORTED_MODULE_21__rules_UniqueFragmentNames__","__WEBPACK_IMPORTED_MODULE_22__rules_UniqueInputFieldNames__","__WEBPACK_IMPORTED_MODULE_23__rules_UniqueOperationNames__","__WEBPACK_IMPORTED_MODULE_24__rules_UniqueVariableNames__","__WEBPACK_IMPORTED_MODULE_25__rules_ValuesOfCorrectType__","__WEBPACK_IMPORTED_MODULE_26__rules_VariablesAreInputTypes__","__WEBPACK_IMPORTED_MODULE_27__rules_VariablesDefaultValueAllowed__","__WEBPACK_IMPORTED_MODULE_28__rules_VariablesInAllowedPosition__","1979","__WEBPACK_IMPORTED_MODULE_0__introspectionQuery__","__WEBPACK_IMPORTED_MODULE_1__getOperationAST__","__WEBPACK_IMPORTED_MODULE_2__introspectionFromSchema__","__WEBPACK_IMPORTED_MODULE_3__buildClientSchema__","__WEBPACK_IMPORTED_MODULE_4__buildASTSchema__","__WEBPACK_IMPORTED_MODULE_5__extendSchema__","__WEBPACK_IMPORTED_MODULE_6__lexicographicSortSchema__","__WEBPACK_IMPORTED_MODULE_7__schemaPrinter__","__WEBPACK_IMPORTED_MODULE_8__typeFromAST__","__WEBPACK_IMPORTED_MODULE_9__valueFromAST__","__WEBPACK_IMPORTED_MODULE_10__valueFromASTUntyped__","__WEBPACK_IMPORTED_MODULE_11__astFromValue__","__WEBPACK_IMPORTED_MODULE_12__TypeInfo__","__WEBPACK_IMPORTED_MODULE_13__coerceValue__","__WEBPACK_IMPORTED_MODULE_14__isValidJSValue__","__WEBPACK_IMPORTED_MODULE_15__isValidLiteralValue__","__WEBPACK_IMPORTED_MODULE_16__concatAST__","__WEBPACK_IMPORTED_MODULE_17__separateOperations__","__WEBPACK_IMPORTED_MODULE_18__typeComparators__","__WEBPACK_IMPORTED_MODULE_19__assertValidName__","__WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__","__WEBPACK_IMPORTED_MODULE_21__findDeprecatedUsages__","1980","getOperationAST","1981","introspectionFromSchema","queryAST","__WEBPACK_IMPORTED_MODULE_4__language_parser__","__WEBPACK_IMPORTED_MODULE_1__introspectionQuery__","1982","buildClientSchema","__WEBPACK_IMPORTED_MODULE_9__type_introspection__","itemRef","__WEBPACK_IMPORTED_MODULE_7__type_definition__","nullableRef","nullableType","typeDefCache","typeIntrospection","typeIntrospectionMap","typeDef","getOutputType","getObjectType","getInterfaceType","buildScalarDef","buildObjectDef","buildInterfaceDef","buildUnionDef","buildEnumDef","buildInputObjectDef","scalarIntrospection","objectIntrospection","buildFieldDefMap","interfaceIntrospection","unionIntrospection","enumIntrospection","__WEBPACK_IMPORTED_MODULE_2__jsutils_keyValMap__","valueIntrospection","inputObjectIntrospection","buildInputValueDefMap","fieldIntrospection","inputValueIntrospections","inputValue","buildInputValue","inputValueIntrospection","__WEBPACK_IMPORTED_MODULE_3__valueFromAST__","directiveIntrospection","__WEBPACK_IMPORTED_MODULE_8__type_directives__","schemaIntrospection","__WEBPACK_IMPORTED_MODULE_10__type_scalars__","__WEBPACK_IMPORTED_MODULE_5__type_schema__","1983","extendSchema","getExtendedType","extendTypeCache","extendType","__WEBPACK_IMPORTED_MODULE_6__type_introspection__","extendObjectType","extendInterfaceType","extendUnionType","typeExtensionsMap","extendImplementedInterfaces","extendFieldMap","extension","astBuilder","newFieldMap","oldFieldMap","extendFieldType","__WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__","__WEBPACK_IMPORTED_MODULE_9__language_kinds__","typeDefinitionMap","directiveDefinitions","extendedTypeName","existingType","checkExtensionNode","existingTypeExtensions","__WEBPACK_IMPORTED_MODULE_3__buildASTSchema__","existingQueryType","existingMutationType","existingSubscriptionType","schemaAllowedLegacyNames","extendAllowedLegacyNames","existingDirectives","1984","lexicographicSortSchema","sortDirective","__WEBPACK_IMPORTED_MODULE_3__type_directives__","sortBy","sortArgs","sortByName","sortType","sortFields","fieldsMap","sortObjMap","sortInputFields","sortNamedType","sortTypes","arr","__WEBPACK_IMPORTED_MODULE_5__type_scalars__","sortedType","sortNamedTypeImpl","sortMaybeType","maybeType","__WEBPACK_IMPORTED_MODULE_2__type_schema__","sortValueFn","sortedMap","sortedKeys","mapToKey","obj1","obj2","key1","key2","localeCompare","1985","printSchema","printFilteredSchema","__WEBPACK_IMPORTED_MODULE_7__type_directives__","isDefinedType","printIntrospectionSchema","__WEBPACK_IMPORTED_MODULE_8__type_introspection__","directiveFilter","typeFilter","printSchemaDefinition","printDirective","printType","isSchemaOfCommonNames","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","printDescription","implementedInterfaces","printFields","printEnumValues","printDeprecated","printInputValue","printArgs","indentation","argDecl","__WEBPACK_IMPORTED_MODULE_4__language_printer__","__WEBPACK_IMPORTED_MODULE_3__utilities_astFromValue__","fieldOrEnumVal","__WEBPACK_IMPORTED_MODULE_0__jsutils_isNullish__","firstInBlock","descriptionLines","printDescriptionWithComments","escapeQuote","hasLeadingSpace","maxLen","rawLines","sublines","breakLine","parts","1986","isValidJSValue","__WEBPACK_IMPORTED_MODULE_0__coerceValue__","1987","isValidLiteralValue","emptySchema","__WEBPACK_IMPORTED_MODULE_3__type_schema__","emptyDoc","__WEBPACK_IMPORTED_MODULE_0__TypeInfo__","__WEBPACK_IMPORTED_MODULE_5__validation_ValidationContext__","__WEBPACK_IMPORTED_MODULE_4__validation_rules_ValuesOfCorrectType__","1988","concatAST","asts","batchDefinitions","1989","separateOperations","depGraph","fromName","idx","__WEBPACK_IMPORTED_MODULE_0__language_visitor__","toName","separatedDocumentASTs","dependencies","collectTransitiveDependencies","n1","n2","collected","immediateDeps","1990","findBreakingChanges","oldSchema","newSchema","findRemovedTypes","findTypesThatChangedKind","findFieldsThatChangedTypeOnObjectOrInterfaceTypes","findFieldsThatChangedTypeOnInputObjectTypes","breakingChanges","findTypesRemovedFromUnions","findValuesRemovedFromEnums","findArgChanges","findInterfacesRemovedFromObjectTypes","findRemovedDirectives","findRemovedDirectiveArgs","findAddedNonNullDirectiveArgs","findRemovedDirectiveLocations","findDangerousChanges","dangerousChanges","findValuesAddedToEnums","findInterfacesAddedToObjectTypes","findTypesAddedToUnions","oldTypeMap","newTypeMap","BreakingChangeType","TYPE_REMOVED","oldType","newType","TYPE_CHANGED_KIND","typeKindName","oldTypeFields","newTypeFields","oldArgDef","newArgs","newArgDef","isChangeSafeForInputObjectFieldOrFieldArg","DangerousChangeType","ARG_DEFAULT_VALUE_CHANGE","ARG_CHANGED_KIND","ARG_REMOVED","NON_NULL_ARG_ADDED","NULLABLE_ARG_ADDED","oldTypeFieldsDef","newTypeFieldsDef","oldFieldType","newFieldType","isChangeSafeForObjectOrInterfaceField","oldFieldTypeString","newFieldTypeString","FIELD_CHANGED_KIND","FIELD_REMOVED","NON_NULL_INPUT_FIELD_ADDED","NULLABLE_INPUT_FIELD_ADDED","typesRemovedFromUnion","typeNamesInNewUnion","TYPE_REMOVED_FROM_UNION","typesAddedToUnion","typeNamesInOldUnion","TYPE_ADDED_TO_UNION","valuesRemovedFromEnums","valuesInNewEnum","VALUE_REMOVED_FROM_ENUM","valuesAddedToEnums","valuesInOldEnum","VALUE_ADDED_TO_ENUM","oldInterfaces","newInterfaces","oldInterface","INTERFACE_REMOVED_FROM_OBJECT","interfacesAddedToObjectTypes","newInterface","INTERFACE_ADDED_TO_OBJECT","removedDirectives","newSchemaDirectiveMap","getDirectiveMapForSchema","DIRECTIVE_REMOVED","findRemovedArgsForDirective","oldDirective","newDirective","removedArgs","newArgMap","getArgumentMapForDirective","removedDirectiveArgs","oldSchemaDirectiveMap","DIRECTIVE_ARG_REMOVED","findAddedArgsForDirective","addedArgs","oldArgMap","addedNonNullableArgs","NON_NULL_DIRECTIVE_ARG_ADDED","findRemovedLocationsForDirective","removedLocations","newLocationSet","Set","oldLocation","DIRECTIVE_LOCATION_REMOVED","1991","findDeprecatedUsages","__WEBPACK_IMPORTED_MODULE_4__TypeInfo__","enumVal","1992","_buildVariables","_buildVariables2","_buildGqlQuery","_buildGqlQuery2","_getResponseParser","_getResponseParser2","buildVariablesImpl","buildGqlQueryImpl","getResponseParserImpl","knownResources","r","resourceName","1993","_typeof2","_typeof3","_extends13","_extends14","_getFinalType","_getFinalType2","_isList","_isList2","sanitizeValue","buildGetListVariables","_filter","_resourceField","_type","resourceField","_type3","page","pagination","perPage","sortField","sortOrder","order","buildCreateUpdateVariables","1994","buildApolloArgs","buildArgs","getArgType","buildFields","_extends7","_extends8","_graphqlify","_isRequired","_isRequired2","startsWith","linkedType","required","validVariables","metaVariables","apolloArgs","metaArgs","encodeQuery","total","encodeMutation","1995","encodeOperation","_nameOrFields","_fieldsOrNil","fieldset","encodeField","encodeFieldset","encodeFields","encoded","encodeParams","encodeParamsMap","encodeParamsObject","encodeParamsArray","encodeParamValue","encodeParam","graphqlify","1996","isRequired","1997","_extends6","sanitizeResource","linkedResource","linkedResourceData","sanitize"],"mappings":"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A,2GACA,kHACA,uGACA,kCACA,wCACA,+BACA,+BACA,sBACA,mBACA,gBACAtkD,QAAA,SAAAskD,GACA,MAAAqU,GAAA4B,gBAAAjW,EAAA,GAAAA,EAAA,OAQA,YACA,SACA,SACA,MACA,UACA,OACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,MACA,UACA,UACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,WACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,SACA,UACA,gBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACAtkD,QAAA24D,EAAA6B,oBAEA7B,K7GipfMgC,KACA,SAAU1gE,EAAQ6sB,EAAS3sB,GAEjC,Y8G1mgBA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GAhB7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,GAGA,IAAA42C,GAAA/2C,EAAA,GAEAg3C,EAAAT,EAAAQ,GAEAE,EAAAj3C,EAAA,GAEAk3C,EAAAX,EAAAU,GAEAwpB,EAAAzgE,EAAA,MAEA0gE,EAAA1gE,EAAA,KAIA2sB,GAAA+e,QAAA,SAAAnnB,GACA,IAAAA,EACA,UAAAk8C,GAAAE,YAGA,IAAAne,GAAAj+B,EAAAi+B,MACAxF,EAAAz4B,EAAAy4B,KACAr8C,EAAA4jB,EAAA5jB,IACA64C,GAAA,EAAAtC,EAAAxL,SAAAnnB,GAAA,uBAEAq8C,EAAA5jB,EACA6jB,EAAAre,CAUA,QARAxF,GAAAr8C,IACAigE,EAAA,GAAAF,GAAAI,UAAsDngE,SAGtD6hD,IACAqe,GAAA,GAAAH,GAAAK,eAAAC,aAGA,GAAAP,GAAAE,cAAA,EAAA3pB,EAAAtL,UACAsR,KAAA4jB,EACApe,MAAAqe,GACKrnB,KAGL15C,EAAA6sB,UAAA,S9GiogBMs0C,KACA,SAAUnhE,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIs+C,GAAyDz+C,EAAoB,KACrEA,GAAoBkB,EAAEnB,EAAqB,WAAY,WAAa,MAAO0+C,GAA0D,GACjJ,IAAIC,GAAsD1+C,EAAoB,KAClEA,GAAoBkB,EAAEnB,EAAqB,kBAAmB,WAAa,MAAO2+C,GAAuD,GACrJ,IAAIC,GAAoD3+C,EAAoB,KAChEA,GAAoBkB,EAAEnB,EAAqB,gBAAiB,WAAa,MAAO4+C,GAAqD,GACjJ,IAAIC,GAA4C5+C,EAAoB,KAC1CA,GAAoBkB,EAAEnB,EAAqB,YAAa,WAAa,MAAO6+C,GAA6C,GACnJ,IAAIC,GAAoD7+C,EAAoB,KAChEA,GAAoBkB,EAAEnB,EAAqB,cAAe,WAAa,MAAO8+C,GAAqD,GAC/I,IAAIC,GAA8C9+C,EAAoB,KAC1DA,GAAoBkB,EAAEnB,EAAqB,eAAgB,WAAa,MAAO++C,GAA+C,I+GxrgB/J/+C,EAAA,QAAA++C,EAAA,G/GssgBMoiB,KACA,SAAUphE,EAAQC,EAAqBC,GAE7C,YgHhtgBA,SAAAmhE,GAAAl7D,EAAAsD,GACA,GAAAtD,EAAAgL,YAAAhL,EAAAgL,WAAA3I,OAAA,CACA,GAAA84D,KAIA,OAHAn7D,GAAAgL,WAAApL,QAAA,SAAAsR,GACAiqD,EAAAjqD,EAAA9R,KAAAlF,OAAAF,OAAAohE,EAAA,GAAAlqD,EAAA5N,KAEA63D,EAEA,YAEA,QAAAE,GAAAvmC,EAAAxxB,GAEA,OADA,KAAAA,IAA+BA,OAC/BwxB,EAAA9pB,WACA,QAEA,IAAAswD,IAAA,CAyCA,OAxCAxmC,GAAA9pB,WAAApL,QAAA,SAAAsR,GAEA,YAAAA,EAAA9R,KAAAlF,OAAA,YAAAgX,EAAA9R,KAAAlF,MAAA,CAKA,GAAAqhE,GAAArqD,EAAA9O,cACA4pD,EAAA96C,EAAA9R,KAAAlF,KACA,QAAAqhE,EAAAl5D,OACA,SAAA7H,OAAA,0CAAAwxD,EAAA,cAEA,IAAAwP,GAAAD,EAAA,EACA,KAAAC,EAAAp8D,MAAA,OAAAo8D,EAAAp8D,KAAAlF,MACA,SAAAM,OAAA,6BAAAwxD,EAAA,cAEA,IAAAyP,GAAAF,EAAA,GAAArhE,MACAwhE,GAAA,CACA,IAAAD,GAAA,iBAAAA,EAAA72D,KAaA82D,EAAAD,EAAAvhE,UAbA,CAEA,gBAAAuhE,EAAA72D,KACA,SAAApK,OAAA,qBAAAwxD,EAAA,oDAIA,QAAAnrD,MADA66D,EAAAp4D,EAAAm4D,EAAAr8D,KAAAlF,QAEA,SAAAM,OAAA,mCAAAwxD,EAAA,eAOA,SAAAA,IACA0P,MAEAA,IACAJ,GAAA,MAGAA,EAEA,QAAAK,GAAA7mC,GACA,MAAAA,GAAA7pB,cACA6pB,EAAA7pB,aAAAM,WAAAlJ,OAAA,GAEAyyB,GAAAxiB,OAAAwiB,EAAA7pB,aAAAM,WACA9K,IAAA,SAAAm7D,GACA,OAAAA,GAAAtpD,OAAAqpD,EAAAC,MAEA9qD,OAAA,SAAAvF,EAAAm+B,GAAiD,MAAAn+B,GAAA+G,OAAAo3B,UALjD5U,GAOA,QAAA+mC,GAAA92B,GAoBA,MAlBAA,GAAAr6B,YACAjB,OAAA,SAAA8pB,GACA,MAAAA,GAAAtoB,cAAAsoB,EAAAtoB,aAAAM,aAGA9K,IAAA,SAAAiJ,GAA2B,MAAAiyD,GAAAjyD,KAE3BoH,OAAA,SAAAvF,EAAAm+B,GAAiD,MAAAn+B,GAAA+G,OAAAo3B,QAEjDjgC,OAAA,SAAAqrB,GACA,MAAAA,GAAA9pB,YAAA8pB,EAAA9pB,WAAA3I,OAAA,IAGA5B,IAAA,SAAAq0B,GAAmC,MAAAA,GAAA9pB,aAEnC8F,OAAA,SAAA9F,EAAAkG,GAAkD,MAAAlG,GAAAsH,OAAApB,QAElDzQ,IAAA,SAAAyQ,GAAmC,MAAAA,GAAA9R,KAAAlF,QAGnC,QAAA4hE,GAAAC,EAAAh3B,GACA,MAAA82B,GAAA92B,GAAA1wB,KAAA,SAAAjV,GAAwD,MAAA28D,GAAAzxD,QAAAlL,IAAA,IhHsngBvBtF,EAAuB,EAAIohE,EAC3BphE,EAAuB,EAAIuhE,EAG3BvhE,EAAuB,EAAIgiE,CACvC,IAAIV,GAA4CrhE,EAAoB,OAmGnFiiE,KACA,SAAUniE,EAAQ6sB,EAAS3sB,GAEjC,YiH3zgBAF,GAAA6sB,QAAA,SAAAgM,EAAAkL,GACAA,UACA,mBAAAA,QAA4Cq+B,IAAAr+B,GAC5C,IAAAs+B,GAAA,kBAAAt+B,GAAAs+B,QAAAt+B,EAAAs+B,OAEAD,EAAAr+B,EAAAq+B,KAAA,SAAAE,GACA,gBAAA9yD,GACA,gBAAA2iB,EAAAC,GACA,GAAAmwC,IAA4B75D,IAAAypB,EAAA9xB,MAAAmP,EAAA2iB,IAC5BqwC,GAA4B95D,IAAA0pB,EAAA/xB,MAAAmP,EAAA4iB,GAC5B,OAAAkwC,GAAAC,EAAAC,MAGKz+B,EAAAq+B,KAELK,IACA,gBAAA3vD,GAAAtD,GAKA,GAJAA,KAAA1G,QAAA,mBAAA0G,GAAA1G,SACA0G,IAAA1G,cAGA9B,KAAAwI,EAAA,CACA,mBAAAA,GAAA,MAAAkzD,UAAAlzD,GAAA,GAAAA,EAAA,MACA,qBAAAA,GAAA,MAAAqD,MAAAC,UAAAtD,EAEA,IAAAlH,GAAAq6D,CACA,IAAAt9D,MAAAC,QAAAkK,GAAA,CAEA,IADAmzD,EAAA,IACAr6D,EAAA,EAAuBA,EAAAkH,EAAAhH,OAAiBF,IACxCA,IAAAq6D,GAAA,KACAA,GAAA7vD,EAAAtD,EAAAlH,KAAA,MAEA,OAAAq6D,GAAA,IAGA,UAAAnzD,EAAA,YAEA,SAAAizD,EAAAhyD,QAAAjB,GAAA,CACA,GAAA6yD,EAAA,MAAAxvD,MAAAC,UAAA,YACA,UAAAjR,WAAA,yCAGA,GAAA+gE,GAAAH,EAAAzpD,KAAAxJ,GAAA,EACA1J,EAAA3F,OAAA2F,KAAA0J,GAAA0iB,KAAAkwC,KAAA5yD,GAEA,KADAmzD,EAAA,GACAr6D,EAAA,EAAmBA,EAAAxC,EAAA0C,OAAiBF,IAAA,CACpC,GAAAI,GAAA5C,EAAAwC,GACAjI,EAAAyS,EAAAtD,EAAA9G,GAEArI,KACAsiE,OAAA,KACAA,GAAA9vD,KAAAC,UAAApK,GAAA,IAAArI,GAGA,MADAoiE,GAAAt/C,OAAAy/C,EAAA,GACA,IAAiBD,EAAA,MACZ9pC,KjHo0gBCgqC,KACA,SAAU7iE,EAAQC,EAAqBC,GAE7C,YkHl2gBA,SAAA4iE,GAAA5qC,EAAA0S,GACA,GAAAm4B,GAAAn4B,EAIAnR,IAgBA,IAfAvB,EAAArnB,YAAA9K,QAAA,SAAA2zB,GAGA,2BAAAA,EAAA3uB,KACA,SAAApK,OAAA,WAAA+4B,EAAA1oB,UAAA,cAAA0oB,EAAAn0B,KAAA,WAAAm0B,EAAAn0B,KAAAlF,MAAA,oGAKA,wBAAAq5B,EAAA3uB,MACA0uB,EAAAzgB,KAAA0gB,KAKA,oBAAAqpC,GAAA,CACA,OAAAtpC,EAAAjxB,OACA,SAAA7H,OAAA,SAAA84B,EAAAjxB,OAAA,oFAEAu6D,GAAAtpC,EAAA,GAAAl0B,KAAAlF,MAsBA,MAlBA2/B,MAA2B9H,GAAarnB,cAExC9F,KAAA,sBACAiG,UAAA,QACAI,cACArG,KAAA,eACA2G,aAEA3G,KAAA,iBACAxF,MACAwF,KAAA,OACA1K,MAAA0iE,QAMAtqD,OAAAyf,EAAArnB,eA5EA5Q,EAAA,EAAA6iE,CAAA,IAAA9iC,GAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,KlH+8gBM+iC,KACA,SAAUhjE,EAAQC,EAAqBC,GAE7C,YmH/8gBA,SAAA+iE,GAAAlyD,EAAA0oB,GAEA,MAAA1oB,GAAAK,aAAAM,WAAA9B,OAAA,SAAAwB,GAEA,QAAAA,GAEA,mBAAAA,EAAArG,OAEAk4D,EAAAxpC,EAAAroB,EAAA7L,KAAAlF,OAAAo5B,MACKjxB,OAAA,EAEL,QAAA06D,GAAA/xD,GACA,gBAAAkG,GACA,MAAAlG,GAAAqJ,KAAA,SAAA2oD,GACA,SAAAA,EAAA59D,MAAA49D,EAAA59D,OAAA8R,EAAA9R,KAAAlF,WAEA8iE,EAAA9zB,OAAA8zB,EAAA9zB,KAAAh4B,OAMA,QAAA+rD,GAAAhyD,EAAAiyD,GAEA,OADA,KAAAA,IAA4BA,GAAA,GAC5BjyD,EAAAM,WAAA,CACA,IAAA2xD,EAAA,CACAjyD,EAAAM,WAAA8I,KAAA,SAAAygB,GACA,gBAAAA,EAAAlwB,MACA,eAAAkwB,EAAA11B,KAAAlF,SAGA+Q,EAAAM,WAAAsH,KAAAsqD,GAGAlyD,EAAAM,WAAA3L,QAAA,SAAAk1B,GAEA,UAAAA,EAAAlwB,KACA,IAAAkwB,EAAA11B,KAAAlF,MAAAkjE,YAAA,SACAtoC,EAAA7pB,cACAgyD,EAAAnoC,EAAA7pB,cAGA,mBAAA6pB,EAAAlwB,MACAkwB,EAAA7pB,cACAgyD,EAAAnoC,EAAA7pB,iBAMA,QAAAoyD,GAAAryD,EAAAC,GACA,IAAAA,EAAAM,WACA,MAAAN,EAEA,IAAAqyD,GAAAtyD,EAAAqJ,KAAA,SAAA2oD,GAA0D,MAAAA,GAAAO,QAwB1D,OAvBAtyD,GAAAM,WAAAN,EAAAM,WACA9K,IAAA,SAAAq0B,GACA,aAAAA,EAAAlwB,OACAkwB,IACAA,EAAA9pB,WACA,MAAA8pB,EACA,IACAyoC,GADAC,EAAAT,EAAA/xD,EAQA,OANA8pB,GAAA9pB,WAAA8pB,EAAA9pB,WAAAvB,OAAA,SAAAyH,GACA,GAAAusD,IAAAD,EAAAtsD,EAGA,OAFAqsD,IAAAE,IAAAH,IACAC,GAAA,GACAE,IAEAF,EAAA,KAAAzoC,IAEArrB,OAAA,SAAAC,GAA8B,QAAAA,IAC9BuB,EAAAM,WAAA3L,QAAA,SAAAk1B,GACA,UAAAA,EAAAlwB,MAAA,mBAAAkwB,EAAAlwB,OACAkwB,EAAA7pB,cACAoyD,EAAAryD,EAAA8pB,EAAA7pB,gBAGAA,EAEA,QAAAyyD,GAAA1yD,EAAA+5B,GACA,GAAA44B,GAAA3jE,OAAA4jE,EAAA,GAAA74B,EAMA,OALA44B,GAAAjzD,YAAA9K,QAAA,SAAA2zB,GACA8pC,EAAAryD,EAAAuoB,EAAAtoB,gBAIA6xD,EAFA9iE,OAAA6jE,EAAA,GAAAF,GACA3jE,OAAA6jE,EAAA,GAAA7jE,OAAA6jE,EAAA,GAAAF,KACAA,EAAA,KAEA,QAAAG,GAAA/4B,GACA/qC,OAAA6jE,EAAA,GAAA94B,EACA,IAAA44B,GAAA3jE,OAAA4jE,EAAA,GAAA74B,EAKA,OAJA44B,GAAAjzD,YAAA9K,QAAA,SAAA2zB,GACA,GAAA2pC,GAAA,wBAAA3pC,EAAA3uB,IACAq4D,GAAA1pC,EAAAtoB,aAAAiyD,KAEAS,EAeA,QAAAI,GAAAh5B,GAEA,MADA/qC,QAAA6jE,EAAA,GAAA94B,GACA24B,GAAAM,GAAAj5B,GnHg2gBiCjrC,EAAuB,EAAIgkE,EAC3BhkE,EAAuB,EAAIikE,CAEvC,IAAIH,GAAgD7jE,EAAoB,MACpE8jE,EAA4C9jE,EAAoB,MmH59gBzFojE,GACAv4D,KAAA,QACAxF,MACAwF,KAAA,OACA1K,MAAA,eAqGA8jE,GACA90B,KAAA,SAAAh4B,GACA,GAAA+sD,GAAA,eAAA/sD,EAAA9R,KAAAlF,KAQA,OAPA+jE,KACA/sD,EAAA9O,WACA8O,EAAA9O,UAAAiS,KAAA,SAAA1T,GAA0D,cAAAA,EAAAvB,KAAAlF,SAC1DwjC,QAAAkH,KAAA,wIAIAq5B,KnHmihBMC,KACA,SAAUrkE,EAAQC,EAAqBC,GAE7C,YoH3phBA,SAAAokE,GAAAhC,GACA,IACA,MAAAA,KAEA,MAAA5gB,GACA7d,QAAAnQ,OACAmQ,QAAAnQ,MAAAguB,IAIA,QAAA6iB,GAAAlhD,GACA,MAAAA,GAAAkQ,QAAAlQ,EAAAkQ,OAAA/qB,OpHiphBiCvI,EAAuB,EAAIqkE,EAC3BrkE,EAAuB,EAAIskE,GAkBtDC,KACA,SAAUxkE,EAAQC,EAAqBC,GAE7C,YqH/qhBA,SAAAukE,GAAAtyC,EAAAC,GAEA,GAAAD,IAAAC,EACA,QAGA,IAAAD,YAAAuyC,OAAAtyC,YAAAsyC,MACA,MAAAvyC,GAAAwyC,YAAAvyC,EAAAuyC,SAIA,UAAAxyC,GACA,iBAAAA,IACA,MAAAC,GACA,iBAAAA,GAAA,CAGA,OAAA1pB,KAAAypB,GACA,GAAAhyB,OAAAgI,UAAAjC,eAAAyC,KAAAwpB,EAAAzpB,GAAA,CACA,IAAAvI,OAAAgI,UAAAjC,eAAAyC,KAAAypB,EAAA1pB,GACA,QAEA,KAAA+7D,EAAAtyC,EAAAzpB,GAAA0pB,EAAA1pB,IACA,SAKA,OAAAA,KAAA0pB,GACA,IAAAjyB,OAAAgI,UAAAjC,eAAAyC,KAAAwpB,EAAAzpB,GACA,QAIA,UAGA,SAxCAzI,EAAA,EAAAwkE,GrHkuhBMG,KACA,SAAU5kE,EAAQC,EAAqBC,GAE7C,YsHluhBA,SAAA2kE,GAAAC,GASA,MARA3kE,QAAAuL,OAAAo5D,GACA3kE,OAAA4kE,oBAAAD,GAAA/+D,QAAA,SAAAi/D,GACA,OAAAF,EAAAE,IACA,iBAAAF,GAAAE,IAAA,mBAAAF,GAAAE,IACA7kE,OAAA8kE,SAAAH,EAAAE,KACAH,EAAAC,EAAAE,MAGAF,EAEA,QAAAI,GAAA/9D,GACA,GAAAhH,OAAAglE,EAAA,MAAAhlE,OAAAglE,EAAA,MAIA,KADA,mBAAAn9D,SAAA,iBAAAA,QAAA,KAEA,MAAA68D,GAAA19D,GAGA,MAAAA,GtH+shBiClH,EAAuB,EAAIilE,CACvC,IAAIC,GAA6CjlE,EAAoB,OA8BpFklE,KACA,SAAUplE,EAAQC,EAAqBC,GAE7C,YuH9vhBA,SAAAmlE,GAAAC,EAAAtkE,GAEA,OADA,KAAAA,IAA0BA,EAAA,SAC1Bb,OAAAglE,EAAA,OAGAvlB,EAAA0lB,GAIA,OAHAnlE,OAAAglE,EAAA,OACAvlB,EAAA0lB,IAAA,GAEAtkE,GACA,YACA6iC,QAAAnQ,MAAA4xC,EACA,MACA,SACAzhC,QAAAkH,KAAAu6B,IvHivhBiCrlE,EAAuB,EAAIolE,CACvC,IAAIF,GAA6CjlE,EAAoB,MuHzwhB1F0/C,EAAAz/C,OAAA0F,YvH0yhBM0/D,KACA,SAAUvlE,EAAQC,EAAqBC,GAE7C,cAoBMslE,KACA,SAAUxlE,EAAQC,EAAqBC,GAE7C,YwHzvhBA,SAAA83B,GAAAklB,EAAAlsC,GACA,MAAAksC,GAAAC,QAAAh9C,OAAAie,EAAA,GAAApN,EAAA6M,QAAA1d,OAAAie,EAAA,GAAAje,OAAAie,EAAA,GAAApN,OAAAy0D,EAAA,EAAAC,KxHyvhB+BxlE,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO0lE,KACpEzlE,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO2lE,KACpE1lE,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO2nD,KACpE1nD,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwY,KACpEvY,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4lE,KAClE5lE,EAAuB,EAAI+3B,CACvC,IAAIytC,GAAkDvlE,EAAoB,MACtEke,EAA2Cle,EAAoB,MwH30hBxF4lE,EAAA,SAAA/0D,EAAAg1D,GAA0C,MAAAA,KAAAh1D,GAAA00D,EAAA,EAAAC,MAC1CM,EAAA,SAAAC,GACA,yBAAAA,GAAA,GAAAJ,GAAAI,MAEAN,EAAA,WACA,UAAAE,GAAA,SAAA90D,EAAAg1D,GAAkD,MAAAN,GAAA,EAAAC,QAElDE,EAAA,SAAAM,GACA,WAAAA,EAAA19D,OACAm9D,IACAO,EAAAt/D,IAAAo/D,GAAA/uD,OAAA,SAAApH,EAAAs2D,GAAqD,MAAAt2D,GAAA4I,OAAA0tD,MAErDve,EAAA,SAAAvY,EAAA+2B,EAAAC,OACA,KAAAA,IAA2BA,EAAA,GAAAR,GAAAC,GAC3B,IAAAQ,GAAAN,EAAAI,GACAG,EAAAP,EAAAK,EACA,OACA,IAAAR,GADA1lE,OAAAie,EAAA,GAAAkoD,IAAAnmE,OAAAie,EAAA,GAAAmoD,GACA,SAAAv1D,GACA,MAAAq+B,GAAAr+B,GACAs1D,EAAAnpB,QAAAnsC,IAAAy0D,EAAA,EAAAC,KACAa,EAAAppB,QAAAnsC,IAAAy0D,EAAA,EAAAC,MAIA,SAAA10D,EAAA+0D,GACA,MAAA12B,GAAAr+B,GACAs1D,EAAAnpB,QAAAnsC,EAAA+0D,IAAAN,EAAA,EAAAC,KACAa,EAAAppB,QAAAnsC,EAAA+0D,IAAAN,EAAA,EAAAC,QAKAjtD,EAAA,SAAAygD,EAAAsN,GACA,GAAAC,GAAAT,EAAA9M,EACA,IAAA/4D,OAAAie,EAAA,GAAAqoD,GAEA,MADA5iC,SAAAkH,KAAA,GAAA3sB,GAAA,4EAAAqoD,IACAA,CAEA,IAAAC,GAAAV,EAAAQ,EACA,OACA,IAAAX,GADA1lE,OAAAie,EAAA,GAAAsoD,GACA,SAAA11D,GACA,MAAAy1D,GAAAtpB,QAAAnsC,EAAA,SAAAD,GAA+D,MAAA21D,GAAAvpB,QAAApsC,IAAA00D,EAAA,EAAAC,QAAkDD,EAAA,EAAAC,MAIjH,SAAA10D,EAAA+0D,GACA,MAAAU,GAAAtpB,QAAAnsC,EAAA,SAAAD,GACA,MAAA21D,GAAAvpB,QAAApsC,EAAAg1D,IAAAN,EAAA,EAAAC,QACaD,EAAA,EAAAC,QAIbG,EAAA,WACA,QAAAA,GAAA1oB,GACAA,IACA54C,KAAA44C,WAgBA,MAdA0oB,GAAA19D,UAAAy/C,MAAA,SAAAvY,EAAA+2B,EAAAC,GAEA,WADA,KAAAA,IAA+BA,EAAA,GAAAR,GAAAC,IAC/BvhE,KAAAkU,OAAAmvC,EAAAvY,EAAA+2B,EAAAC,KAEAR,EAAA19D,UAAAsQ,OAAA,SAAA6V,GACA,MAAA7V,GAAAlU,KAAA+pB,IAEAu3C,EAAA19D,UAAAg1C,QAAA,SAAAnsC,EAAA+0D,GACA,SAAAplE,OAAA,+BAEAklE,EAAAF,QACAE,EAAAD,OACAC,EAAAje,QACAie,EAAA7tC,UACA6tC,MxHw1hBMc,KACA,SAAU3mE,EAAQ6sB,EAAS3sB,GyHl6hBjCF,EAAA6sB,QAAA3sB,EAAA,MAAAs8C,YzHy6hBMoqB,KACA,SAAU5mE,EAAQ6sB,EAAS3sB,GAEjC,Y0Hp6hBA,SAAAwB,GAAAC,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAoB3F,QAAAglE,GAAA1/D,EAAAuB,GACA,GAAArI,GAAA8G,EAAAuB,EAEA,UAAArI,EAAA,CAEA,sBAAAA,GAAA,SAAAwB,WAAAxB,EAAA,qBAEA,OAAAA,IAGA,QAAAymE,GAAA3/D,GACA,GAAA4/D,GAAA5/D,EAAAe,WAOA,YANAlB,KAAA+/D,GAEA,QADAA,IAAAC,EAAA,eAEAD,MAAA//D,QAGAA,KAAA+/D,IAAAvqB,EAGA,QAAAyqB,GAAAp3D,GACA,MAAAA,aAAA2sC,GAGA,QAAA0qB,GAAAxlB,GACAwlB,EAAAC,IACAD,EAAAC,IAAAzlB,GAEAjgB,WAAA,WACA,KAAAigB,KAKA,QAAA0lB,GAAArjD,GACAmL,QAAAzoB,UAAA3F,KAAA,WACA,IACAijB,IACK,MAAA29B,GACLwlB,EAAAxlB,MAKA,QAAA2lB,GAAAlvD,GACA,GAAAmvD,GAAAnvD,EAAAovD,QACA,QAAAvgE,KAAAsgE,IAEAnvD,EAAAovD,aAAAvgE,GAEAsgE,GAIA,IACA,sBAAAA,GACAA,QACK,CACL,GAAA5lC,GAAAmlC,EAAAS,EAAA,cACA5lC,IACAA,EAAA/4B,KAAA2+D,IAGG,MAAA5lB,GACHwlB,EAAAxlB,IAIA,QAAA8lB,GAAArvD,GACAA,EAAA8sB,cAAAj+B,GACAmR,EAAAsvD,WAAAzgE,GACAmR,EAAAuvD,OAAA,SAGA,QAAAC,GAAAxvD,GACA,GAAAyvD,GAAAzvD,EAAAsvD,MACA,IAAAG,EAAA,CAGAzvD,EAAAsvD,WAAAzgE,GACAmR,EAAAuvD,OAAA,OACA,QAAAp/D,GAAA,EAAiBA,EAAAs/D,EAAAp/D,SACjBq/D,EAAA1vD,EAAAyvD,EAAAt/D,GAAAtH,KAAA4mE,EAAAt/D,GAAAjI,OACA,WAAA8X,EAAAuvD,UAFmCp/D,KAMnC,QAAAu/D,GAAA1vD,EAAAnX,EAAAX,GACA8X,EAAAuvD,OAAA,SAEA,IAAA7mC,GAAA1oB,EAAA8sB,SAEA,KACA,GAAA6iC,GAAAjB,EAAAhmC,EAAA7/B,EACA,QAAAA,GACA,WACA8mE,KAAAn/D,KAAAk4B,EAAAxgC,EACA,MACA,aAEA,GADAmnE,EAAArvD,IACA2vD,EAAuC,KAAAznE,EAAvCynE,GAAAn/D,KAAAk4B,EAAAxgC,EACA,MACA,gBACAmnE,EAAArvD,GACA2vD,KAAAn/D,KAAAk4B,IAGG,MAAA6gB,GACHwlB,EAAAxlB,GAGA,WAAAvpC,EAAAuvD,OAAAL,EAAAlvD,GAA0E,YAAAA,EAAAuvD,SAAAvvD,EAAAuvD,OAAA,SAG1E,QAAAK,GAAA5vD,EAAAnX,EAAAX,GACA,cAAA8X,EAAAuvD,OAEA,oBAAAvvD,EAAAuvD,WACAvvD,GAAAsvD,OAAAzuD,MAA8BhY,OAAAX,UAI9B,UAAA8X,EAAAuvD,QACAvvD,EAAAuvD,OAAA,YACAvvD,EAAAsvD,SAA4BzmE,OAAAX,cAC5B+mE,GAAA,WACA,MAAAO,GAAAxvD,UAKA0vD,GAAA1vD,EAAAnX,EAAAX,GA9JAF,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,GAGA,IAAA2nE,GAAA,WAAgC,QAAAroD,GAAAtX,EAAA4/D,GAA2C,OAAA3/D,GAAA,EAAgBA,EAAA2/D,EAAAz/D,OAAkBF,IAAA,CAAO,GAAA4/D,GAAAD,EAAA3/D,EAA2B4/D,GAAAtoD,WAAAsoD,EAAAtoD,aAAA,EAAwDsoD,EAAAnoD,cAAA,EAAgC,SAAAmoD,OAAAroD,UAAA,GAAuD1f,OAAAC,eAAAiI,EAAA6/D,EAAAx/D,IAAAw/D,IAA+D,gBAAAtmE,EAAAumE,EAAAC,GAA2L,MAAlID,IAAAxoD,EAAA/d,EAAAuG,UAAAggE,GAAqEC,GAAAzoD,EAAA/d,EAAAwmE,GAA6DxmE,MAMxhBymE,EAAA,WACA,yBAAArgE,SAEAsgE,EAAA,SAAA/iE,GACA,MAAA8iE,MAAA/hE,QAAA0B,OAAAzC,KAEAyhE,EAAA,SAAAzhE,GACA,MAAA+iE,GAAA/iE,GAAAyC,OAAAzC,GAAA,KAAAA,EAGA8iE,OAAAC,EAAA,gBACAtgE,OAAAq1C,WAAAr1C,OAAA,cA4IA,IAAA4yD,GAAA,WACA,QAAAA,GAAA/5B,EAAA0nC,GACA7mE,EAAA6C,KAAAq2D,GAKAr2D,KAAAgjE,aAAAvgE,GACAzC,KAAA0gC,UAAApE,EACAt8B,KAAAkjE,WAAAzgE,GACAzC,KAAAmjE,OAAA,cAEA,IAAAc,GAAA,GAAAC,GAAAlkE,KAEA,KACAA,KAAAgjE,SAAAgB,EAAA5/D,SAAA3B,GAAAwhE,GACK,MAAA9mB,GACL8mB,EAAA90C,MAAAguB,GAGA,iBAAAn9C,KAAAmjE,SAAAnjE,KAAAmjE,OAAA,SAkBA,MAfAM,GAAApN,IACAlyD,IAAA,cACArI,MAAA,WACA,WAAAkE,KAAAmjE,SACAF,EAAAjjE,MACA8iE,EAAA9iE,UAIAmE,IAAA,SACAmC,IAAA,WACA,iBAAAtG,KAAAmjE,WAIA9M,KAGA6N,EAAA,WACA,QAAAA,GAAAtwD,GACAzW,EAAA6C,KAAAkkE,GAEAlkE,KAAAygC,cAAA7sB,EAyBA,MAtBA6vD,GAAAS,IACA//D,IAAA,OACArI,MAAA,SAAAA,GACA0nE,EAAAxjE,KAAAygC,cAAA,OAAA3kC,MAGAqI,IAAA,QACArI,MAAA,SAAAA,GACA0nE,EAAAxjE,KAAAygC,cAAA,QAAA3kC,MAGAqI,IAAA,WACArI,MAAA,WACA0nE,EAAAxjE,KAAAygC,cAAA,eAGAt8B,IAAA,SACAmC,IAAA,WACA,iBAAAtG,KAAAygC,cAAA0iC,WAIAe,KAGAjsB,EAAA3vB,EAAA2vB,WAAA,WACA,QAAAA,GAAA+rB,GAGA,GAFA7mE,EAAA6C,KAAAi4C,KAEAj4C,eAAAi4C,IAAA,SAAA36C,WAAA,4CAEA,uBAAA0mE,GAAA,SAAA1mE,WAAA,4CAEA0C,MAAAmkE,YAAAH,EA6VA,MA1VAP,GAAAxrB,IACA9zC,IAAA,YACArI,MAAA,SAAAwgC,GAQA,MAPA,iBAAAA,IAAA,OAAAA,IACAA,GACAvS,KAAAuS,EACAnN,MAAAnrB,UAAA,GACAk1C,SAAAl1C,UAAA,KAGA,GAAAqyD,GAAA/5B,EAAAt8B,KAAAmkE,gBAGAhgE,IAAA,UACArI,MAAA,SAAA0jB,GACA,GAAAxY,GAAAhH,IAEA,WAAA2qB,SAAA,SAAAzoB,EAAA81B,GAMA,QAAAhO,KACApW,EAAAupB,cACAj7B,IAPA,sBAAAsd,GAEA,WADAwY,GAAA,GAAA16B,WAAAkiB,EAAA,sBASA,IAAA5L,GAAA5M,EAAAo2B,WACArT,KAAA,SAAAjuB,GACA,IACA0jB,EAAA1jB,EAAAkuB,GACa,MAAAmzB,GACbnlB,EAAAmlB,GACAvpC,EAAAupB,gBAIAhO,MAAA6I,EACAkhB,SAAAh3C,SAKAiC,IAAA,MACArI,MAAA,SAAA0jB,GACA,GAAAq5C,GAAA74D,IAEA,uBAAAwf,GAAA,SAAAliB,WAAAkiB,EAAA,qBAIA,YAFA+iD,EAAAviE,OAEA,SAAAs8B,GACA,MAAAu8B,GAAAz7B,WACArT,KAAA,SAAAjuB,GACA,IACAA,EAAA0jB,EAAA1jB,GACa,MAAAqhD,GACb,MAAA7gB,GAAAnN,MAAAguB,GAEA7gB,EAAAvS,KAAAjuB,IAEAqzB,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACA5c,EAAA4c,mBAMA/0C,IAAA,SACArI,MAAA,SAAA0jB,GACA,GAAAu5C,GAAA/4D,IAEA,uBAAAwf,GAAA,SAAAliB,WAAAkiB,EAAA,qBAIA,YAFA+iD,EAAAviE,OAEA,SAAAs8B,GACA,MAAAy8B,GAAA37B,WACArT,KAAA,SAAAjuB,GACA,IACA,IAAA0jB,EAAA1jB,GAAA,OACa,MAAAqhD,GACb,MAAA7gB,GAAAnN,MAAAguB,GAEA7gB,EAAAvS,KAAAjuB,IAEAqzB,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACA5c,EAAA4c,mBAMA/0C,IAAA,SACArI,MAAA,SAAA0jB,GACA,GAAAw5C,GAAAh5D,IAEA,uBAAAwf,GAAA,SAAAliB,WAAAkiB,EAAA,qBAEA,IAAA4kD,GAAA7B,EAAAviE,MACAqkE,EAAArgE,UAAAC,OAAA,EACAqgE,GAAA,EACAr/B,EAAAjhC,UAAA,GACAg2D,EAAA/0B,CAEA,WAAAm/B,GAAA,SAAA9nC,GACA,MAAA08B,GAAA57B,WACArT,KAAA,SAAAjuB,GACA,GAAA64D,IAAA2P,CAGA,IAFAA,GAAA,GAEA3P,GAAA0P,EACA,IACArK,EAAAx6C,EAAAw6C,EAAAl+D,GACe,MAAAqhD,GACf,MAAA7gB,GAAAnN,MAAAguB,OAGA6c,GAAAl+D,GAGAqzB,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACA,IAAAorB,IAAAD,EAAA,MAAA/nC,GAAAnN,MAAA,GAAA7xB,WAAA,mCAEAg/B,GAAAvS,KAAAiwC,GACA19B,EAAA4c,mBAMA/0C,IAAA,SACArI,MAAA,WAGA,OAFAm9D,GAAAj5D,KAEAukE,EAAAvgE,UAAAC,OAAA2zC,EAAA92C,MAAAyjE,GAAAC,EAAA,EAAwEA,EAAAD,EAAaC,IACrF5sB,EAAA4sB,GAAAxgE,UAAAwgE,EAGA,IAAAJ,GAAA7B,EAAAviE,KAEA,WAAAokE,GAAA,SAAA9nC,GAGA,QAAAmoC,GAAA16C,GACAnW,EAAAmW,EAAAqT,WACArT,KAAA,SAAA26C,GACApoC,EAAAvS,KAAA26C,IAEAv1C,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACA,IAAAtB,EAAA3zC,QACA2P,MAAAnR,GACA65B,EAAA4c,YAEAurB,EAAAL,EAAA/C,KAAAzpB,EAAAsM,aAfA,GAAAtwC,OAAA,EAuBA,OAFA6wD,GAAAxL,GAEA,WACArlD,IACAA,MAAAnR,GACAmR,EAAAupB,qBAMAh5B,IAAA,UACArI,MAAA,SAAA0jB,GACA,GAAA05C,GAAAl5D,IAEA,uBAAAwf,GAAA,SAAAliB,WAAAkiB,EAAA,qBAEA,IAAA4kD,GAAA7B,EAAAviE,KAEA,WAAAokE,GAAA,SAAA9nC,GAqCA,QAAAqoC,KACAC,EAAAC,QAAA,IAAAC,EAAA7gE,QAAAq4B,EAAA4c,WArCA,GAAA4rB,MAEAF,EAAA1L,EAAA97B,WACArT,KAAA,SAAAjuB,GACA,GAAA0jB,EACA,IACA1jB,EAAA0jB,EAAA1jB,GACe,MAAAqhD,GACf,MAAA7gB,GAAAnN,MAAAguB,GAIA,GAAA4nB,GAAAX,EAAA/C,KAAAvlE,GAAAshC,WACArT,KAAA,SAAAjuB,GACAwgC,EAAAvS,KAAAjuB,IAEAqzB,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACA,GAAAn1C,GAAA+gE,EAAA54D,QAAA64D,EACAhhE,IAAA,GAAA+gE,EAAAlmD,OAAA7a,EAAA,GACA4gE,MAIAG,GAAArwD,KAAAswD,IAEA51C,MAAA,SAAAguB,GACA7gB,EAAAnN,MAAAguB,IAEAjE,SAAA,WACAyrB,MAQA,mBACAG,EAAAtjE,QAAA,SAAAm6B,GACA,MAAAA,GAAAwB,gBAEAynC,EAAAznC,oBAKAh5B,IAAAs+D,EAAA,cACA3mE,MAAA,WACA,MAAAkE,WAGAmE,IAAA,OACArI,MAAA,SAAAwP,GACA,GAAA84D,GAAA,mBAAApkE,WAAAi4C,CAEA,UAAA3sC,EAAA,SAAAhO,WAAAgO,EAAA,oBAEA,IAAAge,GAAAg5C,EAAAh3D,EAAAm3D,EAAA,cACA,IAAAn5C,EAAA,CACA,GAAAwvB,GAAAxvB,EAAAllB,KAAAkH,EAEA,IAAA1P,OAAAk9C,OAAA,SAAAx7C,WAAAw7C,EAAA,oBAEA,OAAA4pB,GAAA5pB,MAAAn1C,cAAAygE,EAAAtrB,EAEA,GAAAsrB,GAAA,SAAA9nC,GACA,MAAAwc,GAAA1b,UAAAd,KAIA,GAAAynC,EAAA,cACAz6C,EAAAg5C,EAAAh3D,EAAAm3D,EAAA,cAEA,UAAA2B,GAAA,SAAA9nC,GACAumC,EAAA,WACA,IAAAvmC,EAAAuoC,OAAA,CACA,GAAAG,IAAA,EACAC,GAAA,EACAC,MAAAziE,EAEA,KACA,OAAA0iE,GAAAC,EAAA97C,EAAAllB,KAAAkH,GAAA7H,OAAAC,cAA8EshE,GAAAG,EAAAC,EAAAr7C,QAAAC,MAAgEg7C,GAAA,GAC9I,GAAA3nD,GAAA8nD,EAAArpE,KAGA,IADAwgC,EAAAvS,KAAA1M,GACAif,EAAAuoC,OAAA,QAEe,MAAAzlC,GACf6lC,GAAA,EACAC,EAAA9lC,EACe,QACf,KACA4lC,GAAAI,EAAAC,QACAD,EAAAC,SAEiB,QACjB,GAAAJ,EACA,KAAAC,IAKA5oC,EAAA4c,eAMA,IAAAp4C,MAAAC,QAAAuK,GACA,UAAA84D,GAAA,SAAA9nC,GACAumC,EAAA,WACA,IAAAvmC,EAAAuoC,OAAA,CACA,OAAA9gE,GAAA,EAA2BA,EAAAuH,EAAArH,SAAcF,EAEzC,GADAu4B,EAAAvS,KAAAze,EAAAvH,IACAu4B,EAAAuoC,OAAA,MAEAvoC,GAAA4c,eAKA,UAAA57C,WAAAgO,EAAA,yBAGAnH,IAAA,KACArI,MAAA,WACA,OAAAwpE,GAAAthE,UAAAC,OAAAinC,EAAApqC,MAAAwkE,GAAAC,EAAA,EAAyEA,EAAAD,EAAeC,IACxFr6B,EAAAq6B,GAAAvhE,UAAAuhE,EAKA,YAFA,mBAAAvlE,WAAAi4C,GAEA,SAAA3b,GACAumC,EAAA,WACA,IAAAvmC,EAAAuoC,OAAA,CACA,OAAA9gE,GAAA,EAAyBA,EAAAmnC,EAAAjnC,SAAkBF,EAE3C,GADAu4B,EAAAvS,KAAAmhB,EAAAnnC,IACAu4B,EAAAuoC,OAAA,MAEAvoC,GAAA4c,mBAKA/0C,IAAAs+D,EAAA,WACAn8D,IAAA,WACA,MAAAtG,UAIAi4C,IAGA6rB,MACAloE,OAAAC,eAAAo8C,EAAAx0C,OAAA,eACA3H,OACA0pE,OAAA/C,EAAA,cACAE,mBAEA8C,aAAA,K1Hm7hBMC,KACA,SAAUjqE,EAAQC,EAAqBC,GAE7C,YACqB,IAAIu8C,GAA4Cv8C,EAAoB,MAChEqhD,EAAiDrhD,EAAoB,MACrEgqE,EAAmDhqE,EAAoB,MACvEiqE,EAA4CjqE,EAAoB,M2HphjBzFkqE,EAAAlqE,EAAA,MAAA8/B,GAAA9/B,EAAAM,EAAA4pE,GAAA7lE,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,KAOAoqC,GAAA,EACAC,EAAA,GAAA7tB,GAAA,oBAAAzrC,EAAA+0D,GAEA,MADA/0D,GAAA+G,MAAA5X,OAAAohD,EAAA,GAAAvwC,EAAA+G,OACAguD,EAAA/0D,KAQA6vD,EAAA,WAiBA,QAAAA,GAAAp8C,GACA,GAAAlZ,GAAAhH,IACAA,MAAA8zC,kBACA9zC,KAAAgmE,sBACA,IAAArtB,GAAAz4B,EAAAy4B,KAAAwF,EAAAj+B,EAAAi+B,MAAAjiB,EAAAhc,EAAA+lD,cAAA,KAAA/pC,KAAAE,EAAAlc,EAAAgmD,yBAAA,KAAA9pC,EAAA,EAAAA,EAAA+pC,EAAAjmD,EAAAimD,kBAAAzpB,EAAAx8B,EAAAkmD,yBAAA,KAAA1pB,KAAA5I,EAAA5zB,EAAA4zB,cACA,KAAA6E,IAAAwF,EACA,SAAA/hD,OAAA,wXAGA4D,MAAA24C,KAAAotB,EAAA7xD,OAAAykC,GACA34C,KAAAm+C,QACAn+C,KAAAy7C,MAAA,GAAAmqB,GAAA,EAAAznB,GACAn+C,KAAAqmE,sBAAAJ,GAAAC,EAAA,EACAlmE,KAAAomE,qBACApmE,KAAAimE,UACAjmE,KAAA8zC,qBACAoyB,GACAhpC,WAAA,WAAoC,MAAAl2B,GAAAq/D,uBAAA,GAAgDH,GAEpFlmE,KAAAk2C,WAAAl2C,KAAAk2C,WAAAkD,KAAAp5C,MACAA,KAAAwT,MAAAxT,KAAAwT,MAAA4lC,KAAAp5C,MACAA,KAAA+1C,OAAA/1C,KAAA+1C,OAAAqD,KAAAp5C,MACAA,KAAAsmE,WAAAtmE,KAAAsmE,WAAAltB,KAAAp5C,MACAA,KAAAumE,yBAAAvmE,KAAAumE,yBAAAntB,KAAAp5C,KAGA,IAAAwmE,IAAA5qE,OAAAohD,EAAA,MACA,oBAAAypB,UACAA,OAAAC,mBACA,oBAAAP,GACAK,EACAL,GAAA,oBAAAM,WACAA,OAAAC,kBAAA1mE,MAKA8lE,GAAAlqE,OAAAohD,EAAA,OACA8oB,GAAA,EACA,oBAAAW,SACAA,OAAA9yC,UACA8yC,OAAAE,MAAAF,OAAA7oB,MAEA,oBAAA6oB,QAAAG,iCAEAH,OAAAI,WACAJ,OAAAI,UAAAC,UAAA56D,QAAA,cAEAozB,QAAAynC,MAAA,2KAOA/mE,KAAAgnE,QAAAnB,EAAA,QAsQA,MAlPAvJ,GAAA14D,UAAAsyC,WAAA,SAAAh2B,GAWA,MAVAlgB,MAAAinE,mBACAjnE,KAAA8zC,eAAAoC,aACAh2B,EAAAub,KAAiCz7B,KAAA8zC,eAAAoC,WAAAh2B,KAGjClgB,KAAAqmE,uBACA,iBAAAnmD,EAAA6d,aACA,sBAAA7d,EAAA6d,cACA7d,EAAAub,KAAiCvb,GAAY6d,YAAA,iBAE7C/9B,KAAA28B,aAAAuZ,WAAAh2B,IAWAo8C,EAAA14D,UAAA4P,MAAA,SAAA0M,GAKA,GAJAlgB,KAAAinE,mBACAjnE,KAAA8zC,eAAAtgC,QACA0M,EAAAub,KAAiCz7B,KAAA8zC,eAAAtgC,MAAA0M,IAEjC,sBAAAA,EAAA6d,YACA,SAAA3hC,OAAA,iEAOA,OAHA4D,MAAAqmE,uBAAA,iBAAAnmD,EAAA6d,cACA7d,EAAAub,KAAiCvb,GAAY6d,YAAA,iBAE7C/9B,KAAA28B,aAAAnpB,MAAA0M,IASAo8C,EAAA14D,UAAAmyC,OAAA,SAAA71B,GAKA,MAJAlgB,MAAAinE,mBACAjnE,KAAA8zC,eAAAiC,SACA71B,EAAAub,KAAiCz7B,KAAA8zC,eAAAiC,OAAA71B,IAEjClgB,KAAA28B,aAAAoZ,OAAA71B,IAMAo8C,EAAA14D,UAAAw5B,UAAA,SAAAld,GAEA,MADAlgB,MAAAinE,mBACAjnE,KAAA28B,aAAAsC,yBAAA/e,IAQAo8C,EAAA14D,UAAAsjE,UAAA,SAAAhnD,GACA,MAAAlgB,MAAAmnE,YAAAD,UAAAhnD,IAaAo8C,EAAA14D,UAAAwjE,aAAA,SAAAlnD,GACA,MAAAlgB,MAAAmnE,YAAAC,aAAAlnD,IAOAo8C,EAAA14D,UAAAyjE,WAAA,SAAAnnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAE,WAAAnnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAaAw9C,EAAA14D,UAAA0jE,cAAA,SAAApnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAG,cAAApnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAYAw9C,EAAA14D,UAAA2jE,UAAA,SAAArnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAI,UAAArnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAEAw9C,EAAA14D,UAAA4jE,wBAAA,SAAAx8D,GACAhL,KAAAynE,eAAAz8D,GAEAsxD,EAAA14D,UAAA8jE,aAAA,SAAAC,GACA,MAAA/rE,QAAAs8C,EAAA,SAAAl4C,KAAA24C,KAAAgvB,IAKArL,EAAA14D,UAAAqjE,iBAAA,WACA,GAAAjgE,GAAAhH,IACAA,MAAA28B,eAEA38B,KAAA28B,aAAA,GAAAgpC,GAAA,GACAhtB,KAAA34C,KAAA24C,KACA8C,MAAAz7C,KAAAy7C,MACA2qB,mBAAApmE,KAAAomE,mBACAH,QAAAjmE,KAAAimE,QACA2B,YAAA,WACA5gE,EAAAygE,gBACAzgE,EAAAygE,gBACAI,UACAC,OACAC,QAAA/gE,EAAA21B,aAAAe,WAAAsqC,WACAC,UAAAjhE,EAAA21B,aAAAurC,cAAAF,YAEAG,0BAAAnhE,EAAAm3C,MAAAiqB,SAAA,UAsBA9L,EAAA14D,UAAA0iE,WAAA,WACA,GAAAt/D,GAAAhH,IACA,OAAA2qB,SAAAzoB,UACA3F,KAAA,WACA,MAAAyK,GAAA21B,aACA31B,EAAA21B,aAAA0rC,aACA19C,QAAAzoB,QAAA,QAEA3F,KAAA,WAA+B,MAAAouB,SAAA8N,IAAAzxB,EAAAg/D,oBAAA3jE,IAAA,SAAAmd,GAAiE,MAAAA,UAChGjjB,KAAA,WACA,MAAAyK,GAAA21B,cAAA31B,EAAA21B,aAAA4pC,yBACAv/D,EAAA21B,aAAA4pC,2BACA57C,QAAAzoB,QAAA,SAOAo6D,EAAA14D,UAAA0kE,aAAA,SAAAt9D,GACA,GAAAhE,GAAAhH,IAEA,OADAA,MAAAgmE,oBAAAvxD,KAAAzJ,GACA,WACAhE,EAAAg/D,oBAAAh/D,EAAAg/D,oBAAA36D,OAAA,SAAA0+B,GAAuF,MAAAA,KAAA/+B,MAevFsxD,EAAA14D,UAAA2iE,yBAAA,SAAAgC,GACA,MAAAvoE,MAAA28B,aACA38B,KAAA28B,aAAA4pC,yBAAAgC,GACA59C,QAAAzoB,QAAA,OAKAo6D,EAAA14D,UAAAwkE,QAAA,SAAAI,GACA,MAAAxoE,MAAAmnE,YAAAiB,QAAAI,IASAlM,EAAA14D,UAAA+4D,QAAA,SAAA8L,GACA,MAAAzoE,MAAAmnE,YAAAxK,QAAA8L,IAOAnM,EAAA14D,UAAAujE,UAAA,WAKA,MAJAnnE,MAAA0oE,QACA1oE,KAAAinE,mBACAjnE,KAAA0oE,MAAA1oE,KAAAm+C,OAEAn+C,KAAA0oE,OAEApM,IAEA5gE,GAAA,K3H4hjBMitE,KACA,SAAUltE,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOktE,IAC9E,IAAI1wB,GAA4Cv8C,EAAoB,MAChEktE,EAAyDltE,EAAoB,MAC7EmtE,EAAkDntE,EAAoB,MACtEotE,EAAiDptE,EAAoB,MACrEqtE,EAAqDrtE,EAAoB,MACzEstE,EAAoDttE,EAAoB,MACxEutE,EAAiDvtE,EAAoB,MACrEwtE,EAAgDxtE,EAAoB,MACpEytE,EAA8CztE,EAAoB,MAClE0tE,EAAiD1tE,EAAoB,MACrE2tE,EAAgD3tE,EAAoB,MACpE4tE,EAAwC5tE,EAAoB,M4Hp5jBrF8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAeA8tC,GACAC,aACAC,aAAA,EACA/1C,SAAA,KACA4R,QAAA,KACAokC,cAAA,KACAC,gBAAA,KACA9E,kBAEA8D,EAAA,WACA,QAAAA,GAAA1sC,GACA,GAAAyc,GAAAzc,EAAAyc,KAAAvc,EAAAF,EAAAkqC,yBAAA,KAAAhqC,KAAAqf,EAAAvf,EAAAuf,MAAAiB,EAAAxgB,EAAA0rC,kBAAA,KAAAlrB,EAAA,aAA+MA,EAAAE,EAAA1gB,EAAA+pC,cAAA,KAAArpB,IAC/M58C,MAAAkoE,cAAA,GAAAiB,GAAA,EACAnpE,KAAA09B,WAAA,GAAA0rC,GAAA,EAEAppE,KAAA6pE,UAAA,EAGA7pE,KAAA+nE,QAAA,GAAAnhE,KAIA5G,KAAA8pE,mBAAA,GAAAljE,KAIA5G,KAAA+pE,kBACA/pE,KAAA24C,OACA34C,KAAAgqE,aAAA9xB,EAAA,WAAAmpB,MAAA,GAAAyH,GAAA,EAAAnwB,IACA34C,KAAAomE,qBACApmE,KAAAogC,UAAAqb,EACAz7C,KAAA4nE,cACA5nE,KAAAm8B,UAAA,GAAA6sC,GAAA,GAA6CrsC,aAAA38B,KAAAimE,YAm2B7C,MAj2BA2C,GAAAhlE,UAAAmyC,OAAA,SAAA7Z,GACA,GAAAl1B,GAAAhH,KACA0T,EAAAwoB,EAAAxoB,SAAAxO,EAAAg3B,EAAAh3B,UAAA+kE,EAAA/tC,EAAA+tC,mBAAAC,EAAAhuC,EAAAiuC,cAAA/tC,EAAAF,EAAAkuC,qBAAA,KAAAhuC,OAAAiuC,EAAAnuC,EAAAouC,OAAA5tB,EAAAxgB,EAAAyB,kBAAA,KAAA+e,EAAA,OAAAA,EAAA3e,EAAA7B,EAAA6B,YAAA6e,EAAA1gB,EAAA5iB,cAAA,KAAAsjC,KAA8XA,CAC9X,KAAAlpC,EACA,SAAAtX,OAAA,8FAEA,IAAA2hC,GAAA,aAAAA,EACA,SAAA3hC,OAAA,0EAEA,IAAAmuE,GAAAvqE,KAAA48B,kBACAuhB,EAAAn+C,KAAAogC,UAAAoqC,UACA92D,GAAAyqC,EAAAssB,kBAAA/2D,GACAxO,EAAAtJ,OAAAmtE,EAAA,MAAkCntE,OAAAmtE,EAAA,GAAAntE,OAAAmtE,EAAA,GAAAr1D,IAAAxO,EAClC,IAAAwlE,GAAA9uE,OAAAitE,EAAA,GAAAn1D,EACA1T,MAAA2qE,SAAAJ,EAAA,WAA+C,OAAU52C,SAAAjgB,IAEzD,IAAAk3D,GAAA,WACA,GAAAC,KAWA,OAVAX,IACAtuE,OAAA2F,KAAA2oE,GAAA1oE,QAAA,SAAAspE,GACA,OAAA9jE,EAAA+iE,eAAAe,QAAAtpE,QAAA,SAAAk7B,GACAmuC,EAAAnuC,IACAquC,QAAAb,EAAAY,GACAt3D,MAAAxM,EAAA02B,WAAAp3B,IAAAo2B,QAKAmuC,EAYA,OAVA7qE,MAAAkoE,cAAA8C,aAAAT,EAAAG,EAAAxlE,GACAlF,KAAAogC,UAAA6qC,kBACAV,aACA52C,SAAAjgB,EACAxO,gBACAilE,cAAAS,IACAN,OAAAD,EACAJ,uBAEAjqE,KAAAsgC,mBACA,GAAA3V,SAAA,SAAAzoB,EAAA81B,GACA,GAAAkzC,GACA/7C,EACA1iB,EAAAzF,EAAAmkE,sBAAAz3D,EAAAxO,EAAAu2B,KAAwFniB,GAAY2wD,uBACpGruE,QAAAs8C,EAAA,SAAAlxC,EAAA2xC,KAAAlsC,GAAA2wB,WACArT,KAAA,SAAAjL,GACA,GAAAljB,OAAAmtE,EAAA,GAAAjqD,IAAA,SAAA6e,EAIA,YAHAxO,EAAA,GAAA85C,GAAA,GACAltC,cAAAjd,EAAAkQ,SAIAhoB,GAAAkhE,cAAAkD,mBAAAb,GACA,aAAAxsC,GACA/2B,EAAAo5B,UAAAgrC,oBACAb,aACAzrD,SACA6U,SAAAjgB,EACAxO,gBACAilE,cAAAS,IACAN,OAAAD,IAGAa,EAAApsD,GAEAqQ,MAAA,SAAAiQ,GACAp4B,EAAAkhE,cAAAmD,kBAAAd,EAAAnrC,GACAp4B,EAAAo5B,UAAAkrC,sBACAf,aACAN,uBAEAjjE,EAAAs5B,mBACAt5B,EAAA2jE,SAAAJ,EAAA,WAA4D,OAAU52C,aAAAlxB,MACtEu1B,EAAA,GAAAixC,GAAA,GACAjtC,aAAAoD,MAGA8Z,SAAA,WASA,GARA/pB,GACAnoB,EAAAkhE,cAAAmD,kBAAAd,EAAAp7C,GAEAnoB,EAAAo5B,UAAAkrC,sBACAf,aACAN,uBAEAjjE,EAAAs5B,mBACAnR,EAEA,WADA6I,GAAA7I,EAKA,oBAAAi7C,KACAA,IAAAc,IAEAd,GACAA,EAAA5oE,QAAA,SAAA+pE,GACA,oBAAAA,GAEA,WADAvkE,GAAAwkE,mBAAAD,EAGAvkE,GAAAwM,OACAA,MAAA+3D,EAAA/3D,MACAtO,UAAAqmE,EAAArmE,UACA64B,YAAA,mBAIA/2B,EAAA2jE,SAAAJ,EAAA,WAA4D,OAAU52C,aAAAlxB,MACtE,WAAAk7B,GACAutC,GACAtvE,OAAAmtE,EAAA,GAAAmC,UACAA,GAAAl8C,OAEA9sB,EAAAgpE,SAKAtC,EAAAhlE,UAAA46B,WAAA,SAAA9B,EAAAxc,EAAA25C,EAIA4R,GACA,GAIAP,GAJAlkE,EAAAhH,KACAk8B,EAAAhc,EAAAhb,gBAAA,KAAAg3B,KAAkEA,EAAAE,EAAAlc,EAAAwrD,eAAA,KAAAtvC,EAAA,KAAAA,EAAAsgB,EAAAx8B,EAAA6d,kBAAA,KAAA2e,EAAA,cAAAA,EAClEyB,EAAAn+C,KAAAogC,UAAAoqC,WACAh3D,EAAA2qC,EAAAssB,kBAAAvqD,EAAA1M,OAEAm4D,EAAA,iBAAA5tC,GAAA,aAAAA,CAIA,IAAA87B,IAAA0P,EAAA,EAAAlrC,SACA,iBAAAN,GACA,aAAAA,EAAA,CACA,GAAA6e,GAAA58C,KAAAogC,UAAAoqC,WAAAoB,MACAp4D,QACAtO,YACAw2C,mBAAA,EACA8sB,YAAA,IACatvB,EAAA0D,EAAA1D,SAAAp6B,EAAA89B,EAAA99B,MAEb6sD,IAAAzyB,GAAA,sBAAAnb,EACAmtC,EAAApsD,EAEA,GAAA+sD,GAAAF,GAAA,eAAA5tC,GAAA,YAAAA,CAEAniC,QAAAmtE,EAAA,YAAAv1D,KACAq4D,GAAA,EACA,IAAAC,GAAA9rE,KAAA+rE,oBAEAC,EAAAhsE,KAAAisE,iBAAAvvC,EAAAlpB,EAAA0M,EA4BA,IA1BAlgB,KAAA2qE,SAAAjuC,EAAA,WAA4C,OAC5C/I,SAAAngB,EACAm2D,cAAAmC,EACApC,aAAA,EACAsC,YAEAhsE,KAAAksE,YAAA,EAAAT,GACAzrE,KAAA09B,WAAAyuC,WACAzvC,UACA/I,SAAAngB,EACA44D,uBAAAP,EACA3mE,YACAmnE,OAAAxS,IAAA0P,EAAA,EAAA+C,KACAC,UAAA1S,IAAA0P,EAAA,EAAAlrC,QACAqtC,WACAD,wBAEAzrE,KAAAsgC,qBAGAurC,GAAA,sBAAA9tC,KAEA/9B,KAAA09B,WAAA8uC,sBAAA9vC,GAAAmvC,GACA7rE,KAAAksE,YAAA,EAAAxvC,EAAA+uC,GACAzrE,KAAAsgC,oBAEAurC,EAAA,CACA,GAAAY,GAAAzsE,KAAA0sE,cACAZ,YACApvC,UACA/I,SAAAngB,EACA0M,UACAurD,wBACatyB,MAAA,SAAAhqB,GAGb,GAAAvzB,OAAAqtE,EAAA,GAAA95C,GACA,KAAAA,EAGA,IAAAw6C,GAAA3iE,EAAA2lE,SAAAjwC,GAAAitC,aAOA,MANAmC,KAAAnC,GAAA,KACA3iE,EAAA02B,WAAAkvC,eAAAlwC,EAAAvN,EAAAs8C,GACAzkE,EAAAklE,YAAA,EAAAxvC,EAAA+uC,GACAzkE,EAAAs5B,oBAEAt5B,EAAA6lE,wBAAAf,GACA,GAAA7C,GAAA,GAA2CjtC,aAAA7M,KAK3C,0BAAA4O,EACA,MAAA0uC,EAKAA,GAAAtzB,MAAA,cAKA,MAAAxuB,SAAAzoB,SAAgCoyB,KAAA42C,KAIhCtC,EAAAhlE,UAAAm9B,yBAAA,SAAArE,EAAAxc,EAAAoc,GACA,GAAAt1B,GAAAhH,KACA8sE,GAAA,CACA,iBAAArvC,EAAA8H,GAKA,GAHAv+B,EAAAklE,YAAA,EAAAxvC,GAGAe,EAAA,CAEA,GAAAmsC,GAAA5iE,EAAA2lE,SAAAjwC,GAAAktC,gBACA7rC,EAAA6rC,EACAA,EAAA1pD,QAAA6d,YACA7d,EAAA6d,WAEA,gBAAAA,EAAA,CAEA,GAAAJ,GAAAisC,EACAA,EAAA1pD,QAAAyd,YACAzd,EAAAyd,YACAJ,EAAAqsC,EACAA,EAAA1rC,gBACA,KACAZ,EAAAssC,IAAAzrC,eAAA,KACA4uC,GAAAxnC,GAAA,MAAA9H,EAAAuvC,mBACA,eAAAjvC,GACA,sBAAAA,EASAkvC,EAAAlrE,QAAAw7B,GACAE,EAAAvV,gBAAAqV,EAAArV,eACAglD,EAAAvvC,IACAL,KAAAvB,iBACA0B,EAAA1B,eACA,SAAA4B,CACA,KAAA/hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,gBACA+kD,GAAA/sD,EAAAitD,6BACAJ,EAAA,CAGA,KAAApvC,GAAA,SAAAA,IACAF,EAAA1B,eACA0B,EAAA1B,cAAA93B,OAAA,GACAw5B,EAAAzB,aAAA,CACA,GAAAoxC,GAAA,GAAAnE,GAAA,GACAltC,cAAA0B,EAAA1B,cACAC,aAAAyB,EAAAzB,cAGA,IADA8wC,GAAA,EACAxwC,EAAAnN,MACA,IACAmN,EAAAnN,MAAAi+C,GAEA,MAAAjwB,GAEAjgB,WAAA,WACA,KAAAigB,IAC6B,OAK7BjgB,YAAA,WACA,KAAAkwC,IACyB,GACzBxxE,OAAAmtE,EAAA,MAEAzpC,QAAA/H,KAAA,sFAEA37B,OAAAitE,EAAA,GAAAprC,EAAA9J,UAGA,QAEA,IACA,GAAAW,OAAA,GACA+4C,MAAA,EACA,IAAA9nC,EAEAv+B,EAAA2jE,SAAAjuC,EAAA,WAA6D,OAAU6I,QAAA,QACvEjR,EAAAiR,EAAAzmB,OACAuuD,GAAA9nC,EAAA2T,WAAA,MAGA,IAAA3b,KAAAjJ,OAAA44C,EACA54C,EAAAiJ,EAAAjJ,KACA+4C,GAAA,MAEA,CACA,GAAAC,GAAAtmE,EAAA2lE,SAAAjwC,GAAA/I,SACA45C,EAAAvmE,EAAAo5B,UAAAoqC,WAAAoB,MACAp4D,MAAA85D,EACApoE,UAAAu4B,EAAAuvC,mBACAvvC,EAAAv4B,UACAsjE,YAAA,GAEAl0C,GAAAi5C,EAAAzuD,OACAuuD,GAAAE,EAAAr0B,SAGA,GAAAs0B,OAAA,EA0BA,IArBAA,EADAH,GAAA,eAAAtvC,GAEAzJ,KAAAiJ,KAAAjJ,KACAkJ,QAAA5hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,eACAA,cAAAuV,EAAAvV,cACA+V,OAAA,IAKA3J,OACAkJ,QAAA5hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,eACAA,cAAAuV,EAAAvV,cACA+V,OAAA,GAIA,QAAAN,GACAF,EAAA1B,eACA0B,EAAA1B,cAAA93B,OAAA,IACAupE,EAAAx+C,OAAAyO,EAAA1B,eAEAO,EAAAvS,KAAA,CASA,KARAwT,GACAiwC,GACAjwC,EAAArV,gBAAAslD,EAAAtlD,eACAqV,EAAAU,QAAAuvC,EAAAvvC,OAIAV,EAAAjJ,OAAAk5C,EAAAl5C,OACAw4C,EACA,IACAxwC,EAAAvS,KAAAnuB,OAAAmtE,EAAA,GAAAyE,IAEA,MAAArwB,GAEAjgB,WAAA,WACA,KAAAigB,IACiC,IAIjC2vB,GAAA,EAEA,MAAA39C,GAIA,MAHA29C,IAAA,OACAxwC,EAAAnN,OACAmN,EAAAnN,MAAA,GAAA85C,GAAA,GAAwDjtC,aAAA7M,YAYxDy5C,EAAAhlE,UAAAsyC,WAAA,SAAAh2B,EAAAmc,GAEA,OADA,KAAAA,IAAyCA,GAAA,GACzC,YAAAnc,EAAA6d,YACA,SAAA3hC,OAAA,uEAGA,IAAA2gD,GAAAnhD,OAAAmtE,EAAA,GAAA7oD,EAAA1M,MAEA,IAAAupC,EAAApwC,qBACAowC,EAAApwC,oBAAA1I,OAAA,CACA,GAAAszC,GAAA37C,OAAAmtE,EAAA,GAAAhsB,EACA78B,GAAAhb,UAAAtJ,OAAAmtE,EAAA,MAAyCxxB,EAAAr3B,EAAAhb,WAEzC,oBAAAgb,GAAAitD,8BACAjtD,EAAAitD,6BAAA,EAEA,IAAAM,GAAAhyC,KAA4Cvb,EAC5C,WAAAmpD,GAAA,GACAltC,UAAAn8B,KAAAm8B,UACAjc,QAAAutD,EACApxC,qBAGAusC,EAAAhlE,UAAA4P,MAAA,SAAA0M,GACA,GAAAlZ,GAAAhH,IACA,KAAAkgB,EAAA1M,MACA,SAAApX,OAAA,wFAGA,iBAAA8jB,EAAA1M,MAAAhN,KACA,SAAApK,OAAA,iDAEA,IAAA8jB,EAAAw7B,kBACA,SAAAt/C,OAAA,yDAEA,IAAA8jB,EAAAwf,aACA,SAAAtjC,OAAA,oDAEA,IAAA0vE,GAAA9rE,KAAA6pE,SACA,WAAAl/C,SAAA,SAAAzoB,EAAA81B,GAEA,MADAhxB,GAAA0mE,qBAAA5B,EAAA5pE,EAAA81B,GACAhxB,EAAAkvC,WAAAh2B,GAAA,GACApB,SACAviB,KAAA,SAAAuiB,GACA9X,EAAA6lE,wBAAAf,GACA5pE,EAAA4c,KAEAq6B,MAAA,SAAAhqB,GACAnoB,EAAA6lE,wBAAAf,GACA9zC,EAAA7I,QAIAy5C,EAAAhlE,UAAAg5B,gBAAA,WACA,GAAAF,GAAA18B,KAAA6pE,UAAAvlE,UAEA,OADAtE,MAAA6pE,YACAntC,GAEAksC,EAAAhlE,UAAA+pE,iBAAA,SAAAjxC,GACA18B,KAAA09B,WAAAwD,UAAAxE,GACA18B,KAAAksE,YAAA,EAAAxvC,GACA18B,KAAAsgC,oBAEAsoC,EAAAhlE,UAAAgqE,iBAAA,SAAAlxC,EAAAmxC,GACA7tE,KAAA2qE,SAAAjuC,EAAA,SAAAR,GACA,GAAAE,GAAAF,EAAAutC,SACA,QACAA,eAFA,KAAArtC,QAEAloB,QAAA25D,IACA3B,YAAA,MAIAtD,EAAAhlE,UAAAqoE,iBAAA,SAAAvvC,EAAA/I,EAAAzT,GACA,GAAAlZ,GAAAhH,KACAgsE,EAAAhsE,KAAA2sE,SAAAjwC,GAAAsvC,MACAA,IACAA,GACA,IAAAjtC,GAAA,WACA,GAAAA,GAAA,KACA6qC,EAAA5iE,EAAA2lE,SAAAjwC,GAAAktC,eACA,IAAAA,EAAA,CACA,GAAArsC,GAAAqsC,EAAA1rC,eACAX,KACAwB,EAAAxB,EAAAjJ,MAGA,MAAAyK,GAEA,OAAA/+B,MAAAogC,UAAAoqC,WAAAsD,OACAt6D,MAAAmgB,EACAzuB,UAAAgb,EAAAhb,UACAsjE,YAAA,EACAzpC,iBACAnV,SAAA,SAAA2b,GACAv+B,EAAA2jE,SAAAjuC,EAAA,WAAqD,OAAUgtC,aAAA,EAAAnkC,iBAK/DqjC,EAAAhlE,UAAA8pE,qBAAA,SAAA5B,EAAA5pE,EAAA81B,GACAh4B,KAAA8pE,mBAAAjjE,IAAAilE,EAAAxnE,YACApC,UACA81B,YAIA4wC,EAAAhlE,UAAAipE,wBAAA,SAAAf,GACA9rE,KAAA8pE,mBAAAzkC,OAAAymC,EAAAxnE,aAGAskE,EAAAhlE,UAAAi9B,mBAAA,SAAAnE,EAAAktC,GACA5pE,KAAA2qE,SAAAjuC,EAAA,WAA4C,OAAUktC,oBAEtD,IAAA3yB,GAAAr7C,OAAAmtE,EAAA,GAAAa,EAAA1pD,QAAA1M,MACA,IAAAyjC,EAAAj2C,MAAAi2C,EAAAj2C,KAAAlF,MAAA,CACA,GAAAgvE,GAAA7zB,EAAAj2C,KAAAlF,KAEAkE,MAAA+pE,eAAAe,GAAA9qE,KAAA+pE,eAAAe,OACA9qE,KAAA+pE,eAAAe,GAAAr2D,KAAAm1D,EAAAltC,WAGAksC,EAAAhlE,UAAAq9B,sBAAA,SAAAvE,GACA,GAAAR,GAAAl8B,KAAA2sE,SAAAjwC,GAAAktC,EAAA1tC,EAAA0tC,gBAAAoC,EAAA9vC,EAAA8vC,MAGA,IAFAA,GACAA,IACApC,EAAA,CAEA,GAAAz0C,GAAAv5B,OAAAmtE,EAAA,GAAAa,EAAA1pD,QAAA1M,OACAs3D,EAAA31C,EAAAn0B,KAAAm0B,EAAAn0B,KAAAlF,MAAA,IACAkE,MAAA2qE,SAAAjuC,EAAA,WAA4C,OAAUktC,gBAAA,QACtDkB,IACA9qE,KAAA+pE,eAAAe,GAAA9qE,KAAA+pE,eAAAe,GAAAz/D,OAAA,SAAA0iE,GACA,QAAAnE,EAAAltC,UAAAqxC,QAIAnF,EAAAhlE,UAAAykE,WAAA,WAOAroE,KAAA8pE,mBAAAtoE,QAAA,SAAA06B,IAEAlE,EADAkE,EAAAlE,QACA,GAAA57B,OAAA,wEAEA,IAAA4xE,KAUA,OATAhuE,MAAA+nE,QAAAvmE,QAAA,SAAA06B,EAAAQ,GACAR,EAAA0tC,iBAEAoE,EAAAv5D,KAAAioB,KAEA18B,KAAA09B,WAAAuwC,MAAAD,GACAhuE,KAAAkoE,cAAA+F,QAEAjuE,KAAAogC,UAAA6tC,SAGArF,EAAAhlE,UAAA0iE,WAAA,WACA,GAAAt/D,GAAAhH,IAOA,OAAAA,MAAAqoE,aAAA9rE,KAAA,WACA,MAAAyK,GAAAu/D,8BAGAqC,EAAAhlE,UAAAsqE,2BAAA,SAAA3F,GACA,GAAAvhE,GAAAhH,KACAmuE,IAcA,OAbAnuE,MAAA+nE,QAAAvmE,QAAA,SAAA06B,EAAAQ,GACA,GAAAktC,GAAA1tC,EAAA0tC,eACA,IAAAA,EAAA,CAEA,GAAA7rC,GAAA6rC,EAAA1pD,QAAA6d,WACA6rC,GAAAxrC,mBACA,eAAAL,IACAwqC,GAAA,YAAAxqC,GACAowC,EAAA15D,KAAAm1D,EAAAvrC,WAEAr3B,EAAA2jE,SAAAjuC,EAAA,WAAiD,OAAU6I,QAAA,QAC3Dv+B,EAAAklE,YAAA,EAAAxvC,MAEAyxC,GAEAvF,EAAAhlE,UAAA2iE,yBAAA,SAAAgC,GACA,GAAA4F,GAAAnuE,KAAAkuE,2BAAA3F,EAEA,OADAvoE,MAAAsgC,mBACA3V,QAAA8N,IAAA01C,IAEAvF,EAAAhlE,UAAAk9B,WAAA,SAAApE,EAAAxc,EAAA2tD,GAMA,MALA7tE,MAAA4tE,iBAAAlxC,EAAAmxC,GACA7tE,KAAAw+B,WAAA9B,EAAAxc,GAGAi5B,MAAA,cACAzc,GAEAksC,EAAAhlE,UAAAq7B,yBAAA,SAAA/e,GACA,GAKA8gB,GALAh6B,EAAAhH,KACAwT,EAAA0M,EAAA1M,MACA2qC,EAAAn+C,KAAAogC,UAAAoqC,WACA4D,EAAAjwB,EAAAssB,kBAAAj3D,GACAtO,EAAAtJ,OAAAmtE,EAAA,MAAiCntE,OAAAmtE,EAAA,GAAAntE,OAAAmtE,EAAA,GAAAv1D,IAAA0M,EAAAhb,WAEjC23B,IACA,WAAAqsC,GAAA,WAAA5sC,GAGA,GAFAO,EAAApoB,KAAA6nB,GAEA,IAAAO,EAAA54B,OAAA,CACA,GAAAy9D,IACA33C,KAAA,SAAAjL,GACA9X,EAAAo5B,UAAAiuC,uBAAAvvD,EAAAsvD,EAAAlpE,GACA8B,EAAAs5B,mBAEAzD,EAAAr7B,QAAA,SAAAw7B,GAEAA,EAAAjT,MACAiT,EAAAjT,KAAAjL,MAGAqQ,MAAA,SAAAA,GACA0N,EAAAr7B,QAAA,SAAAw7B,GACAA,EAAA7N,OACA6N,EAAA7N,aAMA1iB,EAAAzF,EAAAmkE,sBAAAiD,EAAAlpE,EACA87B,GAAAplC,OAAAs8C,EAAA,SAAAlxC,EAAA2xC,KAAAlsC,GAAA2wB,UAAAskC,GAEA,kBACA7kC,IAAAxxB,OAAA,SAAA2xB,GAA6D,MAAAA,KAAAV,IAE7D,IAAAO,EAAA54B,QAAA+8B,GACAA,EAAA7D,kBAKAyrC,EAAAhlE,UAAAs9B,UAAA,SAAAxE,GACA18B,KAAA2tE,iBAAAjxC,GACA18B,KAAAi9B,YAAAP,IAEAksC,EAAAhlE,UAAAq5B,YAAA,SAAAP,GACA18B,KAAA2sE,SAAAjwC,GAAAooC,cAEAtjE,QAAA,SAAA8J,GAA4C,MAAAA,GAAA6xB,gBAC5Cn9B,KAAA+nE,QAAA1iC,OAAA3I,IAEAksC,EAAAhlE,UAAAg6B,sBAAA,SAAAgsC,EAAApB,OACA,KAAAA,IAAoCA,GAAA,EACpC,IAAAtsC,GAAA0tC,EAAA1pD,QAAAhb,EAAAg3B,EAAAh3B,UAAAsO,EAAA0oB,EAAA1oB,MACA+pB,EAAAqsC,EAAA1rC,gBACAqH,EAAAvlC,KAAA2sE,SAAA/C,EAAAltC,SAAA6I,OAEA,IAAAA,EACA,MAAA3pC,QAAAmtE,EAAA,IAAoCz0C,KAAAiR,EAAAzmB,OAAA+e,SAAA,GAGpC,KAEA,GAAAvJ,GAAAt0B,KAAAogC,UAAAoqC,WAAA8D,MACA96D,QACAtO,YACA65B,eAAAxB,IAAAjJ,SAAA7xB,GACA+lE,cAEA,OAAA5sE,QAAAmtE,EAAA,IAAwCz0C,OAAAuJ,SAAA,IAExC,MAAAsf,GACA,MAAAvhD,QAAAmtE,EAAA,IAAwCz0C,QAASuJ,SAAA,MAIjD+qC,EAAAhlE,UAAAs8B,2BAAA,SAAAquC,GACA,GAAA3E,EACA,qBAAA2E,GAAA,CACA,GAAAC,GAAAxuE,KAAA2sE,SAAA4B,GAAA3E,eACA,KAAA4E,EACA,SAAApyE,OAAA,+CAAAmyE,EAEA3E,GAAA4E,MAGA5E,GAAA2E,CAEA,IAAAryC,GAAA0tC,EAAA1pD,QAAAhb,EAAAg3B,EAAAh3B,UAAAsO,EAAA0oB,EAAA1oB,KAEA,QACAurB,eAFA/+B,KAAA49B,sBAAAgsC,GAAA,GAAAt1C,KAGApvB,YACAyuB,SAAAngB,IAGAo1D,EAAAhlE,UAAA08B,iBAAA,WACA,GAAAt5B,GAAAhH,IACAA,MAAA4nE,cACA5nE,KAAA+nE,QAAAvmE,QAAA,SAAA+1B,EAAAgM,GACAhM,EAAAmyC,aAAAnyC,EAAAkyC,WAEAlyC,EAAAkyC,UAGAp+D,OAAA,SAAAC,GAAsC,QAAAA,IACtC9J,QAAA,SAAAqsE,GACAA,EAAA7mE,EAAA02B,WAAAp3B,IAAAi9B,GAAAhM,EAAAgO,cAOAqjC,EAAAhlE,UAAA8oE,aAAA,SAAAxwC,GACA,GAOAsxC,GACAiB,EARAznE,EAAAhH,KACA8rE,EAAA5vC,EAAA4vC,UAAApvC,EAAAR,EAAAQ,QAAA/I,EAAAuI,EAAAvI,SAAAzT,EAAAgc,EAAAhc,QAAAurD,EAAAvvC,EAAAuvC,oBACAvmE,EAAAgb,EAAAhb,UAAAoU,EAAA4G,EAAA5G,QAAA8iB,EAAAlc,EAAAyd,kBAAA,KAAAvB,EAAA,OAAAA,EAAA2B,EAAA7d,EAAA6d,YACAtxB,EAAAzM,KAAAmrE,sBAAAx3C,EAAAzuB,EAAAu2B,KAAmFniB,GAGnFo1D,YAAA1uE,KAAAomE,qBAGA,WAAAz7C,SAAA,SAAAzoB,EAAA81B,GACAhxB,EAAA0mE,qBAAA5B,EAAA5pE,EAAA81B,EACA,IAAApkB,GAAAhY,OAAAs8C,EAAA,SAAAlxC,EAAAgjE,aAAAv9D,GAAA2wB,WACArT,KAAA,SAAAjL,GAEA,GAAA6qD,GAAA3iE,EAAA2lE,SAAAjwC,GAAAitC,aACA,IAAAmC,IAAAnC,GAAA,IACA,gBAAA5rC,EACA,IACA/2B,EAAAo5B,UAAAuuC,gBAAA7vD,EAAA6U,EAAAzuB,EAAAumE,EAAA,WAAA9tC,GAAA,QAAAA,GAEA,MAAAwf,GAEA,WADAnlB,GAAAmlB,OAKAn2C,GAAA2jE,SAAAjuC,EAAA,WAAiE,OACjE6I,SAA0CzmB,SAAAwV,KAAA4kB,UAAA,KAG1ClyC,GAAA02B,WAAAixC,gBAAAjyC,EAAA5d,EAAA2sD,GACAzkE,EAAAklE,YAAA,EAAAxvC,EAAA+uC,GACAzkE,EAAAs5B,mBAEA,GAAAxhB,EAAAkQ,QAAA,SAAA2O,EAIA,WAHA3F,GAAA,GAAAixC,GAAA,GACAltC,cAAAjd,EAAAkQ,SAOA,IAHA,QAAA2O,IACA8wC,EAAA3vD,EAAAkQ,QAEAy8C,GAAA,aAAA1tC,EAGAyvC,EAAA1uD,EAAAwV,SAGA,KAEAk5C,EAAAxmE,EAAAo5B,UAAAoqC,WAAA8D,MACAppE,YACAsO,MAAAmgB,EACA60C,YAAA,IAMA,MAAArrB,MAGAhuB,MAAA,SAAAA,GACAnoB,EAAA6lE,wBAAAf,GACA9kE,EAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEAz5D,OAAA,SAAAC,GAA8E,MAAAA,KAAAsI,OAG9EokB,EAAA7I,IAEA+pB,SAAA,WACAlyC,EAAA6lE,wBAAAf,GACA9kE,EAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEAz5D,OAAA,SAAAC,GAA8E,MAAAA,KAAAsI,OAG9E1R,GACAoyB,KAAAk5C,EACAx+C,OAAAy/C,EACAjxC,SAAA,EACAtV,cAAAohD,EAAA,EAAAtrC,MACAC,OAAA,MAIAj3B,GAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEA5wD,QAAAN,UAOAg1D,EAAAhlE,UAAA4nE,mBAAA,SAAAV,GACA,GAAA9jE,GAAAhH,KACA4uE,EAAA5uE,KAAA+pE,eAAAe,EAIA,QAAAroE,KAAAmsE,EAEA,MAAAjkD,SAAA8N,IAAAm2C,EACAvsE,IAAA,SAAAkhC,GAAgC,MAAAv8B,GAAA2lE,SAAAppC,GAAAqmC,kBAChCv+D,OAAA,SAAAC,GAAkC,QAAAA,IAClCjJ,IAAA,SAAAiJ,GAA+B,MAAAA,GAAA+yB,cAE/BuqC,EAAAhlE,UAAAmoE,kBAAA,WACA,GAAAD,GAAA9rE,KAAA6pE,SAEA,OADA7pE,MAAA6pE,YACAiC,GAEAlD,EAAAhlE,UAAA+oE,SAAA,SAAAjwC,GACA,MAAA18B,MAAA+nE,QAAAzhE,IAAAo2B,IAAAjB,KAAuD+tC,IAEvDZ,EAAAhlE,UAAA+mE,SAAA,SAAAjuC,EAAAquC,GACA,GAAAlsD,GAAA7e,KAAA2sE,SAAAjwC,GACAmyC,EAAApzC,KAAiC5c,EAAAksD,EAAAlsD,GACjC7e,MAAA+nE,QAAAlhE,IAAA61B,EAAAmyC,IAEAjG,EAAAhlE,UAAAsoE,WAAA,SAAAxC,EAAAhtC,EAAA+uC,GACA/uC,GACA18B,KAAA2qE,SAAAjuC,EAAA,WAAgD,OAAUgtC,iBAC1D+B,GACAzrE,KAAA2qE,SAAAc,EAAA,WAA4D,OAAU/B,kBAGtEd,EAAAhlE,UAAAunE,sBAAA,SAAAx3C,EAAAzuB,EAAA4pE,GACA,GAAA3wB,GAAAn+C,KAAAogC,UAAAoqC,UACA,QACAh3D,MAAA2qC,EAAA4wB,iBACA5wB,EAAA4wB,iBAAAp7C,GACAA,EACAzuB,YACA6uB,cAAAn4B,OAAAmtE,EAAA,GAAAp1C,QAAAlxB,GACA6W,QAAAmiB,KAAgCqzC,GAAiB3wB,QAEjDuC,YAAA,SAAA99C,GACA,GAAAu7C,EAAAz5C,OAEA,MAAAy5C,GAAAz5C,OAAAi4C,iBAAA/5C,EAGA,UAAAxG,OAAA,kIAKAwsE,M5H45jBMoG,KACA,SAAUvzE,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuzE,I6HxzlBnG,IAAA/2B,GAAAv8C,EAAA,MAAAw/B,EAAAn7B,WAAAm7B,WAAA,WACA,GAAAC,GAAAx/B,OAAAy/B,iBACUC,uBAAgBx6B,QAAA,SAAAjE,EAAAgxB,GAAsChxB,EAAAy+B,UAAAzN,IAChE,SAAAhxB,EAAAgxB,GAAyB,OAAA0N,KAAA1N,KAAAlsB,eAAA45B,KAAA1+B,EAAA0+B,GAAA1N,EAAA0N,IACzB,iBAAA1+B,EAAAgxB,GAEA,QAAA2N,KAAuBx7B,KAAA2D,YAAA9G,EADvBu+B,EAAAv+B,EAAAgxB,GAEAhxB,EAAA+G,UAAA,OAAAiqB,EAAAjyB,OAAA0F,OAAAusB,IAAA2N,EAAA53B,UAAAiqB,EAAAjqB,UAAA,GAAA43B,QAOAyzC,EAAA,SAAAhzC,GAEA,QAAAgzC,KACA,GAAAjoE,GAAA,OAAAi1B,KAAAxc,MAAAzf,KAAAgE,YAAAhE,IAGA,OAFAgH,GAAAkoE,2BAAA,GAAAtoE,KACAI,EAAAmoE,YAAA,GAAAvoE,KACAI,EA2DA,MAhEAm0B,GAAA8zC,EAAAhzC,GAOAgzC,EAAArrE,UAAAg1C,QAAA,SAAAnsC,EAAA+0D,GACA,GAAAx6D,GAAAhH,IAEA,IAAAyM,EAAAmtC,aAAA80B,WACA,MAAAlN,GAAA/0D,EAEA,IAAAtI,GAAAsI,EAAA2iE,QACArM,EAAA,SAAA5+D,GAGA,MAFA6C,GAAAkoE,2BAAA7pC,OAAAlhC,GACA6C,EAAAmoE,YAAA7oE,IAAAnC,GAGA,KAAAnE,KAAAkvE,2BAAA5oE,IAAAnC,GAAA,CAGA,GACAkrE,GADAC,EAAA9N,EAAA/0D,GAEA8iE,EAAA,GAAAr3B,GAAA,oBAAA5b,GAGA,GAAAzd,GAAA7X,EAAAmoE,YAAA7oE,IAAAnC,EA0BA,OAzBA0a,KACAA,GAA4BkL,QAAAoF,SAAA+pB,cAC5BlyC,EAAAmoE,YAAAtoE,IAAA1C,GACA4lB,KAAAlL,EAAAkL,KAAA7V,QAAAooB,EAAAvS,KAAAqvB,KAAA9c,KACAnN,MAAAtQ,EAAAsQ,MAAAjb,QAAAooB,EAAAnN,MAAAiqB,KAAA9c,KACA4c,SAAAr6B,EAAAq6B,SAAAhlC,QAAAooB,EAAA4c,SAAAE,KAAA9c,OAEA+yC,IACAA,EAAAC,EAAAlyC,WACArT,KAAA,SAAAjL,GACA,GAAAD,GAAAkkD,EAAA5+D,EACA6C,GAAAmoE,YAAA9pC,OAAAlhC,GACA0a,IACAA,EAAAkL,KAAAvoB,QAAA,SAAAuoB,GAAmE,MAAAA,GAAAjL,KACnED,EAAAq6B,SAAA13C,QAAA,SAAA03C,GAA2E,MAAAA,SAG3E/pB,MAAA,SAAAA,GACA,GAAAtQ,GAAAkkD,EAAA5+D,EACA6C,GAAAmoE,YAAA9pC,OAAAlhC,GACA0a,GACAA,EAAAsQ,MAAA3tB,QAAA,SAAA49B,GAAmE,MAAAA,GAAAjQ,SAInE,WACAkgD,GACAA,EAAAlyC,cACAn2B,EAAAkoE,2BAAA7pC,OAAAlhC,KAGAnE,MAAAkvE,2BAAAroE,IAAA1C,EAAAorE,GAGA,MAAAvvE,MAAAkvE,2BAAA5oE,IAAAnC,IAEA8qE,GACC/2B,EAAA,a7Hg0lBKs3B,KACA,SAAU/zE,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+zE,IAC9E,IAAIC,GAA4C/zE,EAAoB,MAChE0+C,EAAsD1+C,EAAoB,M8Ht5lBnG2+C,EAAA3+C,EAAA,MAMA8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAKA+zC,EAAA,WACA,QAAAA,GAAAvzC,GACA,GAAAS,GAAAT,EAAAS,aAAAspC,EAAA/pC,EAAA+pC,OAEAjmE,MAAA2vE,mBAGA3vE,KAAA4vE,qBAGA5vE,KAAA6vE,mBAEA7vE,KAAA8vE,iBACA9vE,KAAAimE,SAAA,EACAjmE,KAAA28B,eACA38B,KAAAimE,YAAA,EA8GA,MA5GAwJ,GAAA7rE,UAAAmsE,cAAA,SAAArzC,GACA,GAAAlpB,GAAAxT,KAAA28B,aAAAe,WAAAp3B,IAAAo2B,EACA,OAAAlpB,IACAA,EAAA0U,gBAAAoyB,EAAA,EAAAtc,OACAxqB,EAAA0U,gBAAAoyB,EAAA,EAAAnrB,OAEAsgD,EAAA7rE,UAAA46B,WAAA,SAAA9B,EAAAxc,EAAA25C,GACA,GAAA7yD,GAAAhH,IACA,WAAA2qB,SAAA,SAAAzoB,EAAA81B,GACAhxB,EAAA21B,aACA6B,WAAA9B,EAAAxc,EAAA25C,GACAt9D,KAAA,SAAAuiB,GACA5c,EAAA4c,KAEAq6B,MAAA,SAAAhqB,GACA6I,EAAA7I,QAIAsgD,EAAA7rE,UAAA48B,kBAAA,SAAAtgB,EAAAwc,EAAAmxC,GACA,IAAA3tD,EAAAwf,aACA,SAAAtjC,OAAA,iEAGA,OAAA4D,MAAAimE,QACAvpC,GACA18B,KAAA4vE,kBAAAlzC,GAAAxc,EACA2tD,GACA7tE,KAAA28B,aAAAixC,iBAAAlxC,EAAAmxC,GAEA7tE,KAAAgwE,mBAAAtzC,EAAAxc,GACAwc,IAEA+yC,EAAA7rE,UAAA28B,iBAAA,SAAA7D,SAGA18B,MAAA4vE,kBAAAlzC,IAGA+yC,EAAA7rE,UAAAqsE,uBAAA,SAAAC,GACA,GAAAlpE,GAAAhH,IAKAA,MAAA6vE,gBAAAK,GAAAlwE,KAAA6vE,gBAAAK,GAAA7kE,OAAA,SAAAqxB,GASA,IAAA11B,EAAA4oE,kBAAAjuE,eAAA+6B,IACA11B,EAAA4oE,kBAAAlzC,GAAAgD,eAAAwwC,EACA,QAIA,IAAAlpE,EAAA+oE,cAAArzC,GACA,QAEA,IAAAyzC,GAAAnpE,EAAA4oE,kBAAAlzC,GACA0zC,EAAA30C,KAA4C00C,EAI5C,OAHAC,GAAAryC,YAAA,eAEA/2B,EAAAw3B,WAAA9B,EAAA0zC,EAAAV,EAAA,EAAApD,MAAAnzB,MAAA,eACA,IAEA,IAAAn5C,KAAA6vE,gBAAAK,GAAAjsE,SACAosE,cAAArwE,KAAA8vE,cAAAI,UACAlwE,MAAA6vE,gBAAAK,KAMAT,EAAA7rE,UAAAosE,mBAAA,SAAAtzC,EAAAyzC,GACA,GAAAnpE,GAAAhH,KACAkwE,EAAAC,EAAAzwC,YACA,KAAAwwC,EACA,SAAA9zE,OAAA,+DAAAsgC,EAAA,KAIA18B,MAAA6vE,gBAAAluE,eAAAuuE,EAAA5rE,aACAtE,KAAA6vE,gBAAAK,GAAAjsE,OAAA,EACAjE,KAAA6vE,gBAAAK,GAAAz7D,KAAAioB,IAGA18B,KAAA6vE,gBAAAK,IAAAxzC,GAEA18B,KAAA8vE,cAAAI,GAAAI,YAAA,WACAtpE,EAAAipE,uBAAAC,IACaA,KAIbT,EAAA7rE,UAAA2sE,qBAAA,SAAAJ,GACA,IAAAA,EAAAzwC,aACA,SAAAtjC,OAAA,gEAEA,WAAAi+C,GAAA,GACAle,UAAAn8B,KACAkgB,QAAAiwD,KAGAV,M9H+5lBMe,KACA,SAAU/0E,EAAQC,EAAqBC,GAE7C,Y+HhjmBAA,GAAAkB,EAAAnB,EAAA,qBAAA+0E,IAAA,IAAAA,GAAA,WACA,QAAAA,KACAzwE,KAAAy7C,SAmCA,MAjCAg1B,GAAA7sE,UAAAokE,SAAA,WACA,MAAAhoE,MAAAy7C,OAEAg1B,EAAA7sE,UAAA0C,IAAA,SAAAikE,GACA,MAAAvqE,MAAAy7C,MAAA8uB,IAEAkG,EAAA7sE,UAAAonE,aAAA,SAAAT,EAAAG,EAAAxlE,GACAlF,KAAAy7C,MAAA8uB,IACAG,iBACAxlE,gBACAs4B,SAAA,EACArO,MAAA,OAGAshD,EAAA7sE,UAAAynE,kBAAA,SAAAd,EAAAp7C,GACA,GAAAzb,GAAA1T,KAAAy7C,MAAA8uB,EACA72D,KAGAA,EAAA8pB,SAAA,EACA9pB,EAAAyb,UAEAshD,EAAA7sE,UAAAwnE,mBAAA,SAAAb,GACA,GAAA72D,GAAA1T,KAAAy7C,MAAA8uB,EACA72D,KAGAA,EAAA8pB,SAAA,EACA9pB,EAAAyb,MAAA,OAEAshD,EAAA7sE,UAAAqqE,MAAA,WACAjuE,KAAAy7C,UAEAg1B,M/HyjmBMC,KACA,SAAUj1E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOi1E,IAC9E,IAAIv2B,GAAyDz+C,EAAoB,MAC7EqhD,EAAiDrhD,EAAoB,MgIpmmB9F2+C,EAAA3+C,EAAA,MAAA8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAKAi1C,EAAA,WACA,QAAAA,KACA3wE,KAAAy7C,SA+HA,MA7HAk1B,GAAA/sE,UAAAokE,SAAA,WACA,MAAAhoE,MAAAy7C,OAEAk1B,EAAA/sE,UAAA0C,IAAA,SAAAo2B,GACA,MAAA18B,MAAAy7C,MAAA/e,IAEAi0C,EAAA/sE,UAAAuoE,UAAA,SAAA34D,GACA,GAAAo9D,GAAA5wE,KAAAy7C,MAAAjoC,EAAAkpB,QACA,IAAAk0C,GACAA,EAAAj9C,WAAAngB,EAAAmgB,UACA/3B,OAAAw+C,EAAA,GAAAw2B,EAAAj9C,YAAA/3B,OAAAw+C,EAAA,GAAA5mC,EAAAmgB,UAIA,SAAAv3B,OAAA,gEAEA,IAAAy0E,IAAA,EACA7D,EAAA,IACAx5D,GAAA44D,wBACAwE,GACAA,EAAA1oD,gBAAAoyB,EAAA,EAAA9c,UAGA5hC,OAAAohD,EAAA,GAAA4zB,EAAA1rE,UAAAsO,EAAAtO,aACA2rE,GAAA,EACA7D,EAAA4D,EAAA1rE,WAIA,IAAAgjB,EAEAA,GADA2oD,EACAv2B,EAAA,EAAAxa,aAEAtsB,EAAA64D,OACA/xB,EAAA,EAAAgyB,KAEA94D,EAAA+4D,UACAjyB,EAAA,EAAAjc,QAIAic,EAAA,EAAA9c,OAEA,IAAAzB,KACA60C,MAAA70C,gBACAA,EAAA60C,EAAA70C,eAKA/7B,KAAAy7C,MAAAjoC,EAAAkpB,UACA/I,SAAAngB,EAAAmgB,SACAzuB,UAAAsO,EAAAtO,UACA8nE,oBACAhxC,aAAA,KACAD,gBACA7T,gBACAwjD,SAAAl4D,EAAAk4D,UASA,iBAAAl4D,GAAAi4D,qBACAzrE,KAAAy7C,MAAAjoC,EAAAi4D,uBACAzrE,KAAAy7C,MAAAjoC,EAAAi4D,qBAAAvjD,cACAoyB,EAAA,EAAA7b,YAGAkyC,EAAA/sE,UAAA+qE,gBAAA,SAAAjyC,EAAA5d,EAAA2sD,GACAzrE,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA,KACAh8B,KAAAy7C,MAAA/e,GAAAX,cACAjd,EAAAkQ,QAAAlQ,EAAAkQ,OAAA/qB,OAAA6a,EAAAkQ,UACAhvB,KAAAy7C,MAAA/e,GAAAswC,kBAAA,KACAhtE,KAAAy7C,MAAA/e,GAAAxU,cAAAoyB,EAAA,EAAAtc,MAIA,iBAAAytC,IACAzrE,KAAAy7C,MAAAgwB,KACAzrE,KAAAy7C,MAAAgwB,GAAAvjD,cAAAoyB,EAAA,EAAAtc,SAGA2yC,EAAA/sE,UAAAgpE,eAAA,SAAAlwC,EAAAvN,EAAAs8C,GACAzrE,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA7M,EACAnvB,KAAAy7C,MAAA/e,GAAAxU,cAAAoyB,EAAA,EAAAnrB,MAIA,iBAAAs8C,IACAzrE,KAAAwsE,sBAAAf,GAAA,KAGAkF,EAAA/sE,UAAA4oE,sBAAA,SAAA9vC,EAAAwc,GACAl5C,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA,KACAh8B,KAAAy7C,MAAA/e,GAAAswC,kBAAA,KACAhtE,KAAAy7C,MAAA/e,GAAAxU,cAAAgxB,EACAoB,EAAA,EAAAtc,MACAsc,EAAA,EAAA9c,UAEAmzC,EAAA/sE,UAAAs9B,UAAA,SAAAxE,SACA18B,MAAAy7C,MAAA/e,IAEAi0C,EAAA/sE,UAAAqqE,MAAA,SAAA6C,GACA,GAAA9pE,GAAAhH,IAEAA,MAAAy7C,MAAA7/C,OAAA2F,KAAAvB,KAAAy7C,OACApwC,OAAA,SAAAqxB,GACA,MAAAo0C,GAAA5kE,QAAAwwB,IAAA,IAEAhqB,OAAA,SAAAwqD,EAAA/4D,GAGA,MADA+4D,GAAA/4D,GAAAs3B,KAAkCz0B,EAAAy0C,MAAAt3C,IAAqB+jB,cAAAoyB,EAAA,EAAA9c,UACvD0/B,QAGAyT,MhI6mmBMI,KACA,SAAUt1E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOs1E,IAC9E,IAAIl2C,GAAiDn/B,EAAoB,MiI7vmB9Fq1E,EAAA,WACA,QAAAA,GAAAC,GACAjxE,KAAAm+C,MAAA8yB,EA4IA,MA1IAD,GAAAptE,UAAA4mE,SAAA,WACA,MAAAxqE,MAAAm+C,OAEA6yB,EAAAptE,UAAA+qE,gBAAA,SAAA7vD,EAAA6U,EAAAzuB,EAAAumE,EAAAyF,OACA,KAAAA,IAAsCA,GAAA,EACtC,IAAAC,IAAAv1E,OAAAk/B,EAAA,GAAAhc,EACAoyD,IAAAt1E,OAAAk/B,EAAA,GAAAhc,MAAAwV,OACA68C,GAAA,IAEA1F,GAAA0F,GACAnxE,KAAAm+C,MAAAizB,OACAtyD,SAAAwV,KACA8Q,OAAA,aACA5xB,MAAAmgB,EACAzuB,eAIA8rE,EAAAptE,UAAAyqE,uBAAA,SAAAvvD,EAAA6U,EAAAzuB,GAGAtJ,OAAAk/B,EAAA,GAAAhc,IACA9e,KAAAm+C,MAAAizB,OACAtyD,SAAAwV,KACA8Q,OAAA,oBACA5xB,MAAAmgB,EACAzuB,eAIA8rE,EAAAptE,UAAAqnE,iBAAA,SAAAv3D,GACA,GAAA1M,GAAAhH,IACA,IAAA0T,EAAAu2D,mBAAA,CACA,GAAAoH,EAEAA,GADA,mBAAA39D,GAAAu2D,mBACAv2D,EAAAu2D,mBAAAv2D,EAAAxO,WAGAwO,EAAAu2D,kBAEA,IAAAqH,GAAA,WACAtqE,EAAAokE,oBACAb,WAAA72D,EAAA62D,WACAzrD,QAA6BwV,KAAA+8C,GAC7B19C,SAAAjgB,EAAAigB,SACAzuB,UAAAwO,EAAAxO,UACAilE,cAAAz2D,EAAAy2D,cACAG,OAAA52D,EAAA42D,SAGAtqE,MAAAm+C,MAAAozB,4BAAA,SAAAxnC,GACA,GAAAynC,GAAAxqE,EAAAm3C,KACAn3C,GAAAm3C,MAAApU,CACA,KACAunC,IAEA,QACAtqE,EAAAm3C,MAAAqzB,IAEa99D,EAAA62D,cAGbyG,EAAAptE,UAAAwnE,mBAAA,SAAA13D,GACA,GAAA1M,GAAAhH,IAEA,KAAApE,OAAAk/B,EAAA,GAAApnB,EAAAoL,QAAA,CACA,GAAA2yD,KACAA,GAAAh9D,MACAqK,OAAApL,EAAAoL,OAAAwV,KACA8Q,OAAA,gBACA5xB,MAAAE,EAAAigB,SACAzuB,UAAAwO,EAAAxO,YAEAwO,EAAAy2D,eACAvuE,OAAA2F,KAAAmS,EAAAy2D,eACA9+D,OAAA,SAAAk4B,GAA2C,MAAA7vB,GAAAy2D,cAAA5mC,KAC3C/hC,QAAA,SAAAk7B,GACA,GAAAR,GAAAxoB,EAAAy2D,cAAAztC,GAAAlpB,EAAA0oB,EAAA1oB,MAAAu3D,EAAA7uC,EAAA6uC,QAEA3uC,EAAAp1B,EAAAm3C,MAAAytB,MACAp4D,QAAAmgB,SACAzuB,UAAAsO,EAAAtO,UACAw2C,mBAAA,EACA8sB,YAAA,IACqBkJ,EAAAt1C,EAAAtd,MACrB,IADqBsd,EAAA8c,SACrB,CAIA,GAAAy4B,GAAA/1E,OAAAk/B,EAAA,cACA,MAAAiwC,GAAA2G,GACAE,eAAAl+D,EAAAoL,OACAgsD,UAAAlvE,OAAAk/B,EAAA,GAAAtnB,EAAAmgB,eAAAlxB,GACAovE,eAAAr+D,EAAAtO,aAIAysE,IACAF,EAAAh9D,MACAqK,OAAA6yD,EACAvsC,OAAA,aACA5xB,QAAAmgB,SACAzuB,UAAAsO,EAAAtO,eAKAlF,KAAAm+C,MAAA2zB,mBAAA,SAAA/nC,GACA0nC,EAAAjwE,QAAA,SAAA4vE,GAAwD,MAAArnC,GAAAqnC,YAKxD,IAAAW,GAAAr+D,EAAA42D,MACAyH,IACA/xE,KAAAm+C,MAAA2zB,mBAAA,SAAA/nC,GACAnuC,OAAAk/B,EAAA,cAAuD,MAAAi3C,GAAAhoC,EAAAr2B,EAAAoL,cAKvDkyD,EAAAptE,UAAA0nE,qBAAA,SAAApvC,GACA,GAAAquC,GAAAruC,EAAAquC,UAAAruC,GAAA+tC,oBAGAjqE,KAAAm+C,MAAA6zB,iBAAAzH,IAEAyG,EAAAptE,UAAAy8B,sBAAA,SAAA1M,EAAAzuB,EAAAi7B,GACAngC,KAAAm+C,MAAAizB,OACAtyD,OAAAqhB,EACAiF,OAAA,aACAlgC,YACAsO,MAAAmgB,KAGAq9C,EAAAptE,UAAAqqE,MAAA,WACA,MAAAjuE,MAAAm+C,MAAA8vB,SAEA+C,MjIswmBMiB,KACA,SAAUx2E,EAAQ6sB,GkIt5mBxBA,EAAA0+C,QAAA,SlI45mBMkL,KACA,SAAUz2E,EAAQ6sB,EAAS3sB,GAEjC,YmIp5mBA,SAAAw2E,GAAA5O,GACA,OAAAhoC,KAAAgoC,GAAAj7C,EAAA3mB,eAAA45B,KAAAjT,EAAAiT,GAAAgoC,EAAAhoC,IAXA,GAAAJ,GAAAn7B,WAAAm7B,WAAA,WACA,GAAAC,GAAAx/B,OAAAy/B,iBACUC,uBAAgBx6B,QAAA,SAAAjE,EAAAgxB,GAAsChxB,EAAAy+B,UAAAzN,IAChE,SAAAhxB,EAAAgxB,GAAyB,OAAA0N,KAAA1N,KAAAlsB,eAAA45B,KAAA1+B,EAAA0+B,GAAA1N,EAAA0N,IACzB,iBAAA1+B,EAAAgxB,GAEA,QAAA2N,KAAuBx7B,KAAA2D,YAAA9G,EADvBu+B,EAAAv+B,EAAAgxB,GAEAhxB,EAAA+G,UAAA,OAAAiqB,EAAAjyB,OAAA0F,OAAAusB,IAAA2N,EAAA53B,UAAAiqB,EAAAjqB,UAAA,GAAA43B,OAMA5/B,QAAAC,eAAAysB,EAAA,cAA8CxsB,OAAA,IAC9Cq2E,EAAAx2E,EAAA,OACAw2E,EAAAx2E,EAAA,MACA,IAAAy2E,GAAAz2E,EAAA,KACA2sB,GAAAm0C,SAAA2V,EAAA3V,SACA0V,EAAAx2E,EAAA,MACA,IAAA02E,GAAA12E,EAAA,KACA2sB,GAAAo0C,cAAA2V,EAAA3V,aACA,IAAA4V,GAAA32E,EAAA,KACA2sB,GAAA6e,IAAAmrC,EAAAjrC,OACA,IAAAkrC,GAAA52E,EAAA,MACA62E,EAAA,SAAAv2C,GAEA,QAAAu2C,GAAA9tE,OACA,KAAAA,IAAgCA,KAOhC,OALAA,GAAAy5C,QACAz5C,EAAAy5C,MAAA,GAAAk0B,GAAA3V,eACAh4D,EAAAi0C,OACAj0C,EAAAi0C,KAAA,GAAAy5B,GAAA3V,UAA2DngE,IAAA,cAC3D2/B,EAAA73B,KAAApE,KAAA0E,IAAA1E,KAGA,MAXAm7B,GAAAq3C,EAAAv2C,GAWAu2C,GACCD,EAAAlrC,QACD/e,GAAA+e,QAAAmrC,GnIq6mBMC,KACA,SAAUh3E,EAAQC,EAAqBC,GAE7C,YACqB,IAAIu8C,GAA4Cv8C,EAAoB,MAChEqhD,EAAiDrhD,EAAoB,MACrEgqE,EAAmDhqE,EAAoB,MACvEiqE,EAA4CjqE,EAAoB,MoIn9mBzFkqE,EAAAlqE,EAAA,MAAA8/B,GAAA9/B,EAAAM,EAAA4pE,GAAA7lE,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,KAOAoqC,GAAA,EACAC,EAAA,GAAA7tB,GAAA,oBAAAzrC,EAAA+0D,GAEA,MADA/0D,GAAA+G,MAAA5X,OAAAohD,EAAA,GAAAvwC,EAAA+G,OACAguD,EAAA/0D,KAQA6vD,EAAA,WAiBA,QAAAA,GAAAp8C,GACA,GAAAlZ,GAAAhH,IACAA,MAAA8zC,kBACA9zC,KAAAgmE,sBACA,IAAArtB,GAAAz4B,EAAAy4B,KAAAwF,EAAAj+B,EAAAi+B,MAAAjiB,EAAAhc,EAAA+lD,cAAA,KAAA/pC,KAAAE,EAAAlc,EAAAgmD,yBAAA,KAAA9pC,EAAA,EAAAA,EAAA+pC,EAAAjmD,EAAAimD,kBAAAzpB,EAAAx8B,EAAAkmD,yBAAA,KAAA1pB,KAAA5I,EAAA5zB,EAAA4zB,cACA,KAAA6E,IAAAwF,EACA,SAAA/hD,OAAA,wXAGA4D,MAAA24C,KAAAotB,EAAA7xD,OAAAykC,GACA34C,KAAAm+C,QACAn+C,KAAAy7C,MAAA,GAAAmqB,GAAA,EAAAznB,GACAn+C,KAAAqmE,sBAAAJ,GAAAC,EAAA,EACAlmE,KAAAomE,qBACApmE,KAAAimE,UACAjmE,KAAA8zC,qBACAoyB,GACAhpC,WAAA,WAAoC,MAAAl2B,GAAAq/D,uBAAA,GAAgDH,GAEpFlmE,KAAAk2C,WAAAl2C,KAAAk2C,WAAAkD,KAAAp5C,MACAA,KAAAwT,MAAAxT,KAAAwT,MAAA4lC,KAAAp5C,MACAA,KAAA+1C,OAAA/1C,KAAA+1C,OAAAqD,KAAAp5C,MACAA,KAAAsmE,WAAAtmE,KAAAsmE,WAAAltB,KAAAp5C,MACAA,KAAAumE,yBAAAvmE,KAAAumE,yBAAAntB,KAAAp5C,KAGA,IAAAwmE,IAAA5qE,OAAAohD,EAAA,MACA,oBAAAypB,UACAA,OAAAC,mBACA,oBAAAP,GACAK,EACAL,GAAA,oBAAAM,WACAA,OAAAC,kBAAA1mE,MAKA8lE,GAAAlqE,OAAAohD,EAAA,OACA8oB,GAAA,EACA,oBAAAW,SACAA,OAAA9yC,UACA8yC,OAAAE,MAAAF,OAAA7oB,MAEA,oBAAA6oB,QAAAG,iCAEAH,OAAAI,WACAJ,OAAAI,UAAAC,UAAA56D,QAAA,cAEAozB,QAAAynC,MAAA,2KAOA/mE,KAAAgnE,QAAAnB,EAAA,QAsQA,MAlPAvJ,GAAA14D,UAAAsyC,WAAA,SAAAh2B,GAWA,MAVAlgB,MAAAinE,mBACAjnE,KAAA8zC,eAAAoC,aACAh2B,EAAAub,KAAiCz7B,KAAA8zC,eAAAoC,WAAAh2B,KAGjClgB,KAAAqmE,uBACA,iBAAAnmD,EAAA6d,aACA,sBAAA7d,EAAA6d,cACA7d,EAAAub,KAAiCvb,GAAY6d,YAAA,iBAE7C/9B,KAAA28B,aAAAuZ,WAAAh2B,IAWAo8C,EAAA14D,UAAA4P,MAAA,SAAA0M,GAKA,GAJAlgB,KAAAinE,mBACAjnE,KAAA8zC,eAAAtgC,QACA0M,EAAAub,KAAiCz7B,KAAA8zC,eAAAtgC,MAAA0M,IAEjC,sBAAAA,EAAA6d,YACA,SAAA3hC,OAAA,iEAOA,OAHA4D,MAAAqmE,uBAAA,iBAAAnmD,EAAA6d,cACA7d,EAAAub,KAAiCvb,GAAY6d,YAAA,iBAE7C/9B,KAAA28B,aAAAnpB,MAAA0M,IASAo8C,EAAA14D,UAAAmyC,OAAA,SAAA71B,GAKA,MAJAlgB,MAAAinE,mBACAjnE,KAAA8zC,eAAAiC,SACA71B,EAAAub,KAAiCz7B,KAAA8zC,eAAAiC,OAAA71B,IAEjClgB,KAAA28B,aAAAoZ,OAAA71B,IAMAo8C,EAAA14D,UAAAw5B,UAAA,SAAAld,GAEA,MADAlgB,MAAAinE,mBACAjnE,KAAA28B,aAAAsC,yBAAA/e,IAQAo8C,EAAA14D,UAAAsjE,UAAA,SAAAhnD,GACA,MAAAlgB,MAAAmnE,YAAAD,UAAAhnD,IAaAo8C,EAAA14D,UAAAwjE,aAAA,SAAAlnD,GACA,MAAAlgB,MAAAmnE,YAAAC,aAAAlnD,IAOAo8C,EAAA14D,UAAAyjE,WAAA,SAAAnnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAE,WAAAnnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAaAw9C,EAAA14D,UAAA0jE,cAAA,SAAApnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAG,cAAApnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAYAw9C,EAAA14D,UAAA2jE,UAAA,SAAArnD,GACA,GAAApB,GAAA9e,KAAAmnE,YAAAI,UAAArnD,EAEA,OADAlgB,MAAA28B,aAAA2D,mBACAxhB,GAEAw9C,EAAA14D,UAAA4jE,wBAAA,SAAAx8D,GACAhL,KAAAynE,eAAAz8D,GAEAsxD,EAAA14D,UAAA8jE,aAAA,SAAAC,GACA,MAAA/rE,QAAAs8C,EAAA,SAAAl4C,KAAA24C,KAAAgvB,IAKArL,EAAA14D,UAAAqjE,iBAAA,WACA,GAAAjgE,GAAAhH,IACAA,MAAA28B,eAEA38B,KAAA28B,aAAA,GAAAgpC,GAAA,GACAhtB,KAAA34C,KAAA24C,KACA8C,MAAAz7C,KAAAy7C,MACA2qB,mBAAApmE,KAAAomE,mBACAH,QAAAjmE,KAAAimE,QACA2B,YAAA,WACA5gE,EAAAygE,gBACAzgE,EAAAygE,gBACAI,UACAC,OACAC,QAAA/gE,EAAA21B,aAAAe,WAAAsqC,WACAC,UAAAjhE,EAAA21B,aAAAurC,cAAAF,YAEAG,0BAAAnhE,EAAAm3C,MAAAiqB,SAAA,UAsBA9L,EAAA14D,UAAA0iE,WAAA,WACA,GAAAt/D,GAAAhH,IACA,OAAA2qB,SAAAzoB,UACA3F,KAAA,WACA,MAAAyK,GAAA21B,aACA31B,EAAA21B,aAAA0rC,aACA19C,QAAAzoB,QAAA,QAEA3F,KAAA,WAA+B,MAAAouB,SAAA8N,IAAAzxB,EAAAg/D,oBAAA3jE,IAAA,SAAAmd,GAAiE,MAAAA,UAChGjjB,KAAA,WACA,MAAAyK,GAAA21B,cAAA31B,EAAA21B,aAAA4pC,yBACAv/D,EAAA21B,aAAA4pC,2BACA57C,QAAAzoB,QAAA,SAOAo6D,EAAA14D,UAAA0kE,aAAA,SAAAt9D,GACA,GAAAhE,GAAAhH,IAEA,OADAA,MAAAgmE,oBAAAvxD,KAAAzJ,GACA,WACAhE,EAAAg/D,oBAAAh/D,EAAAg/D,oBAAA36D,OAAA,SAAA0+B,GAAuF,MAAAA,KAAA/+B,MAevFsxD,EAAA14D,UAAA2iE,yBAAA,SAAAgC,GACA,MAAAvoE,MAAA28B,aACA38B,KAAA28B,aAAA4pC,yBAAAgC,GACA59C,QAAAzoB,QAAA,OAKAo6D,EAAA14D,UAAAwkE,QAAA,SAAAI,GACA,MAAAxoE,MAAAmnE,YAAAiB,QAAAI,IASAlM,EAAA14D,UAAA+4D,QAAA,SAAA8L,GACA,MAAAzoE,MAAAmnE,YAAAxK,QAAA8L,IAOAnM,EAAA14D,UAAAujE,UAAA,WAKA,MAJAnnE,MAAA0oE,QACA1oE,KAAAinE,mBACAjnE,KAAA0oE,MAAA1oE,KAAAm+C,OAEAn+C,KAAA0oE,OAEApM,IAEA5gE,GAAA,KpI29mBMg3E,KACA,SAAUj3E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOktE,IAC9E,IAAI1wB,GAA4Cv8C,EAAoB,MAChEktE,EAAyDltE,EAAoB,MAC7EmtE,EAAkDntE,EAAoB,MACtEotE,EAAiDptE,EAAoB,MACrEqtE,EAAqDrtE,EAAoB,MACzEstE,EAAoDttE,EAAoB,MACxEutE,EAAiDvtE,EAAoB,MACrEwtE,EAAgDxtE,EAAoB,MACpEytE,EAA8CztE,EAAoB,MAClE0tE,EAAiD1tE,EAAoB,MACrE2tE,EAAgD3tE,EAAoB,MACpE4tE,EAAwC5tE,EAAoB,MqIn1nBrF8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAeA8tC,GACAC,aACAC,aAAA,EACA/1C,SAAA,KACA4R,QAAA,KACAokC,cAAA,KACAC,gBAAA,KACA9E,kBAEA8D,EAAA,WACA,QAAAA,GAAA1sC,GACA,GAAAyc,GAAAzc,EAAAyc,KAAAvc,EAAAF,EAAAkqC,yBAAA,KAAAhqC,KAAAqf,EAAAvf,EAAAuf,MAAAiB,EAAAxgB,EAAA0rC,kBAAA,KAAAlrB,EAAA,aAA+MA,EAAAE,EAAA1gB,EAAA+pC,cAAA,KAAArpB,IAC/M58C,MAAAkoE,cAAA,GAAAiB,GAAA,EACAnpE,KAAA09B,WAAA,GAAA0rC,GAAA,EAEAppE,KAAA6pE,UAAA,EAGA7pE,KAAA+nE,QAAA,GAAAnhE,KAIA5G,KAAA8pE,mBAAA,GAAAljE,KAIA5G,KAAA+pE,kBACA/pE,KAAA24C,OACA34C,KAAAgqE,aAAA9xB,EAAA,WAAAmpB,MAAA,GAAAyH,GAAA,EAAAnwB,IACA34C,KAAAomE,qBACApmE,KAAAogC,UAAAqb,EACAz7C,KAAA4nE,cACA5nE,KAAAm8B,UAAA,GAAA6sC,GAAA,GAA6CrsC,aAAA38B,KAAAimE,YAm2B7C,MAj2BA2C,GAAAhlE,UAAAmyC,OAAA,SAAA7Z,GACA,GAAAl1B,GAAAhH,KACA0T,EAAAwoB,EAAAxoB,SAAAxO,EAAAg3B,EAAAh3B,UAAA+kE,EAAA/tC,EAAA+tC,mBAAAC,EAAAhuC,EAAAiuC,cAAA/tC,EAAAF,EAAAkuC,qBAAA,KAAAhuC,OAAAiuC,EAAAnuC,EAAAouC,OAAA5tB,EAAAxgB,EAAAyB,kBAAA,KAAA+e,EAAA,OAAAA,EAAA3e,EAAA7B,EAAA6B,YAAA6e,EAAA1gB,EAAA5iB,cAAA,KAAAsjC,KAA8XA,CAC9X,KAAAlpC,EACA,SAAAtX,OAAA,8FAEA,IAAA2hC,GAAA,aAAAA,EACA,SAAA3hC,OAAA,0EAEA,IAAAmuE,GAAAvqE,KAAA48B,kBACAuhB,EAAAn+C,KAAAogC,UAAAoqC,UACA92D,GAAAyqC,EAAAssB,kBAAA/2D,GACAxO,EAAAtJ,OAAAmtE,EAAA,MAAkCntE,OAAAmtE,EAAA,GAAAntE,OAAAmtE,EAAA,GAAAr1D,IAAAxO,EAClC,IAAAwlE,GAAA9uE,OAAAitE,EAAA,GAAAn1D,EACA1T,MAAA2qE,SAAAJ,EAAA,WAA+C,OAAU52C,SAAAjgB,IAEzD,IAAAk3D,GAAA,WACA,GAAAC,KAWA,OAVAX,IACAtuE,OAAA2F,KAAA2oE,GAAA1oE,QAAA,SAAAspE,GACA,OAAA9jE,EAAA+iE,eAAAe,QAAAtpE,QAAA,SAAAk7B,GACAmuC,EAAAnuC,IACAquC,QAAAb,EAAAY,GACAt3D,MAAAxM,EAAA02B,WAAAp3B,IAAAo2B,QAKAmuC,EAYA,OAVA7qE,MAAAkoE,cAAA8C,aAAAT,EAAAG,EAAAxlE,GACAlF,KAAAogC,UAAA6qC,kBACAV,aACA52C,SAAAjgB,EACAxO,gBACAilE,cAAAS,IACAN,OAAAD,EACAJ,uBAEAjqE,KAAAsgC,mBACA,GAAA3V,SAAA,SAAAzoB,EAAA81B,GACA,GAAAkzC,GACA/7C,EACA1iB,EAAAzF,EAAAmkE,sBAAAz3D,EAAAxO,EAAAu2B,KAAwFniB,GAAY2wD,uBACpGruE,QAAAs8C,EAAA,SAAAlxC,EAAA2xC,KAAAlsC,GAAA2wB,WACArT,KAAA,SAAAjL,GACA,GAAAljB,OAAAmtE,EAAA,GAAAjqD,IAAA,SAAA6e,EAIA,YAHAxO,EAAA,GAAA85C,GAAA,GACAltC,cAAAjd,EAAAkQ,SAIAhoB,GAAAkhE,cAAAkD,mBAAAb,GACA,aAAAxsC,GACA/2B,EAAAo5B,UAAAgrC,oBACAb,aACAzrD,SACA6U,SAAAjgB,EACAxO,gBACAilE,cAAAS,IACAN,OAAAD,IAGAa,EAAApsD,GAEAqQ,MAAA,SAAAiQ,GACAp4B,EAAAkhE,cAAAmD,kBAAAd,EAAAnrC,GACAp4B,EAAAo5B,UAAAkrC,sBACAf,aACAN,uBAEAjjE,EAAAs5B,mBACAt5B,EAAA2jE,SAAAJ,EAAA,WAA4D,OAAU52C,aAAAlxB,MACtEu1B,EAAA,GAAAixC,GAAA,GACAjtC,aAAAoD,MAGA8Z,SAAA,WASA,GARA/pB,GACAnoB,EAAAkhE,cAAAmD,kBAAAd,EAAAp7C,GAEAnoB,EAAAo5B,UAAAkrC,sBACAf,aACAN,uBAEAjjE,EAAAs5B,mBACAnR,EAEA,WADA6I,GAAA7I,EAKA,oBAAAi7C,KACAA,IAAAc,IAEAd,GACAA,EAAA5oE,QAAA,SAAA+pE,GACA,oBAAAA,GAEA,WADAvkE,GAAAwkE,mBAAAD,EAGAvkE,GAAAwM,OACAA,MAAA+3D,EAAA/3D,MACAtO,UAAAqmE,EAAArmE,UACA64B,YAAA,mBAIA/2B,EAAA2jE,SAAAJ,EAAA,WAA4D,OAAU52C,aAAAlxB,MACtE,WAAAk7B,GACAutC,GACAtvE,OAAAmtE,EAAA,GAAAmC,UACAA,GAAAl8C,OAEA9sB,EAAAgpE,SAKAtC,EAAAhlE,UAAA46B,WAAA,SAAA9B,EAAAxc,EAAA25C,EAIA4R,GACA,GAIAP,GAJAlkE,EAAAhH,KACAk8B,EAAAhc,EAAAhb,gBAAA,KAAAg3B,KAAkEA,EAAAE,EAAAlc,EAAAwrD,eAAA,KAAAtvC,EAAA,KAAAA,EAAAsgB,EAAAx8B,EAAA6d,kBAAA,KAAA2e,EAAA,cAAAA,EAClEyB,EAAAn+C,KAAAogC,UAAAoqC,WACAh3D,EAAA2qC,EAAAssB,kBAAAvqD,EAAA1M,OAEAm4D,EAAA,iBAAA5tC,GAAA,aAAAA,CAIA,IAAA87B,IAAA0P,EAAA,EAAAlrC,SACA,iBAAAN,GACA,aAAAA,EAAA,CACA,GAAA6e,GAAA58C,KAAAogC,UAAAoqC,WAAAoB,MACAp4D,QACAtO,YACAw2C,mBAAA,EACA8sB,YAAA,IACatvB,EAAA0D,EAAA1D,SAAAp6B,EAAA89B,EAAA99B,MAEb6sD,IAAAzyB,GAAA,sBAAAnb,EACAmtC,EAAApsD,EAEA,GAAA+sD,GAAAF,GAAA,eAAA5tC,GAAA,YAAAA,CAEAniC,QAAAmtE,EAAA,YAAAv1D,KACAq4D,GAAA,EACA,IAAAC,GAAA9rE,KAAA+rE,oBAEAC,EAAAhsE,KAAAisE,iBAAAvvC,EAAAlpB,EAAA0M,EA4BA,IA1BAlgB,KAAA2qE,SAAAjuC,EAAA,WAA4C,OAC5C/I,SAAAngB,EACAm2D,cAAAmC,EACApC,aAAA,EACAsC,YAEAhsE,KAAAksE,YAAA,EAAAT,GACAzrE,KAAA09B,WAAAyuC,WACAzvC,UACA/I,SAAAngB,EACA44D,uBAAAP,EACA3mE,YACAmnE,OAAAxS,IAAA0P,EAAA,EAAA+C,KACAC,UAAA1S,IAAA0P,EAAA,EAAAlrC,QACAqtC,WACAD,wBAEAzrE,KAAAsgC,qBAGAurC,GAAA,sBAAA9tC,KAEA/9B,KAAA09B,WAAA8uC,sBAAA9vC,GAAAmvC,GACA7rE,KAAAksE,YAAA,EAAAxvC,EAAA+uC,GACAzrE,KAAAsgC,oBAEAurC,EAAA,CACA,GAAAY,GAAAzsE,KAAA0sE,cACAZ,YACApvC,UACA/I,SAAAngB,EACA0M,UACAurD,wBACatyB,MAAA,SAAAhqB,GAGb,GAAAvzB,OAAAqtE,EAAA,GAAA95C,GACA,KAAAA,EAGA,IAAAw6C,GAAA3iE,EAAA2lE,SAAAjwC,GAAAitC,aAOA,MANAmC,KAAAnC,GAAA,KACA3iE,EAAA02B,WAAAkvC,eAAAlwC,EAAAvN,EAAAs8C,GACAzkE,EAAAklE,YAAA,EAAAxvC,EAAA+uC,GACAzkE,EAAAs5B,oBAEAt5B,EAAA6lE,wBAAAf,GACA,GAAA7C,GAAA,GAA2CjtC,aAAA7M,KAK3C,0BAAA4O,EACA,MAAA0uC,EAKAA,GAAAtzB,MAAA,cAKA,MAAAxuB,SAAAzoB,SAAgCoyB,KAAA42C,KAIhCtC,EAAAhlE,UAAAm9B,yBAAA,SAAArE,EAAAxc,EAAAoc,GACA,GAAAt1B,GAAAhH,KACA8sE,GAAA,CACA,iBAAArvC,EAAA8H,GAKA,GAHAv+B,EAAAklE,YAAA,EAAAxvC,GAGAe,EAAA,CAEA,GAAAmsC,GAAA5iE,EAAA2lE,SAAAjwC,GAAAktC,gBACA7rC,EAAA6rC,EACAA,EAAA1pD,QAAA6d,YACA7d,EAAA6d,WAEA,gBAAAA,EAAA,CAEA,GAAAJ,GAAAisC,EACAA,EAAA1pD,QAAAyd,YACAzd,EAAAyd,YACAJ,EAAAqsC,EACAA,EAAA1rC,gBACA,KACAZ,EAAAssC,IAAAzrC,eAAA,KACA4uC,GAAAxnC,GAAA,MAAA9H,EAAAuvC,mBACA,eAAAjvC,GACA,sBAAAA,EASAkvC,EAAAlrE,QAAAw7B,GACAE,EAAAvV,gBAAAqV,EAAArV,eACAglD,EAAAvvC,IACAL,KAAAvB,iBACA0B,EAAA1B,eACA,SAAA4B,CACA,KAAA/hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,gBACA+kD,GAAA/sD,EAAAitD,6BACAJ,EAAA,CAGA,KAAApvC,GAAA,SAAAA,IACAF,EAAA1B,eACA0B,EAAA1B,cAAA93B,OAAA,GACAw5B,EAAAzB,aAAA,CACA,GAAAoxC,GAAA,GAAAnE,GAAA,GACAltC,cAAA0B,EAAA1B,cACAC,aAAAyB,EAAAzB,cAGA,IADA8wC,GAAA,EACAxwC,EAAAnN,MACA,IACAmN,EAAAnN,MAAAi+C,GAEA,MAAAjwB,GAEAjgB,WAAA,WACA,KAAAigB,IAC6B,OAK7BjgB,YAAA,WACA,KAAAkwC,IACyB,GACzBxxE,OAAAmtE,EAAA,MAEAzpC,QAAA/H,KAAA,sFAEA37B,OAAAitE,EAAA,GAAAprC,EAAA9J,UAGA,QAEA,IACA,GAAAW,OAAA,GACA+4C,MAAA,EACA,IAAA9nC,EAEAv+B,EAAA2jE,SAAAjuC,EAAA,WAA6D,OAAU6I,QAAA,QACvEjR,EAAAiR,EAAAzmB,OACAuuD,GAAA9nC,EAAA2T,WAAA,MAGA,IAAA3b,KAAAjJ,OAAA44C,EACA54C,EAAAiJ,EAAAjJ,KACA+4C,GAAA,MAEA,CACA,GAAAC,GAAAtmE,EAAA2lE,SAAAjwC,GAAA/I,SACA45C,EAAAvmE,EAAAo5B,UAAAoqC,WAAAoB,MACAp4D,MAAA85D,EACApoE,UAAAu4B,EAAAuvC,mBACAvvC,EAAAv4B,UACAsjE,YAAA,GAEAl0C,GAAAi5C,EAAAzuD,OACAuuD,GAAAE,EAAAr0B,SAGA,GAAAs0B,OAAA,EA0BA,IArBAA,EADAH,GAAA,eAAAtvC,GAEAzJ,KAAAiJ,KAAAjJ,KACAkJ,QAAA5hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,eACAA,cAAAuV,EAAAvV,cACA+V,OAAA,IAKA3J,OACAkJ,QAAA5hC,OAAA0tE,EAAA,GAAA7rC,EAAAvV,eACAA,cAAAuV,EAAAvV,cACA+V,OAAA,GAIA,QAAAN,GACAF,EAAA1B,eACA0B,EAAA1B,cAAA93B,OAAA,IACAupE,EAAAx+C,OAAAyO,EAAA1B,eAEAO,EAAAvS,KAAA,CASA,KARAwT,GACAiwC,GACAjwC,EAAArV,gBAAAslD,EAAAtlD,eACAqV,EAAAU,QAAAuvC,EAAAvvC,OAIAV,EAAAjJ,OAAAk5C,EAAAl5C,OACAw4C,EACA,IACAxwC,EAAAvS,KAAAnuB,OAAAmtE,EAAA,GAAAyE,IAEA,MAAArwB,GAEAjgB,WAAA,WACA,KAAAigB,IACiC,IAIjC2vB,GAAA,EAEA,MAAA39C,GAIA,MAHA29C,IAAA,OACAxwC,EAAAnN,OACAmN,EAAAnN,MAAA,GAAA85C,GAAA,GAAwDjtC,aAAA7M,YAYxDy5C,EAAAhlE,UAAAsyC,WAAA,SAAAh2B,EAAAmc,GAEA,OADA,KAAAA,IAAyCA,GAAA,GACzC,YAAAnc,EAAA6d,YACA,SAAA3hC,OAAA,uEAGA,IAAA2gD,GAAAnhD,OAAAmtE,EAAA,GAAA7oD,EAAA1M,MAEA,IAAAupC,EAAApwC,qBACAowC,EAAApwC,oBAAA1I,OAAA,CACA,GAAAszC,GAAA37C,OAAAmtE,EAAA,GAAAhsB,EACA78B,GAAAhb,UAAAtJ,OAAAmtE,EAAA,MAAyCxxB,EAAAr3B,EAAAhb,WAEzC,oBAAAgb,GAAAitD,8BACAjtD,EAAAitD,6BAAA,EAEA,IAAAM,GAAAhyC,KAA4Cvb,EAC5C,WAAAmpD,GAAA,GACAltC,UAAAn8B,KAAAm8B,UACAjc,QAAAutD,EACApxC,qBAGAusC,EAAAhlE,UAAA4P,MAAA,SAAA0M,GACA,GAAAlZ,GAAAhH,IACA,KAAAkgB,EAAA1M,MACA,SAAApX,OAAA,wFAGA,iBAAA8jB,EAAA1M,MAAAhN,KACA,SAAApK,OAAA,iDAEA,IAAA8jB,EAAAw7B,kBACA,SAAAt/C,OAAA,yDAEA,IAAA8jB,EAAAwf,aACA,SAAAtjC,OAAA,oDAEA,IAAA0vE,GAAA9rE,KAAA6pE,SACA,WAAAl/C,SAAA,SAAAzoB,EAAA81B,GAEA,MADAhxB,GAAA0mE,qBAAA5B,EAAA5pE,EAAA81B,GACAhxB,EAAAkvC,WAAAh2B,GAAA,GACApB,SACAviB,KAAA,SAAAuiB,GACA9X,EAAA6lE,wBAAAf,GACA5pE,EAAA4c,KAEAq6B,MAAA,SAAAhqB,GACAnoB,EAAA6lE,wBAAAf,GACA9zC,EAAA7I,QAIAy5C,EAAAhlE,UAAAg5B,gBAAA,WACA,GAAAF,GAAA18B,KAAA6pE,UAAAvlE,UAEA,OADAtE,MAAA6pE,YACAntC,GAEAksC,EAAAhlE,UAAA+pE,iBAAA,SAAAjxC,GACA18B,KAAA09B,WAAAwD,UAAAxE,GACA18B,KAAAksE,YAAA,EAAAxvC,GACA18B,KAAAsgC,oBAEAsoC,EAAAhlE,UAAAgqE,iBAAA,SAAAlxC,EAAAmxC,GACA7tE,KAAA2qE,SAAAjuC,EAAA,SAAAR,GACA,GAAAE,GAAAF,EAAAutC,SACA,QACAA,eAFA,KAAArtC,QAEAloB,QAAA25D,IACA3B,YAAA,MAIAtD,EAAAhlE,UAAAqoE,iBAAA,SAAAvvC,EAAA/I,EAAAzT,GACA,GAAAlZ,GAAAhH,KACAgsE,EAAAhsE,KAAA2sE,SAAAjwC,GAAAsvC,MACAA,IACAA,GACA,IAAAjtC,GAAA,WACA,GAAAA,GAAA,KACA6qC,EAAA5iE,EAAA2lE,SAAAjwC,GAAAktC,eACA,IAAAA,EAAA,CACA,GAAArsC,GAAAqsC,EAAA1rC,eACAX,KACAwB,EAAAxB,EAAAjJ,MAGA,MAAAyK,GAEA,OAAA/+B,MAAAogC,UAAAoqC,WAAAsD,OACAt6D,MAAAmgB,EACAzuB,UAAAgb,EAAAhb,UACAsjE,YAAA,EACAzpC,iBACAnV,SAAA,SAAA2b,GACAv+B,EAAA2jE,SAAAjuC,EAAA,WAAqD,OAAUgtC,aAAA,EAAAnkC,iBAK/DqjC,EAAAhlE,UAAA8pE,qBAAA,SAAA5B,EAAA5pE,EAAA81B,GACAh4B,KAAA8pE,mBAAAjjE,IAAAilE,EAAAxnE,YACApC,UACA81B,YAIA4wC,EAAAhlE,UAAAipE,wBAAA,SAAAf,GACA9rE,KAAA8pE,mBAAAzkC,OAAAymC,EAAAxnE,aAGAskE,EAAAhlE,UAAAi9B,mBAAA,SAAAnE,EAAAktC,GACA5pE,KAAA2qE,SAAAjuC,EAAA,WAA4C,OAAUktC,oBAEtD,IAAA3yB,GAAAr7C,OAAAmtE,EAAA,GAAAa,EAAA1pD,QAAA1M,MACA,IAAAyjC,EAAAj2C,MAAAi2C,EAAAj2C,KAAAlF,MAAA,CACA,GAAAgvE,GAAA7zB,EAAAj2C,KAAAlF,KAEAkE,MAAA+pE,eAAAe,GAAA9qE,KAAA+pE,eAAAe,OACA9qE,KAAA+pE,eAAAe,GAAAr2D,KAAAm1D,EAAAltC,WAGAksC,EAAAhlE,UAAAq9B,sBAAA,SAAAvE,GACA,GAAAR,GAAAl8B,KAAA2sE,SAAAjwC,GAAAktC,EAAA1tC,EAAA0tC,gBAAAoC,EAAA9vC,EAAA8vC,MAGA,IAFAA,GACAA,IACApC,EAAA,CAEA,GAAAz0C,GAAAv5B,OAAAmtE,EAAA,GAAAa,EAAA1pD,QAAA1M,OACAs3D,EAAA31C,EAAAn0B,KAAAm0B,EAAAn0B,KAAAlF,MAAA,IACAkE,MAAA2qE,SAAAjuC,EAAA,WAA4C,OAAUktC,gBAAA,QACtDkB,IACA9qE,KAAA+pE,eAAAe,GAAA9qE,KAAA+pE,eAAAe,GAAAz/D,OAAA,SAAA0iE,GACA,QAAAnE,EAAAltC,UAAAqxC,QAIAnF,EAAAhlE,UAAAykE,WAAA,WAOAroE,KAAA8pE,mBAAAtoE,QAAA,SAAA06B,IAEAlE,EADAkE,EAAAlE,QACA,GAAA57B,OAAA,wEAEA,IAAA4xE,KAUA,OATAhuE,MAAA+nE,QAAAvmE,QAAA,SAAA06B,EAAAQ,GACAR,EAAA0tC,iBAEAoE,EAAAv5D,KAAAioB,KAEA18B,KAAA09B,WAAAuwC,MAAAD,GACAhuE,KAAAkoE,cAAA+F,QAEAjuE,KAAAogC,UAAA6tC,SAGArF,EAAAhlE,UAAA0iE,WAAA,WACA,GAAAt/D,GAAAhH,IAOA,OAAAA,MAAAqoE,aAAA9rE,KAAA,WACA,MAAAyK,GAAAu/D,8BAGAqC,EAAAhlE,UAAAsqE,2BAAA,SAAA3F,GACA,GAAAvhE,GAAAhH,KACAmuE,IAcA,OAbAnuE,MAAA+nE,QAAAvmE,QAAA,SAAA06B,EAAAQ,GACA,GAAAktC,GAAA1tC,EAAA0tC,eACA,IAAAA,EAAA,CAEA,GAAA7rC,GAAA6rC,EAAA1pD,QAAA6d,WACA6rC,GAAAxrC,mBACA,eAAAL,IACAwqC,GAAA,YAAAxqC,GACAowC,EAAA15D,KAAAm1D,EAAAvrC,WAEAr3B,EAAA2jE,SAAAjuC,EAAA,WAAiD,OAAU6I,QAAA,QAC3Dv+B,EAAAklE,YAAA,EAAAxvC,MAEAyxC,GAEAvF,EAAAhlE,UAAA2iE,yBAAA,SAAAgC,GACA,GAAA4F,GAAAnuE,KAAAkuE,2BAAA3F,EAEA,OADAvoE,MAAAsgC,mBACA3V,QAAA8N,IAAA01C,IAEAvF,EAAAhlE,UAAAk9B,WAAA,SAAApE,EAAAxc,EAAA2tD,GAMA,MALA7tE,MAAA4tE,iBAAAlxC,EAAAmxC,GACA7tE,KAAAw+B,WAAA9B,EAAAxc,GAGAi5B,MAAA,cACAzc,GAEAksC,EAAAhlE,UAAAq7B,yBAAA,SAAA/e,GACA,GAKA8gB,GALAh6B,EAAAhH,KACAwT,EAAA0M,EAAA1M,MACA2qC,EAAAn+C,KAAAogC,UAAAoqC,WACA4D,EAAAjwB,EAAAssB,kBAAAj3D,GACAtO,EAAAtJ,OAAAmtE,EAAA,MAAiCntE,OAAAmtE,EAAA,GAAAntE,OAAAmtE,EAAA,GAAAv1D,IAAA0M,EAAAhb,WAEjC23B,IACA,WAAAqsC,GAAA,WAAA5sC,GAGA,GAFAO,EAAApoB,KAAA6nB,GAEA,IAAAO,EAAA54B,OAAA,CACA,GAAAy9D,IACA33C,KAAA,SAAAjL,GACA9X,EAAAo5B,UAAAiuC,uBAAAvvD,EAAAsvD,EAAAlpE,GACA8B,EAAAs5B,mBAEAzD,EAAAr7B,QAAA,SAAAw7B,GAEAA,EAAAjT,MACAiT,EAAAjT,KAAAjL,MAGAqQ,MAAA,SAAAA,GACA0N,EAAAr7B,QAAA,SAAAw7B,GACAA,EAAA7N,OACA6N,EAAA7N,aAMA1iB,EAAAzF,EAAAmkE,sBAAAiD,EAAAlpE,EACA87B,GAAAplC,OAAAs8C,EAAA,SAAAlxC,EAAA2xC,KAAAlsC,GAAA2wB,UAAAskC,GAEA,kBACA7kC,IAAAxxB,OAAA,SAAA2xB,GAA6D,MAAAA,KAAAV,IAE7D,IAAAO,EAAA54B,QAAA+8B,GACAA,EAAA7D,kBAKAyrC,EAAAhlE,UAAAs9B,UAAA,SAAAxE,GACA18B,KAAA2tE,iBAAAjxC,GACA18B,KAAAi9B,YAAAP,IAEAksC,EAAAhlE,UAAAq5B,YAAA,SAAAP,GACA18B,KAAA2sE,SAAAjwC,GAAAooC,cAEAtjE,QAAA,SAAA8J,GAA4C,MAAAA,GAAA6xB,gBAC5Cn9B,KAAA+nE,QAAA1iC,OAAA3I,IAEAksC,EAAAhlE,UAAAg6B,sBAAA,SAAAgsC,EAAApB,OACA,KAAAA,IAAoCA,GAAA,EACpC,IAAAtsC,GAAA0tC,EAAA1pD,QAAAhb,EAAAg3B,EAAAh3B,UAAAsO,EAAA0oB,EAAA1oB,MACA+pB,EAAAqsC,EAAA1rC,gBACAqH,EAAAvlC,KAAA2sE,SAAA/C,EAAAltC,SAAA6I,OAEA,IAAAA,EACA,MAAA3pC,QAAAmtE,EAAA,IAAoCz0C,KAAAiR,EAAAzmB,OAAA+e,SAAA,GAGpC,KAEA,GAAAvJ,GAAAt0B,KAAAogC,UAAAoqC,WAAA8D,MACA96D,QACAtO,YACA65B,eAAAxB,IAAAjJ,SAAA7xB,GACA+lE,cAEA,OAAA5sE,QAAAmtE,EAAA,IAAwCz0C,OAAAuJ,SAAA,IAExC,MAAAsf,GACA,MAAAvhD,QAAAmtE,EAAA,IAAwCz0C,QAASuJ,SAAA,MAIjD+qC,EAAAhlE,UAAAs8B,2BAAA,SAAAquC,GACA,GAAA3E,EACA,qBAAA2E,GAAA,CACA,GAAAC,GAAAxuE,KAAA2sE,SAAA4B,GAAA3E,eACA,KAAA4E,EACA,SAAApyE,OAAA,+CAAAmyE,EAEA3E,GAAA4E,MAGA5E,GAAA2E,CAEA,IAAAryC,GAAA0tC,EAAA1pD,QAAAhb,EAAAg3B,EAAAh3B,UAAAsO,EAAA0oB,EAAA1oB,KAEA,QACAurB,eAFA/+B,KAAA49B,sBAAAgsC,GAAA,GAAAt1C,KAGApvB,YACAyuB,SAAAngB,IAGAo1D,EAAAhlE,UAAA08B,iBAAA,WACA,GAAAt5B,GAAAhH,IACAA,MAAA4nE,cACA5nE,KAAA+nE,QAAAvmE,QAAA,SAAA+1B,EAAAgM,GACAhM,EAAAmyC,aAAAnyC,EAAAkyC,WAEAlyC,EAAAkyC,UAGAp+D,OAAA,SAAAC,GAAsC,QAAAA,IACtC9J,QAAA,SAAAqsE,GACAA,EAAA7mE,EAAA02B,WAAAp3B,IAAAi9B,GAAAhM,EAAAgO,cAOAqjC,EAAAhlE,UAAA8oE,aAAA,SAAAxwC,GACA,GAOAsxC,GACAiB,EARAznE,EAAAhH,KACA8rE,EAAA5vC,EAAA4vC,UAAApvC,EAAAR,EAAAQ,QAAA/I,EAAAuI,EAAAvI,SAAAzT,EAAAgc,EAAAhc,QAAAurD,EAAAvvC,EAAAuvC,oBACAvmE,EAAAgb,EAAAhb,UAAAoU,EAAA4G,EAAA5G,QAAA8iB,EAAAlc,EAAAyd,kBAAA,KAAAvB,EAAA,OAAAA,EAAA2B,EAAA7d,EAAA6d,YACAtxB,EAAAzM,KAAAmrE,sBAAAx3C,EAAAzuB,EAAAu2B,KAAmFniB,GAGnFo1D,YAAA1uE,KAAAomE,qBAGA,WAAAz7C,SAAA,SAAAzoB,EAAA81B,GACAhxB,EAAA0mE,qBAAA5B,EAAA5pE,EAAA81B,EACA,IAAApkB,GAAAhY,OAAAs8C,EAAA,SAAAlxC,EAAAgjE,aAAAv9D,GAAA2wB,WACArT,KAAA,SAAAjL,GAEA,GAAA6qD,GAAA3iE,EAAA2lE,SAAAjwC,GAAAitC,aACA,IAAAmC,IAAAnC,GAAA,IACA,gBAAA5rC,EACA,IACA/2B,EAAAo5B,UAAAuuC,gBAAA7vD,EAAA6U,EAAAzuB,EAAAumE,EAAA,WAAA9tC,GAAA,QAAAA,GAEA,MAAAwf,GAEA,WADAnlB,GAAAmlB,OAKAn2C,GAAA2jE,SAAAjuC,EAAA,WAAiE,OACjE6I,SAA0CzmB,SAAAwV,KAAA4kB,UAAA,KAG1ClyC,GAAA02B,WAAAixC,gBAAAjyC,EAAA5d,EAAA2sD,GACAzkE,EAAAklE,YAAA,EAAAxvC,EAAA+uC,GACAzkE,EAAAs5B,mBAEA,GAAAxhB,EAAAkQ,QAAA,SAAA2O,EAIA,WAHA3F,GAAA,GAAAixC,GAAA,GACAltC,cAAAjd,EAAAkQ,SAOA,IAHA,QAAA2O,IACA8wC,EAAA3vD,EAAAkQ,QAEAy8C,GAAA,aAAA1tC,EAGAyvC,EAAA1uD,EAAAwV,SAGA,KAEAk5C,EAAAxmE,EAAAo5B,UAAAoqC,WAAA8D,MACAppE,YACAsO,MAAAmgB,EACA60C,YAAA,IAMA,MAAArrB,MAGAhuB,MAAA,SAAAA,GACAnoB,EAAA6lE,wBAAAf,GACA9kE,EAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEAz5D,OAAA,SAAAC,GAA8E,MAAAA,KAAAsI,OAG9EokB,EAAA7I,IAEA+pB,SAAA,WACAlyC,EAAA6lE,wBAAAf,GACA9kE,EAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEAz5D,OAAA,SAAAC,GAA8E,MAAAA,KAAAsI,OAG9E1R,GACAoyB,KAAAk5C,EACAx+C,OAAAy/C,EACAjxC,SAAA,EACAtV,cAAAohD,EAAA,EAAAtrC,MACAC,OAAA,MAIAj3B,GAAA2jE,SAAAjuC,EAAA,SAAAR,GAEA,OACA4oC,cAFA5oC,EAAA4oC,cAEA5wD,QAAAN,UAOAg1D,EAAAhlE,UAAA4nE,mBAAA,SAAAV,GACA,GAAA9jE,GAAAhH,KACA4uE,EAAA5uE,KAAA+pE,eAAAe,EAIA,QAAAroE,KAAAmsE,EAEA,MAAAjkD,SAAA8N,IAAAm2C,EACAvsE,IAAA,SAAAkhC,GAAgC,MAAAv8B,GAAA2lE,SAAAppC,GAAAqmC,kBAChCv+D,OAAA,SAAAC,GAAkC,QAAAA,IAClCjJ,IAAA,SAAAiJ,GAA+B,MAAAA,GAAA+yB,cAE/BuqC,EAAAhlE,UAAAmoE,kBAAA,WACA,GAAAD,GAAA9rE,KAAA6pE,SAEA,OADA7pE,MAAA6pE,YACAiC,GAEAlD,EAAAhlE,UAAA+oE,SAAA,SAAAjwC,GACA,MAAA18B,MAAA+nE,QAAAzhE,IAAAo2B,IAAAjB,KAAuD+tC,IAEvDZ,EAAAhlE,UAAA+mE,SAAA,SAAAjuC,EAAAquC,GACA,GAAAlsD,GAAA7e,KAAA2sE,SAAAjwC,GACAmyC,EAAApzC,KAAiC5c,EAAAksD,EAAAlsD,GACjC7e,MAAA+nE,QAAAlhE,IAAA61B,EAAAmyC,IAEAjG,EAAAhlE,UAAAsoE,WAAA,SAAAxC,EAAAhtC,EAAA+uC,GACA/uC,GACA18B,KAAA2qE,SAAAjuC,EAAA,WAAgD,OAAUgtC,iBAC1D+B,GACAzrE,KAAA2qE,SAAAc,EAAA,WAA4D,OAAU/B,kBAGtEd,EAAAhlE,UAAAunE,sBAAA,SAAAx3C,EAAAzuB,EAAA4pE,GACA,GAAA3wB,GAAAn+C,KAAAogC,UAAAoqC,UACA,QACAh3D,MAAA2qC,EAAA4wB,iBACA5wB,EAAA4wB,iBAAAp7C,GACAA,EACAzuB,YACA6uB,cAAAn4B,OAAAmtE,EAAA,GAAAp1C,QAAAlxB,GACA6W,QAAAmiB,KAAgCqzC,GAAiB3wB,QAEjDuC,YAAA,SAAA99C,GACA,GAAAu7C,EAAAz5C,OAEA,MAAAy5C,GAAAz5C,OAAAi4C,iBAAA/5C,EAGA,UAAAxG,OAAA,kIAKAwsE,MrI21nBM+J,KACA,SAAUl3E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+zE,IAC9E,IAAIC,GAA4C/zE,EAAoB,MAChE0+C,EAAsD1+C,EAAoB,MsIzvpBnG2+C,EAAA3+C,EAAA,MAMA8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAKA+zC,EAAA,WACA,QAAAA,GAAAvzC,GACA,GAAAS,GAAAT,EAAAS,aAAAspC,EAAA/pC,EAAA+pC,OAEAjmE,MAAA2vE,mBAGA3vE,KAAA4vE,qBAGA5vE,KAAA6vE,mBAEA7vE,KAAA8vE,iBACA9vE,KAAAimE,SAAA,EACAjmE,KAAA28B,eACA38B,KAAAimE,YAAA,EA8GA,MA5GAwJ,GAAA7rE,UAAAmsE,cAAA,SAAArzC,GACA,GAAAlpB,GAAAxT,KAAA28B,aAAAe,WAAAp3B,IAAAo2B,EACA,OAAAlpB,IACAA,EAAA0U,gBAAAoyB,EAAA,EAAAtc,OACAxqB,EAAA0U,gBAAAoyB,EAAA,EAAAnrB,OAEAsgD,EAAA7rE,UAAA46B,WAAA,SAAA9B,EAAAxc,EAAA25C,GACA,GAAA7yD,GAAAhH,IACA,WAAA2qB,SAAA,SAAAzoB,EAAA81B,GACAhxB,EAAA21B,aACA6B,WAAA9B,EAAAxc,EAAA25C,GACAt9D,KAAA,SAAAuiB,GACA5c,EAAA4c,KAEAq6B,MAAA,SAAAhqB,GACA6I,EAAA7I,QAIAsgD,EAAA7rE,UAAA48B,kBAAA,SAAAtgB,EAAAwc,EAAAmxC,GACA,IAAA3tD,EAAAwf,aACA,SAAAtjC,OAAA,iEAGA,OAAA4D,MAAAimE,QACAvpC,GACA18B,KAAA4vE,kBAAAlzC,GAAAxc,EACA2tD,GACA7tE,KAAA28B,aAAAixC,iBAAAlxC,EAAAmxC,GAEA7tE,KAAAgwE,mBAAAtzC,EAAAxc,GACAwc,IAEA+yC,EAAA7rE,UAAA28B,iBAAA,SAAA7D,SAGA18B,MAAA4vE,kBAAAlzC,IAGA+yC,EAAA7rE,UAAAqsE,uBAAA,SAAAC,GACA,GAAAlpE,GAAAhH,IAKAA,MAAA6vE,gBAAAK,GAAAlwE,KAAA6vE,gBAAAK,GAAA7kE,OAAA,SAAAqxB,GASA,IAAA11B,EAAA4oE,kBAAAjuE,eAAA+6B,IACA11B,EAAA4oE,kBAAAlzC,GAAAgD,eAAAwwC,EACA,QAIA,IAAAlpE,EAAA+oE,cAAArzC,GACA,QAEA,IAAAyzC,GAAAnpE,EAAA4oE,kBAAAlzC,GACA0zC,EAAA30C,KAA4C00C,EAI5C,OAHAC,GAAAryC,YAAA,eAEA/2B,EAAAw3B,WAAA9B,EAAA0zC,EAAAV,EAAA,EAAApD,MAAAnzB,MAAA,eACA,IAEA,IAAAn5C,KAAA6vE,gBAAAK,GAAAjsE,SACAosE,cAAArwE,KAAA8vE,cAAAI,UACAlwE,MAAA6vE,gBAAAK,KAMAT,EAAA7rE,UAAAosE,mBAAA,SAAAtzC,EAAAyzC,GACA,GAAAnpE,GAAAhH,KACAkwE,EAAAC,EAAAzwC,YACA,KAAAwwC,EACA,SAAA9zE,OAAA,+DAAAsgC,EAAA,KAIA18B,MAAA6vE,gBAAAluE,eAAAuuE,EAAA5rE,aACAtE,KAAA6vE,gBAAAK,GAAAjsE,OAAA,EACAjE,KAAA6vE,gBAAAK,GAAAz7D,KAAAioB,IAGA18B,KAAA6vE,gBAAAK,IAAAxzC,GAEA18B,KAAA8vE,cAAAI,GAAAI,YAAA,WACAtpE,EAAAipE,uBAAAC,IACaA,KAIbT,EAAA7rE,UAAA2sE,qBAAA,SAAAJ,GACA,IAAAA,EAAAzwC,aACA,SAAAtjC,OAAA,gEAEA,WAAAi+C,GAAA,GACAle,UAAAn8B,KACAkgB,QAAAiwD,KAGAV,MtIkwpBMmD,KACA,SAAUn3E,EAAQC,EAAqBC,GAE7C,YuIn5pBAA,GAAAkB,EAAAnB,EAAA,qBAAA+0E,IAAA,IAAAA,GAAA,WACA,QAAAA,KACAzwE,KAAAy7C,SAmCA,MAjCAg1B,GAAA7sE,UAAAokE,SAAA,WACA,MAAAhoE,MAAAy7C,OAEAg1B,EAAA7sE,UAAA0C,IAAA,SAAAikE,GACA,MAAAvqE,MAAAy7C,MAAA8uB,IAEAkG,EAAA7sE,UAAAonE,aAAA,SAAAT,EAAAG,EAAAxlE,GACAlF,KAAAy7C,MAAA8uB,IACAG,iBACAxlE,gBACAs4B,SAAA,EACArO,MAAA,OAGAshD,EAAA7sE,UAAAynE,kBAAA,SAAAd,EAAAp7C,GACA,GAAAzb,GAAA1T,KAAAy7C,MAAA8uB,EACA72D,KAGAA,EAAA8pB,SAAA,EACA9pB,EAAAyb,UAEAshD,EAAA7sE,UAAAwnE,mBAAA,SAAAb,GACA,GAAA72D,GAAA1T,KAAAy7C,MAAA8uB,EACA72D,KAGAA,EAAA8pB,SAAA,EACA9pB,EAAAyb,MAAA,OAEAshD,EAAA7sE,UAAAqqE,MAAA,WACAjuE,KAAAy7C,UAEAg1B,MvI45pBMoC,KACA,SAAUp3E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOi1E,IAC9E,IAAIv2B,GAAyDz+C,EAAoB,MAC7EqhD,EAAiDrhD,EAAoB,MwIv8pB9F2+C,EAAA3+C,EAAA,MAAA8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAKAi1C,EAAA,WACA,QAAAA,KACA3wE,KAAAy7C,SA+HA,MA7HAk1B,GAAA/sE,UAAAokE,SAAA,WACA,MAAAhoE,MAAAy7C,OAEAk1B,EAAA/sE,UAAA0C,IAAA,SAAAo2B,GACA,MAAA18B,MAAAy7C,MAAA/e,IAEAi0C,EAAA/sE,UAAAuoE,UAAA,SAAA34D,GACA,GAAAo9D,GAAA5wE,KAAAy7C,MAAAjoC,EAAAkpB,QACA,IAAAk0C,GACAA,EAAAj9C,WAAAngB,EAAAmgB,UACA/3B,OAAAw+C,EAAA,GAAAw2B,EAAAj9C,YAAA/3B,OAAAw+C,EAAA,GAAA5mC,EAAAmgB,UAIA,SAAAv3B,OAAA,gEAEA,IAAAy0E,IAAA,EACA7D,EAAA,IACAx5D,GAAA44D,wBACAwE,GACAA,EAAA1oD,gBAAAoyB,EAAA,EAAA9c,UAGA5hC,OAAAohD,EAAA,GAAA4zB,EAAA1rE,UAAAsO,EAAAtO,aACA2rE,GAAA,EACA7D,EAAA4D,EAAA1rE,WAIA,IAAAgjB,EAEAA,GADA2oD,EACAv2B,EAAA,EAAAxa,aAEAtsB,EAAA64D,OACA/xB,EAAA,EAAAgyB,KAEA94D,EAAA+4D,UACAjyB,EAAA,EAAAjc,QAIAic,EAAA,EAAA9c,OAEA,IAAAzB,KACA60C,MAAA70C,gBACAA,EAAA60C,EAAA70C,eAKA/7B,KAAAy7C,MAAAjoC,EAAAkpB,UACA/I,SAAAngB,EAAAmgB,SACAzuB,UAAAsO,EAAAtO,UACA8nE,oBACAhxC,aAAA,KACAD,gBACA7T,gBACAwjD,SAAAl4D,EAAAk4D,UASA,iBAAAl4D,GAAAi4D,qBACAzrE,KAAAy7C,MAAAjoC,EAAAi4D,uBACAzrE,KAAAy7C,MAAAjoC,EAAAi4D,qBAAAvjD,cACAoyB,EAAA,EAAA7b,YAGAkyC,EAAA/sE,UAAA+qE,gBAAA,SAAAjyC,EAAA5d,EAAA2sD,GACAzrE,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA,KACAh8B,KAAAy7C,MAAA/e,GAAAX,cACAjd,EAAAkQ,QAAAlQ,EAAAkQ,OAAA/qB,OAAA6a,EAAAkQ,UACAhvB,KAAAy7C,MAAA/e,GAAAswC,kBAAA,KACAhtE,KAAAy7C,MAAA/e,GAAAxU,cAAAoyB,EAAA,EAAAtc,MAIA,iBAAAytC,IACAzrE,KAAAy7C,MAAAgwB,KACAzrE,KAAAy7C,MAAAgwB,GAAAvjD,cAAAoyB,EAAA,EAAAtc,SAGA2yC,EAAA/sE,UAAAgpE,eAAA,SAAAlwC,EAAAvN,EAAAs8C,GACAzrE,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA7M,EACAnvB,KAAAy7C,MAAA/e,GAAAxU,cAAAoyB,EAAA,EAAAnrB,MAIA,iBAAAs8C,IACAzrE,KAAAwsE,sBAAAf,GAAA,KAGAkF,EAAA/sE,UAAA4oE,sBAAA,SAAA9vC,EAAAwc,GACAl5C,KAAAy7C,MAAA/e,KAEA18B,KAAAy7C,MAAA/e,GAAAV,aAAA,KACAh8B,KAAAy7C,MAAA/e,GAAAswC,kBAAA,KACAhtE,KAAAy7C,MAAA/e,GAAAxU,cAAAgxB,EACAoB,EAAA,EAAAtc,MACAsc,EAAA,EAAA9c,UAEAmzC,EAAA/sE,UAAAs9B,UAAA,SAAAxE,SACA18B,MAAAy7C,MAAA/e,IAEAi0C,EAAA/sE,UAAAqqE,MAAA,SAAA6C,GACA,GAAA9pE,GAAAhH,IAEAA,MAAAy7C,MAAA7/C,OAAA2F,KAAAvB,KAAAy7C,OACApwC,OAAA,SAAAqxB,GACA,MAAAo0C,GAAA5kE,QAAAwwB,IAAA,IAEAhqB,OAAA,SAAAwqD,EAAA/4D,GAGA,MADA+4D,GAAA/4D,GAAAs3B,KAAkCz0B,EAAAy0C,MAAAt3C,IAAqB+jB,cAAAoyB,EAAA,EAAA9c,UACvD0/B,QAGAyT,MxIg9pBMmC,KACA,SAAUr3E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOs1E,IAC9E,IAAIl2C,GAAiDn/B,EAAoB,MyIhmqB9Fq1E,EAAA,WACA,QAAAA,GAAAC,GACAjxE,KAAAm+C,MAAA8yB,EA4IA,MA1IAD,GAAAptE,UAAA4mE,SAAA,WACA,MAAAxqE,MAAAm+C,OAEA6yB,EAAAptE,UAAA+qE,gBAAA,SAAA7vD,EAAA6U,EAAAzuB,EAAAumE,EAAAyF,OACA,KAAAA,IAAsCA,GAAA,EACtC,IAAAC,IAAAv1E,OAAAk/B,EAAA,GAAAhc,EACAoyD,IAAAt1E,OAAAk/B,EAAA,GAAAhc,MAAAwV,OACA68C,GAAA,IAEA1F,GAAA0F,GACAnxE,KAAAm+C,MAAAizB,OACAtyD,SAAAwV,KACA8Q,OAAA,aACA5xB,MAAAmgB,EACAzuB,eAIA8rE,EAAAptE,UAAAyqE,uBAAA,SAAAvvD,EAAA6U,EAAAzuB,GAGAtJ,OAAAk/B,EAAA,GAAAhc,IACA9e,KAAAm+C,MAAAizB,OACAtyD,SAAAwV,KACA8Q,OAAA,oBACA5xB,MAAAmgB,EACAzuB,eAIA8rE,EAAAptE,UAAAqnE,iBAAA,SAAAv3D,GACA,GAAA1M,GAAAhH,IACA,IAAA0T,EAAAu2D,mBAAA,CACA,GAAAoH,EAEAA,GADA,mBAAA39D,GAAAu2D,mBACAv2D,EAAAu2D,mBAAAv2D,EAAAxO,WAGAwO,EAAAu2D,kBAEA,IAAAqH,GAAA,WACAtqE,EAAAokE,oBACAb,WAAA72D,EAAA62D,WACAzrD,QAA6BwV,KAAA+8C,GAC7B19C,SAAAjgB,EAAAigB,SACAzuB,UAAAwO,EAAAxO,UACAilE,cAAAz2D,EAAAy2D,cACAG,OAAA52D,EAAA42D,SAGAtqE,MAAAm+C,MAAAozB,4BAAA,SAAAxnC,GACA,GAAAynC,GAAAxqE,EAAAm3C,KACAn3C,GAAAm3C,MAAApU,CACA,KACAunC,IAEA,QACAtqE,EAAAm3C,MAAAqzB,IAEa99D,EAAA62D,cAGbyG,EAAAptE,UAAAwnE,mBAAA,SAAA13D,GACA,GAAA1M,GAAAhH,IAEA,KAAApE,OAAAk/B,EAAA,GAAApnB,EAAAoL,QAAA,CACA,GAAA2yD,KACAA,GAAAh9D,MACAqK,OAAApL,EAAAoL,OAAAwV,KACA8Q,OAAA,gBACA5xB,MAAAE,EAAAigB,SACAzuB,UAAAwO,EAAAxO,YAEAwO,EAAAy2D,eACAvuE,OAAA2F,KAAAmS,EAAAy2D,eACA9+D,OAAA,SAAAk4B,GAA2C,MAAA7vB,GAAAy2D,cAAA5mC,KAC3C/hC,QAAA,SAAAk7B,GACA,GAAAR,GAAAxoB,EAAAy2D,cAAAztC,GAAAlpB,EAAA0oB,EAAA1oB,MAAAu3D,EAAA7uC,EAAA6uC,QAEA3uC,EAAAp1B,EAAAm3C,MAAAytB,MACAp4D,QAAAmgB,SACAzuB,UAAAsO,EAAAtO,UACAw2C,mBAAA,EACA8sB,YAAA,IACqBkJ,EAAAt1C,EAAAtd,MACrB,IADqBsd,EAAA8c,SACrB,CAIA,GAAAy4B,GAAA/1E,OAAAk/B,EAAA,cACA,MAAAiwC,GAAA2G,GACAE,eAAAl+D,EAAAoL,OACAgsD,UAAAlvE,OAAAk/B,EAAA,GAAAtnB,EAAAmgB,eAAAlxB,GACAovE,eAAAr+D,EAAAtO,aAIAysE,IACAF,EAAAh9D,MACAqK,OAAA6yD,EACAvsC,OAAA,aACA5xB,QAAAmgB,SACAzuB,UAAAsO,EAAAtO,eAKAlF,KAAAm+C,MAAA2zB,mBAAA,SAAA/nC,GACA0nC,EAAAjwE,QAAA,SAAA4vE,GAAwD,MAAArnC,GAAAqnC,YAKxD,IAAAW,GAAAr+D,EAAA42D,MACAyH,IACA/xE,KAAAm+C,MAAA2zB,mBAAA,SAAA/nC,GACAnuC,OAAAk/B,EAAA,cAAuD,MAAAi3C,GAAAhoC,EAAAr2B,EAAAoL,cAKvDkyD,EAAAptE,UAAA0nE,qBAAA,SAAApvC,GACA,GAAAquC,GAAAruC,EAAAquC,UAAAruC,GAAA+tC,oBAGAjqE,KAAAm+C,MAAA6zB,iBAAAzH,IAEAyG,EAAAptE,UAAAy8B,sBAAA,SAAA1M,EAAAzuB,EAAAi7B,GACAngC,KAAAm+C,MAAAizB,OACAtyD,OAAAqhB,EACAiF,OAAA,aACAlgC,YACAsO,MAAAmgB,KAGAq9C,EAAAptE,UAAAqqE,MAAA,WACA,MAAAjuE,MAAAm+C,MAAA8vB,SAEA+C,MzIymqBM+B,KACA,SAAUt3E,EAAQ6sB,G0IzvqBxBA,EAAA0+C,QAAA,S1I+vqBMgM,KACA,SAAUv3E,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIm3E,GAA0Ct3E,EAAoB,KACxCA,GAAoBkB,EAAEnB,EAAqB,iBAAkB,WAAa,MAAOu3E,GAA2C,IAC5Ht3E,EAAoBkB,EAAEnB,EAAqB,WAAY,WAAa,MAAOu3E,GAA2C,KAM/JC,KACA,SAAUz3E,EAAQC,EAAqBC,GAE7C,Y2I7nqBA,SAAAw3E,GAAAC,EAAAvtC,GAGA,GAAAwtC,MACAC,EAAA,SAAAnvE,EAAArI,GACAu3E,EAAA5+D,KAAAtQ,EAAA,IAAAovE,mBAAAz3E,IAQA,IANA,SAAA+pC,IACAytC,EAAA,QAAAztC,EAAAryB,OAEAqyB,EAAA9R,eACAu/C,EAAA,gBAAAztC,EAAA9R,eAEA8R,EAAA3gC,UAAA,CACA,GAAAsuE,OAAA,EACA,KACAA,EAAA53E,OAAA63E,EAAA,GAAA5tC,EAAA3gC,UAAA,iBAEA,MAAAwuE,GACA,OAAoBA,cAEpBJ,EAAA,YAAAE,GAEA,GAAA3tC,EAAAlrB,WAAA,CACA,GAAAg5D,OAAA,EACA,KACAA,EAAA/3E,OAAA63E,EAAA,GAAA5tC,EAAAlrB,WAAA,kBAEA,MAAA+4D,GACA,OAAoBA,cAEpBJ,EAAA,aAAAK,GAQA,GAAA58C,GAAA,GAAA68C,EAAAR,EACAS,EAAAT,EAAAlnE,QAAA,IAOA,QANA,IAAA2nE,IACA98C,EAAAq8C,EAAA3Y,OAAAoZ,GACAD,EAAAR,EAAA3Y,OAAA,EAAAoZ,KAIYC,OADZF,IADA,IAAAA,EAAA1nE,QAAA,cACAmnE,EAAAnoE,KAAA,KAAA6rB,G3IglqB+Bp7B,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOq4E,KACpEp4E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+gE,IAC9E,IAAIvkB,GAA4Cv8C,EAAoB,M2IlxqBzF83E,EAAA93E,EAAA,MAAAw/B,EAAAn7B,WAAAm7B,WAAA,WACA,GAAAC,GAAAx/B,OAAAy/B,iBACUC,uBAAgBx6B,QAAA,SAAAjE,EAAAgxB,GAAsChxB,EAAAy+B,UAAAzN,IAChE,SAAAhxB,EAAAgxB,GAAyB,OAAA0N,KAAA1N,KAAAlsB,eAAA45B,KAAA1+B,EAAA0+B,GAAA1N,EAAA0N,IACzB,iBAAA1+B,EAAAgxB,GAEA,QAAA2N,KAAuBx7B,KAAA2D,YAAA9G,EADvBu+B,EAAAv+B,EAAAgxB,GAEAhxB,EAAA+G,UAAA,OAAAiqB,EAAAjyB,OAAA0F,OAAAusB,IAAA2N,EAAA53B,UAAAiqB,EAAAjqB,UAAA,GAAA43B,QAGAw4C,EAAAh0E,WAAAg0E,QAAA,SAAAr4C,EAAAwhB,GACA,GAAAzhB,KACA,QAAAH,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,IAAA4hB,EAAAjxC,QAAAqvB,GAAA,IACAG,EAAAH,GAAAI,EAAAJ,GACA,UAAAI,GAAA,mBAAA//B,QAAAq4E,sBACA,OAAAlwE,GAAA,EAAAw3B,EAAA3/B,OAAAq4E,sBAAAt4C,GAA4D53B,EAAAw3B,EAAAt3B,OAAcF,IAAAo5C,EAAAjxC,QAAAqvB,EAAAx3B,IAAA,IAC1E23B,EAAAH,EAAAx3B,IAAA43B,EAAAJ,EAAAx3B,IACA,OAAA23B,IAIAq4C,EAAA,SAAAG,OACA,KAAAA,IAAiCA,KACjC,IAAAh4C,GAAAg4C,EAAA53E,UAAA,KAAA4/B,EAAA,WAAAA,EAEAi4C,EAAAD,EAAAE,MAAAC,EAAAH,EAAAG,kBAAAC,EAAAJ,EAAAI,iBAAAC,EAAAP,EAAAE,GAAA,sDAEAt4E,QAAA63E,EAAA,GAAAU,GAIAA,IACAA,EAAAC,MAEA,IAAAI,IACAC,MAAeJ,qBACfn0D,QAAAq0D,EAAAG,aACAC,YAAAJ,EAAAI,YACAC,QAAAL,EAAAK,QAEA,WAAA18B,GAAA,oBAAAzrC,GACA,GAUAooE,GAVAzB,EAAAx3E,OAAA63E,EAAA,GAAAhnE,EAAAnQ,GACAgd,EAAA7M,EAAAmtC,aACAk7B,GACAL,KAAAn7D,EAAAm7D,KACAv0D,QAAA5G,EAAAo7D,aACAC,YAAAr7D,EAAAq7D,YACAC,QAAAt7D,EAAAs7D,SAGA14C,EAAAtgC,OAAA63E,EAAA,GAAAhnE,EAAAgnE,EAAA,EAAAe,EAAAM,GAAA50D,EAAAgc,EAAAhc,QAAA2lB,EAAA3J,EAAA2J,IAEA,KAAA3lB,EAAA60D,OAAA,CACA,GAAA34C,GAAAxgC,OAAA63E,EAAA,KAAAuB,EAAA54C,EAAAy4C,WAAAE,EAAA34C,EAAA24C,MACAF,GAAAG,EACAH,IACA30D,EAAA60D,UAGA,GAAAE,GAAA,SAAAp4E,GACA,8BAAAA,EAAA2J,MAAA,aAAA3J,EAAA4P,UAMA,IAJA6nE,IACA7nE,EAAA+G,MAAAlH,YAAA2J,KAAAg/D,KACA/0D,EAAAoJ,OAAA,OAEA,QAAApJ,EAAAoJ,OAAA,CACA,GAAAozB,GAAAy2B,EAAAC,EAAAvtC,GAAAiuC,EAAAp3B,EAAAo3B,OAAAJ,EAAAh3B,EAAAg3B,UACA,IAAAA,EACA,MAAA93E,QAAAs8C,EAAA,WAAAw7B,EAEAN,GAAAU,MAGA,KACA5zD,EAAA2lB,KAAAjqC,OAAA63E,EAAA,GAAA5tC,EAAA,WAEA,MAAA6tC,GACA,MAAA93E,QAAAs8C,EAAA,WAAAw7B,GAGA,UAAAx7B,GAAA,oBAAA5b,GAsDA,MArDA63C,GAAAf,EAAAlzD,GACA3jB,KAAA,SAAA24E,GAEA,MADAzoE,GAAAktC,YAAsCu7B,aACtCA,IAEA34E,KAAAX,OAAA63E,EAAA,GAAAhnE,IACAlQ,KAAA,SAAAuiB,GAIA,MAFAwd,GAAAvS,KAAAjL,GACAwd,EAAA4c,WACAp6B,IAEAq6B,MAAA,SAAA/Z,GAEA,eAAAA,EAAAp+B,OAQAo+B,EAAAtgB,QAAAsgB,EAAAtgB,OAAAkQ,QAAAoQ,EAAAtgB,OAAAwV,MA2BAgI,EAAAvS,KAAAqV,EAAAtgB,QAEAwd,EAAAnN,MAAAiQ,MAEA,WAGAy1C,GACAA,EAAAM,cAwDA1Y,EAAA,SAAAxgC,GAEA,QAAAwgC,GAAAj9B,GACA,MAAAvD,GAAA73B,KAAApE,KAAA+zE,EAAAv0C,GAAAoZ,UAAA54C,KAEA,MAJAm7B,GAAAshC,EAAAxgC,GAIAwgC,GACCvkB,EAAA,a3I0xqBKk9B,KACA,SAAU35E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO25E,KAEpE15E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO45E,KACpE35E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO65E,KACpE55E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO85E,KACpE75E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+5E,KACpE95E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOg6E,KACpE/5E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOi6E,I4I9+qBnG,IAAAv7B,GAAAz+C,EAAA,MAAA8/B,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IAGAk6C,GACAC,cAAA,EACAxB,mBAAA,GAEAyB,GAEAC,OAAA,MACAC,eAAA,oBAEAliC,GACAxqB,OAAA,QAEA+rD,GACAZ,KAAAmB,EACAhB,QAAAkB,EACA51D,QAAA4zB,GAEAmiC,EAAA,SAAAf,EAAAp2D,EAAAtJ,GACA,GAAA2Z,GAAA,GAAA/yB,OAAAoZ,EAIA,MAHA2Z,GAAA+lD,WACA/lD,EAAA+mD,WAAAhB,EAAAiB,OACAhnD,EAAArQ,SACAqQ,GAGAmmD,EAAA,SAAA3+B,GAA8D,gBAAAu+B,GAC9D,MAAAA,GACAkB,OACA75E,KAAA,SAAA85E,GACA,IACA,MAAA/nE,MAAA2R,MAAAo2D,GAEA,MAAAj3C,GACA,GAAAs0C,GAAAt0C,CAIA,OAHAs0C,GAAAwB,WACAxB,EAAAwC,WAAAhB,EAAAiB,OACAzC,EAAA2C,WACA1rD,QAAAqN,OAAA07C,MAGAn3E,KAAA,SAAAuiB,GAeA,MAdAo2D,GAAAiB,QAAA,KAEAF,EAAAf,EAAAp2D,EAAA,iDAAAo2D,EAAAiB,QAIAr1E,MAAAC,QAAA+d,IACAA,EAAAnd,eAAA,SACAmd,EAAAnd,eAAA,WAEAs0E,EAAAf,EAAAp2D,EAAA,2CAAAhe,MAAAC,QAAA41C,GACAA,EAAAt0C,IAAA,SAAAmK,GAAgD,MAAAA,GAAAunB,gBAChD4iB,EAAA5iB,eAAA,MAEAjV,MAGAy2D,EAAA,SAAApB,GACA,IAAAA,GAAA,oBAAAC,OAAA,CACA,GAAAkC,GAAA,SAGA,MAFA,oBAAA7P,UACA6P,EAAA,cACA,GAAAl6E,OAAA,qIAAAk6E,EAAA,yCAAAA,EAAA,+HAGAd,EAAA,WACA,uBAAAe,iBACA,OAAgB1B,YAAA,EAAAE,QAAA,EAChB,IAAAF,GAAA,GAAA0B,gBAEA,QAAY1B,aAAAE,OADZF,EAAAE,SAGAU,EAAA,SAAAhpE,EAAA+pE,GAEA,OADAC,MACA/sD,EAAA,EAAoBA,EAAA1lB,UAAAC,OAAuBylB,IAC3C+sD,EAAA/sD,EAAA,GAAA1lB,UAAA0lB,EAEA,IAAAxJ,GAAAub,KAA6B+6C,EAAAt2D,SAA2B00D,QAAA4B,EAAA5B,QAAAD,YAAA6B,EAAA7B,cACxDF,EAAA+B,EAAA/B,IAKAgC,GAAAj1E,QAAA,SAAAkD,GACAwb,EAAAub,KAA6Bvb,EAAAxb,EAAAwb,SAA4B00D,QAAAn5C,KAAqBvb,EAAA00D,QAAAlwE,EAAAkwE,WAC9ElwE,EAAAiwE,cACAz0D,EAAAy0D,YAAAjwE,EAAAiwE,aACAF,EAAAh5C,KAA0Bg5C,EAAA/vE,EAAA+vE,OAG1B,IAAA1gD,GAAAtnB,EAAAsnB,cAAApZ,EAAAlO,EAAAkO,WAAAzV,EAAAuH,EAAAvH,UAAAsO,EAAA/G,EAAA+G,MACAqyB,GAAgB9R,gBAAA7uB,YAMhB,OALAuvE,GAAAJ,oBACAxuC,EAAAlrB,cAEA85D,EAAAoB,eACAhwC,EAAAryB,MAAA5X,OAAAw+C,EAAA,GAAA5mC,KAEA0M,UACA2lB,SAGA6vC,EAAA,SAAAn6C,EAAAm7C,GACA,GAAAhsC,EACA,KACAA,EAAAp8B,KAAAC,UAAAgtB,GAEA,MAAA4hB,GACA,GAAAu2B,GAAA,GAAAt3E,OAAA,2BAAAs6E,EAAA,yBAAAv5B,EAAA3nC,QAEA,MADAk+D,cAAAv2B,EACAu2B,EAEA,MAAAhpC,IAGAirC,EAAA,SAAAlpE,EAAAkqE,GACA,GAAAr9D,GAAA7M,EAAAmtC,aACAg9B,EAAAt9D,EAAAhd,GACA,OAAAs6E,KAGA,mBAAAD,GACAA,EAAAlqE,GAGAkqE,GAAA,c5Iu/qBME,KACA,SAAUp7E,EAAQC,EAAqBC,GAE7C,Y6IlmrBA,SAAAm7E,GAAAh4D,GACA,GAAAA,EAAAwa,WAAA,CACA,OAAA72B,KAAAqc,EAAAykB,GACA,MAAAzkB,GAAAwa,WAAA,IAAAxa,EAAAykB,EAEA,QAAA9gC,KAAAqc,EAAAi4D,IACA,MAAAj4D,GAAAwa,WAAA,IAAAxa,EAAAi4D,IAGA,Y7I0lrBiCr7E,EAAuB,EAAIo7E,EAC7Bn7E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOghE,IAC9E,IAAIsa,GAA6Cr7E,EAAoB,MACjEqhD,EAAiDrhD,EAAoB,MACrEs7E,EAAiDt7E,EAAoB,MACrEu7E,EAA8Cv7E,EAAoB,MAClEw7E,EAA+Cx7E,EAAoB,MACnEy7E,EAA6Cz7E,EAAoB,M6IzorB1F07E,EAAA17E,EAAA,MAAAw/B,EAAAn7B,WAAAm7B,WAAA,WACA,GAAAC,GAAAx/B,OAAAy/B,iBACUC,uBAAgBx6B,QAAA,SAAAjE,EAAAgxB,GAAsChxB,EAAAy+B,UAAAzN,IAChE,SAAAhxB,EAAAgxB,GAAyB,OAAA0N,KAAA1N,KAAAlsB,eAAA45B,KAAA1+B,EAAA0+B,GAAA1N,EAAA0N,IACzB,iBAAA1+B,EAAAgxB,GAEA,QAAA2N,KAAuBx7B,KAAA2D,YAAA9G,EADvBu+B,EAAAv+B,EAAAgxB,GAEAhxB,EAAA+G,UAAA,OAAAiqB,EAAAjyB,OAAA0F,OAAAusB,IAAA2N,EAAA53B,UAAAiqB,EAAAjqB,UAAA,GAAA43B,QAGAC,EAAAz7B,WAAAy7B,UAAA7/B,OAAAiI,QAAA,SAAA63B,GACA,OAAAC,GAAA53B,EAAA,EAAA9H,EAAA+H,UAAAC,OAA4CF,EAAA9H,EAAO8H,IAAA,CACnD43B,EAAA33B,UAAAD,EACA,QAAAw3B,KAAAI,GAAA//B,OAAAgI,UAAAjC,eAAAyC,KAAAu3B,EAAAJ,KACAG,EAAAH,GAAAI,EAAAJ,IAEA,MAAAG,IASA47C,GACA13B,gBAAA,GAAAq3B,GAAA,EACAt6B,iBAAAm6B,EACAS,aAAA,EACA/6B,aAAA46B,EAAA,GAaA1a,EAAA,SAAAzgC,GAEA,QAAAygC,GAAAh4D,OACA,KAAAA,IAAgCA,KAChC,IAAAsC,GAAAi1B,EAAA73B,KAAApE,WAmBA,OAlBAgH,GAAAwhE,cACAxhE,EAAAwwE,WACAxwE,EAAAywE,sBAAA,GAAAC,SAGA1wE,EAAA2wE,kBAAA,EACA3wE,EAAAtC,OAAA+2B,KAAkC67C,EAAA5yE,GAElCsC,EAAAtC,OAAAkzE,kBACAt4C,QAAAkH,KAAA,uJACAx/B,EAAAtC,OAAAo5C,eAAA92C,EAAAtC,OAAAkzE,iBAEA5wE,EAAAtC,OAAAmzE,iBACAv4C,QAAAkH,KAAA,qJACAx/B,EAAAtC,OAAAo5C,eAAA92C,EAAAtC,OAAAmzE,gBAEA7wE,EAAAuwE,YAAAvwE,EAAAtC,OAAA6yE,YACAvwE,EAAAstB,KAAAttB,EAAAtC,OAAA83C,eACAx1C,EA0KA,MAhMAm0B,GAAAuhC,EAAAzgC,GAwBAygC,EAAA94D,UAAA+4D,QAAA,SAAAroC,GAGA,MAFAA,IACAt0B,KAAAs0B,KAAAxoB,QAAAwoB,GACAt0B,MAEA08D,EAAA94D,UAAAwkE,QAAA,SAAAI,GAEA,OADA,KAAAA,IAAoCA,GAAA,GACpCA,GAAAxoE,KAAAwoE,WAAAvkE,OAAA,GACA,GAAA6zE,GAAA93E,KAAAwoE,WAAAnmE,IAAA,SAAA01E,GAA8D,MAAAA,GAAAzjD,MAC9D,OAAA14B,QAAAiI,OAAA4b,MAAA7jB,WAAkDoE,KAAAs0B,KAAA6Q,YAAAjxB,OAAA4jE,IAElD,MAAA93E,MAAAs0B,KAAA6Q,YAEAu3B,EAAA94D,UAAA0qE,KAAA,SAAA96D,GACA,MAAAA,GAAAgsC,YAAA/8C,KAAAzC,KAAAs0B,KAAAhuB,IAAAkN,EAAAgsC,QACA,KAEA5jD,OAAAu7E,EAAA,IACA17B,MAAAz7C,KAAA0E,OAAA83C,aAAAx8C,KAAAooE,QAAA50D,EAAAg1D,aACAh1D,MAAAxT,KAAAyqE,kBAAAj3D,SACAtO,UAAAsO,EAAAtO,UACAs6C,OAAAhsC,EAAAgsC,OACA1C,wBAAA98C,KAAA0E,OAAAk7C,gBAAAh5B,MACAmY,eAAAvrB,EAAAurB,eACAr6B,OAAA1E,KAAA0E,UAGAg4D,EAAA94D,UAAAwtE,MAAA,SAAAA,GACAx1E,OAAAs7E,EAAA,IACA9xC,OAAAgsC,EAAAhsC,OACAtmB,OAAAsyD,EAAAtyD,OACA5Z,UAAAksE,EAAAlsE,UACAyuB,SAAA3zB,KAAAyqE,kBAAA2G,EAAA59D,OACAioC,MAAAz7C,KAAAs0B,KACAqoB,iBAAA38C,KAAA0E,OAAAi4C,iBACAG,wBAAA98C,KAAA0E,OAAAk7C,gBAAAh5B,QAEA5mB,KAAAg4E,oBAEAtb,EAAA94D,UAAAgoE,KAAA,SAAAp4D,GACA,MAAA5X,QAAAu7E,EAAA,IACA17B,MAAAz7C,KAAA0E,OAAA83C,aAAAx8C,KAAAooE,QAAA50D,EAAAg1D,aACAh1D,MAAAxT,KAAAyqE,kBAAAj3D,SACAtO,UAAAsO,EAAAtO,UACAw2C,kBAAAloC,EAAAkoC,kBACA3c,eAAAvrB,EAAAurB,eACA+d,wBAAA98C,KAAA0E,OAAAk7C,gBAAAh5B,MACAliB,OAAA1E,KAAA0E,UAGAg4D,EAAA94D,UAAAkqE,MAAA,SAAAA,GACA,GAAA9mE,GAAAhH,IAEA,OADAA,MAAAw3E,QAAA/iE,KAAAq5D,GACA,WACA9mE,EAAAwwE,QAAAxwE,EAAAwwE,QAAAnsE,OAAA,SAAA0+B,GAA+D,MAAAA,KAAA+jC,MAG/DpR,EAAA94D,UAAAq0E,MAAA,SAAAzkE,GACA,SAAApX,OAAA,kDAEAsgE,EAAA94D,UAAAqqE,MAAA,WAGA,MAFAjuE,MAAAs0B,KAAAgR,QACAtlC,KAAAg4E,mBACArtD,QAAAzoB,WAEAw6D,EAAA94D,UAAAouE,iBAAA,SAAAzuC,GACA,GAAAv8B,GAAAhH,KAEAk4E,EAAAl4E,KAAAwoE,WAAAn9D,OAAA,SAAAgS,GAAgE,MAAAA,GAAAkmB,QAChEvjC,MAAAwoE,cAEA0P,EAAA12E,QAAA,SAAA22E,GACAnxE,EAAAuqE,4BAAA4G,EAAAr2B,YAAAq2B,EAAA50C,MAEAvjC,KAAAg4E,oBAEAtb,EAAA94D,UAAAkuE,mBAAA,SAAAhwB,GAEA,GAAAs2B,GAAAp4E,KAAA23E,gBACA33E,MAAA23E,kBAAA,EACA71B,EAAA9hD,MACAo4E,IAGAp4E,KAAA23E,kBAAA,GAEA33E,KAAAg4E,oBAEAtb,EAAA94D,UAAA2tE,4BAAA,SAAAzvB,EAAAve,GACA,GAAAv8B,GAAAhH,IACAA,MAAA23E,kBAAA,CACA,IAAAU,GAAAz8E,OAAAy7E,EAAA,GAAAr3E,KAAAooE,SAAA,YAAAkQ,GAGA,GAAAC,GAAAvxE,EAAAstB,IACAttB,GAAAstB,KAAAgkD,EACAtxE,EAAA8qE,mBAAAhwB,GACA96C,EAAAstB,KAAAikD,GAEAv4E,MAAAwoE,WAAA/zD,MACA8uB,KACAue,cACAxtB,KAAA+jD,IAEAr4E,KAAA23E,kBAAA,EACA33E,KAAAg4E,oBAEAtb,EAAA94D,UAAA6mE,kBAAA,SAAA92C,GACA,GAAA3zB,KAAAu3E,YAAA,CACA,GAAAz4D,GAAA9e,KAAAy3E,sBAAAnxE,IAAAqtB,EAIA,OAHA7U,IACA9e,KAAAy3E,sBAAA5wE,IAAA8sB,EAAA7U,EAAAljB,OAAAohD,EAAA,GAAArpB,IAEA7U,EAEA,MAAA6U,IAEA+oC,EAAA94D,UAAAsjE,UAAA,SAAAhnD,EAAAsoD,GAEA,WADA,KAAAA,IAAoCA,GAAA,GACpCxoE,KAAAsuE,MACA96D,MAAA0M,EAAA1M,MACAtO,UAAAgb,EAAAhb,UACAsjE,gBAGA9L,EAAA94D,UAAAwjE,aAAA,SAAAlnD,EAAAsoD,GAEA,WADA,KAAAA,IAAoCA,GAAA,GACpCxoE,KAAAsuE,MACA96D,MAAAxT,KAAAyqE,kBAAA7uE,OAAAohD,EAAA,GAAA98B,EAAA6W,SAAA7W,EAAAmmB,eACAnhC,UAAAgb,EAAAhb,UACAs6C,OAAAt/B,EAAAqjB,GACAilC,gBAGA9L,EAAA94D,UAAAyjE,WAAA,SAAAnnD,GACAlgB,KAAAoxE,OACAhsC,OAAA,aACAtmB,OAAAoB,EAAAoU,KACA9gB,MAAAxT,KAAAyqE,kBAAAvqD,EAAA1M,OACAtO,UAAAgb,EAAAhb,aAGAw3D,EAAA94D,UAAA0jE,cAAA,SAAApnD,GACAlgB,KAAAoxE,OACAhsC,OAAAllB,EAAAqjB,GACAzkB,OAAAoB,EAAAoU,KACA9gB,MAAAxT,KAAAyqE,kBAAA7uE,OAAAohD,EAAA,GAAA98B,EAAA6W,SAAA7W,EAAAmmB,eACAnhC,UAAAgb,EAAAhb,aAGAw3D,EAAA94D,UAAAo0E,iBAAA,WACA,GAAAhxE,GAAAhH,IAEAA,MAAA23E,kBAGA33E,KAAAw3E,QAAAh2E,QAAA,SAAAuoC,GACA,GAAAxE,GAAAv+B,EAAA4kE,MACAp4D,MAAAu2B,EAAAv2B,MACAtO,UAAA6kC,EAAA7kC,UAGA65B,eAAAgL,EAAAhL,gBAAAgL,EAAAhL,iBACAypC,WAAAz+B,EAAAy+B,YAEAz+B,GAAAngB,SAAA2b,MAGAm3B,GACCsa,EAAA,I7IiprBKwB,KACA,SAAU/8E,EAAQC,EAAqBC,GAE7C,YACqB,IAAI88E,GAAuC98E,EAAoB,KACzCA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+8E,GAAwC,GACvF98E,GAAoB,OAQ9E+8E,KACA,SAAUj9E,EAAQC,EAAqBC,GAE7C,YAC+BA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOi9E,IAC9E,IAAI79C,GAAiDn/B,EAAoB,MACrEi9E,EAAuCj9E,EAAoB,M8I/4rBpFg9E,EAAA,WACA,QAAAA,MAiFA,MA9EAA,GAAA/0E,UAAA6mE,kBAAA,SAAA92C,GACA,MAAAA,IAGAglD,EAAA/0E,UAAAmrE,iBAAA,SAAAp7C,GACA,MAAAA,IAQAglD,EAAA/0E,UAAAsjE,UAAA,SAAAhnD,EAAAsoD,GAEA,WADA,KAAAA,IAAoCA,GAAA,GACpCxoE,KAAAsuE,MACA96D,MAAA0M,EAAA1M,MACAtO,UAAAgb,EAAAhb,UACAsjE,gBAGAmQ,EAAA/0E,UAAAwjE,aAAA,SAAAlnD,EAAAsoD,GAEA,WADA,KAAAA,IAAoCA,GAAA,GACpCxoE,KAAAsuE,MACA96D,MAAA5X,OAAAk/B,EAAA,GAAA5a,EAAA6W,SAAA7W,EAAAmmB,cACAnhC,UAAAgb,EAAAhb,UACAs6C,OAAAt/B,EAAAqjB,GACAilC,gBAGAmQ,EAAA/0E,UAAAyjE,WAAA,SAAAnnD,GACAlgB,KAAAoxE,OACAhsC,OAAA,aACAtmB,OAAAoB,EAAAoU,KACA9gB,MAAA0M,EAAA1M,MACAtO,UAAAgb,EAAAhb,aAGAyzE,EAAA/0E,UAAA0jE,cAAA,SAAApnD,GACAlgB,KAAAoxE,OACAhsC,OAAAllB,EAAAqjB,GACAzkB,OAAAoB,EAAAoU,KACApvB,UAAAgb,EAAAhb,UACAsO,MAAA5X,OAAAk/B,EAAA,GAAA5a,EAAA6W,SAAA7W,EAAAmmB,iBAGAsyC,EAAA/0E,UAAA2jE,UAAA,SAAArrC,GACA,GAAAqH,GAAArH,EAAAqH,GAAAjP,EAAA4H,EAAA5H,IACA,wBAAAiP,GAAA,CACA,GAAAs1C,GAAA,IAKA,KACAA,EAAA74E,KAAAsuE,MACA9uB,OAAAjc,EACAilC,YAAA,EACAh1D,MAAAolE,EAAA,IAGA,MAAAz7B,IAIA,GAAA7jB,GAAAu/C,KAAAv/C,YAAA,eAEAw/C,EAAAl9E,OAAAiI,QAA6Cy1B,cAAyBhF,EACtEt0B,MAAAsnE,eACA/jC,KACAxM,SAAAn7B,OAAAg9E,EAAA,GAAAE,EAAAx/C,GACAhF,KAAAwkD,QAIA94E,MAAAqnE,YAA6B7zD,MAAA5X,OAAAg9E,EAAA,GAAAtkD,aAG7BqkD,M9Iy5rBMI,KACA,SAAUt9E,EAAQC,EAAqBC,GAE7C,Y+Ih/rBA,SAAAq9E,GAAAp2E,GAcA,OAHA4D,KAAA,WACA8F,cAVA9F,KAAA,sBACAiG,UAAA,QACAzL,MACAwF,KAAA,OACA1K,MAAA,wBAEA+Q,aAAAosE,EAAAr2E,MAQA,QAAAs2E,GAAAt2E,EAAA4gC,GAoBA,OAHAh9B,KAAA,WACA8F,cAhBA9F,KAAA,qBACAqH,eACArH,KAAA,YACAxF,MACAwF,KAAA,OACA1K,MAAA0nC,GAAA,eAGAxiC,MACAwF,KAAA,OACA1K,MAAA,wBAEA+Q,aAAAosE,EAAAr2E,MAQA,QAAAq2E,GAAAr2E,GACA,oBAAAA,IACA,kBAAAA,IACA,iBAAAA,IACA,oBAAAA,IACA,OAAAA,EAEA,WAEA,IAAA9B,MAAAC,QAAA6B,GAEA,MAAAq2E,GAAAr2E,EAAA,GAGA,IAAAuK,KAoBA,OAnBAvR,QAAA2F,KAAAqB,GAAApB,QAAA,SAAA2C,GACA,GAAAvC,IACA4E,KAAA,QACAxF,MACAwF,KAAA,OACA1K,MAAAqI,IAIAg1E,EAAAF,EAAAr2E,EAAAuB,GACAg1E,KACAv3E,EAAAiL,aAAAssE,GAEAhsE,EAAAsH,KAAA7S,MAGA4E,KAAA,eACA2G,c/I26rBiCzR,EAAuB,EAAIs9E,EAC3Bt9E,EAAuB,EAAIw9E,EAC7Bv9E,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO09E,I+Iz6rBnG,IAAAA,IACA5yE,KAAA,WACA8F,cAEA9F,KAAA,sBACAiG,UAAA,QACAzL,KAAA,KACA2L,oBAAA,KACAC,cACAC,cACArG,KAAA,eACA2G,aAEA3G,KAAA,QACA8G,MAAA,KACAtM,MACAwF,KAAA,OACA1K,MAAA,cAEAkI,aACA4I,cACAC,aAAA,Y/I+/rBMwsE,KACA,SAAU59E,EAAQC,EAAqBC,GAE7C,YACgEA,GAAoB,OAO9E29E,KACA,SAAU79E,EAAQC,EAAqBC,GAE7C,YgJ5msBA,IAAA49E,EAECA,YhJmnsBKC,KACA,SAAU/9E,EAAQC,EAAqBC,GAE7C,YACqB,IAII89E,IAJ2C99E,EAAoB,MAItBA,EAAoB,MiJ3nsBtFD,GAAA,EAAA+9E,EAAA,GjJmosBMC,KACA,SAAUj+E,EAAQC,EAAqBC,GAE7C,YkJ/msBA,SAAAg+E,GAAAnkE,GACAxV,KAAAwV,UACAxV,KAAAub,MAAA,GlJinsBkE5f,EAAoB,KkJ9msBtFg+E,GAAA/1E,UAAAxH,MAAAwH,WlJ+rsBMg2E,KACA,SAAUn+E,EAAQC,EAAqBC,GAE7C,YmJhtsBA,SAAAk+E,GAAA31E,EAAAsjC,EAAAhlC,GACA,UAAA5F,GAAA,mBAAA4F,MAAAC,GAAAyB,GAAAsjC,InJgtsBiC9rC,EAAuB,EAAIm+E,CACvC,IAAIj9E,GAA8CjB,EAAoB,OAuBrFm+E,KACA,SAAUr+E,EAAQC,EAAqBC,GAE7C,YoJ1usBA,SAAAo+E,GAAA5qD,GAEA,MADAA,IAAAvzB,OAAAumD,EAAA,0CACAtgD,KAAoBstB,EAAAxU,YACpBnF,QAAA2Z,EAAA3Z,SAAA,6BACAxD,UAAAmd,EAAAnd,UACAyI,KAAA0U,EAAA1U,OpJsusBiC/e,EAAuB,EAAIq+E,CoJ7vsB5D,IAAA53B,GAAAxmD,EAAA,MAAAkG,EAAAjG,OAAAiI,QAAA,SAAAC,GAAmD,OAAAC,GAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,GAAAG,GAAAF,UAAAD,EAA2B,QAAAI,KAAAD,GAA0BtI,OAAAgI,UAAAjC,eAAAyC,KAAAF,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,MAAAL,KpJ4xsBzOk2E,KACA,SAAUv+E,EAAQ6sB,EAAS3sB,GAEjC,YqJpvsBA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GAzC7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,IAEAwsB,EAAA2xD,gCAAAx3E,EAEA,IAAA+vC,GAAA72C,EAAA,IAEA82C,EAAAP,EAAAM,GAEAQ,EAAAr3C,EAAA,IAEAs3C,EAAAf,EAAAc,GAEAL,EAAAh3C,EAAA,GAEAu+E,EAAAhoC,EAAAS,GAEA4mB,EAAA59D,EAAA,IAEA69D,EAAAtnB,EAAAqnB,GAEA4gB,EAAAx+E,EAAA,MAEAy+E,EAAAloC,EAAAioC,GAEArnC,EAAAn3C,EAAA,KAEAo3C,EAAAb,EAAAY,GAEAunC,GAAA,EAAAD,EAAA/yC,UAAA,wGAEAqK,EAAA/1C,EAAA,MAEA2+E,EAAA3+E,EAAA,MAEA4+E,EAAAroC,EAAAooC,GAEA9mC,EAAA73C,EAAA,IAEAg4C,EAAAh4C,EAAA,MAIAs+E,EAAA3xD,EAAA2xD,4BAAA,SAAAltE,GACA,GAAAkqB,GAAAlqB,EAAAkqB,QACAwd,EAAA1nC,EAAA0nC,OAEA,OAAA3zC,OAAAC,QAAAk2B,GACA,SAAAx6B,GACA,MAAAw6B,GAAA2e,SAAAn5C,EAAAuE,OAIA,mBAAAi2B,GACA,SAAAx6B,GACA,MAAAw6B,GAAAx6B,IAIAqE,MAAAC,QAAA0zC,GACA,SAAAh4C,GACA,OAAAg4C,EAAAmB,SAAAn5C,EAAAuE,OAIA,mBAAAyzC,GACA,SAAAh4C,GACA,OAAAg4C,EAAAh4C,IAIA,WACA,UASA6rB,GAAA+e,QAAA,WACA,GAAAn6B,IAAA,EAAA6lC,EAAA1L,SAAAoL,EAAApL,QAAAuN,KAAA,QAAAC,GAAAO,EAAAl1B,GACA,GAAA/N,GAAA41D,EAAA7kE,EAAAs3E,EAAAC,EAAAC,EAAAC,EAAAC,CACA,OAAAnoC,GAAApL,QAAA37B,KAAA,SAAA8pC,GACA,OACA,OAAAA,EAAA32B,KAAA22B,EAAAzrB,MACA,OACA,IAAA7J,EAAA/N,OAAA,CACAqjC,EAAAzrB,KAAA,CACA,OAGAyrB,EAAAqlC,GAAA36D,EAAA/N,OACAqjC,EAAAzrB,KAAA,CACA,MAEA,QAEA,MADAyrB,GAAAzrB,KAAA,EACAqrB,EAAA5hC,OACAA,OAAA,EAAA+mE,EAAAlzC,SAAAgzC,EAAA3oC,EAAA4jB,sBACyB/4D,KAAA,SAAA8Q,GAEzB,MADAA,GAAAinB,KAAA2nB,UAIA,QACAzG,EAAAqlC,GAAArlC,EAAAC,IAEA,QA8BA,MA7BAtjC,GAAAqjC,EAAAqlC,GACA9S,EAAA51D,EAAAjP,MAAAwP,OAAA,SAAAsnD,EAAAv9D,GACA,gBAAAA,EAAAuE,MAAA,aAAAvE,EAAAuE,KAAAg5D,KAEA9lD,QAAA,EAAAslD,EAAAnyB,SAAA2yB,IAAA,EAAAR,EAAAnyB,SAAA5qC,EAAA+I,cAEAtC,EAAAiP,EAAAjP,MAAAmI,OAAA,SAAA5O,GACA,gBAAAA,EAAAuE,MAAA,aAAAvE,EAAAuE,OAGAw5E,EAAA,SAAA/9E,GACA,MAAAsrE,GAAA9xD,KAAA,SAAAzC,GACA,MAAAA,GAAAxS,OAAAkf,EAAA+zB,eAAAT,EAAAU,UAAAz3C,MAC6BsrE,EAAA9xD,KAAA,SAAAzC,GAC7B,MAAAA,GAAAxS,OAAAkf,EAAA+zB,eAAAT,EAAAW,SAAA13C,MAIAg+E,EAAA,SAAAh+E,GACA,MAAAk3C,GAAAvB,UAAA1/B,OAAA,SAAAsnD,EAAArlB,GACA,SAAAulC,EAAA7yC,YAAgE2yB,GAAA,EAAA/mB,EAAA5L,YAAuCsN,EAAAozB,EAAAjgD,KAAA,SAAAtU,GACvG,MAAA0M,GAAA+zB,eAAAU,IAAAnhC,EAAAxS,MAAAkf,EAAA+zB,eAAAU,GAAAl4C,SAEgCA,UAGhCi+E,EAAAx3E,EAAAmI,OAAAmvE,GACAG,EAAAD,EAAArvE,OAAA4uE,EAAA/5D,IACA06D,EAAAD,EAAAt4E,IAAAo4E,GACAjlC,EAAAY,OAAA,UACAlzC,QACA6kE,UACA6S,aAGA,SACA,UACA,MAAAplC,GAAAa,SAGSxB,MAAApyC,MAGT,iBAAA6zC,EAAAwkC,GACA,MAAA5tE,GAAAuS,MAAAzf,KAAAgE,gBrJsysBM+2E,KACA,SAAUt/E,EAAQ6sB,EAAS3sB,GsJn8sBjCF,EAAA6sB,SAAkB+e,QAAA1rC,EAAA,MAAAw2C,YAAA,ItJy8sBZ6oC,KACA,SAAUv/E,EAAQ6sB,EAAS3sB,GuJ18sBjCA,EAAA,KACA,IAAAs/E,GAAAt/E,EAAA,IAAAC,MACAH,GAAA6sB,QAAA,SAAA4yD,EAAAC,GACA,MAAAF,GAAA7/D,iBAAA8/D,EAAAC,KvJk9sBMC,KACA,SAAU3/E,EAAQ6sB,EAAS3sB,GwJt9sBjC,GAAA4sB,GAAA5sB,EAAA,GAEA4sB,KAAAM,EAAAN,EAAAO,GAAAntB,EAAA,eAAuEyf,iBAAAzf,EAAA,QxJ69sBjE0/E,KACA,SAAU5/E,EAAQ6sB,EAAS3sB,GyJh+sBjCF,EAAA6sB,SAAkB+e,QAAA1rC,EAAA,MAAAw2C,YAAA,IzJs+sBZmpC,KACA,SAAU7/E,EAAQ6sB,EAAS3sB,G0Jv+sBjCA,EAAA,MACAF,EAAA6sB,QAAA3sB,EAAA,IAAAC,OAAAuL,Q1J8+sBMo0E,KACA,SAAU9/E,EAAQ6sB,EAAS3sB,G2J/+sBjC,GAAA6/E,GAAA7/E,EAAA,KACA8/E,EAAA9/E,EAAA,KAAA+/E,QAEA//E,GAAA,wBAAAggF,GACA,gBAAAC,GACA,MAAAD,IAAAH,EAAAI,GAAAD,EAAAF,EAAAG,U3Jy/sBMC,KACA,SAAUpgF,EAAQC,EAAqBC,GAE7C,Y4Jn9sBA,SAAAklD,GAAAntB,EAAAxvB,EAAA0vB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA8nD,GAAA93E,SAIA,WAAA2mB,SAAA,SAAAzoB,GACA,MAAAA,GAEA,IAAA45E,EAAA73E,OAAA83E,EAAAroD,EAAAvhB,OAAAuhB,EAAAxvB,OAAAwvB,EAAAE,UAAAF,EAAAG,aAAAH,EAAAI,eAAAJ,EAAAK,cAAAL,EAAAM,eAAA+nD,EAAAroD,EAAAxvB,EAAA0vB,EAAAC,EAAAC,EAAAC,EAAAC,MAaA,QAAAgoD,GAAAtoD,EAAAxvB,EAAA0vB,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAlV,GAAA,IAAA9a,UAAAC,OAAA83E,EAAAroD,EAAAvhB,OAAAuhB,EAAAxvB,OAAAwvB,EAAAE,UAAAF,EAAAG,aAAAH,EAAAI,eAAAJ,EAAAK,cAAAL,EAAAM,eAAA+nD,EAAAroD,EAAAxvB,EAAA0vB,EAAAC,EAAAC,EAAAC,EAAAC,EAGA,IAAAlV,EAAAviB,KACA,SAAAH,OAAA,sDAGA,OAAA0iB,GAGA,QAAAi9D,GAAA5pE,EAAAjO,EAAA0vB,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAioD,GAAArgF,OAAAsgF,EAAA,GAAA/pE,EACA,IAAA8pE,EAAAh4E,OAAA,EACA,OAAY+qB,OAAAitD,EAIZ,IAAAtoD,OAAA,EACA,KACAA,EAAA/3B,OAAAugF,EAAA,OAAAj4E,GACG,MAAA21E,GACH,OAAY7qD,QAAA6qD,IAIZ,GAAAuC,GAAAxgF,OAAAygF,EAAA,GAAAlqE,EAAAwhB,EACA,OAAAyoD,GAAAn4E,OAAA,GACY+qB,OAAAotD,GAIZxgF,OAAA0gF,EAAA,GAAAnqE,EAAAwhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,G5J65sBiCt4B,EAAuB,EAAImlD,EAC3BnlD,EAAuB,EAAIsgF,CACvC,IAAIE,GAA+CvgF,EAAoB,MACnEwgF,EAAiDxgF,EAAoB,MACrE0gF,EAAqD1gF,EAAoB,M4JvgtBlG2gF,EAAA3gF,EAAA,O5JontBM4gF,KACA,SAAU9gF,EAAQC,EAAqBC,GAE7C,Y6J1mtBA,SAAA6gF,GAAAC,GACA,aAAAA,EAAA,iCASA,QAAAC,GAAApjE,GACA,OACAjN,SAAA,SAAApB,GAMA,MALAA,GAAAqB,YAAA9K,QAAA,SAAA2zB,GACAA,EAAA3uB,OAAAqW,EAAA,EAAAvV,sBAAA6tB,EAAA3uB,OAAAqW,EAAA,EAAA/U,qBACAwR,EAAA8V,YAAA,GAAA2Z,GAAA,EAAAyzC,EAAArnD,EAAA3uB,OAAAqW,EAAA,EAAAlU,kBAAA,SAAAwsB,EAAAn0B,KAAAlF,QAAAq5B,QAGA,I7J0ltBiCz5B,EAAuB,EAAIghF,CACvC,IAAI3zC,GAAuCptC,EAAoB,MAC3DkhB,EAAgDlhB,EAAoB,OAuCvFghF,KACA,SAAUlhF,EAAQC,EAAqBC,GAE7C,Y8JzptBA,SAAAihF,GAAAp9D,GAEA,QAAAq9D,GAAAC,EAAAC,EAAAC,GACAC,IACAA,EAAA,GAAAvF,SAEA,IAAAwF,GAAAD,EAAA32E,IAAAw2E,GACAK,MAAA,EACA,IAAAD,GAEA,GADAC,EAAAD,EAAA52E,IAAAy2E,GACA,CACA,GAAAK,GAAAD,EAAA72E,IAAA02E,EACA,QAAAv6E,KAAA26E,EACA,MAAAA,QAIAF,GAAA,GAAAxF,SACAuF,EAAAp2E,IAAAi2E,EAAAI,EAEAC,KACAA,EAAA,GAAAzF,SACAwF,EAAAr2E,IAAAk2E,EAAAI,GAEA,IAAAE,GAAA79D,EAAAC,MAAAzf,KAAAgE,UAEA,OADAm5E,GAAAt2E,IAAAm2E,EAAAK,GACAA,EAzBA,GAAAJ,OAAA,EA2BA,OAAAJ,GAxCAnhF,EAAA,EAAAkhF,G9JottBMU,KACA,SAAU7hF,EAAQC,EAAqBC,GAE7C,Y+J9stBA,SAAA4hF,GAAA9sD,GACA,GAAAlvB,GAAA3F,OAAA2F,KAAAkvB,GACA+sD,EAAAj8E,EAAAc,IAAA,SAAArB,GACA,MAAAyvB,GAAAzvB,IAEA,OAAA2pB,SAAA8N,IAAA+kD,GAAAjhF,KAAA,SAAA0J,GACA,MAAAA,GAAAyM,OAAA,SAAA+qE,EAAA3hF,EAAAiI,GAEA,MADA05E,GAAAl8E,EAAAwC,IAAAjI,EACA2hF,GACK7hF,OAAA0F,OAAA,S/JsstB4B5F,EAAuB,EAAI6hF,GAgCtDG,KACA,SAAUjiF,EAAQC,EAAqBC,GAE7C,YgKxutBA,SAAAgiF,GAAA13E,EAAA2jB,EAAAg0D,GACA,MAAA33E,GAAAyM,OAAA,SAAAwsB,EAAApjC,GACA,MAAAF,QAAAiiF,EAAA,GAAA3+C,KAAA3iC,KAAA,SAAAi4B,GACA,MAAA5K,GAAA4K,EAAA14B,KACK8tB,EAAAsV,EAAApjC,IACF8hF,GhKoutB8BliF,EAAuB,EAAIiiF,CgK5vtB5D,IAAAE,GAAAliF,EAAA,OhK2xtBMmiF,KACA,SAAUriF,EAAQC,EAAqBC,GAE7C,YACqB,IAAIoiF,GAAwCpiF,EAAoB,KACpDA,GAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOqiF,GAAyC,IAC/GpiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOqiF,GAAyC,GACzH,IAAIC,GAA4CriF,EAAoB,KACxDA,GAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOsiF,GAA6C,IAClHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOsiF,GAA6C,IACnHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,IACjHriF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsiF,GAA6C,GAC7H,IAAIC,GAA4CtiF,EAAoB,KACxDA,GAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOuiF,GAA6C,IAClHtiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuiF,GAA6C,IACjHtiF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOuiF,GAA6C,IACnHtiF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOuiF,GAA6C,IACnHtiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuiF,GAA6C,IACjHtiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuiF,GAA6C,IACjHtiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuiF,GAA6C,IACjHtiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOuiF,GAA6C,GAC7H,IAAIC,GAAyCviF,EAAoB,KACrDA,GAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOwiF,GAA0C,IAChHviF,EAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAOwiF,GAA0C,IAChHviF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwiF,GAA0C,IAC9GviF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwiF,GAA0C,IAC9GviF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwiF,GAA0C,IAC9GviF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwiF,GAA0C,IAC9GviF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwiF,GAA0C,GAC1H,IAAIC,GAA+CxiF,EAAoB,KAC3DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,KAAM,WAAa,MAAOyiF,GAAgD,IACrHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,IACpHxiF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOyiF,GAAgD,GAChI,IAAIC,GAA0CziF,EAAoB,KACtDA,GAAoBkB,EAAEnB,EAAqB,MAAO,WAAa,MAAO0iF,GAA2C,IiKh3tBlJziF,EAAAkB,EAAAnB,EAAA,qBAAA0iF,GAAA,KjK04tBMC,KACA,SAAU5iF,EAAQC,EAAqBC,GAE7C,YACqB,IAAI2iF,GAA0C3iF,EAAoB,KACtDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4iF,GAA2C,GAC3H,IAAIC,GAAuC5iF,EAAoB,KACnDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO6iF,GAAwC,GACxH,IAAIj+D,GAAuC3kB,EAAoB,KAEnDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4kB,GAAwC,GACxH,IAAIk+D,GAAwC7iF,EAAoB,KACpDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO8iF,GAA6C,QACjH7iF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO8iF,GAAkD,aACtH7iF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO8iF,GAAiD,WACjI,IAAIC,GAAyC9iF,EAAoB,KACrDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+iF,GAA0C,GAC1H,IAAIC,GAAwC/iF,EAAoB,KACpDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOgjF,GAAyC,GACzH,IAAIC,GAAyChjF,EAAoB,KACrDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOijF,GAA0C,IAC9GhjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOijF,GAA0C,IAC9GhjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOijF,GAA0C,IAC9GhjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOijF,GAA0C,IAC9GhjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOijF,GAA0C,GAC1H,IAAIC,GAAmDjjF,EAAoB,KkKn6tBhGA,GAAAkB,EAAAnB,EAAA,qBAAAkjF,GAAA,KlK67tBMC,KACA,SAAUpjF,EAAQC,EAAqBC,GAE7C,YACqB,IAAImjF,GAAyCnjF,EAAoB,KACrDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOojF,GAA0C,IAC9GnjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOojF,GAA0C,IAC9GnjF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOojF,GAA0C,GAC1H,IAAIC,GAAwCpjF,EAAoB,KmKr8tBrFA,GAAAkB,EAAAnB,EAAA,qBAAAqjF,GAAA,KnKq9tBMC,KACA,SAAUvjF,EAAQC,EAAqBC,GAE7C,YACqB,IAAIsjF,GAA2CtjF,EAAoB,KACvDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOujF,GAA4C,IoK19tBjJtjF,EAAAkB,EAAAnB,EAAA,qBAAAujF,GAAA,KpKy+tBMC,KACA,SAAUzjF,EAAQC,EAAqBC,GAE7C,YqKr8tBA,SAAAyhC,GAAA1J,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAmrD,GAGA,WAAAn7E,UAAAC,OAAAm7E,EAAA1rD,EAAAvhB,OAAAuhB,EAAAC,SAAAD,EAAAE,UAAAF,EAAAG,aAAAH,EAAAI,eAAAJ,EAAAK,cAAAL,EAAAM,cAAAN,EAAAyrD,wBAAAC,EAAA1rD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAmrD,GAQA,QAAAE,GAAAlwD,GACA,GAAAA,YAAAmwD,GAAA,EACA,OAAYtwD,QAAAG,GAEZ,MAAAA,GAGA,QAAAiwD,GAAAjtE,EAAAwhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAmrD,GACA,GAQAI,GAAA,SAAA5X,GACA,MAAA/rE,QAAA0gF,EAAA,GAAAnqE,EAAAwhB,EAAAg0C,EAAA9zC,EAAAC,EAAAC,EAAAC,GAKA,OAdAwrD,GAAArtE,EAAAwhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAorD,GAcA5iF,KAAA,SAAAkjF,GACA,MAEA7jF,QAAA08B,EAAA,GAAAmnD,GAAA7jF,OAAA8jF,EAAA,GAAAD,EAAAF,EAAAF,GAAAI,GAEGJ,GAqBH,QAAAG,GAAArtE,EAAAwhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGAp4B,OAAA0gF,EAAA,GAAAnqE,EAAAwhB,EAAAG,EAEA,KAGA,GAAA2B,GAAA75B,OAAA0gF,EAAA,GAAAnqE,EAAAwhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAGA,IAAAlzB,MAAAC,QAAA00B,GACA,MAAA9K,SAAAzoB,SAA8B8sB,OAAAyG,GAG9B,IAAAh5B,GAAAb,OAAA0gF,EAAA,GAAAnqE,EAAAsjB,EAAAhpB,WACAjH,EAAA5J,OAAA0gF,EAAA,GAAA7mD,EAAAh5B,EAAAg5B,EAAAhpB,UAAAI,aAAAjR,OAAA0F,OAAA,MAAA1F,OAAA0F,OAAA,OACAq+E,EAAA/jF,OAAA2F,KAAAiE,GACAywB,EAAA0pD,EAAA,GACAvvD,EAAA5qB,EAAAywB,GACAnL,EAAAsF,EAAA,GACA3uB,EAAAqpB,EAAA9pB,KAAAlF,MACAswB,EAAAxwB,OAAA0gF,EAAA,GAAAnqE,EAAA1V,EAAAgF,EAEA,KAAA2qB,EACA,SAAAkzD,GAAA,6BAAA79E,EAAA,oBAAA2uB,EAKA,IAAAkH,GAAAlL,EAAAgR,WAAA3H,EAAAzB,cAEAvZ,EAAA7e,OAAA0gF,EAAA,OAAA75E,GAAAwzB,GAEAsB,EAAA37B,OAAA0gF,EAAA,GAAA7mD,EAAArJ,EAAAgE,EAAA3zB,EAAAge,GAKAqE,EAAAljB,OAAA0gF,EAAA,GAAA7mD,EAAArJ,EAAAgE,EAAAkH,EAAA1D,EAAA2D,EAGA,OAAA5M,SAAAzoB,QAAA4c,GAAAviB,KAAA,SAAAqjF,GAEA,GAAAA,YAAAxjF,OACA,KAAAR,QAAAikF,EAAA,GAAAD,EAAAxvD,EAAAx0B,OAAA0gF,EAAA,GAAA7hE,GAIA,IAAA7e,OAAA08B,EAAA,GAAAsnD,GAEA,MAAAA,EAEA,UAAAxjF,OAAA,4DAAA8B,OAAA0hF,MAEG,MAAAzwD,GACH,MAAAxE,SAAAqN,OAAA7I,IrKm1tBiCzzB,EAAuB,EAAI0hC,EAC3B1hC,EAAuB,EAAI8jF,CACvC,IAAIlnD,GAAwC38B,EAAoB,MAC5D2jF,EAAoD3jF,EAAoB,MACxEkkF,EAAoDlkF,EAAoB,MACxE2gF,EAAmD3gF,EAAoB,MqKl/tBhG+jF,GrKm/tBsE/jF,EAAoB,MqKn/tB1FA,EAAA,QrKqpuBMmkF,KACA,SAAUrkF,EAAQC,EAAqBC,GAE7C,YsKxpuBA,SAAAokF,GAAAn9E,EAAAuB,EAAArI,GAAmM,MAAxJqI,KAAAvB,GAAkBhH,OAAAC,eAAA+G,EAAAuB,GAAkCrI,QAAAuf,YAAA,EAAAG,cAAA,EAAAF,UAAA,IAAgF1Y,EAAAuB,GAAArI,EAAoB8G,EAkBnM,QAAAo9E,GAAA32D,EAAAO,EAAAq2D,GAeA,QAAAC,GAAAphE,GACA,MAAAA,GAAAkL,KAAAlL,EAAAqhE,EAAArhE,EAAAhjB,MAAA8tB,GAAArtB,KAAA6jF,EAAAC,GAfA,GAAA38E,GAAA9H,OAAA08B,EAAA,GAAAjP,GACAi3D,MAAA,GACAD,MAAA,EAEA,oBAAA38E,GAAA2hE,SACAib,EAAA58E,EAAA2hE,OACAgb,EAAA,SAAAlxD,GACA,GAAAoxD,GAAA,WACA,MAAA51D,SAAAqN,OAAA7I,GAEA,OAAAmxD,GAAAl8E,KAAAV,GAAAnH,KAAAgkF,MAQA,IAAAC,OAAA,EACA,IAAAP,EAAA,CAEA,GAAAjoD,GAAAioD,CACAO,GAAA,SAAArxD,GACA,MAAAgxD,GAAAhxD,EAAA6I,GAAAz7B,KAAA6jF,EAAAC,IAMA,MAAAN,IACAh2D,KAAA,WACA,MAAArmB,GAAAqmB,OAAAxtB,KAAA2jF,EAAAM,IAEAnb,OAAA,WACA,MAAAib,KAAAl8E,KAAAV,GAAAnH,KAAA2jF,EAAAM,GAAA71D,QAAAzoB,SAA4FpG,UAAA2G,GAAAunB,MAAA,KAE5Fy2D,MAAA,SAAAtxD,GAEA,yBAAAzrB,GAAA+8E,MACA/8E,EAAA+8E,MAAAtxD,GAAA5yB,KAAA2jF,EAAAM,GAEA71D,QAAAqN,OAAA7I,GAAAgqB,MAAAknC,KAEG/nD,EAAA,aACH,MAAAt4B,QAIA,QAAAmgF,GAAArkF,EAAA8tB,GACA,UAAAe,SAAA,SAAAzoB,GACA,MAAAA,GAAA0nB,EAAA9tB,MAIA,QAAAskF,GAAAtkF,GACA,OAAUA,QAAAkuB,MAAA,GtK+kuBuBtuB,EAAuB,EAAIskF,CsKzpuB5D,IAAA1nD,GAAA38B,EAAA,OtK0uuBM+kF,KACA,SAAUjlF,EAAQC,EAAqBC,GAE7C,YACqB,IAAIglF,GAA0ChlF,EAAoB,KACtDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOilF,GAA2C,GAC3H,IAAIC,GAAmDjlF,EAAoB,KAC/DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOklF,GAAoD,GACpI,IAAIC,GAAgDllF,EAAoB,KAC5DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmlF,GAAiD,GACjI,IAAIC,GAA2DnlF,EAAoB,KACvEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOolF,GAA4D,GAC5I,IAAIC,GAAiEplF,EAAoB,KAC7EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOqlF,GAAkE,GAClJ,IAAIC,GAA0DrlF,EAAoB,KACtEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOslF,GAA2D,GAC3I,IAAIC,GAAuDtlF,EAAoB,KACnEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOulF,GAAwD,GACxI,IAAIC,GAA0DvlF,EAAoB,KACtEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwlF,GAA2D,GAC3I,IAAIC,GAAsDxlF,EAAoB,KAClEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOylF,GAAuD,GACvI,IAAIC,GAA8DzlF,EAAoB,KAC1EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO0lF,GAA+D,GAC/I,IAAIC,GAAyD1lF,EAAoB,KACrEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO2lF,GAA0D,GAC1I,IAAIC,GAA6D3lF,EAAoB,KACzEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4lF,GAA8D,GAC9I,IAAIC,GAA0D5lF,EAAoB,KACtEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO6lF,GAA2D,GAC3I,IAAIC,GAA0D7lF,EAAoB,KACtEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO8lF,GAA2D,GAC3I,IAAIC,GAAqE9lF,EAAoB,KACjFA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+lF,GAAsE,GACtJ,IAAIC,GAAgE/lF,EAAoB,KAC5EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOgmF,GAAiE,GACjJ,IAAIC,GAAiEhmF,EAAoB,KAC7EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOimF,GAAkE,GAClJ,IAAIC,GAAoDjmF,EAAoB,KAChEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOkmF,GAAqD,GACrI,IAAIC,GAAiElmF,EAAoB,KAC7EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmmF,GAAkE,GAClJ,IAAIC,GAA4DnmF,EAAoB,KACxEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOomF,GAA6D,GAC7I,IAAIC,GAAoEpmF,EAAoB,KAChFA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOqmF,GAAqE,GACrJ,IAAIC,GAA4DrmF,EAAoB,KACxEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsmF,GAA6D,GAC7I,IAAIC,GAA8DtmF,EAAoB,KAC1EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOumF,GAA+D,GAC/I,IAAIC,GAA6DvmF,EAAoB,KACzEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwmF,GAA8D,GAC9I,IAAIC,GAA4DxmF,EAAoB,KACxEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOymF,GAA6D,GAC7I,IAAIC,GAA4DzmF,EAAoB,KACxEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO0mF,GAA6D,GAC7I,IAAIC,GAA+D1mF,EAAoB,KAC3EA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO2mF,GAAgE,GAChJ,IAAIC,GAAqE3mF,EAAoB,KACjFA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4mF,GAAsE,GACtJ,IAAIC,GAAmE5mF,EAAoB,KuKtyuBhHA,GAAAkB,EAAAnB,EAAA,qBAAA6mF,GAAA,KvKy4uBMC,KACA,SAAU/mF,EAAQC,EAAqBC,GAE7C,YACqB,IAAI8mF,GAAoD9mF,EAAoB,KAChEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+mF,GAAqD,IACzH9mF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+mF,GAAqD,GACrI,IAAIC,GAAiD/mF,EAAoB,KAC7DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOgnF,GAAkD,GAClI,IAAIC,GAAyDhnF,EAAoB,KACrEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOinF,GAA0D,GAC1I,IAAIC,GAAmDjnF,EAAoB,KAC/DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOknF,GAAoD,GACpI,IAAIC,GAAgDlnF,EAAoB,KAC5DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmnF,GAAiD,IACrHlnF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmnF,GAAiD,IACrHlnF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmnF,GAAiD,GACjI,IAAIC,GAA8CnnF,EAAoB,KAC1DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOonF,GAA+C,GAC/H,IAAIC,GAAyDpnF,EAAoB,KACrEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOqnF,GAA0D,GAC1I,IAAIC,GAA+CrnF,EAAoB,KAC3DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsnF,GAAgD,IACpHrnF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsnF,GAAgD,IACpHrnF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOsnF,GAAgD,GAChI,IAAIC,GAA6CtnF,EAAoB,KACzDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOunF,GAA8C,GAC9H,IAAIC,GAA8CvnF,EAAoB,KAC1DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOwnF,GAA+C,GAC/H,IAAIC,GAAsDxnF,EAAoB,KAClEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOynF,GAAuD,GACvI,IAAIC,GAA+CznF,EAAoB,KAC3DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO0nF,GAAgD,GAChI,IAAIC,GAA2C1nF,EAAoB,KACvDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO2nF,GAA4C,GAC5H,IAAIC,GAA8C3nF,EAAoB,KAC1DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO4nF,GAA+C,GAC/H,IAAIC,GAAiD5nF,EAAoB,KAC7DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO6nF,GAAkD,GAClI,IAAIC,GAAsD7nF,EAAoB,KAClEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO8nF,GAAuD,GACvI,IAAIC,GAA4C9nF,EAAoB,KACxDA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO+nF,GAA6C,GAC7H,IAAIC,GAAqD/nF,EAAoB,KACjEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOgoF,GAAsD,GACtI,IAAIC,GAAkDhoF,EAAoB,KAC9DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOioF,GAAmD,IACvHhoF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOioF,GAAmD,IACvHhoF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOioF,GAAmD,GACnI,IAAIC,GAAkDjoF,EAAoB,KAC9DA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOkoF,GAAmD,IACvHjoF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOkoF,GAAmD,GACnI,IAAIC,GAAsDloF,EAAoB,KAClEA,GAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmoF,GAAuD,IAC3HloF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmoF,GAAuD,IAC3HloF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmoF,GAAuD,IAC3HloF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOmoF,GAAuD,GACvI,IAAIC,GAAuDnoF,EAAoB,KwKl8uBpGA,GAAAkB,EAAAnB,EAAA,qBAAAooF,GAAA,KxKqhvBMC,KACA,SAAUtoF,EAAQC,EAAqBC,GAE7C,YyKvgvBA,SAAAqoF,GAAAp+B,EAAA7xB,GAEA,OADAtnB,GAAA,KACA1I,EAAA,EAAiBA,EAAA6hD,EAAAt5C,YAAArI,OAAoCF,IAAA,CACrD,GAAAoxB,GAAAywB,EAAAt5C,YAAAvI,EACA,IAAAoxB,EAAA3uB,OAAA2T,EAAA,EAAA7S,qBACA,GAAAysB,GAQO,GAAAoB,EAAAn0B,MAAAm0B,EAAAn0B,KAAAlF,QAAAi4B,EACP,MAAAoB,OATA,CAIA,GAAA1oB,EACA,WAEAA,GAAA0oB,GAMA,MAAA1oB,GzKs/uBiC/Q,EAAuB,EAAIsoF,CyKzhvB5D,IAAA7pE,GAAAxe,EAAA,OzKmkvBMsoF,KACA,SAAUxoF,EAAQC,EAAqBC,GAE7C,Y0K7ivBA,SAAAuoF,GAAA/xE,EAAA+N,GACA,GAAAikE,GAAAvoF,OAAAwoF,EAAA,OAAAxoF,OAAAyoF,EAAA,GAAAnkE,IACApB,EAAAljB,OAAA0gF,EAAA,GAAAnqE,EAAAgyE,EAEA,QADArlE,EAAAviB,MAAAuiB,EAAAkQ,SAAAlQ,EAAAwV,OAAA14B,OAAAumD,EAAA,MACArjC,EAAAwV,K1K0ivBiC54B,EAAuB,EAAIwoF,CACvC,IAAI/hC,GAAmDxmD,EAAoB,MACvE0oF,EAAoD1oF,EAAoB,MAExE2gF,GAD6C3gF,EAAoB,MACdA,EAAoB,O0K3kvBhGyoF,EAAAzoF,EAAA,O1K+mvBM2oF,KACA,SAAU7oF,EAAQC,EAAqBC,GAE7C,Y2K5kvBA,SAAA4oF,GAAAvwC,EAAA9zB,GAkBA,QAAAvL,GAAA6hD,GACA,GAAAA,EAAAhwD,OAAAg+E,EAAA,EAAAp8E,KAAA,CACA,GAAAq8E,GAAAjuB,EAAAl3D,MACA,KAAAmlF,EACA,SAAAroF,OAAA,kDAEA,OAAAR,QAAA8oF,EAAA,GAAA/vE,EAAA8vE,IAEA,GAAAjuB,EAAAhwD,OAAAg+E,EAAA,EAAAprE,SAAA,CACA,GAAAurE,GAAAnuB,EAAAl3D,MACA,KAAAqlF,EACA,SAAAvoF,OAAA,kDAEA,IAAAwoF,GAAAjwE,EAAAgwE,EACA,OAAA/oF,QAAA8oF,EAAA,GAAA9oF,OAAA8oF,EAAA,GAAAE,IAEA,IAAApuB,EAAAx1D,KACA,SAAA5E,OAAA,2BAAAkS,KAAAC,UAAAioD,GAEA,OAAAj2D,GAAAi2D,EAAAx1D,MAGA,QAAAT,GAAA+T,GACA,GAAAuwE,EAAAvwE,GACA,MAAAuwE,GAAAvwE,EAEA,IAAAwwE,GAAAC,EAAAzwE,EACA,KAAAwwE,EACA,SAAA1oF,OAAA,+CAAAkY,EAAA,sFAEA,IAAA0wE,GAAAnuB,EAAAiuB,EAEA,OADAD,GAAAvwE,GAAA0wE,EACAA,EAGA,QAAAj5D,GAAAyqC,GACA,GAAA/5D,GAAAkY,EAAA6hD,EAEA,OADA56D,QAAA8oF,EAAA,GAAAjoF,IAAAb,OAAAumD,EAAA,6DACA1lD,EAGA,QAAAwoF,GAAAzuB,GACA,GAAA/5D,GAAAkY,EAAA6hD,EAEA,OADA56D,QAAA8oF,EAAA,GAAAjoF,IAAAb,OAAAumD,EAAA,2DACA1lD,EAGA,QAAAyoF,GAAA1uB,GACA,GAAA/5D,GAAAkY,EAAA6hD,EACA,OAAA56D,QAAA8oF,EAAA,GAAAjoF,GAGA,QAAA0oF,GAAA3uB,GACA,GAAA/5D,GAAAkY,EAAA6hD,EACA,OAAA56D,QAAA8oF,EAAA,GAAAjoF,GAKA,QAAAo6D,GAAAp6D,GACA,GAAAA,KAAAuE,MAAAvE,EAAA+J,KACA,OAAA/J,EAAA+J,MACA,IAAAg+E,GAAA,EAAA1rE,OACA,MAAAssE,GAAA3oF,EACA,KAAA+nF,GAAA,EAAAn8E,OACA,MAAAg9E,GAAA5oF,EACA,KAAA+nF,GAAA,EAAAxrE,UACA,MAAAssE,GAAA7oF,EACA,KAAA+nF,GAAA,EAAAvrE,MACA,MAAAssE,GAAA9oF,EACA,KAAA+nF,GAAA,EAAA/9E,KACA,MAAA++E,GAAA/oF,EACA,KAAA+nF,GAAA,EAAAtrE,aACA,MAAAusE,GAAAhpF,GAGA,SAAAL,OAAA,gIAAAkS,KAAAC,UAAA9R,IAGA,QAAA2oF,GAAAM,GACA,UAAAhB,GAAA,GACA1jF,KAAA0kF,EAAA1kF,KACAwB,YAAAkjF,EAAAljF,YACAoC,UAAA,SAAA9I,GACA,MAAAA,MAKA,QAAAupF,GAAAM,GACA,IAAAA,EAAA9kF,WACA,SAAAzE,OAAA,4CAAAkS,KAAAC,UAAAo3E,GAEA,WAAAjB,GAAA,GACA1jF,KAAA2kF,EAAA3kF,KACAwB,YAAAmjF,EAAAnjF,YACA3B,WAAA8kF,EAAA9kF,WAAAwB,IAAA8iF,GACA3/E,OAAA,WACA,MAAAogF,GAAAD,MAKA,QAAAL,GAAAO,GACA,UAAAnB,GAAA,GACA1jF,KAAA6kF,EAAA7kF,KACAwB,YAAAqjF,EAAArjF,YACAgD,OAAA,WACA,MAAAogF,GAAAC,MAKA,QAAAN,GAAAO,GACA,IAAAA,EAAA5wE,cACA,SAAA9Y,OAAA,+CAAAkS,KAAAC,UAAAu3E,GAEA,WAAApB,GAAA,GACA1jF,KAAA8kF,EAAA9kF,KACAwB,YAAAsjF,EAAAtjF,YACAU,MAAA4iF,EAAA5wE,cAAA7S,IAAA6iF,KAIA,QAAAM,GAAAO,GACA,IAAAA,EAAAxsE,WACA,SAAAnd,OAAA,4CAAAkS,KAAAC,UAAAw3E,GAEA,WAAArB,GAAA,GACA1jF,KAAA+kF,EAAA/kF,KACAwB,YAAAujF,EAAAvjF,YACAyD,OAAArK,OAAAoqF,EAAA,GAAAD,EAAAxsE,WAAA,SAAA0sE,GACA,MAAAA,GAAAjlF,MACO,SAAAilF,GACP,OACAzjF,YAAAyjF,EAAAzjF,YACAR,kBAAAikF,EAAAjkF,uBAMA,QAAAyjF,GAAAS,GACA,IAAAA,EAAA1sE,YACA,SAAApd,OAAA,6CAAAkS,KAAAC,UAAA23E,GAEA,WAAAxB,GAAA,GACA1jF,KAAAklF,EAAAllF,KACAwB,YAAA0jF,EAAA1jF,YACAgD,OAAA,WACA,MAAA2gF,GAAAD,EAAA1sE,gBAKA,QAAAosE,GAAAd,GACA,IAAAA,EAAAt/E,OACA,SAAApJ,OAAA,wCAAAkS,KAAAC,UAAAu2E,GAEA,OAAAlpF,QAAAoqF,EAAA,GAAAlB,EAAAt/E,OAAA,SAAA4gF,GACA,MAAAA,GAAAplF,MACK,SAAAolF,GACL,IAAAA,EAAAhkF,KACA,SAAAhG,OAAA,4CAAAkS,KAAAC,UAAA63E,GAEA,QACA5jF,YAAA4jF,EAAA5jF,YACAR,kBAAAokF,EAAApkF,kBACAvF,KAAAwoF,EAAAmB,EAAA3pF,MACA2F,KAAA+jF,EAAAC,EAAAhkF,SAKA,QAAA+jF,GAAAE,GACA,MAAAzqF,QAAAoqF,EAAA,GAAAK,EAAA,SAAAC,GACA,MAAAA,GAAAtlF,MACKulF,GAGL,QAAAA,GAAAC,GACA,GAAA/pF,GAAAsvB,EAAAy6D,EAAA/pF,MACAiG,EAAA8jF,EAAA9jF,aAAA9G,OAAA6qF,EAAA,GAAA7qF,OAAAwoF,EAAA,YAAAoC,EAAA9jF,cAAAjG,OAAAgG,EACA,QACAzB,KAAAwlF,EAAAxlF,KACAwB,YAAAgkF,EAAAhkF,YACA/F,OACAiG,gBAIA,QAAAg0D,GAAAgwB,GAGA,GAAA10E,GAAA00E,EAAA10E,UAAA00E,EAAA10E,UAAAqM,WAAAnK,OAAAwyE,EAAA9tE,SAAAV,EAAA,EAAAxQ,UAAAg/E,EAAAnuE,aAAAL,EAAA,EAAAM,MAAAN,EAAA,EAAAO,SAAAP,EAAA,EAAAQ,iBAAAguE,EAAA/tE,YAAAT,EAAA,EAAApQ,oBAAAoQ,EAAA,EAAAtQ,gBAAAsQ,EAAA,EAAArQ,oBACA,KAAA6+E,EAAAtkF,KACA,SAAAhG,OAAA,gDAAAkS,KAAAC,UAAAm4E,GAEA,WAAAC,GAAA,GACA3lF,KAAA0lF,EAAA1lF,KACAwB,YAAAkkF,EAAAlkF,YACAwP,YACA5P,KAAA+jF,EAAAO,EAAAtkF,QA1NA,GAAAwkF,GAAA5yC,EAAAiI,SAGA8oC,EAAAnpF,OAAAyzD,EAAA,GAAAu3B,EAAA1jF,MAAA,SAAAzG,GACA,MAAAA,GAAAuE,OAMA6jF,EAAAjpF,OAAAyzD,EAAA,GAAAw3B,EAAA,EAAA3yE,OAAAswE,EAAA,YAAA/nF,GACA,MAAAA,GAAAuE,OAqNAkC,EAAA0jF,EAAA1jF,MAAAb,IAAA,SAAAyiF,GACA,MAAAvkF,GAAAukF,EAAA9jF,QAIAoX,EAAAwuE,EAAAxuE,UAAA8sE,EAAA0B,EAAAxuE,WAAA,KAEAC,EAAAuuE,EAAAvuE,aAAA6sE,EAAA0B,EAAAvuE,cAAA,KAEAC,EAAAsuE,EAAAtuE,iBAAA4sE,EAAA0B,EAAAtuE,kBAAA,KAIA1L,EAAAg6E,EAAAh6E,WAAAg6E,EAAAh6E,WAAAvK,IAAAq0D,KAGA,WAAAowB,GAAA,GACAtzE,MAAA4E,EACA1E,SAAA2E,EACAzE,aAAA0E,EACApV,QACA0J,aACAuG,YAAA+M,KAAA/M,YACAE,mBAAA6M,KAAA7M,qB3Ko1uBiC3X,EAAuB,EAAI6oF,CACvC,IAAIpiC,GAAmDxmD,EAAoB,MACvE0zD,EAAgD1zD,EAAoB,MACpEqqF,EAAmDrqF,EAAoB,MACvE8qF,EAA8C9qF,EAAoB,MAClEyoF,EAAiDzoF,EAAoB,MACrEmrF,EAA6CnrF,EAAoB,MACjEuc,EAA4Dvc,EAAoB,MAChF+oF,EAAiD/oF,EAAoB,MACrEgrF,EAAiDhrF,EAAoB,MACrE6oF,EAAoD7oF,EAAoB,M2K7nvBjGkrF,EAAAlrF,EAAA,O3Ko6vBMorF,KACA,SAAUtrF,EAAQC,EAAqBC,GAE7C,Y4K93vBA,SAAAqrF,GAAA70E,EAAAyzC,EAAA1lC,GAwHA,QAAA+mE,GAAAxqF,GAIA,MAHAyqF,GAAAzqF,EAAAuE,QACAkmF,EAAAzqF,EAAAuE,MAAAmmF,EAAA1qF,IAEAyqF,EAAAzqF,EAAAuE,MAIA,QAAAmmF,GAAA1qF,GACA,MAAAb,QAAAwrF,EAAA,GAAA3qF,GAEAA,EAEAb,OAAA8oF,EAAA,GAAAjoF,GACA4qF,EAAA5qF,GAEAb,OAAA8oF,EAAA,GAAAjoF,GACA6qF,EAAA7qF,GAEAb,OAAA8oF,EAAA,GAAAjoF,GACA8qF,EAAA9qF,GAGAA,EAGA,QAAA4qF,GAAA5qF,GACA,GAAAuE,GAAAvE,EAAAuE,KACAmE,EAAAqiF,EAAAxmF,GAAAvE,EAAA0I,kBAAA1I,EAAA0I,kBAAA+O,OAAAszE,EAAAxmF,IAAAwmF,EAAAxmF,GAAAvE,EAAA0I,iBACA,WAAAu/E,GAAA,GACA1jF,OACAwB,YAAA/F,EAAA+F,YACA3B,WAAA,WACA,MAAA4mF,GAAAhrF,IAEA+I,OAAA,WACA,MAAAkiF,GAAAjrF,IAEAkG,QAAAlG,EAAAkG,QACAwC,oBACAC,SAAA3I,EAAA2I,WAIA,QAAAkiF,GAAA7qF,GACA,GAAAuE,GAAAvE,EAAAuE,KACAmE,EAAAqiF,EAAAxmF,GAAAvE,EAAA0I,kBAAA1I,EAAA0I,kBAAA+O,OAAAszE,EAAAxmF,IAAAwmF,EAAAxmF,GAAAvE,EAAA0I,iBACA,WAAAu/E,GAAA,GACA1jF,KAAAvE,EAAAuE,KACAwB,YAAA/F,EAAA+F,YACAgD,OAAA,WACA,MAAAkiF,GAAAjrF,IAEAkG,QAAAlG,EAAAkG,QACAwC,oBACAQ,YAAAlJ,EAAAkJ,cAIA,QAAA4hF,GAAA9qF,GACA,UAAAioF,GAAA,GACA1jF,KAAAvE,EAAAuE,KACAwB,YAAA/F,EAAA+F,YACAU,MAAAzG,EAAAmJ,WAAAvD,IAAA4kF,GACAtkF,QAAAlG,EAAAkG,QACAgD,YAAAlJ,EAAAkJ,cAIA,QAAA8hF,GAAAhrF,GACA,GAAAoE,GAAApE,EAAAgJ,gBAAApD,IAAA4kF,GAGAtsE,EAAA6sE,EAAA/qF,EAAAuE,KAYA,OAXA2Z,IACAA,EAAAnZ,QAAA,SAAAmmF,GACAA,EAAA9mF,WAAAW,QAAA,SAAA2qB,GAIAtrB,EAAA4T,KAAAmzE,EAAA/wB,UAAA1qC,QAKAtrB,EAGA,QAAA6mF,GAAAjrF,GACA,GAAAorF,GAAAjsF,OAAA0F,OAAA,MACAwmF,EAAArrF,EAAA6I,WACA1J,QAAA2F,KAAAumF,GAAAtmF,QAAA,SAAAC,GACA,GAAAG,GAAAkmF,EAAArmF,EACAomF,GAAApmF,IACAe,YAAAZ,EAAAY,YACAR,kBAAAJ,EAAAI,kBACAvF,KAAAsrF,EAAAnmF,EAAAnF,MACA2F,KAAAxG,OAAAyzD,EAAA,GAAAztD,EAAAQ,KAAA,SAAAG,GACA,MAAAA,GAAAvB,OAEA2B,QAAAf,EAAAe,QACAT,QAAAN,EAAAM,UAKA,IAAAyY,GAAA6sE,EAAA/qF,EAAAuE,KAaA,OAZA2Z,IACAA,EAAAnZ,QAAA,SAAAmmF,GACAA,EAAAniF,OAAAhE,QAAA,SAAAI,GACA,GAAAH,GAAAG,EAAAZ,KAAAlF,KACA,IAAAgsF,EAAArmF,GACA,SAAAumF,GAAA,YAAAvrF,EAAAuE,KAAA,IAAAS,EAAA,qFAAAG,GAEAimF,GAAApmF,GAAAmmF,EAAAtvB,WAAA12D,OAKAimF,EAGA,QAAAE,GAAA/C,GACA,MAAAppF,QAAA8oF,EAAA,GAAAM,GACAppF,OAAA8oF,EAAA,GAAAqD,EAAA/C,EAAA1lF,SAEA1D,OAAA8oF,EAAA,GAAAM,GACAppF,OAAA8oF,EAAA,GAAAqD,EAAA/C,EAAA1lF,SAEA2nF,EAAAjC,GAxPAppF,OAAAkrF,EAAA,GAAA30E,IAAAvW,OAAAumD,EAAA,yCAEAyD,KAAAp/C,OAAAyhF,EAAA,EAAA5gF,UAAAzL,OAAAumD,EAAA,uCAUA,QAPA+lC,GAAAtsF,OAAA0F,OAAA,MACAkmF,EAAA5rF,OAAA0F,OAAA,MAIA6mF,KAEApkF,EAAA,EAAiBA,EAAA6hD,EAAAt5C,YAAArI,OAAoCF,IAAA,CACrD,GAAAwrC,GAAAqW,EAAAt5C,YAAAvI,EACA,QAAAwrC,EAAA/oC,MACA,IAAAyhF,GAAA,EAAAn/E,uBACA,IAAAm/E,GAAA,EAAAh/E,0BACA,IAAAg/E,GAAA,EAAA9+E,qBACA,IAAA8+E,GAAA,EAAA/+E,sBACA,IAAA++E,GAAA,EAAAp/E,uBACA,IAAAo/E,GAAA,EAAA5+E,6BAGA,GAAAiL,GAAAi7B,EAAAvuC,KAAAlF,KACA,IAAAqW,EAAAwC,QAAAL,GACA,SAAA0zE,GAAA,WAAA1zE,EAAA,sFAAAi7B,GAEA24C,GAAA5zE,GAAAi7B,CACA,MACA,KAAA04C,GAAA,EAAA1+E,sBACA,IAAA0+E,GAAA,EAAAz+E,yBAGA,GAAA4+E,GAAA74C,EAAAvuC,KAAAlF,MACAusF,EAAAl2E,EAAAwC,QAAAyzE,EACA,KAAAC,EACA,SAAAL,GAAA,yBAAAI,EAAA,uDAAA74C,GAEA+4C,GAAAD,EAAA94C,EAEA,IAAAg5C,GAAAf,EAAAY,EACAZ,GAAAY,GAAAG,IAAAr0E,QAAAq7B,OACA,MACA,KAAA04C,GAAA,EAAAr+E,qBACA,GAAAgkD,GAAAre,EAAAvuC,KAAAlF,KAEA,IADAqW,EAAAiD,aAAAw4C,GAEA,SAAAo6B,GAAA,gBAAAp6B,EAAA,2DAAAre,GAEA44C,GAAA1zE,KAAA86B,EACA,MACA,KAAA04C,GAAA,EAAA3+E,sBACA,IAAA2+E,GAAA,EAAAx+E,qBACA,IAAAw+E,GAAA,EAAAv+E,oBACA,IAAAu+E,GAAA,EAAAt+E,4BACA,SAAAvN,OAAA,OAAAmzC,EAAA/oC,KAAA,kDAMA,OAAA5K,OAAA2F,KAAAimF,GAAAvjF,QAAA,IAAArI,OAAA2F,KAAA2mF,GAAAjkF,QAAA,IAAAkkF,EAAAlkF,OACA,MAAAkO,EAGA,IAAAy1E,GAAA,GAAAY,GAAA,EAAAN,EAAAhoE,EAAA,SAAAs2C,GACA,GAAAliD,GAAAkiD,EAAAx1D,KAAAlF,MACAusF,EAAAl2E,EAAAwC,QAAAL,EACA,IAAA+zE,EACA,MAAApB,GAAAoB,EAGA,UAAAL,GAAA,oBAAA1zE,EAAA,oGAAAkiD,MAGA0wB,EAAAtrF,OAAA0F,OAAA,MAGAmnF,EAAAt2E,EAAA4B,eACAqE,EAAAqwE,EAAAxB,EAAAwB,GAAA,KAEAC,EAAAv2E,EAAA6B,kBACAqE,EAAAqwE,EAAAzB,EAAAyB,GAAA,KAEAC,EAAAx2E,EAAA8B,sBACAqE,EAAAqwE,EAAA1B,EAAA0B,GAAA,KAEAzlF,KAAAgR,OAAAtY,OAAA6+B,EAAA,GAAAtoB,EAAAuC,cAAArS,IAAA,SAAA5F,GACA,MAAAwqF,GAAAxqF,KACGmrF,EAAAnxB,WAAA76D,OAAA6+B,EAAA,GAAAytD,KAGHU,EAAAz2E,EAAAmB,qBACAu1E,EAAA3oE,KAAA7M,mBACAA,EAAAu1E,GAAAC,EAAAD,EAAA10E,OAAA20E,GAAAD,GAAAC,CAGA,WAAA/B,GAAA,GACAtzE,MAAA4E,EACA1E,SAAA2E,EACAzE,aAAA0E,EACApV,QACA0J,WAQA,WACA,GAAAk8E,GAAA32E,EAAAgD,eAGA,OAFA2zE,IAAAltF,OAAAumD,EAAA,4CAEA2mC,EAAA50E,OAAAi0E,EAAA9lF,IAAA,SAAA4I,GACA,MAAA28E,GAAAlxB,eAAAzrD,SAZAtI,QAAAwP,EAAAxP,QACA0Q,uBAoJA,QAAAi1E,GAAA7rF,EAAAwO,GACA,OAAAA,EAAAzE,MACA,IAAAyhF,GAAA,EAAA1+E,sBACA,IAAA3N,OAAA8oF,EAAA,GAAAjoF,GACA,SAAAurF,GAAA,oCAAAvrF,EAAAuE,KAAA,MAAAiK,GAEA,MACA,KAAAg9E,GAAA,EAAAz+E,yBACA,IAAA5N,OAAA8oF,EAAA,GAAAjoF,GACA,SAAAurF,GAAA,uCAAAvrF,EAAAuE,KAAA,MAAAiK,K5KynvBiCvP,EAAuB,EAAIsrF,CACvC,IAAI7kC,GAAmDxmD,EAAoB,MACvE0zD,EAAgD1zD,EAAoB,MACpE8+B,EAAsD9+B,EAAoB,MAC1E6sF,EAAgD7sF,EAAoB,MACpEqsF,EAAoDrsF,EAAoB,MACxEmrF,EAA6CnrF,EAAoB,MACjEyrF,EAAoDzrF,EAAoB,MACxE+oF,EAAiD/oF,EAAoB,M4Kh7vB9FssF,G5Ki7vB0EtsF,EAAoB,M4Kj7vB9FA,EAAA,Q5K0uwBMotF,KACA,SAAUttF,EAAQC,EAAqBC,GAE7C,Y6KvtwBA,SAAAqtF,GAAA72E,GAeA,QAAA82E,GAAAn2E,GACA,UAAAo2E,GAAA,GACAloF,KAAA8R,EAAA9R,KACAwB,YAAAsQ,EAAAtQ,YACAwP,UAAAm3E,EAAAr2E,EAAAd,UAAA,SAAA1G,GACA,MAAAA,KAEAlJ,KAAAgnF,EAAAt2E,EAAA1Q,MACAO,QAAAmQ,EAAAnQ,UAIA,QAAAymF,GAAAhnF,GACA,MAAAxG,QAAAmpD,EAAA,GAAAskC,EAAAjnF,GAAA,SAAAG,GACA,MAAAA,GAAAvB,MACK,SAAAuB,GACL,MAAAV,MAAwBU,GACxB9F,KAAA6sF,EAAA/mF,EAAA9F,UAKA,QAAA8sF,GAAAC,GACA,MAAAC,GAAAD,EAAA,SAAA5nF,GACA,OACAnF,KAAA6sF,EAAA1nF,EAAAnF,MACA2F,KAAAgnF,EAAAxnF,EAAAQ,MACAF,QAAAN,EAAAM,QACAk7B,UAAAx7B,EAAAw7B,UACAp7B,kBAAAJ,EAAAI,kBACAQ,YAAAZ,EAAAY,YACAG,QAAAf,EAAAe,WAKA,QAAA+mF,GAAAF,GACA,MAAAC,GAAAD,EAAA,SAAA5nF,GACA,OACAnF,KAAA6sF,EAAA1nF,EAAAnF,MACAiG,aAAAd,EAAAc,aACAF,YAAAZ,EAAAY,YACAG,QAAAf,EAAAe,WAKA,QAAA2mF,GAAA7sF,GACA,MAAAb,QAAAm+B,EAAA,GAAAt9B,GACA,GAAAs9B,GAAA,EAAAuvD,EAAA7sF,EAAA6C,SACK1D,OAAAm+B,EAAA,GAAAt9B,GACL,GAAAs9B,GAAA,EAAAuvD,EAAA7sF,EAAA6C,SAEAqqF,EAAAltF,GAGA,QAAAmtF,GAAAC,GACA,MAAAR,GAAAQ,GAAAxnF,IAAAsnF,GAGA,QAAAA,GAAAltF,GACA,GAAAb,OAAAkuF,EAAA,GAAArtF,IAAAb,OAAAwrF,EAAA,GAAA3qF,GACA,MAAAA,EAGA,IAAAstF,GAAA5rC,EAAA1hD,EAAAuE,KAKA,OAJA+oF,KACAA,EAAAC,EAAAvtF,GACA0hD,EAAA1hD,EAAAuE,MAAA+oF,GAEAA,EAGA,QAAAC,GAAAvtF,GACA,GAAAb,OAAAm+B,EAAA,GAAAt9B,GACA,MAAAA,EACK,IAAAb,OAAAm+B,EAAA,GAAAt9B,GACL,UAAAs9B,GAAA,GACA/4B,KAAAvE,EAAAuE,KACAH,WAAA,WACA,MAAA+oF,GAAAntF,EAAAgJ,kBAEAD,OAAA,WACA,MAAA+jF,GAAA9sF,EAAA6I,cAEAF,SAAA3I,EAAA2I,SACA5C,YAAA/F,EAAA+F,YACAG,QAAAlG,EAAAkG,QACAwC,kBAAA1I,EAAA0I,mBAEK,IAAAvJ,OAAAm+B,EAAA,GAAAt9B,GACL,UAAAs9B,GAAA,GACA/4B,KAAAvE,EAAAuE,KACAwE,OAAA,WACA,MAAA+jF,GAAA9sF,EAAA6I,cAEAK,YAAAlJ,EAAAkJ,YACAnD,YAAA/F,EAAA+F,YACAG,QAAAlG,EAAAkG,QACAwC,kBAAA1I,EAAA0I,mBAEK,IAAAvJ,OAAAm+B,EAAA,GAAAt9B,GACL,UAAAs9B,GAAA,GACA/4B,KAAAvE,EAAAuE,KACAkC,MAAA,WACA,MAAA0mF,GAAAntF,EAAAmJ,aAEAD,YAAAlJ,EAAAkJ,YACAnD,YAAA/F,EAAA+F,YACAG,QAAAlG,EAAAkG,SAEK,IAAA/G,OAAAm+B,EAAA,GAAAt9B,GACL,UAAAs9B,GAAA,GACA/4B,KAAAvE,EAAAuE,KACAiF,OAAArK,OAAAmpD,EAAA,GAAAskC,EAAA5sF,EAAAsJ,aAAA,SAAAgoE,GACA,MAAAA,GAAA/sE,MACS,SAAA+sE,GACT,OACAjyE,MAAAiyE,EAAAjyE,MACAkG,kBAAA+rE,EAAA/rE,kBACAQ,YAAAurE,EAAAvrE,YACAG,QAAAorE,EAAAprE,WAGAH,YAAA/F,EAAA+F,YACAG,QAAAlG,EAAAkG,SAEK,IAAA/G,OAAAm+B,EAAA,GAAAt9B,GACL,UAAAs9B,GAAA,GACA/4B,KAAAvE,EAAAuE,KACAwE,OAAA,WACA,MAAAkkF,GAAAjtF,EAAA6I,cAEA9C,YAAA/F,EAAA+F,YACAG,QAAAlG,EAAAkG,SAGA,UAAAvG,OAAA,kBAAAK,EAAA,KAvJA,GAAA0hD,GAAAviD,OAAA0F,OAAA,MAEA2oF,EAAA,SAAAC,GACA,MAAAA,IAAAP,EAAAO,GAEA,WAAAC,GAAA,GACAjnF,MAAA0mF,EAAAhuF,OAAAkc,EAAA,GAAA3F,EAAAuC,eACA9H,WAAAy8E,EAAAl3E,EAAAgD,iBAAA9S,IAAA4mF,GACAz1E,MAAAy2E,EAAA93E,EAAA4B,gBACAL,SAAAu2E,EAAA93E,EAAA6B,mBACAJ,aAAAq2E,EAAA93E,EAAA8B,uBACAtR,QAAAwP,EAAAxP,UAgJA,QAAA8mF,GAAApnF,EAAA+nF,GACA,GAAAC,GAAAzuF,OAAA0F,OAAA,MACAgpF,EAAAnB,EAAAvtF,OAAA2F,KAAAc,GAAA,SAAAiJ,GACA,MAAAA,KAEA05D,GAAA,EACAC,GAAA,EACAC,MAAAziE,EAEA,KACA,OAAA0iE,GAAAC,EAAAklB,EAAA7mF,OAAAC,cAA8DshE,GAAAG,EAAAC,EAAAr7C,QAAAC,MAAgEg7C,GAAA,GAC9H,GAAA7gE,GAAAghE,EAAArpE,MAEAA,EAAAuG,EAAA8B,EACAkmF,GAAAlmF,GAAAimF,IAAAtuF,MAEG,MAAAsjC,GACH6lC,GAAA,EACAC,EAAA9lC,EACG,QACH,KACA4lC,GAAAI,EAAAC,QACAD,EAAAC,SAEK,QACL,GAAAJ,EACA,KAAAC,IAKA,MAAAmlB,GAGA,QAAAhB,GAAA79E,GACA,MAAA29E,GAAA39E,EAAA,SAAA5I,GACA,MAAAA,GAAA5B,OAIA,QAAAmoF,GAAA39E,EAAA++E,GACA,MAAA/+E,GAAA6S,QAAAsP,KAAA,SAAA68D,EAAAC,GACA,GAAAC,GAAAH,EAAAC,GACAG,EAAAJ,EAAAE,EACA,OAAAC,GAAAE,cAAAD,K7KghwBiCjvF,EAAuB,EAAIstF,CACvC,IAAIjkC,GAAmDppD,EAAoB,MACvEmc,EAAsDnc,EAAoB,MAC1EwuF,EAA6CxuF,EAAoB,MACjEutF,EAAiDvtF,EAAoB,MACrEo+B,EAAiDp+B,EAAoB,MACrEmuF,EAA8CnuF,EAAoB,M6KpvwB3FyrF,EAAAzrF,EAAA,MAAAkG,EAAAjG,OAAAiI,QAAA,SAAAC,GAAmD,OAAAC,GAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,GAAAG,GAAAF,UAAAD,EAA2B,QAAAI,KAAAD,GAA0BtI,OAAAgI,UAAAjC,eAAAyC,KAAAF,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,MAAAL,K7K09wBzO+mF,KACA,SAAUpvF,EAAQC,EAAqBC,GAE7C,Y8Kj8wBA,SAAAmvF,GAAA34E,EAAA+N,GACA,MAAA6qE,GAAA54E,EAAA,SAAAlW,GACA,OAAAL,OAAAovF,EAAA,GAAA/uF,IACGgvF,EAAA/qE,GAGH,QAAAgrE,GAAA/4E,EAAA+N,GACA,MAAA6qE,GAAA54E,EAAA64E,EAAA,EAAAG,EAAA,EAAAjrE,GAGA,QAAA+qE,GAAAxuF,GACA,OAAAb,OAAAmvC,EAAA,GAAAtuC,KAAAb,OAAAuvF,EAAA,GAAA1uF,GAGA,QAAAsuF,GAAA54E,EAAAi5E,EAAAC,EAAAnrE,GACA,GAAAtT,GAAAuF,EAAAgD,gBAAA9J,OAAA+/E,GACAj3E,EAAAhC,EAAAuC,aACAxR,EAAAtH,OAAA6+B,EAAA,GAAAtmB,GAAAwZ,KAAA,SAAA2lC,EAAAC,GACA,MAAAD,GAAAtyD,KAAA4pF,cAAAr3B,EAAAvyD,QACGqK,OAAAggF,EAEH,QAAAC,EAAAn5E,IAAA+B,OAAAtH,EAAAvK,IAAA,SAAAyQ,GACA,MAAAy4E,GAAAz4E,EAAAoN,KACGhd,EAAAb,IAAA,SAAA5F,GACH,MAAA+uF,GAAA/uF,EAAAyjB,MACG7U,OAAAtJ,SAAAmJ,KAAA,aAGH,QAAAogF,GAAAn5E,GACA,IAAAs5E,EAAAt5E,GAAA,CAIA,GAAAtC,MAEAuI,EAAAjG,EAAA4B,cACAqE,IACAvI,EAAA4E,KAAA,YAAA2D,EAAApX,KAGA,IAAAqX,GAAAlG,EAAA6B,iBACAqE,IACAxI,EAAA4E,KAAA,eAAA4D,EAAArX,KAGA,IAAAsX,GAAAnG,EAAA8B,qBAKA,OAJAqE,IACAzI,EAAA4E,KAAA,mBAAA6D,EAAAtX,MAGA,aAAkB6O,EAAA3E,KAAA,aAelB,QAAAugF,GAAAt5E,GACA,GAAAiG,GAAAjG,EAAA4B,cACA,IAAAqE,GAAA,UAAAA,EAAApX,KACA,QAGA,IAAAqX,GAAAlG,EAAA6B,iBACA,IAAAqE,GAAA,aAAAA,EAAArX,KACA,QAGA,IAAAsX,GAAAnG,EAAA8B,qBACA,QAAAqE,GAAA,iBAAAA,EAAAtX,KAOA,QAAAwqF,GAAA/uF,EAAAyjB,GACA,GAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACA,MAAAivF,GAAAjvF,EAAAyjB,EACG,IAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACH,MAAAkvF,GAAAlvF,EAAAyjB,EACG,IAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACH,MAAAmvF,GAAAnvF,EAAAyjB,EACG,IAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACH,MAAAovF,GAAApvF,EAAAyjB,EACG,IAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACH,MAAAqvF,GAAArvF,EAAAyjB,EACG,IAAAtkB,OAAAwuC,EAAA,GAAA3tC,GACH,MAAAsvF,GAAAtvF,EAAAyjB,EAGA,UAAA9jB,OAAA,iBAAAK,EAAA,KAGA,QAAAivF,GAAAjvF,EAAAyjB,GACA,MAAA8rE,GAAA9rE,EAAAzjB,GAAA,UAAAA,EAAAuE,KAGA,QAAA2qF,GAAAlvF,EAAAyjB,GACA,GAAArf,GAAApE,EAAAgJ,gBACAwmF,EAAAprF,EAAAoD,OAAA,eAAApD,EAAAwB,IAAA,SAAA0B,GACA,MAAAA,GAAA/C,OACGkK,KAAA,SACH,OAAA8gF,GAAA9rE,EAAAzjB,GAAA,QAAAA,EAAAuE,KAAAirF,EAAA,OAA6FC,EAAAhsE,EAAAzjB,GAAA,MAG7F,QAAAmvF,GAAAnvF,EAAAyjB,GACA,MAAA8rE,GAAA9rE,EAAAzjB,GAAA,aAAAA,EAAAuE,KAAA,OAA0EkrF,EAAAhsE,EAAAzjB,GAAA,MAG1E,QAAAovF,GAAApvF,EAAAyjB,GACA,MAAA8rE,GAAA9rE,EAAAzjB,GAAA,SAAAA,EAAAuE,KAAA,MAAAvE,EAAAmJ,WAAAsF,KAAA,OAGA,QAAA4gF,GAAArvF,EAAAyjB,GACA,MAAA8rE,GAAA9rE,EAAAzjB,GAAA,QAAAA,EAAAuE,KAAA,OAAqEmrF,EAAA1vF,EAAAsJ,YAAAma,GAAA,MAGrE,QAAAisE,GAAAlmF,EAAAia,GACA,MAAAja,GAAA5D,IAAA,SAAAvG,EAAAiI,GACA,MAAAioF,GAAA9rE,EAAApkB,EAAA,MAAAiI,GAAA,KAAAjI,EAAAkF,KAAAorF,EAAAtwF,KACGoP,KAAA,MAGH,QAAA6gF,GAAAtvF,EAAAyjB,GACA,GAAA1a,GAAA5J,OAAA6+B,EAAA,GAAAh+B,EAAA6I,YACA,OAAA0mF,GAAA9rE,EAAAzjB,GAAA,SAAAA,EAAAuE,KAAA,OAAsEwE,EAAAnD,IAAA,SAAA07D,EAAAh6D,GACtE,MAAAioF,GAAA9rE,EAAA69C,EAAA,MAAAh6D,GAAA,KAAAsoF,EAAAtuB,KACG7yD,KAAA,YAGH,QAAAghF,GAAAhsE,EAAAzjB,GAEA,MADAb,QAAA6+B,EAAA,GAAAh+B,EAAA6I,aACAjD,IAAA,SAAA07D,EAAAh6D,GACA,MAAAioF,GAAA9rE,EAAA69C,EAAA,MAAAh6D,GAAA,KAAAg6D,EAAA/8D,KAAAsrF,EAAApsE,EAAA69C,EAAA37D,KAAA,WAAAlE,OAAA6/D,EAAAthE,MAAA2vF,EAAAruB,KACG7yD,KAAA,MAGH,QAAAohF,GAAApsE,EAAA9d,GACA,GAAAmqF,GAAAvoF,UAAAC,OAAA,OAAAxB,KAAAuB,UAAA,GAAAA,UAAA,KAEA,YAAA5B,EAAA6B,OACA,GAIA7B,EAAAi+C,MAAA,SAAA99C,GACA,OAAAA,EAAAC,cAEA,IAAAJ,EAAAC,IAAAgqF,GAAAnhF,KAAA,UAGA,MAAA9I,EAAAC,IAAA,SAAAE,EAAAwB,GACA,MAAAioF,GAAA9rE,EAAA3d,EAAA,KAAAgqF,GAAAxoF,GAAA,KAAAwoF,EAAAF,EAAA9pF,KACG2I,KAAA,WAAAqhF,EAAA,IAGH,QAAAF,GAAA9pF,GACA,GAAAiqF,GAAAjqF,EAAAvB,KAAA,KAAA9C,OAAAqE,EAAA9F,KAIA,OAHAb,QAAAq+B,EAAA,GAAA13B,EAAAG,gBACA8pF,GAAA,MAAA5wF,OAAA6wF,EAAA,GAAA7wF,OAAA8wF,EAAA,GAAAnqF,EAAAG,aAAAH,EAAA9F,QAEA+vF,EAGA,QAAAjB,GAAAz4E,EAAAoN,GACA,MAAA8rE,GAAA9rE,EAAApN,GAAA,cAAAA,EAAA9R,KAAAsrF,EAAApsE,EAAApN,EAAA1Q,MAAA,OAAA0Q,EAAAd,UAAA9G,KAAA,OAGA,QAAAkhF,GAAAO,GACA,IAAAA,EAAA7qF,aACA,QAEA,IAAA8U,GAAA+1E,EAAA3qF,iBACA,OAAApG,QAAAgxF,EAAA,GAAAh2E,IAAA,KAAAA,OAAAo0E,EAAA,EACA,eAEA,wBAAApvF,OAAA6wF,EAAA,GAAA7wF,OAAA8wF,EAAA,GAAA91E,EAAAm0B,EAAA,QAGA,QAAAihD,GAAA9rE,EAAAqvB,GACA,GAAAg9C,GAAAvoF,UAAAC,OAAA,OAAAxB,KAAAuB,UAAA,GAAAA,UAAA,MACA6oF,IAAA7oF,UAAAC,OAAA,OAAAxB,KAAAuB,UAAA,KAAAA,UAAA,EAEA,KAAAurC,EAAA/sC,YACA,QAGA,IAAA4gD,GAAA0pC,EAAAv9C,EAAA/sC,YAAA,IAAA+pF,EAAAtoF,OACA,IAAAic,KAAAg3C,oBACA,MAAA61B,GAAA3pC,EAAAmpC,EAAAM,EAGA,IAAArqF,GAAA+pF,IAAAM,EAAA,KAAAN,EAAA,MAAAA,EAAA,KAGA,QAAAnpC,EAAAn/C,QAAAm/C,EAAA,GAAAn/C,OAAA,UAAAm/C,EAAA,GAAAA,EAAA,GAAAn/C,OAAA,GACA,MAAAzB,GAAAwqF,EAAA5pC,EAAA,WAIA,IAAA6pC,GAAA,MAAA7pC,EAAA,cAAAA,EAAA,KACA6pC,KACAzqF,GAAA,KAEA,QAAAuB,GAAA,EAAiBA,EAAAq/C,EAAAn/C,OAAkBF,IACnC,IAAAA,GAAAkpF,IACAzqF,GAAA+pF,GAEA/pF,GAAAwqF,EAAA5pC,EAAAr/C,IAAA,IAGA,OADAvB,IAAA+pF,EAAA,QAIA,QAAAS,GAAAtlD,GACA,MAAAA,GAAA57B,QAAA,gBAGA,QAAAihF,GAAA3pC,EAAAmpC,EAAAM,GAEA,OADArqF,GAAA+pF,IAAAM,EAAA,QACA9oF,EAAA,EAAiBA,EAAAq/C,EAAAn/C,OAAkBF,IACnC,KAAAq/C,EAAAr/C,GACAvB,GAAA+pF,EAAA,MAEA/pF,GAAA+pF,EAAA,KAAAnpC,EAAAr/C,GAAA,IAGA,OAAAvB,GAGA,QAAAsqF,GAAAtqF,EAAA0qF,GAGA,OAFA9pC,MACA+pC,EAAA3qF,EAAA6gD,MAAA,MACAt/C,EAAA,EAAiBA,EAAAopF,EAAAlpF,OAAqBF,IACtC,QAAAopF,EAAAppF,GACAq/C,EAAA3uC,KAAA04E,EAAAppF,QAKA,QADAqpF,GAAAC,EAAAF,EAAAppF,GAAAmpF,GACAl/D,EAAA,EAAqBA,EAAAo/D,EAAAnpF,OAAqB+pB,IAC1Co1B,EAAA3uC,KAAA24E,EAAAp/D,GAIA,OAAAo1B,GAGA,QAAAiqC,GAAA3lD,EAAAwlD,GACA,GAAAxlD,EAAAzjC,OAAAipF,EAAA,EACA,OAAAxlD,EAEA,IAAA4lD,GAAA5lD,EAAA2b,MAAA,GAAAgX,QAAA,iBAA+C6yB,EAAA,iBAC/C,IAAAI,EAAArpF,OAAA,EACA,OAAAyjC,EAGA,QADA0lD,IAAAE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAvpF,EAAA,EAAiBA,EAAAupF,EAAArpF,OAAkBF,GAAA,EACnCqpF,EAAA34E,KAAA64E,EAAAvpF,GAAAsa,MAAA,GAAAivE,EAAAvpF,EAAA,GAEA,OAAAqpF,G9KqrwBiC1xF,EAAuB,EAAIovF,EAC3BpvF,EAAuB,EAAIwvF,EAC3BxvF,EAAuB,EAAI8vF,CACvC,IAAIoB,GAAmDjxF,EAAoB,MACvEs+B,EAAmDt+B,EAAoB,MACvE8+B,EAAsD9+B,EAAoB,MAC1E+wF,EAAwD/wF,EAAoB,MAC5E8wF,EAAkD9wF,EAAoB,MACtEyuC,EAAiDzuC,EAAoB,MACrEovC,EAA8CpvC,EAAoB,MAClEqvF,EAAiDrvF,EAAoB,M8Kx+wB9FwvF,EAAAxvF,EAAA,O9KwxxBM4xF,KACA,SAAU9xF,EAAQC,EAAqBC,GAE7C,Y+K5wxBA,SAAA6xF,GAAA1xF,EAAAW,GACA,GAAAuyB,GAAApzB,OAAA6xF,EAAA,GAAA3xF,EAAAW,GAAAuyB,MACA,OAAAA,KAAA3sB,IAAA,SAAA8sB,GACA,MAAAA,GAAA3Z,a/K0wxBiC9Z,EAAuB,EAAI8xF,C+K5xxB5D,IAAAC,GAAA9xF,EAAA,O/KszxBM+xF,KACA,SAAUjyF,EAAQC,EAAqBC,GAE7C,YgLlyxBA,SAAAgyF,GAAAlxF,EAAAwI,GACA,GAAA2oF,GAAA,GAAAC,GAAA,MACAC,GAAkBtnF,KAAAqW,EAAA,EAAAxV,SAAAiF,gBAClBqT,EAAA,GAAAouE,GAAA,EAAAH,MAAAnrF,GAAAhG,GACA6c,EAAA,GAAA00E,GAAA,EAAAJ,EAAAE,EAAAnuE,GACAlC,EAAA7hB,OAAAqyF,EAAA,GAAA30E,EAEA,OADA1d,QAAAmqD,EAAA,GAAA9gD,EAAArJ,OAAAmqD,EAAA,GAAApmC,EAAAlC,IACAnE,EAAA2V,YhL4xxBiCvzB,EAAuB,EAAIiyF,CACvC,IAAII,GAA0CpyF,EAAoB,MAC9DkhB,EAAgDlhB,EAAoB,MACpEoqD,EAAkDpqD,EAAoB,MACtEkyF,EAA6ClyF,EAAoB,MACjEsyF,EAAsEtyF,EAAoB,MgL/zxBnHqyF,EAAAryF,EAAA,OhLo2xBMuyF,KACA,SAAUzyF,EAAQC,EAAqBC,GAE7C,YiLh2xBA,SAAAwyF,GAAAC,GAEA,OADAC,MACAtqF,EAAA,EAAiBA,EAAAqqF,EAAAnqF,OAAiBF,IAElC,OADAuI,GAAA8hF,EAAArqF,GAAAuI,YACA0hB,EAAA,EAAmBA,EAAA1hB,EAAArI,OAAwB+pB,IAC3CqgE,EAAA55E,KAAAnI,EAAA0hB,GAGA,QACAxnB,KAAA,WACA8F,YAAA+hF,GjLu1xBiC3yF,EAAuB,EAAIyyF,GA+BtDG,KACA,SAAU7yF,EAAQC,EAAqBC,GAE7C,YkLx3xBA,SAAA4yF,GAAA3oC,GACA,GAAAjP,MACAzhB,EAAAt5B,OAAA0F,OAAA,MACAkZ,EAAA,GAAA5T,KACA4nF,EAAA5yF,OAAA0F,OAAA,MACAmtF,MAAA,GACAC,EAAA,CAGA9yF,QAAA+yF,EAAA,GAAA/oC,GACAr5C,oBAAA,SAAAtB,GACAwjF,EAAAxhC,EAAAhiD,GACA0rC,EAAAliC,KAAAxJ,GACAuP,EAAA3T,IAAAoE,EAAAyjF,MAEA5gF,mBAAA,SAAA7C,GACAwjF,EAAAxjF,EAAAjK,KAAAlF,MACAo5B,EAAAu5D,GAAAxjF,EACAuP,EAAA3T,IAAAoE,EAAAyjF,MAEAjhF,eAAA,SAAAxC,GACA,GAAA2jF,GAAA3jF,EAAAjK,KAAAlF,OACA0yF,EAAAC,KAAAD,EAAAC,GAAA7yF,OAAA0F,OAAA,QAAAstF,IAAA,IAMA,IAAAC,GAAAjzF,OAAA0F,OAAA,KAsBA,OArBAq1C,GAAAn1C,QAAA,SAAAiL,GACA,GAAAsnB,GAAAk5B,EAAAxgD,GACAqiF,EAAAlzF,OAAA0F,OAAA,KACAytF,GAAAD,EAAAN,EAAAz6D,EAIA,IAAAznB,IAAAG,EACA7Q,QAAA2F,KAAAutF,GAAAttF,QAAA,SAAAR,GACAsL,EAAAmI,KAAAygB,EAAAl0B,MAEAsL,EAAAqhB,KAAA,SAAAqhE,EAAAC,GACA,OAAAz0E,EAAAlU,IAAA0oF,IAAA,IAAAx0E,EAAAlU,IAAA2oF,IAAA,KAGAJ,EAAA96D,IACAvtB,KAAA,WACA8F,iBAIAuiF,EAIA,QAAA5hC,GAAAxgD,GACA,MAAAA,GAAAzL,KAAAyL,EAAAzL,KAAAlF,MAAA,GAKA,QAAAizF,GAAAG,EAAAV,EAAAC,GACA,GAAAU,GAAAX,EAAAC,EACAU,IACAvzF,OAAA2F,KAAA4tF,GAAA3tF,QAAA,SAAAotF,GACAM,EAAAN,KACAM,EAAAN,IAAA,EACAG,EAAAG,EAAAV,EAAAI,MlLuzxBiClzF,EAAuB,EAAI6yF,CkL34xB5D,IAAAI,GAAAhzF,EAAA,OlLy+xBMyzF,KACA,SAAU3zF,EAAQC,EAAqBC,GAE7C,YmL97xBA,SAAA0zF,GAAAC,EAAAC,GACA,SAAAr7E,OAAAs7E,EAAAF,EAAAC,GAAAE,EAAAH,EAAAC,GAAAG,EAAAJ,EAAAC,GAAAI,EAAAL,EAAAC,GAAAK,gBAAAC,EAAAP,EAAAC,GAAAO,EAAAR,EAAAC,GAAAQ,EAAAT,EAAAC,GAAAK,gBAAAI,EAAAV,EAAAC,GAAAU,EAAAX,EAAAC,GAAAW,EAAAZ,EAAAC,GAAAY,EAAAb,EAAAC,GAAAa,EAAAd,EAAAC,IAOA,QAAAc,GAAAf,EAAAC,GACA,SAAAr7E,OAAA67E,EAAAT,EAAAC,GAAAe,iBAAAC,EAAAjB,EAAAC,GAAAiB,EAAAlB,EAAAC,GAAAkB,EAAAnB,EAAAC,GAAAI,EAAAL,EAAAC,GAAAe,kBAOA,QAAAd,GAAAF,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk7E,IASA,OARAh0F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACAq8E,EAAAr8E,IACAs7E,EAAAn7E,MACAhY,KAAAm0F,EAAAC,aACAruF,YAAA8R,EAAA,oBAIAs7E,EAOA,QAAAH,GAAAH,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk7E,IAcA,OAbAh0F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAq8E,EAAAr8E,GAAA,CAGA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACAw8E,GAAAntF,cAAAotF,EAAAptF,aACAisF,EAAAn7E,MACAhY,KAAAm0F,EAAAI,kBACAxuF,YAAA8R,EAAA,iBAAA28E,EAAAH,GAAA,OAAAG,EAAAF,GAAA,SAIAnB,EASA,QAAAG,GAAAT,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk7E,KACAU,IAmEA,OAjEA10F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,KAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA29D,MAAAl1F,OAAAu3B,EAAA,GAAA49D,IAAAn1F,OAAAu3B,EAAA,GAAA49D,OAAAptF,cAAAmtF,EAAAntF,YAAA,CAIA,GAAAutF,GAAAJ,EAAAxrF,YACA6rF,EAAAJ,EAAAzrF,WAEA1J,QAAA2F,KAAA2vF,GAAA1vF,QAAA,SAAAC,GACA0vF,EAAA1vF,KAIAyvF,EAAAzvF,GAAAW,KAAAZ,QAAA,SAAA4vF,GACA,GAAAC,GAAAF,EAAA1vF,GAAAW,KACAkvF,EAAAD,EAAAvpE,KAAA,SAAAvlB,GACA,MAAAA,GAAAvB,OAAAowF,EAAApwF,MAIA,IAAAswF,EAKS,CACTC,EAAAH,EAAA30F,KAAA60F,EAAA70F,UAMWgG,KAAA2uF,EAAA1uF,cAAA0uF,EAAA1uF,eAAA4uF,EAAA5uF,cACX4tF,EAAA77E,MACAhY,KAAA+0F,EAAAC,yBACAjvF,YAAAsuF,EAAA9vF,KAAA,IAAAS,EAAA,QAAA2vF,EAAApwF,KAAA,8BAPA4uF,EAAAn7E,MACAhY,KAAAm0F,EAAAc,iBACAlvF,YAAAsuF,EAAA9vF,KAAA,IAAAS,EAAA,QAAA2vF,EAAApwF,KAAA,0BAAAowF,EAAA30F,KAAA6H,WAAA,OAAAgtF,EAAA70F,KAAA6H,iBATAsrF,GAAAn7E,MACAhY,KAAAm0F,EAAAe,YACAnvF,YAAAsuF,EAAA9vF,KAAA,IAAAS,EAAA,QAAA2vF,EAAApwF,KAAA,mBAkBAmwF,EAAA1vF,GAAAW,KAAAZ,QAAA,SAAA8vF,GACAJ,EAAAzvF,GAAAW,KACA0lB,KAAA,SAAAvlB,GACA,MAAAA,GAAAvB,OAAAswF,EAAAtwF,SAGApF,OAAAu3B,EAAA,GAAAm+D,EAAA70F,MACAmzF,EAAAn7E,MACAhY,KAAAm0F,EAAAgB,mBACApvF,YAAA,kBAAA8uF,EAAAtwF,KAAA,OAAA+vF,EAAA/vF,KAAA,IAAAS,EAAA,eAGA6uF,EAAA77E,MACAhY,KAAA+0F,EAAAK,mBACArvF,YAAA,kBAAA8uF,EAAAtwF,KAAA,OAAA+vF,EAAA/vF,KAAA,IAAAS,EAAA,yBASAmuF,kBACAU,oBAIA,QAAAW,GAAAx0F,GACA,GAAAb,OAAAu3B,EAAA,GAAA12B,GACA,qBAEA,IAAAb,OAAAu3B,EAAA,GAAA12B,GACA,sBAEA,IAAAb,OAAAu3B,EAAA,GAAA12B,GACA,yBAEA,IAAAb,OAAAu3B,EAAA,GAAA12B,GACA,oBAEA,IAAAb,OAAAu3B,EAAA,GAAA12B,GACA,oBAEA,IAAAb,OAAAu3B,EAAA,GAAA12B,GACA,qBAEA,UAAAa,WAAA,gBAAAb,EAAAkH,YAAA3C,MAGA,QAAA0uF,GAAAJ,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk7E,IAgCA,OA/BAh0F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,KAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA29D,MAAAl1F,OAAAu3B,EAAA,GAAA49D,IAAAn1F,OAAAu3B,EAAA,GAAA49D,OAAAptF,cAAAmtF,EAAAntF,YAAA,CAIA,GAAAmuF,GAAAhB,EAAAxrF,YACAysF,EAAAhB,EAAAzrF,WACA1J,QAAA2F,KAAAuwF,GAAAtwF,QAAA,SAAAC,GAEA,GAAAA,IAAAswF,GAKO,CACP,GAAAC,GAAAF,EAAArwF,GAAAhF,KACAw1F,EAAAF,EAAAtwF,GAAAhF,IAEA,KADAy1F,EAAAF,EAAAC,GACA,CACA,GAAAE,GAAAv2F,OAAAu3B,EAAA,GAAA6+D,KAAAhxF,KAAAgxF,EAAA1tF,WACA8tF,EAAAx2F,OAAAu3B,EAAA,GAAA8+D,KAAAjxF,KAAAixF,EAAA3tF,UACAsrF,GAAAn7E,MACAhY,KAAAm0F,EAAAyB,mBACA7vF,YAAA8R,EAAA,IAAA7S,EAAA,sBAAA0wF,EAAA,OAAAC,EAAA,WAbAxC,GAAAn7E,MACAhY,KAAAm0F,EAAA0B,cACA9vF,YAAA8R,EAAA,IAAA7S,EAAA,uBAiBAmuF,EAGA,QAAAD,GAAAL,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk7E,KACAU,IAiDA,OAhDA10F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAIA,GAAAe,GAAAhB,EAAAxrF,YACAysF,EAAAhB,EAAAzrF,WACA1J,QAAA2F,KAAAuwF,GAAAtwF,QAAA,SAAAC,GAEA,GAAAA,IAAAswF,GAKO,CACP,GAAAC,GAAAF,EAAArwF,GAAAhF,KACAw1F,EAAAF,EAAAtwF,GAAAhF,IAGA,KADA80F,EAAAS,EAAAC,GACA,CACA,GAAAE,GAAAv2F,OAAAu3B,EAAA,GAAA6+D,KAAAhxF,KAAAgxF,EAAA1tF,WACA8tF,EAAAx2F,OAAAu3B,EAAA,GAAA8+D,KAAAjxF,KAAAixF,EAAA3tF,UACAsrF,GAAAn7E,MACAhY,KAAAm0F,EAAAyB,mBACA7vF,YAAA8R,EAAA,IAAA7S,EAAA,sBAAA0wF,EAAA,OAAAC,EAAA,WAdAxC,GAAAn7E,MACAhY,KAAAm0F,EAAA0B,cACA9vF,YAAA8R,EAAA,IAAA7S,EAAA,oBAkBA7F,OAAA2F,KAAAwwF,GAAAvwF,QAAA,SAAAC,GACAA,IAAAqwF,KACAl2F,OAAAu3B,EAAA,GAAA4+D,EAAAtwF,GAAAhF,MACAmzF,EAAAn7E,MACAhY,KAAAm0F,EAAA2B,2BACA/vF,YAAA,oBAAAf,EAAA,kBAAAsvF,EAAA/vF,KAAA,gBAGAsvF,EAAA77E,MACAhY,KAAA+0F,EAAAgB,2BACAhwF,YAAA,oBAAAf,EAAA,kBAAAsvF,EAAA/vF,KAAA,uBAOA4uF,kBACAU,oBAIA,QAAA4B,GAAApB,EAAAC,GACA,MAAAn1F,QAAAu3B,EAAA,GAAA29D,GAGAl1F,OAAAu3B,EAAA,GAAA49D,IAAAD,EAAA9vF,OAAA+vF,EAAA/vF,MAEApF,OAAAu3B,EAAA,GAAA49D,IAAAmB,EAAApB,EAAAC,EAAAzxF,QAEG1D,OAAAu3B,EAAA,GAAA29D,GAGHl1F,OAAAu3B,EAAA,GAAA49D,IAAAmB,EAAApB,EAAAxxF,OAAAyxF,EAAAzxF,SAEA1D,OAAAu3B,EAAA,GAAA49D,IAAAmB,EAAApB,EAAAC,EAAAzxF,UAEG1D,OAAAu3B,EAAA,GAAA29D,KAEHl1F,OAAAu3B,EAAA,GAAA49D,IAAAmB,EAAApB,EAAAxxF,OAAAyxF,EAAAzxF,SAKA,QAAAiyF,GAAAT,EAAAC,GACA,MAAAn1F,QAAAu3B,EAAA,GAAA29D,GAEAl1F,OAAAu3B,EAAA,GAAA49D,IAAAD,EAAA9vF,OAAA+vF,EAAA/vF,KACGpF,OAAAu3B,EAAA,GAAA29D,GAEHl1F,OAAAu3B,EAAA,GAAA49D,IAAAQ,EAAAT,EAAAxxF,OAAAyxF,EAAAzxF,UACG1D,OAAAu3B,EAAA,GAAA29D,KAIHl1F,OAAAu3B,EAAA,GAAA49D,IAAAQ,EAAAT,EAAAxxF,OAAAyxF,EAAAzxF,UAEA1D,OAAAu3B,EAAA,GAAA49D,IAAAQ,EAAAT,EAAAxxF,OAAAyxF,IAUA,QAAAlB,GAAAP,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEA+9E,IAoBA,OAnBA72F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAGA,GAAA2B,GAAA92F,OAAA0F,OAAA,KACAyvF,GAAAnrF,WAAApE,QAAA,SAAA/E,GACAi2F,EAAAj2F,EAAAuE,OAAA,IAEA8vF,EAAAlrF,WAAApE,QAAA,SAAA/E,GACAi2F,EAAAj2F,EAAAuE,OACAyxF,EAAAh+E,MACAhY,KAAAm0F,EAAA+B,wBACAnwF,YAAA/F,EAAAuE,KAAA,gCAAAsT,EAAA,WAKAm+E,EAOA,QAAAhC,GAAAnB,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAk+E,IAoBA,OAnBAh3F,QAAA2F,KAAAovF,GAAAnvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAGA,GAAA8B,GAAAj3F,OAAA0F,OAAA,KACAwvF,GAAAlrF,WAAApE,QAAA,SAAA/E,GACAo2F,EAAAp2F,EAAAuE,OAAA,IAEA+vF,EAAAnrF,WAAApE,QAAA,SAAA/E,GACAo2F,EAAAp2F,EAAAuE,OACA4xF,EAAAn+E,MACAhY,KAAA+0F,EAAAsB,oBACAtwF,YAAA/F,EAAAuE,KAAA,4BAAAsT,EAAA,WAKAs+E,EAMA,QAAA9C,GAAAR,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAq+E,IAoBA,OAnBAn3F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAGA,GAAAiC,GAAAp3F,OAAA0F,OAAA,KACAyvF,GAAAhrF,YAAAvE,QAAA,SAAA1F,GACAk3F,EAAAl3F,EAAAkF,OAAA,IAEA8vF,EAAA/qF,YAAAvE,QAAA,SAAA1F,GACAk3F,EAAAl3F,EAAAkF,OACA+xF,EAAAt+E,MACAhY,KAAAm0F,EAAAqC,wBACAzwF,YAAA1G,EAAAkF,KAAA,+BAAAsT,EAAA,WAKAy+E,EAOA,QAAAxC,GAAAjB,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aAEAw+E,IAqBA,OApBAt3F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAIA,GAAAoC,GAAAv3F,OAAA0F,OAAA,KACAwvF,GAAA/qF,YAAAvE,QAAA,SAAA1F,GACAq3F,EAAAr3F,EAAAkF,OAAA,IAEA+vF,EAAAhrF,YAAAvE,QAAA,SAAA1F,GACAq3F,EAAAr3F,EAAAkF,OACAkyF,EAAAz+E,MACAhY,KAAA+0F,EAAA4B,oBACA5wF,YAAA1G,EAAAkF,KAAA,2BAAAsT,EAAA,WAKA4+E,EAGA,QAAAlD,GAAAV,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aACAk7E,IAsBA,OApBAh0F,QAAA2F,KAAAmvF,GAAAlvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAIA,GAAAsC,GAAAvC,EAAArrF,gBACA6tF,EAAAvC,EAAAtrF,eACA4tF,GAAA7xF,QAAA,SAAA+xF,GACAD,EAAAr9E,KAAA,SAAAgG,GACA,MAAAA,GAAAjb,OAAAuyF,EAAAvyF,QAEA4uF,EAAAn7E,MACAhY,KAAAm0F,EAAA4C,8BACAhxF,YAAA8R,EAAA,mCAAAi/E,EAAAvyF,KAAA,WAKA4uF,EAGA,QAAAY,GAAAlB,EAAAC,GACA,GAAAmB,GAAApB,EAAA56E,aACAi8E,EAAApB,EAAA76E,aACA++E,IAsBA,OApBA73F,QAAA2F,KAAAovF,GAAAnvF,QAAA,SAAA8S,GACA,GAAAw8E,GAAAJ,EAAAp8E,GACAy8E,EAAAJ,EAAAr8E,EACA,IAAA1Y,OAAAu3B,EAAA,GAAA29D,IAAAl1F,OAAAu3B,EAAA,GAAA49D,GAAA,CAIA,GAAAsC,GAAAvC,EAAArrF,eACAsrF,GAAAtrF,gBACAjE,QAAA,SAAAkyF,GACAL,EAAAp9E,KAAA,SAAAgG,GACA,MAAAA,GAAAjb,OAAA0yF,EAAA1yF,QAEAyyF,EAAAh/E,MACAhY,KAAA+0F,EAAAmC,0BACAnxF,YAAAkxF,EAAA1yF,KAAA,uCAAAsT,EAAA,WAKAm/E,EAGA,QAAAxD,GAAAX,EAAAC,GACA,GAAAqE,MAEAC,EAAAC,EAAAvE,EAUA,OATAD,GAAAn6E,gBAAA3T,QAAA,SAAAsR,GACA+gF,EAAA/gF,EAAA9R,OACA4yF,EAAAn/E,MACAhY,KAAAm0F,EAAAmD,kBACAvxF,YAAAsQ,EAAA9R,KAAA,mBAKA4yF,EAGA,QAAAI,GAAAC,EAAAC,GACA,GAAAC,MACAC,EAAAC,EAAAH,EAQA,OANAD,GAAA7xF,KAAAZ,QAAA,SAAAe,GACA6xF,EAAA7xF,EAAAvB,OACAmzF,EAAA1/E,KAAAlS,KAIA4xF,EAGA,QAAAjE,GAAAZ,EAAAC,GACA,GAAA+E,MACAC,EAAAT,EAAAxE,EAgBA,OAdAC,GAAAp6E,gBAAA3T,QAAA,SAAA0yF,GACA,GAAAD,GAAAM,EAAAL,EAAAlzF,KACAizF,IAIAD,EAAAC,EAAAC,GAAA1yF,QAAA,SAAAe,GACA+xF,EAAA7/E,MACAhY,KAAAm0F,EAAA4D,sBACAhyF,YAAAD,EAAAvB,KAAA,qBAAAkzF,EAAAlzF,WAKAszF,EAGA,QAAAG,GAAAR,EAAAC,GACA,GAAAQ,MACAC,EAAAN,EAAAJ,EAQA,OANAC,GAAA9xF,KAAAZ,QAAA,SAAAe,GACAoyF,EAAApyF,EAAAvB,OACA0zF,EAAAjgF,KAAAlS,KAIAmyF,EAGA,QAAAvE,GAAAb,EAAAC,GACA,GAAAqF,MACAL,EAAAT,EAAAxE,EAoBA,OAlBAC,GAAAp6E,gBAAA3T,QAAA,SAAA0yF,GACA,GAAAD,GAAAM,EAAAL,EAAAlzF,KACAizF,IAIAQ,EAAAR,EAAAC,GAAA1yF,QAAA,SAAAe,GACA3G,OAAAu3B,EAAA,GAAA5wB,EAAA9F,OAIAm4F,EAAAngF,MACAhY,KAAAm0F,EAAAiE,6BACAryF,YAAA,kBAAAD,EAAAvB,KAAA,iBAAAkzF,EAAAlzF,KAAA,mBAKA4zF,EAGA,QAAAE,GAAAb,EAAAC,GACA,GAAAa,MACAC,EAAA,GAAAC,KAAAf,EAAAliF,UAQA,OANAiiF,GAAAjiF,UAAAxQ,QAAA,SAAA0zF,GACAF,EAAAnjC,IAAAqjC,IACAH,EAAAtgF,KAAAygF,KAIAH,EAGA,QAAA3E,GAAAd,EAAAC,GACA,GAAAwF,MACAR,EAAAT,EAAAxE,EAgBA,OAdAC,GAAAp6E,gBAAA3T,QAAA,SAAA0yF,GACA,GAAAD,GAAAM,EAAAL,EAAAlzF,KACAizF,IAIAa,EAAAb,EAAAC,GAAA1yF,QAAA,SAAAkhD,GACAqyC,EAAAtgF,MACAhY,KAAAm0F,EAAAuE,2BACA3yF,YAAAkgD,EAAA,qBAAAwxC,EAAAlzF,WAKA+zF,EAGA,QAAAjB,GAAA3hF,GACA,MAAAvW,QAAA8zC,EAAA,GAAAv9B,EAAAgD,gBAAA,SAAAypD,GACA,MAAAA,GAAA59D,OAIA,QAAAqzF,GAAAvhF,GACA,MAAAlX,QAAA8zC,EAAA,GAAA58B,EAAA1Q,KAAA,SAAAG,GACA,MAAAA,GAAAvB,OnL01wB+BrF,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAOk1F,KACpEj1F,EAAoBkB,EAAEnB,EAAqB,IAAK,WAAa,MAAO81F,KAClE91F,EAAuB,EAAI2zF,EAC3B3zF,EAAuB,EAAI20F,CAiBvC,IAAIl9D,GAAiDx3B,EAAoB,MmLjgyB9F+zC,GnLkgyB0E/zC,EAAoB,MACxBA,EAAoB,MmLngyB1FA,EAAA,OAeAi1F,GACAyB,mBAAA,qBACAC,cAAA,gBACAtB,kBAAA,oBACAH,aAAA,eACA8B,wBAAA,0BACAM,wBAAA,0BACAtB,YAAA,cACAD,iBAAA,mBACAE,mBAAA,qBACAW,2BAAA,6BACAiB,8BAAA,gCACAO,kBAAA,oBACAS,sBAAA,wBACAW,2BAAA,6BACAN,6BAAA,gCAGArD,GACAC,yBAAA,2BACA2B,oBAAA,sBACAO,0BAAA,4BACAb,oBAAA,sBACAN,2BAAA,6BACAX,mBAAA,uBnLunzBMuD,KACA,SAAU35F,EAAQC,EAAqBC,GAE7C,YoL5ozBA,SAAA05F,GAAAljF,EAAAxH,GACA,GAAAqkB,MACArP,EAAA,GAAA21E,GAAA,EAAAnjF,EAyBA,OAvBAvW,QAAAgxC,EAAA,GAAAjiC,EAAA/O,OAAAgxC,EAAA,GAAAjtB,GACAvS,MAAA,SAAAnC,GACA,GAAAmhB,GAAAzM,EAAAkL,aACA,IAAAuB,KAAAtqB,aAAA,CACA,GAAA4X,GAAAiG,EAAAmM,eACA,IAAApS,EAAA,CACA,GAAA9C,GAAAwV,EAAApqB,iBACAgtB,GAAAva,KAAA,GAAA0wC,GAAA,eAAAzrC,EAAA1Y,KAAA,IAAAorB,EAAAprB,KAAA,mBAAA4V,EAAA,IAAAA,EAAA,KAAA3L,QAIA0D,UAAA,SAAA1D,GACA,GAAAsqF,GAAA51E,EAAAuM,cACA,IAAAqpE,KAAAzzF,aAAA,CACA,GAAArF,GAAAb,OAAAmwC,EAAA,GAAApsB,EAAAoM,eACA,IAAAtvB,EAAA,CACA,GAAAma,GAAA2+E,EAAAvzF,iBACAgtB,GAAAva,KAAA,GAAA0wC,GAAA,oBAAA1oD,EAAAuE,KAAA,IAAAu0F,EAAAv0F,KAAA,mBAAA4V,EAAA,IAAAA,EAAA,KAAA3L,WAMA+jB,EpLknzBiCtzB,EAAuB,EAAI25F,CACvC,IAAIlwC,GAAoDxpD,EAAoB,MACxEixC,EAAkDjxC,EAAoB,MACtEowC,EAAiDpwC,EAAoB,MoLrqzB9F25F,GpLsqzBsE35F,EAAoB,MoLtqzB1FA,EAAA,QpL6tzBM65F,KACA,SAAU/5F,EAAQ6sB,EAAS3sB,GAEjC,YqLnszBA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GA3B7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,IAEAwsB,EAAA0sB,sBAAAvyC,EAEA,IAAA03E,GAAAx+E,EAAA,MAEAy+E,EAAAloC,EAAAioC,GAEAE,GAAA,EAAAD,EAAA/yC,UAAA,gFAEAizC,EAAA3+E,EAAA,MAEA4+E,EAAAroC,EAAAooC,GAEAmb,EAAA95F,EAAA,MAEA+5F,EAAAxjD,EAAAujD,GAEAE,EAAAh6F,EAAA,MAEAi6F,EAAA1jD,EAAAyjD,GAEAE,EAAAl6F,EAAA,MAEAm6F,EAAA5jD,EAAA2jD,GAIA7gD,EAAA1sB,EAAA0sB,kBAAA,SAAA+gD,EAAAC,EAAAC,GACA,gBAAA5gD,GACA,GAAA6gD,GAAA7gD,EAAAulC,UAAAv4E,IAAA,SAAA8zF,GACA,MAAAA,GAAA15F,KAAAuE,MAGA,iBAAA2zC,EAAAyhD,EAAA15F,GACA,GAAAP,GAAAk5C,EAAAulC,UAAA9yD,KAAA,SAAAquE,GACA,MAAAA,GAAA15F,KAAAuE,OAAAo1F,GAGA,KAAAj6F,EACA,SAAAC,OAAA,oBAAAg6F,EAAA,oFAAAF,EAAAhrF,KAAA,MAGA,IAAAkN,GAAAjc,EAAAw4C,EAEA,KAAAv8B,EACA,SAAAhc,OAAA,gDAAAu4C,EAAA,gCAAAx4C,EAAAM,KAAAuE,KAGA,IAAAkE,GAAA6wF,EAAA1gD,GAAAl5C,EAAAw4C,EAAAj4C,EAAA0b,GACA5E,EAAAwiF,EAAA3gD,GAAAl5C,EAAAw4C,EAAAv8B,EAAAlT,GACAywC,EAAAsgD,EAAA5gD,GAAAV,EAAAx4C,EAAAic,EAEA,QACA5E,OAAA,EAAA+mE,EAAAlzC,SAAAgzC,EAAA7mE,GACAtO,YACAywC,mBAMArtB,GAAA+e,QAAA2N,EAAA0gD,EAAAruD,QAAAuuD,EAAAvuD,QAAAyuD,EAAAzuD,UrLquzBMgvD,KACA,SAAU56F,EAAQ6sB,EAAS3sB,GAEjC,YsL7wzBA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GA1B7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,GAGA,IAAAk3C,GAAAr3C,EAAA,IAEAs3C,EAAAf,EAAAc,GAEAsjD,EAAA36F,EAAA,KAEA46F,EAAArkD,EAAAokD,GAEAE,EAAA76F,EAAA,GAEA86F,EAAAvkD,EAAAskD,GAEAhjD,EAAA73C,EAAA,IAEA+6F,EAAA/6F,EAAA,MAEAg7F,EAAAzkD,EAAAwkD,GAEAE,EAAAj7F,EAAA,MAEAk7F,EAAA3kD,EAAA0kD,GAIAE,EAAA,SAAAr6F,EAAAX,GACA,cAAAW,EAAAuE,KACA8b,SAAAhhB,GAGA,UAAAW,EAAAuE,KACA+b,WAAAjhB,GAGAA,GAGAi7F,EAAA,SAAA1hD,GACA,gBAAAl5C,EAAAw4C,EAAAj4C,GACA,GAAA2O,GAAAzP,OAAA2F,KAAA7E,EAAA2O,QAAAqH,OAAA,SAAAsnD,EAAA71D,GACA,WAAAA,EACA,SAAAsyF,EAAApvD,YAAiD2yB,GAAQD,IAAAr9D,EAAA2O,OAAAlH,IAGzD,kBAAAoyF,EAAAlvD,SAAA3qC,EAAA2O,OAAAlH,IAAA,CAQA,GAPAkxC,EAAAnyC,MAAA4kB,KAAA,SAAA4T,GACA,MAAAA,GAAA16B,OAAA7E,EAAAM,KAAAuE,KAAA,WAEAwY,YAAAsO,KAAA,SAAA4T,GACA,MAAAA,GAAA16B,OAAAmD,EAAA,UAGA,CACA,GAAA6yF,GAAAp7F,OAAA2F,KAAA7E,EAAA2O,OAAAlH,IAAAuO,OAAA,SAAAsnD,EAAAz7C,GACA,SAAAk4E,EAAApvD,YAAyD2yB,GAAA,EAAA/mB,EAAA5L,YAAuC9oB,EAAA,MAAA7hB,EAAA2O,OAAAlH,GAAAoa,SAEhG,UAAAk4E,EAAApvD,YAAqD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAA,QAAA6yF,KAI5F,GAAA1J,GAAAnpF,EAAAk/C,MAAA,IAEA,IAAAiqC,EAAArpF,OAAA,GACA,SAAAqpF,EAAA,IAQA,MAPAj4C,GAAAnyC,MAAA4kB,KAAA,SAAA4T,GACA,MAAAA,GAAA16B,OAAA7E,EAAAM,KAAAuE,KAAA,WAEAwY,YAAAsO,KAAA,SAAA4T,GACA,MAAAA,GAAA16B,OAAAssF,EAAA,cAIA,EAAAmJ,EAAApvD,YAAyD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCimD,EAAA,YAAuB/pD,GAAA7mC,EAAA2O,OAAAlH,OAGvH,EAAAsyF,EAAApvD,YAAqD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCimD,EAAA,IAAa/pD,GAAA7mC,EAAA2O,OAAAlH,MAGzG,GAAA8yF,GAAA96F,EAAAM,KAAA+I,OAAAsiB,KAAA,SAAAi2C,GACA,MAAAA,GAAA/8D,OAAAssF,EAAA,KAEA4J,GAAA,EAAAP,EAAAtvD,SAAA4vD,EAAAx6F,KACA,UAAAg6F,EAAApvD,YAAiD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAA2yF,EAAAI,EAAAx6F,EAAA2O,OAAAlH,MAGxF,GAAAgzF,GAAAh7F,EAAAM,KAAA+I,OAAAsiB,KAAA,SAAAi2C,GACA,MAAAA,GAAA/8D,OAAAmD,GAGA,IAAAgzF,EAAA,CACA,GAAAC,IAAA,EAAAT,EAAAtvD,SAAA8vD,EAAA16F,KAGA,QAFA,EAAAo6F,EAAAxvD,SAAA8vD,EAAA16F,OAGA,EAAAg6F,EAAApvD,YAAqD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAArD,MAAAC,QAAArE,EAAA2O,OAAAlH,IAAAzH,EAAA2O,OAAAlH,GAAA9B,IAAA,SAAAvG,GAC5F,MAAAg7F,GAAAM,EAAAt7F,KACqBg7F,EAAAM,GAAA16F,EAAA2O,OAAAlH,QAGrB,EAAAsyF,EAAApvD,YAAiD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAA2yF,EAAAM,EAAA16F,EAAA2O,OAAAlH,MAGxF,SAAAsyF,EAAApvD,YAA6C2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAAzH,EAAA2O,OAAAlH,SAGpF,QACAkzF,KAAAv6E,SAAApgB,EAAA46F,WAAAD,MAAA,EACAE,QAAAz6E,SAAApgB,EAAA46F,WAAAC,SACAC,UAAA96F,EAAAixB,KAAA/rB,MACA61F,UAAA/6F,EAAAixB,KAAA+pE,MACArsF,YAKAssF,EAAA,WACA,gBAAAx7F,EAAAw4C,EAAAj4C,EAAA0b,GACA,MAAAxc,QAAA2F,KAAA7E,EAAA43B,MAAA5hB,OAAA,SAAAsnD,EAAA71D,GACA,GAAArD,MAAAC,QAAArE,EAAA43B,KAAAnwB,IAAA,CAKA,GAJAiU,EAAAhW,KAAA0lB,KAAA,SAAA8F,GACA,MAAAA,GAAA5sB,OAAAmD,EAAA,QAIA,SAAAsyF,EAAApvD,YAAqD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAA,MAAAzH,EAAA43B,KAAAnwB,GAAA9B,IAAA,SAAA0K,GAE5F,MADAA,GAAAw2B,OAMA,iBAAAgzD,EAAAlvD,SAAA3qC,EAAA43B,KAAAnwB,IAAA,CAKA,GAJAiU,EAAAhW,KAAA0lB,KAAA,SAAA8F,GACA,MAAAA,GAAA5sB,OAAAmD,EAAA,OAIA,SAAAsyF,EAAApvD,YAAqD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAA,KAAAzH,EAAA43B,KAAAnwB,GAAAo/B,KAI5F,SAAAkzD,EAAApvD,YAA6C2yB,GAAA,EAAA/mB,EAAA5L,YAAuCljC,EAAAzH,EAAA43B,KAAAnwB,WAKpFmkB,GAAA+e,QAAA,SAAAgO,GACA,gBAAAl5C,EAAAw4C,EAAAj4C,EAAA0b,GACA,OAAAu8B,GACA,IAAAnB,GAAAU,SAEA,MAAA6iD,GAAA1hD,GAAAl5C,EAAAw4C,EAAAj4C,EAAA0b,EAEA,KAAAo7B,GAAAY,SACA,OACA/oC,QAA6B0uD,IAAAr9D,EAAAq9D,KAE7B,KAAAvmB,GAAAa,mBAEA,GAAAi5C,GAAA5wF,EAAAoH,OAAAu/C,MAAA,IAEA,QACAh4C,QAAA,EAAA4nC,EAAA5L,YAAgEimD,EAAA,IAAa/pD,GAAA7mC,EAAA6mC,KAG7E,KAAAiQ,GAAAW,QACA,OACA5Q,GAAA7mC,EAAA6mC,GAEA,KAAAiQ,GAAAe,OAKA,IAAAf,GAAAc,OAEA,MAAAqjD,KAAAx7F,EAAAw4C,EAAAj4C,EAAA0b,EAGA,KAAAo7B,GAAAgB,OACA,OACAjR,GAAA7mC,EAAA6mC,OAMA9nC,EAAA6sB,UAAA,StL8yzBMsvE,KACA,SAAUn8F,EAAQ6sB,EAAS3sB,GAEjC,YuL18zBA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GArC7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,IAEAwsB,EAAAuvE,gBAAAvvE,EAAAwvE,UAAAxvE,EAAAyvE,WAAAzvE,EAAA0vE,gBAAAv1F,EAEA,IAAAmwC,GAAAj3C,EAAA,GAEAk3C,EAAAX,EAAAU,GAEAI,EAAAr3C,EAAA,IAEAs3C,EAAAf,EAAAc,GAEAilD,EAAAt8F,EAAA,GAEAu8F,EAAAhmD,EAAA+lD,GAEAzkD,EAAA73C,EAAA,IAEA89D,EAAA99D,EAAA,MAEA+1C,EAAA/1C,EAAA,MAEAw8F,EAAAx8F,EAAA,MAEA+6F,EAAA/6F,EAAA,MAEAg7F,EAAAzkD,EAAAwkD,GAEAE,EAAAj7F,EAAA,MAEAk7F,EAAA3kD,EAAA0kD,GAEAwB,EAAAz8F,EAAA,MAEA08F,EAAAnmD,EAAAkmD,GAIAJ,EAAA1vE,EAAA0vE,YAAA,QAAAA,GAAA3iD,GACA,gBAAA7vC,GACA,MAAAA,GAAAkN,OAAA,SAAAsnD,EAAAp4D,GACA,GAAAnF,IAAA,EAAAk6F,EAAAtvD,SAAAzlC,EAAAnF,KAEA,IAAAA,EAAAuE,KAAAs3F,WAAA,KACA,MAAAt+B,EAGA,IAAAv9D,EAAA+J,OAAAkrC,EAAAl6B,SAAAnP,OACA,SAAA6vF,EAAA7wD,YAAgD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCzlC,EAAAZ,SAOvF,IAJAq0C,EAAAulC,UAAA9yD,KAAA,SAAAquE,GACA,MAAAA,GAAA15F,KAAAuE,OAAAvE,EAAAuE,OAIA,SAAAk3F,EAAA7wD,YAAgD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCzlC,EAAAZ,MAAewE,QAAU+9B,SAGhH,IAAAg1D,GAAAljD,EAAAnyC,MAAA4kB,KAAA,SAAA4T,GACA,MAAAA,GAAA16B,OAAAvE,EAAAuE,MAGA,OAAAu3F,IACA,EAAAL,EAAA7wD,YAAgD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCzlC,EAAAZ,MACvFwE,OAAAwyF,EAAA3iD,GAAAkjD,EAAA/yF,WAMAw0D,SAKA+9B,EAAAzvE,EAAAyvE,WAAA,SAAAx1F,GACA,GAAA9F,IAAA,EAAAk6F,EAAAtvD,SAAA9kC,EAAA9F,MACA+7F,GAAA,EAAAH,EAAAhxD,SAAA9kC,EAAA9F,MACAue,GAAA,EAAA67E,EAAAxvD,SAAA9kC,EAAA9F,KAEA,QAAAue,EAAA,QAAAve,EAAAuE,MAAAga,EAAA,UAAAw9E,EAAA,SAGAV,EAAAxvE,EAAAwvE,UAAA,SAAAtkF,EAAAtO,GACA,OAAAsO,EAAApR,KAAA6B,OACA,QAGA,IAAAw0F,GAAA78F,OAAA2F,KAAA2D,GAAAmG,OAAA,SAAAkT,GACA,0BAAArZ,GAAAqZ,IAQA,OANA/K,GAAApR,KAAAiJ,OAAA,SAAAuiB,GACA,MAAA6qE,GAAA7iD,SAAAhoB,EAAA5sB,QACK0R,OAAA,SAAAsnD,EAAAz3D,GACL,SAAA21F,EAAA7wD,YAAwC2yB,GAAA,EAAA/mB,EAAA5L,YAAuC,GAAA9kC,EAAAvB,KAAA,IAAAuB,EAAAvB,aAM/E62F,EAAAvvE,EAAAuvE,gBAAA,SAAArkF,EAAAtO,GACA,OAAAsO,EAAApR,KAAA6B,OACA,QAGA,IAAAw0F,GAAA78F,OAAA2F,KAAA2D,GAAAmG,OAAA,SAAAkT,GACA,0BAAArZ,GAAAqZ,IASA,OANA/K,GAAApR,KAAAiJ,OAAA,SAAAuiB,GACA,MAAA6qE,GAAA7iD,SAAAhoB,EAAA5sB,QACK0R,OAAA,SAAAsnD,EAAAz3D,GACL,SAAA21F,EAAA7wD,YAAwC2yB,GAAA,EAAA/mB,EAAA5L,YAAuC,IAAA9kC,EAAAvB,KAAA+2F,EAAAx1F,UAM/E+lB,GAAA+e,QAAA,SAAAgO,GACA,gBAAAl5C,EAAAw4C,EAAAv8B,EAAAlT,GACA,GAEAwzF,IAFAxzF,EAAAsyF,UACAtyF,EAAAuyF,WACA,EAAA5kD,EAAAxL,SAAAniC,GAAA,2BAEAyzF,EAAAd,EAAAz/E,EAAAlT,GACA9C,EAAA01F,EAAA1/E,EAAAlT,GACA0zF,EAAAd,EAAA1/E,EAAAsgF,GACAlzF,EAAAwyF,EAAA3iD,GAAAl5C,EAAAM,KAAA+I,OACA,IAAAmvC,IAAAnB,EAAAU,UAAAS,IAAAnB,EAAAY,UAAAO,IAAAnB,EAAAa,mBAAA,CAiBA,OAhBA,EAAA8jD,EAAAU,aAAAzgF,EAAApX,MACAtE,OAAAi8F,EACAnzF,QACA0lC,OACAtpC,MAAAwW,EAAApX,KACAtE,OAAA0F,EACAoD,UAEAszF,OACAl3F,MAAA,IAAAwW,EAAApX,KAAA,OACAtE,OAAAk8F,EACApzF,QAAiC01D,cAQjC,GAAAvmB,IAAAnB,EAAAgB,OACA,SAAA2jD,EAAAY,gBAAA3gF,EAAApX,MACAtE,OAAAi8F,EACAnzF,QACA8uB,MACA1yB,MAAAwW,EAAApX,KACAtE,OAAA0F,EACAoD,QAAiC+9B,UAMjC,IAAA/vB,IACA9W,OAAAi8F,EACAnzF,QACA8uB,MACA1yB,MAAAwW,EAAApX,KACAtE,OAAA0F,EACAoD,WAOA,OAFAi0D,GAAAnnB,YAAAsD,SAAAjB,IAAA,EAAAwjD,EAAAU,aAAAzgF,EAAApX,KAAAwS,IAAA,EAAA2kF,EAAAY,gBAAA3gF,EAAApX,KAAAwS,MvL0/zBMwlF,KACA,SAAUv9F,EAAQ6sB,EAAS3sB,GAEjC,YwLvo0BA,SAAAs9F,GAAAx8F,EAAAy8F,EAAAC,GACA,GAAAn4F,GAAAk4F,EACA1zF,EAAA2zF,CACAA,IAAA,gCAAAD,GAAA,eAAA3C,EAAAlvD,SAAA6xD,MACAl4F,EAAA,KACAwE,EAAA0zF,EAGA,IAAA5L,MACA8L,MAAA,EAgBA,OAdAp4F,KAAAwE,EAAA9I,QAAA8I,WACA4zF,EAAAC,EAAAr4F,EAAAwE,GACA8nF,EAAA74E,KAAAhY,EAAA,IAAA28F,KAGAA,EAAAE,EAAA9zF,EAAA,MAEAxE,EACAssF,EAAA74E,KAAAhY,EAAA,IAAAuE,EAAAo4F,GAEA9L,EAAA74E,KAAAhY,EAAA,IAAA28F,IAIA9L,EAAApiF,KAAA,KASA,QAAAouF,GAAA9zF,EAAA0vB,GACA,GAAAo4D,KASA,OARA9nF,IACA8nF,EAAA74E,KAAA8kF,EAAA/zF,IAEA0vB,GACAA,EAAA1zB,QAAA,SAAAu8D,GACA,MAAAuvB,GAAA74E,KAAA,MAAAspD,EAAA/8D,QAGA,IAAassF,EAAApiF,KAAA,SASb,QAAAquF,GAAA/zF,GACA,IAAAA,GAAA,gCAAAA,GAAA,eAAA+wF,EAAAlvD,SAAA7hC,IACA,SAAApJ,OAAA,qBAAAoJ,EAAA,IAGA,IAAAg0F,GAAA59F,OAAA2F,KAAAiE,GAAA6F,OAAA,SAAAlH,GACA,MAAAqB,GAAA7D,eAAAwC,IAAAqB,EAAArB,KACK9B,IAAA,SAAA8B,GACL,MAAAk1F,GAAAl1F,EAAAqB,EAAArB,KAGA,QAAAq1F,EAAAv1F,OACA,SAAA7H,OAAA,yBAGA,OAAAo9F,GAAAtuF,KAAA,KAWA,QAAAmuF,GAAAl1F,EAAA4pE,GACA,mCAAAA,GAAA,eAAAwoB,EAAAlvD,SAAA0mC,IACA,MAAA5pE,EAGA,IAAAmpF,IAAAnpF,EAYA,OAVA4pE,GAAAnsE,OACA0rF,EAAA74E,KAAA,IAAAs5D,EAAAnsE,OAEAmsE,EAAArxE,QACA4wF,EAAA74E,KAAAglF,EAAA1rB,EAAArxE,UAEAqxE,EAAAvoE,QAAAuoE,EAAA74C,YACAo4D,EAAA74E,KAAA6kF,EAAAvrB,EAAAvoE,OAAAuoE,EAAA74C,YAGAo4D,EAAApiF,KAAA,IASA,QAAAuuF,GAAA/8F,GACA,GAAA88F,GAAAE,EAAAh9F,EACA,QAAA88F,EAAAv1F,OACA,SAAA7H,OAAA,yBAGA,WAAAo9F,EAAAtuF,KAAA,SAQA,QAAAyuF,GAAAj9F,GAEA,UADAg9F,EAAAh9F,GACawO,KAAA,SAQb,QAAA0uF,GAAApuF,GAEA,UADAA,EAAAnJ,IAAAw3F,GACA3uF,KAAA,SASA,QAAAwuF,GAAAh9F,GACA,IAAAA,GAAA,gCAAAA,GAAA,eAAA65F,EAAAlvD,SAAA3qC,IACA,SAAAN,OAAA,qBAAAM,EAAA,IAQA,OALAd,QAAA2F,KAAA7E,GAAA2O,OAAA,SAAAlH,GACA,GAAA4pE,GAAArxE,EAAAyH,EACA,OAAAzH,GAAAiF,eAAAwC,QAAA1B,KAAAsrE,GAAA,OAAAA,IAAAjyD,OAAA0sB,MAAAulC,KAGA1rE,IAAA,SAAA8B,GACA,MAAA21F,GAAA31F,EAAAzH,EAAAyH,MAQA,QAAA21F,GAAA31F,EAAA4pE,GACA,MAAA5pE,GAAA,IAAA01F,EAAA9rB,GAQA,QAAA8rB,GAAA/9F,GACA,GAAAgF,MAAAC,QAAAjF,GACA,MAAA89F,GAAA99F,EAEA,oCAAAA,GAAA,eAAAy6F,EAAAlvD,SAAAvrC,IACA,MAAA69F,GAAA79F,EAEA,qBAAAA,GACA,MAAAA,EAGA,UAAAM,OAAA,gDAAAN,GAAA,eAAAy6F,EAAAlvD,SAAAvrC,IAAA,KAvNAF,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,IAEAwsB,EAAAywE,eAAAzwE,EAAAuwE,gBAAAp2F,EAEA,IAAA6zF,GAAA36F,EAAA,KAEA46F,EAEA,SAAA3zF,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,IAF7E0zF,GAKAyD,EAAA,SAAAv0F,GACA,MAAAyzF,GAAA,QAAAzzF,GAIA8iB,GAAAuwE,YAAA,SAAAK,EAAAC,GACA,MAAAF,GAAA,QAAAC,EAAAC,IAIA7wE,EAAAywE,eAAA,SAAAG,EAAAC,GACA,MAAAF,GAAA,WAAAC,EAAAC,GAIA7wE,GAAA+e,QAAA0yD,GxL+20BMC,KACA,SAAUv+F,EAAQ6sB,EAAS3sB,GAEjC,YyL740BAC,QAAAC,eAAAysB,EAAA,cACAxsB,OAAA,GAGA,IAAA41C,GAAA/1C,EAAA,MAEAs+F,EAAA,QAAAA,GAAAx9F,GACA,MAAAA,GAAA+J,OAAAkrC,EAAAl6B,SAAApP,KACA6xF,EAAAx9F,EAAA6C,QAGA7C,EAAA+J,OAAAkrC,EAAAl6B,SAAA4B,SAGAkP,GAAA+e,QAAA4yD,EACAx+F,EAAA6sB,UAAA,SzLo50BM4xE,KACA,SAAUz+F,EAAQ6sB,EAAS3sB,GAEjC,Y0Ll50BA,SAAAu2C,GAAAtvC,GAAsC,MAAAA,MAAAuvC,WAAAvvC,GAAuCykC,QAAAzkC,GApB7EhH,OAAAC,eAAAysB,EAAA,cACAxsB,OAAA,GAGA,IAAAk3C,GAAAr3C,EAAA,IAEAs3C,EAAAf,EAAAc,GAEAmnD,EAAAx+F,EAAA,GAEAs8F,EAAA/lD,EAAAioD,GAEAzoD,EAAA/1C,EAAA,MAEA63C,EAAA73C,EAAA,IAEA+6F,EAAA/6F,EAAA,MAEAg7F,EAAAzkD,EAAAwkD,GAIA0D,EAAA,QAAAA,GAAA/kD,EAAAl5C,GACA,gBAAAm4B,GAwCA,MAvCA14B,QAAA2F,KAAA+yB,GAAA5hB,OAAA,SAAAsnD,EAAA71D,GACA,GAAAA,EAAAm0F,WAAA,KACA,MAAAt+B,EAGA,IAAAp4D,GAAAzF,EAAAM,KAAA+I,OAAAsiB,KAAA,SAAAi2C,GACA,MAAAA,GAAA/8D,OAAAmD,IAEA1H,GAAA,EAAAk6F,EAAAtvD,SAAAzlC,EAAAnF,KAEA,IAAAA,EAAA+J,OAAAkrC,EAAAl6B,SAAAnP,OACA,SAAA4vF,EAAA5wD,YAAgD2yB,GAAA,EAAA/mB,EAAA5L,YAAuCzlC,EAAAZ,KAAAszB,EAAA1yB,EAAAZ,OAKvF,IAAAq5F,GAAAhlD,EAAAulC,UAAA9yD,KAAA,SAAAquE,GACA,MAAAA,GAAA15F,KAAAuE,OAAAvE,EAAAuE,MAGA,IAAAq5F,EAAA,CACA,GAAAngB,GAEAogB,EAAAhmE,EAAA1yB,EAAAZ,KAEA,IAAAF,MAAAC,QAAAu5F,GAAA,CACA,GAAA3nD,EAEA,UAAAslD,EAAA5wD,YAAoD2yB,GAAArnB,MAAsB,EAAAM,EAAA5L,SAAAsL,EAAA/wC,EAAAZ,KAAAszB,EAAA1yB,EAAAZ,MAAAqB,IAAA+3F,EAAA/kD,EAAAglD,MAAA,EAAApnD,EAAA5L,SAAAsL,EAAA/wC,EAAAZ,KAAA,MAAAszB,EAAA1yB,EAAAZ,MAAAqB,IAAA,SAAAxF,GAC1E,MAAAA,GAAA0mC,MACqBoP,IAGrB,SAAAslD,EAAA5wD,YAAgD2yB,GAAAkgB,MAAsB,EAAAjnC,EAAA5L,SAAA6yC,EAAAt4E,EAAAZ,KAAA,MAAAs5F,EAAAhmE,EAAA1yB,EAAAZ,MAAAuiC,OAAA9gC,KAAA,EAAAwwC,EAAA5L,SAAA6yC,EAAAt4E,EAAAZ,KAAAs5F,EAAAF,EAAA/kD,EAAAglD,GAAA/lE,EAAA1yB,EAAAZ,WAAAyB,IAAAy3E,IAGtE,SAAA+d,EAAA5wD,YAA4C2yB,GAAA,EAAA/mB,EAAA5L,YAAuCzlC,EAAAZ,KAAAszB,EAAA1yB,EAAAZ,cAOnFsnB,GAAA+e,QAAA,SAAAgO,GACA,gBAAAV,EAAAx4C,GACA,gBAAA+4E,GACA,GAAAqlB,GAAAH,EAAA/kD,EAAAl5C,GACAm4B,EAAA4gD,EAAA5gD,IAEA,OAAAqgB,KAAAnB,EAAAU,UAAAS,IAAAnB,EAAAY,UAAAO,IAAAnB,EAAAa,oBAEA/f,KAAA4gD,EAAA5gD,KAAA4W,MAAA7oC,IAAAk4F,GACAzB,MAAA5jB,EAAA5gD,KAAAwkE,MAAA59B,QAIoB5mC,KAAAimE,EAAAjmE,YAKpB74B,EAAA6sB,UAAA","file":"static/js/0.73b4a4be.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 1756:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple__ = __webpack_require__(1915);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function(){var getGqlResource=function getGqlResource(resource){switch(resource){case'customers':return'Customer';case'categories':return'Category';case'commands':return'Command';case'products':return'Product';case'reviews':return'Review';default:throw new Error('Unknown resource '+resource);}};return __WEBPACK_IMPORTED_MODULE_0_ra_data_graphql_simple___default()({clientOptions:{uri:'http://localhost:4000/graphql'}}).then(function(dataProvider){return function(type,resource,params){return dataProvider(type,getGqlResource(resource),params);};});});\n\n/***/ }),\n\n/***/ 1760:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GraphQLError__ = __webpack_require__(1772);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__GraphQLError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__syntaxError__ = __webpack_require__(1958);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_1__syntaxError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__locatedError__ = __webpack_require__(1877);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__locatedError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__printError__ = __webpack_require__(1876);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__printError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__formatError__ = __webpack_require__(1959);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_4__formatError__[\"a\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ 1761:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"P\"] = isType;\n/* harmony export (immutable) */ __webpack_exports__[\"w\"] = assertType;\n/* harmony export (immutable) */ __webpack_exports__[\"O\"] = isScalarType;\n/* harmony export (immutable) */ __webpack_exports__[\"v\"] = assertScalarType;\n/* harmony export (immutable) */ __webpack_exports__[\"M\"] = isObjectType;\n/* harmony export (immutable) */ __webpack_exports__[\"t\"] = assertObjectType;\n/* harmony export (immutable) */ __webpack_exports__[\"G\"] = isInterfaceType;\n/* harmony export (immutable) */ __webpack_exports__[\"n\"] = assertInterfaceType;\n/* harmony export (immutable) */ __webpack_exports__[\"Q\"] = isUnionType;\n/* harmony export (immutable) */ __webpack_exports__[\"x\"] = assertUnionType;\n/* harmony export (immutable) */ __webpack_exports__[\"D\"] = isEnumType;\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = assertEnumType;\n/* harmony export (immutable) */ __webpack_exports__[\"E\"] = isInputObjectType;\n/* harmony export (immutable) */ __webpack_exports__[\"l\"] = assertInputObjectType;\n/* harmony export (immutable) */ __webpack_exports__[\"I\"] = isListType;\n/* harmony export (immutable) */ __webpack_exports__[\"p\"] = assertListType;\n/* harmony export (immutable) */ __webpack_exports__[\"K\"] = isNonNullType;\n/* harmony export (immutable) */ __webpack_exports__[\"r\"] = assertNonNullType;\n/* harmony export (immutable) */ __webpack_exports__[\"F\"] = isInputType;\n/* harmony export (immutable) */ __webpack_exports__[\"m\"] = assertInputType;\n/* harmony export (immutable) */ __webpack_exports__[\"N\"] = isOutputType;\n/* harmony export (immutable) */ __webpack_exports__[\"u\"] = assertOutputType;\n/* harmony export (immutable) */ __webpack_exports__[\"H\"] = isLeafType;\n/* harmony export (immutable) */ __webpack_exports__[\"o\"] = assertLeafType;\n/* harmony export (immutable) */ __webpack_exports__[\"C\"] = isCompositeType;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = assertCompositeType;\n/* harmony export (immutable) */ __webpack_exports__[\"B\"] = isAbstractType;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = assertAbstractType;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = GraphQLList;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = GraphQLNonNull;\n/* harmony export (immutable) */ __webpack_exports__[\"R\"] = isWrappingType;\n/* harmony export (immutable) */ __webpack_exports__[\"y\"] = assertWrappingType;\n/* harmony export (immutable) */ __webpack_exports__[\"L\"] = isNullableType;\n/* harmony export (immutable) */ __webpack_exports__[\"s\"] = assertNullableType;\n/* harmony export (immutable) */ __webpack_exports__[\"A\"] = getNullableType;\n/* harmony export (immutable) */ __webpack_exports__[\"J\"] = isNamedType;\n/* harmony export (immutable) */ __webpack_exports__[\"q\"] = assertNamedType;\n/* harmony export (immutable) */ __webpack_exports__[\"z\"] = getNamedType;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return GraphQLScalarType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return GraphQLObjectType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GraphQLInterfaceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return GraphQLUnionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GraphQLEnumType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return GraphQLInputObjectType; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__ = __webpack_require__(1812);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utilities_valueFromASTUntyped__ = __webpack_require__(1881);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n// Predicates & Assertions\n\n/**\n * These are all of the possible kinds of types.\n */\n\n\nfunction isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\n\nfunction assertType(type) {\n  !isType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL type.') : void 0;\n  return type;\n}\n\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nfunction isScalarType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLScalarType);\n}\n\nfunction assertScalarType(type) {\n  !isScalarType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Scalar type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isObjectType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLObjectType);\n}\n\nfunction assertObjectType(type) {\n  !isObjectType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Object type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isInterfaceType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLInterfaceType);\n}\n\nfunction assertInterfaceType(type) {\n  !isInterfaceType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Interface type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isUnionType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLUnionType);\n}\n\nfunction assertUnionType(type) {\n  !isUnionType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Union type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isEnumType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLEnumType);\n}\n\nfunction assertEnumType(type) {\n  !isEnumType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Enum type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isInputObjectType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLInputObjectType);\n}\n\nfunction assertInputObjectType(type) {\n  !isInputObjectType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Input Object type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isListType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLList);\n}\n\nfunction assertListType(type) {\n  !isListType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL List type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nfunction isNonNullType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_instanceOf__[\"a\" /* default */])(type, GraphQLNonNull);\n}\n\nfunction assertNonNullType(type) {\n  !isNonNullType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL Non-Null type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as input types for arguments and directives.\n */\n\n\nfunction isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\n\nfunction assertInputType(type) {\n  !isInputType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL input type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as output types as the result of fields.\n */\n\n\nfunction isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\n\nfunction assertOutputType(type) {\n  !isOutputType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL output type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe types which may be leaf values.\n */\n\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nfunction assertLeafType(type) {\n  !isLeafType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL leaf type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertCompositeType(type) {\n  !isCompositeType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL composite type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertAbstractType(type) {\n  !isAbstractType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL abstract type.') : void 0;\n  return type;\n}\n\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: GraphQLList(PersonType) },\n *         children: { type: GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n\n// eslint-disable-next-line no-redeclare\nfunction GraphQLList(ofType) {\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n}\n\n// Also provide toJSON and inspect aliases for toString.\nvar listProto = GraphQLList.prototype;\nlistProto.toString = listProto.toJSON = listProto.inspect = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\n// eslint-disable-next-line no-redeclare\nfunction GraphQLNonNull(ofType) {\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n}\n\n// Also provide toJSON and inspect aliases for toString.\nvar nonNullProto = GraphQLNonNull.prototype;\nnonNullProto.toString = nonNullProto.toJSON = nonNullProto.inspect = function toString() {\n  return String(this.ofType) + '!';\n};\n\n/**\n * These types wrap and modify other types\n */\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nfunction assertWrappingType(type) {\n  !isWrappingType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL wrapping type.') : void 0;\n  return type;\n}\n\n/**\n * These types can all accept null as a value.\n */\n\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nfunction assertNullableType(type) {\n  !isNullableType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL nullable type.') : void 0;\n  return type;\n}\n\n/* eslint-disable no-redeclare */\n\nfunction getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\n\nfunction isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\n\nfunction assertNamedType(type) {\n  !isNamedType(type) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(type) + ' to be a GraphQL named type.') : void 0;\n  return type;\n}\n\n/* eslint-disable no-redeclare */\n\nfunction getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n    return unwrappedType;\n  }\n}\n\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\n\nfunction resolveThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\nvar GraphQLScalarType = function () {\n  function GraphQLScalarType(config) {\n    _classCallCheck(this, GraphQLScalarType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._scalarConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n    !(typeof config.serialize === 'function') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' must provide \"serialize\" function. If this custom Scalar ' + 'is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" ' + 'functions are also provided.') : void 0;\n    if (config.parseValue || config.parseLiteral) {\n      !(typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' must provide both \"parseValue\" and \"parseLiteral\" ' + 'functions.') : void 0;\n    }\n  }\n\n  // Serializes an internal value to include in a response.\n\n\n  GraphQLScalarType.prototype.serialize = function serialize(value) {\n    var serializer = this._scalarConfig.serialize;\n    return serializer(value);\n  };\n\n  // Parses an externally provided value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseValue = function parseValue(value) {\n    var parser = this._scalarConfig.parseValue;\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(value)) {\n      return undefined;\n    }\n    return parser ? parser(value) : value;\n  };\n\n  // Parses an externally provided literal value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseLiteral = function parseLiteral(valueNode, variables) {\n    var parser = this._scalarConfig.parseLiteral;\n    return parser ? parser(valueNode, variables) : Object(__WEBPACK_IMPORTED_MODULE_4__utilities_valueFromASTUntyped__[\"a\" /* valueFromASTUntyped */])(valueNode, variables);\n  };\n\n  GraphQLScalarType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLScalarType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLScalarType.prototype.toJSON = GraphQLScalarType.prototype.inspect = GraphQLScalarType.prototype.toString;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nvar GraphQLObjectType = function () {\n  function GraphQLObjectType(config) {\n    _classCallCheck(this, GraphQLObjectType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this.isTypeOf = config.isTypeOf;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n    if (config.isTypeOf) {\n      !(typeof config.isTypeOf === 'function') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' must provide \"isTypeOf\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLObjectType.prototype.getInterfaces = function getInterfaces() {\n    return this._interfaces || (this._interfaces = defineInterfaces(this, this._typeConfig.interfaces));\n  };\n\n  GraphQLObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLObjectType.prototype.toJSON = GraphQLObjectType.prototype.inspect = GraphQLObjectType.prototype.toString;\n\nfunction defineInterfaces(type, interfacesThunk) {\n  var interfaces = resolveThunk(interfacesThunk) || [];\n  !Array.isArray(interfaces) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + ' interfaces must be an Array or a function which returns ' + 'an Array.') : void 0;\n  return interfaces;\n}\n\nfunction defineFieldMap(type, fieldsThunk) {\n  var fieldMap = resolveThunk(fieldsThunk) || {};\n  !isPlainObj(fieldMap) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n\n  var resultFieldMap = Object.create(null);\n  Object.keys(fieldMap).forEach(function (fieldName) {\n    var fieldConfig = fieldMap[fieldName];\n    !isPlainObj(fieldConfig) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + fieldName + ' field config must be an object') : void 0;\n    !!fieldConfig.hasOwnProperty('isDeprecated') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + fieldName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    var field = _extends({}, fieldConfig, {\n      isDeprecated: Boolean(fieldConfig.deprecationReason),\n      name: fieldName\n    });\n    !isValidResolver(field.resolve) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + fieldName + ' field resolver must be a function if ' + ('provided, but got: ' + String(field.resolve) + '.')) : void 0;\n    var argsConfig = fieldConfig.args;\n    if (!argsConfig) {\n      field.args = [];\n    } else {\n      !isPlainObj(argsConfig) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + fieldName + ' args must be an object with argument ' + 'names as keys.') : void 0;\n      field.args = Object.keys(argsConfig).map(function (argName) {\n        var arg = argsConfig[argName];\n        return {\n          name: argName,\n          description: arg.description === undefined ? null : arg.description,\n          type: arg.type,\n          defaultValue: arg.defaultValue,\n          astNode: arg.astNode\n        };\n      });\n    }\n    resultFieldMap[fieldName] = field;\n  });\n  return resultFieldMap;\n}\n\nfunction isPlainObj(obj) {\n  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);\n}\n\n// If a resolver is defined, it must be a function.\nfunction isValidResolver(resolver) {\n  return resolver == null || typeof resolver === 'function';\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nvar GraphQLInterfaceType = function () {\n  function GraphQLInterfaceType(config) {\n    _classCallCheck(this, GraphQLInterfaceType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLInterfaceType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLInterfaceType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInterfaceType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLInterfaceType.prototype.toJSON = GraphQLInterfaceType.prototype.inspect = GraphQLInterfaceType.prototype.toString;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nvar GraphQLUnionType = function () {\n  function GraphQLUnionType(config) {\n    _classCallCheck(this, GraphQLUnionType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLUnionType.prototype.getTypes = function getTypes() {\n    return this._types || (this._types = defineTypes(this, this._typeConfig.types));\n  };\n\n  GraphQLUnionType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLUnionType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLUnionType.prototype.toJSON = GraphQLUnionType.prototype.inspect = GraphQLUnionType.prototype.toString;\n\nfunction defineTypes(unionType, typesThunk) {\n  var types = resolveThunk(typesThunk) || [];\n  !Array.isArray(types) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide Array of types or a function which returns ' + ('such an array for Union ' + unionType.name + '.')) : void 0;\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nvar GraphQLEnumType /* <T> */ = function () {\n  function GraphQLEnumType(config /* <T> */) {\n    _classCallCheck(this, GraphQLEnumType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._enumConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n  }\n\n  GraphQLEnumType.prototype.getValues = function getValues() {\n    return this._values || (this._values = defineEnumValues(this, this._enumConfig.values));\n  };\n\n  GraphQLEnumType.prototype.getValue = function getValue(name) {\n    return this._getNameLookup()[name];\n  };\n\n  GraphQLEnumType.prototype.serialize = function serialize(value /* T */) {\n    var enumValue = this._getValueLookup().get(value);\n    if (enumValue) {\n      return enumValue.name;\n    }\n  };\n\n  GraphQLEnumType.prototype.parseValue = function parseValue(value) /* T */{\n    if (typeof value === 'string') {\n      var enumValue = this._getNameLookup()[value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype.parseLiteral = function parseLiteral(valueNode, _variables) /* T */{\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].ENUM) {\n      var enumValue = this._getNameLookup()[valueNode.value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype._getValueLookup = function _getValueLookup() {\n    if (!this._valueLookup) {\n      var lookup = new Map();\n      this.getValues().forEach(function (value) {\n        lookup.set(value.value, value);\n      });\n      this._valueLookup = lookup;\n    }\n    return this._valueLookup;\n  };\n\n  GraphQLEnumType.prototype._getNameLookup = function _getNameLookup() {\n    if (!this._nameLookup) {\n      var lookup = Object.create(null);\n      this.getValues().forEach(function (value) {\n        lookup[value.name] = value;\n      });\n      this._nameLookup = lookup;\n    }\n    return this._nameLookup;\n  };\n\n  GraphQLEnumType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLEnumType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLEnumType.prototype.toJSON = GraphQLEnumType.prototype.inspect = GraphQLEnumType.prototype.toString;\n\nfunction defineEnumValues(type, valueMap /* <T> */\n) {\n  !isPlainObj(valueMap) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + ' values must be an object with value names as keys.') : void 0;\n  return Object.keys(valueMap).map(function (valueName) {\n    var value = valueMap[valueName];\n    !isPlainObj(value) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + valueName + ' must refer to an object with a \"value\" key ' + ('representing an internal value but got: ' + String(value) + '.')) : void 0;\n    !!value.hasOwnProperty('isDeprecated') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, type.name + '.' + valueName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    return {\n      name: valueName,\n      description: value.description,\n      isDeprecated: Boolean(value.deprecationReason),\n      deprecationReason: value.deprecationReason,\n      astNode: value.astNode,\n      value: value.hasOwnProperty('value') ? value.value : valueName\n    };\n  });\n} /* <T> */\n\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nvar GraphQLInputObjectType = function () {\n  function GraphQLInputObjectType(config) {\n    _classCallCheck(this, GraphQLInputObjectType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide name.') : void 0;\n  }\n\n  GraphQLInputObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = this._defineFieldMap());\n  };\n\n  GraphQLInputObjectType.prototype._defineFieldMap = function _defineFieldMap() {\n    var _this = this;\n\n    var fieldMap = resolveThunk(this._typeConfig.fields) || {};\n    !isPlainObj(fieldMap) ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, this.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n    var resultFieldMap = Object.create(null);\n    Object.keys(fieldMap).forEach(function (fieldName) {\n      var field = _extends({}, fieldMap[fieldName], {\n        name: fieldName\n      });\n      !!field.hasOwnProperty('resolve') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, _this.name + '.' + fieldName + ' field type has a resolve property, but ' + 'Input Types cannot define resolvers.') : void 0;\n      resultFieldMap[fieldName] = field;\n    });\n    return resultFieldMap;\n  };\n\n  GraphQLInputObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInputObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLInputObjectType.prototype.toJSON = GraphQLInputObjectType.prototype.toString;\nGraphQLInputObjectType.prototype.inspect = GraphQLInputObjectType.prototype.toString;\n\n/***/ }),\n\n/***/ 1762:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Kind; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\n/***/ }),\n\n/***/ 1763:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives__ = __webpack_require__(1919);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fragments__ = __webpack_require__(1921);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_1__fragments__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getFromAST__ = __webpack_require__(1860);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"i\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_2__getFromAST__[\"j\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transform__ = __webpack_require__(1922);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__transform__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return __WEBPACK_IMPORTED_MODULE_3__transform__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__storeUtils__ = __webpack_require__(1802);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"h\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return __WEBPACK_IMPORTED_MODULE_4__storeUtils__[\"i\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_assign__ = __webpack_require__(1861);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_5__util_assign__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_cloneDeep__ = __webpack_require__(1862);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_environment__ = __webpack_require__(1803);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_7__util_environment__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return __WEBPACK_IMPORTED_MODULE_7__util_environment__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_errorHandling__ = __webpack_require__(1923);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_8__util_errorHandling__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return __WEBPACK_IMPORTED_MODULE_8__util_errorHandling__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_isEqual__ = __webpack_require__(1924);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_9__util_isEqual__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__util_maybeDeepFreeze__ = __webpack_require__(1925);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return __WEBPACK_IMPORTED_MODULE_10__util_maybeDeepFreeze__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__util_warnOnce__ = __webpack_require__(1926);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return __WEBPACK_IMPORTED_MODULE_11__util_warnOnce__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_stripSymbols__ = __webpack_require__(1927);\n/* unused harmony namespace reexport */\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1764:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = print;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__visitor__ = __webpack_require__(1776);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__visitor__[\"c\" /* visit */])(ast, { leave: printDocASTReducer });\n}\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: addDescription(function (_ref37) {\n    var name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  })\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  var escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + escaped.replace(/\"$/, '\"\\n') + '\"\"\"' : '\"\"\"\\n' + (isDescription ? escaped : indent(escaped)) + '\\n\"\"\"';\n}\n\n/***/ }),\n\n/***/ 1765:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isSchema;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GraphQLSchema; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_find__ = __webpack_require__(1780);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_instanceOf__ = __webpack_require__(1812);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__ = __webpack_require__(1774);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Test if the given value is a GraphQL schema.\n */\n\n// eslint-disable-next-line no-redeclare\nfunction isSchema(schema) {\n  return Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_instanceOf__[\"a\" /* default */])(schema, GraphQLSchema);\n}\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\nvar GraphQLSchema = function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _this = this;\n\n    _classCallCheck(this, GraphQLSchema);\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    if (config && config.assumeValid) {\n      this.__validationErrors = [];\n    } else {\n      // Otherwise check for common mistakes during construction to produce\n      // clear and early error messages.\n      !((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide configuration object.') : void 0;\n      !(!config.types || Array.isArray(config.types)) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, '\"types\" must be Array if provided but got: ' + String(config.types) + '.') : void 0;\n      !(!config.directives || Array.isArray(config.directives)) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, '\"directives\" must be Array if provided but got: ' + (String(config.directives) + '.')) : void 0;\n      !(!config.allowedLegacyNames || Array.isArray(config.allowedLegacyNames)) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, '\"allowedLegacyNames\" must be Array if provided but got: ' + (String(config.allowedLegacyNames) + '.')) : void 0;\n    }\n\n    this.__allowedLegacyNames = config.allowedLegacyNames;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription;\n    // Provide specified directives (e.g. @include and @skip) by default.\n    this._directives = config.directives || __WEBPACK_IMPORTED_MODULE_1__directives__[\"h\" /* specifiedDirectives */];\n    this.astNode = config.astNode;\n\n    // Build type map now to detect any errors within this schema.\n    var initialTypes = [this.getQueryType(), this.getMutationType(), this.getSubscriptionType(), __WEBPACK_IMPORTED_MODULE_2__introspection__[\"j\" /* __Schema */]];\n\n    var types = config.types;\n    if (types) {\n      initialTypes = initialTypes.concat(types);\n    }\n\n    // Keep track of all types referenced within the schema.\n    var typeMap = Object.create(null);\n\n    // First by deeply visiting all initial types.\n    typeMap = initialTypes.reduce(typeMapReducer, typeMap);\n\n    // Then by deeply visiting all directive types.\n    typeMap = this._directives.reduce(typeMapDirectiveReducer, typeMap);\n\n    // Storing the resulting map for reference by the schema.\n    this._typeMap = typeMap;\n\n    // Keep track of all implementations by interface name.\n    this._implementations = Object.create(null);\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(type)) {\n        type.getInterfaces().forEach(function (iface) {\n          if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"G\" /* isInterfaceType */])(iface)) {\n            var impls = _this._implementations[iface.name];\n            if (impls) {\n              impls.push(type);\n            } else {\n              _this._implementations[iface.name] = [type];\n            }\n          }\n        });\n      }\n    });\n  }\n  // Referenced by validateSchema().\n\n\n  GraphQLSchema.prototype.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  GraphQLSchema.prototype.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  GraphQLSchema.prototype.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  GraphQLSchema.prototype.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  GraphQLSchema.prototype.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  GraphQLSchema.prototype.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"Q\" /* isUnionType */])(abstractType)) {\n      return abstractType.getTypes();\n    }\n    return this._implementations[abstractType.name];\n  };\n\n  GraphQLSchema.prototype.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    var possibleTypeMap = this._possibleTypeMap;\n    if (!possibleTypeMap) {\n      this._possibleTypeMap = possibleTypeMap = Object.create(null);\n    }\n\n    if (!possibleTypeMap[abstractType.name]) {\n      var possibleTypes = this.getPossibleTypes(abstractType);\n      !Array.isArray(possibleTypes) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, 'Could not find possible implementing types for ' + abstractType.name + ' ' + 'in schema. Check that schema.types is defined and is an array of ' + 'all possible types in the schema.') : void 0;\n      possibleTypeMap[abstractType.name] = possibleTypes.reduce(function (map, type) {\n        return map[type.name] = true, map;\n      }, Object.create(null));\n    }\n\n    return Boolean(possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  GraphQLSchema.prototype.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  GraphQLSchema.prototype.getDirective = function getDirective(name) {\n    return Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_find__[\"a\" /* default */])(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  return GraphQLSchema;\n}();\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"R\" /* isWrappingType */])(type)) {\n    return typeMapReducer(map, type.ofType);\n  }\n  if (map[type.name]) {\n    !(map[type.name] === type) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, 'Schema must contain unique named types but contains multiple ' + ('types named \"' + type.name + '\".')) : void 0;\n    return map;\n  }\n  map[type.name] = type;\n\n  var reducedMap = map;\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"Q\" /* isUnionType */])(type)) {\n    reducedMap = type.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(type)) {\n    reducedMap = type.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(type) || Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"G\" /* isInterfaceType */])(type)) {\n    Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__[\"a\" /* default */])(type.getFields()).forEach(function (field) {\n      if (field.args) {\n        var fieldArgTypes = field.args.map(function (arg) {\n          return arg.type;\n        });\n        reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      }\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"E\" /* isInputObjectType */])(type)) {\n    Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__[\"a\" /* default */])(type.getFields()).forEach(function (field) {\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  return reducedMap;\n}\n\nfunction typeMapDirectiveReducer(map, directive) {\n  // Directives are not validated until validateSchema() is called.\n  if (!Object(__WEBPACK_IMPORTED_MODULE_1__directives__[\"f\" /* isDirective */])(directive)) {\n    return map;\n  }\n  return directive.args.reduce(function (_map, arg) {\n    return typeMapReducer(_map, arg.type);\n  }, map);\n}\n\n/***/ }),\n\n/***/ 1766:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = invariant;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\n/***/ }),\n\n/***/ 1767:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isInvalid;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Returns true if a value is undefined, or NaN.\n */\nfunction isInvalid(value) {\n  return value === undefined || value !== value;\n}\n\n/***/ }),\n\n/***/ 1768:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isDirective;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GraphQLDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return GraphQLIncludeDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return GraphQLSkipDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DEFAULT_DEPRECATION_REASON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return GraphQLDeprecatedDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return specifiedDirectives; });\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = isSpecifiedDirective;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__scalars__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_instanceOf__ = __webpack_require__(1812);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__ = __webpack_require__(1778);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n /**\n                                                * Copyright (c) 2015-present, Facebook, Inc.\n                                                *\n                                                * This source code is licensed under the MIT license found in the\n                                                * LICENSE file in the root directory of this source tree.\n                                                *\n                                                *  strict\n                                                */\n\n\n\n\n\n\n\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nfunction isDirective(directive) {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_instanceOf__[\"a\" /* default */])(directive, GraphQLDirective);\n}\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nvar GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  !config.name ? Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_invariant__[\"a\" /* default */])(0, 'Directive must be named.') : void 0;\n  !Array.isArray(config.locations) ? Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide locations for directive.') : void 0;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_invariant__[\"a\" /* default */])(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      var arg = args[argName];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nvar GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [__WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD, __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD, __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_1__scalars__[\"a\" /* GraphQLBoolean */]),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nvar GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [__WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD, __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD, __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_1__scalars__[\"a\" /* GraphQLBoolean */]),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nvar DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nvar GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [__WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD_DEFINITION, __WEBPACK_IMPORTED_MODULE_4__language_directiveLocation__[\"a\" /* DirectiveLocation */].ENUM_VALUE],\n  args: {\n    reason: {\n      type: __WEBPACK_IMPORTED_MODULE_1__scalars__[\"e\" /* GraphQLString */],\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nvar specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}\n\n/***/ }),\n\n/***/ 1769:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __Schema; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __Directive; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __DirectiveLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __Type; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __Field; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __InputValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __EnumValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TypeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __TypeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SchemaMetaFieldDef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return TypeMetaFieldDef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return TypeNameMetaFieldDef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return introspectionTypes; });\n/* harmony export (immutable) */ __webpack_exports__[\"n\"] = isIntrospectionType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_astFromValue__ = __webpack_require__(1813);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__scalars__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__ = __webpack_require__(1778);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\nvar __Schema = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__Schema',\n  isIntrospection: true,\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It ' + 'exposes all available types and directives on the server, as well as ' + 'the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type))),\n        resolve: function resolve(schema) {\n          return Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__[\"a\" /* default */])(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that ' + 'mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that ' + 'subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\n\nvar __Directive = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__Directive',\n  isIntrospection: true,\n  description: 'A Directive provides a way to describe alternate runtime execution and ' + 'type validation behavior in a GraphQL document.' + \"\\n\\nIn some cases, you need to provide options to alter GraphQL's \" + 'execution behavior in ways field arguments will not suffice, such as ' + 'conditionally including or skipping a field. Directives provide this by ' + 'describing additional information to the executor.',\n  fields: function fields() {\n    return {\n      name: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]) },\n      description: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      locations: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__DirectiveLocation)))\n      },\n      args: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__InputValue))),\n        resolve: function resolve(directive) {\n          return directive.args || [];\n        }\n      },\n      // NOTE: the following three fields are deprecated and are no longer part\n      // of the GraphQL specification.\n      onOperation: {\n        deprecationReason: 'Use `locations`.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */]),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].QUERY) !== -1 || d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].MUTATION) !== -1 || d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].SUBSCRIPTION) !== -1;\n        }\n      },\n      onFragment: {\n        deprecationReason: 'Use `locations`.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */]),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD) !== -1 || d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT) !== -1 || d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_DEFINITION) !== -1;\n        }\n      },\n      onField: {\n        deprecationReason: 'Use `locations`.',\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */]),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD) !== -1;\n        }\n      }\n    };\n  }\n});\n\nvar __DirectiveLocation = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"a\" /* GraphQLEnumType */]({\n  name: '__DirectiveLocation',\n  isIntrospection: true,\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a ' + '__DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    SCHEMA: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\n\nvar __Type = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__Type',\n  isIntrospection: true,\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are ' + 'many kinds of types in GraphQL as represented by the `__TypeKind` enum.' + '\\n\\nDepending on the kind of a type, certain fields describe ' + 'information about that type. Scalar types provide no information ' + 'beyond a name and description, while Enum types provide their values. ' + 'Object and Interface types provide the fields they describe. Abstract ' + 'types, Union and Interface, provide the Object types possible ' + 'at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__TypeKind),\n        resolve: function resolve(type) {\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"O\" /* isScalarType */])(type)) {\n            return TypeKind.SCALAR;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"M\" /* isObjectType */])(type)) {\n            return TypeKind.OBJECT;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"G\" /* isInterfaceType */])(type)) {\n            return TypeKind.INTERFACE;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"Q\" /* isUnionType */])(type)) {\n            return TypeKind.UNION;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"D\" /* isEnumType */])(type)) {\n            return TypeKind.ENUM;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"E\" /* isInputObjectType */])(type)) {\n            return TypeKind.INPUT_OBJECT;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"I\" /* isListType */])(type)) {\n            return TypeKind.LIST;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"K\" /* isNonNullType */])(type)) {\n            return TypeKind.NON_NULL;\n          }\n          throw new Error('Unknown kind of type: ' + type);\n        }\n      },\n      name: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      description: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      fields: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Field)),\n        args: {\n          includeDeprecated: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */], defaultValue: false }\n        },\n        resolve: function resolve(type, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"M\" /* isObjectType */])(type) || Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"G\" /* isInterfaceType */])(type)) {\n            var fields = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n            if (!includeDeprecated) {\n              fields = fields.filter(function (field) {\n                return !field.deprecationReason;\n              });\n            }\n            return fields;\n          }\n          return null;\n        }\n      },\n      interfaces: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type)),\n        resolve: function resolve(type) {\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"M\" /* isObjectType */])(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type)),\n        resolve: function resolve(type, args, context, _ref2) {\n          var schema = _ref2.schema;\n\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"B\" /* isAbstractType */])(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__EnumValue)),\n        args: {\n          includeDeprecated: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */], defaultValue: false }\n        },\n        resolve: function resolve(type, _ref3) {\n          var includeDeprecated = _ref3.includeDeprecated;\n\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"D\" /* isEnumType */])(type)) {\n            var values = type.getValues();\n            if (!includeDeprecated) {\n              values = values.filter(function (value) {\n                return !value.deprecationReason;\n              });\n            }\n            return values;\n          }\n        }\n      },\n      inputFields: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__InputValue)),\n        resolve: function resolve(type) {\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"E\" /* isInputObjectType */])(type)) {\n            return Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n          }\n        }\n      },\n      ofType: { type: __Type }\n    };\n  }\n});\n\nvar __Field = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__Field',\n  isIntrospection: true,\n  description: 'Object and Interface types are described by a list of Fields, each of ' + 'which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]) },\n      description: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      args: {\n        type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"d\" /* GraphQLList */])(Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__InputValue))),\n        resolve: function resolve(field) {\n          return field.args || [];\n        }\n      },\n      type: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type) },\n      isDeprecated: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */]) },\n      deprecationReason: {\n        type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]\n      }\n    };\n  }\n});\n\nvar __InputValue = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__InputValue',\n  isIntrospection: true,\n  description: 'Arguments provided to Fields or Directives and the input fields of an ' + 'InputObject are represented as Input Values which describe their type ' + 'and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]) },\n      description: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      type: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Type) },\n      defaultValue: {\n        type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */],\n        description: 'A GraphQL-formatted string representing the default value for this ' + 'input value.',\n        resolve: function resolve(inputVal) {\n          return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_isInvalid__[\"a\" /* default */])(inputVal.defaultValue) ? null : Object(__WEBPACK_IMPORTED_MODULE_3__language_printer__[\"a\" /* print */])(Object(__WEBPACK_IMPORTED_MODULE_2__utilities_astFromValue__[\"a\" /* astFromValue */])(inputVal.defaultValue, inputVal.type));\n        }\n      }\n    };\n  }\n});\n\nvar __EnumValue = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"f\" /* GraphQLObjectType */]({\n  name: '__EnumValue',\n  isIntrospection: true,\n  description: 'One possible value for a given Enum. Enum values are unique values, not ' + 'a placeholder for a string or numeric value. However an Enum value is ' + 'returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]) },\n      description: { type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */] },\n      isDeprecated: { type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"a\" /* GraphQLBoolean */]) },\n      deprecationReason: {\n        type: __WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]\n      }\n    };\n  }\n});\n\nvar TypeKind = {\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n};\n\nvar __TypeKind = new __WEBPACK_IMPORTED_MODULE_4__definition__[\"a\" /* GraphQLEnumType */]({\n  name: '__TypeKind',\n  isIntrospection: true,\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. ' + '`fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. ' + '`fields` and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. ' + '`possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. ' + '`enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. ' + '`inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. ' + '`ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. ' + '`ofType` is a valid field.'\n    }\n  }\n});\n\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nvar SchemaMetaFieldDef = {\n  name: '__schema',\n  type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref4) {\n    var schema = _ref4.schema;\n    return schema;\n  }\n};\n\nvar TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{ name: 'name', type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]) }],\n  resolve: function resolve(source, _ref5, context, _ref6) {\n    var name = _ref5.name;\n    var schema = _ref6.schema;\n    return schema.getType(name);\n  }\n};\n\nvar TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"e\" /* GraphQLNonNull */])(__WEBPACK_IMPORTED_MODULE_5__scalars__[\"e\" /* GraphQLString */]),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref7) {\n    var parentType = _ref7.parentType;\n    return parentType.name;\n  }\n};\n\nvar introspectionTypes = [__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind];\n\nfunction isIntrospectionType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_4__definition__[\"J\" /* isNamedType */])(type) && (\n  // Would prefer to use introspectionTypes.some(), however %checks needs\n  // a simple expression.\n  type.name === __Schema.name || type.name === __Directive.name || type.name === __DirectiveLocation.name || type.name === __Type.name || type.name === __Field.name || type.name === __InputValue.name || type.name === __EnumValue.name || type.name === __TypeKind.name);\n}\n\n/***/ }),\n\n/***/ 1770:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__link__ = __webpack_require__(1928);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"from\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"split\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"concat\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ApolloLink\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"execute\", function() { return __WEBPACK_IMPORTED_MODULE_0__link__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__linkUtils__ = __webpack_require__(1865);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"createOperation\", function() { return __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"makePromise\", function() { return __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"toPromise\", function() { return __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"fromPromise\", function() { return __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"fromError\", function() { return __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_zen_observable_ts__ = __webpack_require__(1804);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Observable\", function() { return __WEBPACK_IMPORTED_MODULE_2_zen_observable_ts__[\"a\"]; });\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1771:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = typeFromAST;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_definition__ = __webpack_require__(1761);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n/* eslint-disable no-redeclare */\n\nfunction typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType = void 0;\n  if (typeNode.kind === __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"d\" /* GraphQLList */])(innerType);\n  }\n  if (typeNode.kind === __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"e\" /* GraphQLNonNull */])(innerType);\n  }\n  if (typeNode.kind === __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected type kind: ' + typeNode.kind + '.');\n}\n\n/***/ }),\n\n/***/ 1772:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GraphQLError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__printError__ = __webpack_require__(1876);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_location__ = __webpack_require__(1810);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\n\nfunction GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return Object(__WEBPACK_IMPORTED_MODULE_1__language_location__[\"a\" /* getLocation */])(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(Object(__WEBPACK_IMPORTED_MODULE_1__language_location__[\"a\" /* getLocation */])(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return Object(__WEBPACK_IMPORTED_MODULE_0__printError__[\"a\" /* printError */])(this);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 1773:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return GraphQLInt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return GraphQLFloat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return GraphQLString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GraphQLBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GraphQLID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return specifiedScalarTypes; });\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isSpecifiedScalarType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_kinds__ = __webpack_require__(1762);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n// As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction coerceInt(value) {\n  if (value === '') {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: (empty string)');\n  }\n  var num = Number(value);\n  if (num !== num || num > MAX_INT || num < MIN_INT) {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: ' + String(value));\n  }\n  var int = Math.floor(num);\n  if (int !== num) {\n    throw new TypeError('Int cannot represent non-integer value: ' + String(value));\n  }\n  return int;\n}\n\nvar GraphQLInt = new __WEBPACK_IMPORTED_MODULE_0__definition__[\"g\" /* GraphQLScalarType */]({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric ' + 'values. Int can represent values between -(2^31) and 2^31 - 1. ',\n  serialize: coerceInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(ast) {\n    if (ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].INT) {\n      var num = parseInt(ast.value, 10);\n      if (num <= MAX_INT && num >= MIN_INT) {\n        return num;\n      }\n    }\n    return undefined;\n  }\n});\n\nfunction coerceFloat(value) {\n  if (value === '') {\n    throw new TypeError('Float cannot represent non numeric value: (empty string)');\n  }\n  var num = Number(value);\n  if (num === num) {\n    return num;\n  }\n  throw new TypeError('Float cannot represent non numeric value: ' + String(value));\n}\n\nvar GraphQLFloat = new __WEBPACK_IMPORTED_MODULE_0__definition__[\"g\" /* GraphQLScalarType */]({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional ' + 'values as specified by ' + '[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ',\n  serialize: coerceFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].FLOAT || ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].INT ? parseFloat(ast.value) : undefined;\n  }\n});\n\nfunction coerceString(value) {\n  if (Array.isArray(value)) {\n    throw new TypeError('String cannot represent an array value: [' + String(value) + ']');\n  }\n  return String(value);\n}\n\nvar GraphQLString = new __WEBPACK_IMPORTED_MODULE_0__definition__[\"g\" /* GraphQLScalarType */]({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 ' + 'character sequences. The String type is most often used by GraphQL to ' + 'represent free-form human-readable text.',\n  serialize: coerceString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].STRING ? ast.value : undefined;\n  }\n});\n\nvar GraphQLBoolean = new __WEBPACK_IMPORTED_MODULE_0__definition__[\"g\" /* GraphQLScalarType */]({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: Boolean,\n  parseValue: Boolean,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].BOOLEAN ? ast.value : undefined;\n  }\n});\n\nvar GraphQLID = new __WEBPACK_IMPORTED_MODULE_0__definition__[\"g\" /* GraphQLScalarType */]({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to ' + 'refetch an object or as key for a cache. The ID type appears in a JSON ' + 'response as a String; however, it is not intended to be human-readable. ' + 'When expected as an input type, any string (such as `\"4\"`) or integer ' + '(such as `4`) input value will be accepted as an ID.',\n  serialize: String,\n  parseValue: String,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].STRING || ast.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].INT ? ast.value : undefined;\n  }\n});\n\nvar specifiedScalarTypes = [GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID];\n\nfunction isSpecifiedScalarType(type) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"J\" /* isNamedType */])(type) && (\n  // Would prefer to use specifiedScalarTypes.some(), however %checks needs\n  // a simple expression.\n  type.name === GraphQLString.name || type.name === GraphQLInt.name || type.name === GraphQLFloat.name || type.name === GraphQLBoolean.name || type.name === GraphQLID.name);\n}\n\n/***/ }),\n\n/***/ 1774:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/2221\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (objectValues);\n\n/***/ }),\n\n/***/ 1775:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = keyMap;\n\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nfunction keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = item, map;\n  }, Object.create(null));\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/***/ }),\n\n/***/ 1776:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export QueryDocumentKeys */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BREAK; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = visit;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = visitInParallel;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = visitWithTypeInfo;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getVisitFn;\n\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\n\n\nvar BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n\n/***/ }),\n\n/***/ 1777:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"parse\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"parseValue\"] = parseValue;\n/* harmony export (immutable) */ __webpack_exports__[\"parseType\"] = parseType;\n/* harmony export (immutable) */ __webpack_exports__[\"parseConstValue\"] = parseConstValue;\n/* harmony export (immutable) */ __webpack_exports__[\"parseTypeReference\"] = parseTypeReference;\n/* harmony export (immutable) */ __webpack_exports__[\"parseNamedType\"] = parseNamedType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__source__ = __webpack_require__(1875);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lexer__ = __webpack_require__(1811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directiveLocation__ = __webpack_require__(1778);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Configuration options to control parser behavior\n */\n\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new __WEBPACK_IMPORTED_MODULE_0__source__[\"a\" /* Source */](source) : source;\n  if (!(sourceObj instanceof __WEBPACK_IMPORTED_MODULE_0__source__[\"a\" /* Source */])) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"b\" /* createLexer */])(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\nfunction parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new __WEBPACK_IMPORTED_MODULE_0__source__[\"a\" /* Source */](source) : source;\n  var lexer = Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"b\" /* createLexer */])(sourceObj, options || {});\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nfunction parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new __WEBPACK_IMPORTED_MODULE_0__source__[\"a\" /* Source */](source) : source;\n  var lexer = Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"b\" /* createLexer */])(sourceObj, options || {});\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EOF));\n\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        // Note: The schema definition language is an experimental addition.\n        return parseTypeSystemDefinition(lexer);\n    }\n  } else if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    // Note: The schema definition language is an experimental addition.\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L)) {\n    return {\n      kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L) ? many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L, parseVariableDefinition, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].DOLLAR);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].SELECTION_SET,\n    selections: many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L, parseSelection, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L) ? many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L, item, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_R) : [];\n}\n\n/**\n * Argument[Const] : Name : Value[?Const]\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].SPREAD);\n  if (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = void 0;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACKET_L:\n      return parseList(lexer, isConst);\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L:\n      return parseObject(lexer, isConst);\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].INT:\n      lexer.advance();\n      return {\n        kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].FLOAT:\n      lexer.advance();\n      return {\n        kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].STRING:\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BLOCK_STRING:\n      return parseStringLiteral(lexer);\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].STRING,\n    value: token.value,\n    block: token.kind === __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nfunction parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].LIST,\n    values: any(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACKET_L, item, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L);\n  var fields = [];\n  while (!skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n  while (peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n  return directives;\n}\n\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].AT);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nfunction parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACKET_R);\n    type = {\n      kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BANG)) {\n    return {\n      kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nfunction parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtension\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtension(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].STRING) || peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BLOCK_STRING);\n}\n\n/**\n * Description : StringValue\n */\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L, parseOperationTypeDefinition, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces :\n *   - implements `&`? NamedType\n *   - ImplementsInterfaces & NamedType\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    // Optional leading ampersand\n    skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].AMP);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].AMP) ||\n    // Legacy support for the SDL?\n    lexer.options.allowLegacySDLImplementsInterfaces && peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME));\n  }\n  return types;\n}\n\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\nfunction parseFieldsDefinition(lexer) {\n  // Legacy support for the SDL?\n  if (lexer.options.allowLegacySDLEmptyFields && peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L) && lexer.lookahead().kind === __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R) {\n    lexer.advance();\n    lexer.advance();\n    return [];\n  }\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L) ? many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L, parseFieldDefinition, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R) : [];\n}\n\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L)) {\n    return [];\n  }\n  return many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_L, parseInputValueDef, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PAREN_R);\n}\n\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = void 0;\n  if (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? UnionMemberTypes?\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionMemberTypes :\n *   - = `|`? NamedType\n *   - UnionMemberTypes | NamedType\n */\nfunction parseUnionMemberTypes(lexer) {\n  var types = [];\n  if (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PIPE);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PIPE));\n  }\n  return types;\n}\n\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L) ? many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L, parseEnumValueDefinition, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R) : [];\n}\n\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L) ? many(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_L, parseInputValueDef, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].BRACE_R) : [];\n}\n\n/**\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME) {\n    switch (keywordToken.value) {\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? UnionMemberTypes\n *   - extend union Name Directives[Const]\n */\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: __WEBPACK_IMPORTED_MODULE_3__kinds__[\"a\" /* Kind */].DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PIPE);\n  var locations = [];\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].PIPE));\n  return locations;\n}\n\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  if (__WEBPACK_IMPORTED_MODULE_4__directiveLocation__[\"a\" /* DirectiveLocation */].hasOwnProperty(name.value)) {\n    return name;\n  }\n  throw unexpected(lexer, start);\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw Object(__WEBPACK_IMPORTED_MODULE_1__error__[\"e\" /* syntaxError */])(lexer.source, token.start, 'Expected ' + kind + ', found ' + Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"c\" /* getTokenDesc */])(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\" /* TokenKind */].NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw Object(__WEBPACK_IMPORTED_MODULE_1__error__[\"e\" /* syntaxError */])(lexer.source, token.start, 'Expected \"' + value + '\", found ' + Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"c\" /* getTokenDesc */])(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return Object(__WEBPACK_IMPORTED_MODULE_1__error__[\"e\" /* syntaxError */])(lexer.source, token.start, 'Unexpected ' + Object(__WEBPACK_IMPORTED_MODULE_2__lexer__[\"c\" /* getTokenDesc */])(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/***/ }),\n\n/***/ 1778:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DirectiveLocation; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n\n/**\n * The enum type representing the directive location values.\n */\n\n/***/ }),\n\n/***/ 1779:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphql__ = __webpack_require__(1967);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"graphql\", function() { return __WEBPACK_IMPORTED_MODULE_0__graphql__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"graphqlSync\", function() { return __WEBPACK_IMPORTED_MODULE_0__graphql__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type__ = __webpack_require__(1972);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLSchema\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"p\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLScalarType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"o\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLInterfaceType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLUnionType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"s\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLEnumType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLInputObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLList\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLNonNull\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeKind\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"u\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"specifiedScalarTypes\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_23\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLInt\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLFloat\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLString\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"r\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLBoolean\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLID\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"specifiedDirectives\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_22\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLIncludeDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLSkipDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLDeprecatedDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_DEPRECATION_REASON\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"SchemaMetaFieldDef\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"t\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeMetaFieldDef\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"v\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeNameMetaFieldDef\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"w\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"introspectionTypes\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"Z\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__Schema\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"C\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__Directive\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"x\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__DirectiveLocation\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"y\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__Type\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"D\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__Field\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"A\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__InputValue\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"B\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__EnumValue\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"z\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"__TypeKind\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"E\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isSchema\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_16\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_2\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_19\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isScalarType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_15\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_13\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isInterfaceType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_6\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isUnionType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_20\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isEnumType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_3\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isInputObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_4\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isListType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_9\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonNullType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_11\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isInputType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_5\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isOutputType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_14\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isLeafType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_8\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isCompositeType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_1\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isAbstractType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_0\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isWrappingType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_21\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isNullableType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_12\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isNamedType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_10\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isSpecifiedScalarType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_18\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isIntrospectionType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_7\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isSpecifiedDirective\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_17\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"T\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertScalarType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"S\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"Q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertInterfaceType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"K\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertUnionType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"U\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertEnumType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"H\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertInputObjectType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"I\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertListType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"M\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertNonNullType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"O\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertInputType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"J\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertOutputType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"R\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertLeafType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"L\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertCompositeType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"G\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertAbstractType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"F\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertWrappingType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"W\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertNullableType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"P\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertNamedType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"N\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getNullableType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"Y\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getNamedType\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"X\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"validateSchema\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"_24\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertValidSchema\", function() { return __WEBPACK_IMPORTED_MODULE_1__type__[\"V\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language__ = __webpack_require__(1973);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Source\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getLocation\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"parseValue\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"parseType\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"print\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"visit\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"visitInParallel\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"visitWithTypeInfo\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getVisitFn\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Kind\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenKind\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"DirectiveLocation\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"BREAK\", function() { return __WEBPACK_IMPORTED_MODULE_2__language__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__execution__ = __webpack_require__(1974);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"execute\", function() { return __WEBPACK_IMPORTED_MODULE_3__execution__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultFieldResolver\", function() { return __WEBPACK_IMPORTED_MODULE_3__execution__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"responsePathAsArray\", function() { return __WEBPACK_IMPORTED_MODULE_3__execution__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getDirectiveValues\", function() { return __WEBPACK_IMPORTED_MODULE_3__execution__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__subscription__ = __webpack_require__(1975);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"subscribe\", function() { return __WEBPACK_IMPORTED_MODULE_4__subscription__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"createSourceEventStream\", function() { return __WEBPACK_IMPORTED_MODULE_4__subscription__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__validation__ = __webpack_require__(1978);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"validate\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"C\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ValidationContext\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"w\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"specifiedRules\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"B\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"FieldsOnCorrectTypeRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"FragmentsOnCompositeTypesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"KnownArgumentNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"KnownDirectivesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"KnownFragmentNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"KnownTypeNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"LoneAnonymousOperationRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NoFragmentCyclesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NoUndefinedVariablesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NoUnusedFragmentsRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NoUnusedVariablesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlappingFieldsCanBeMergedRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"PossibleFragmentSpreadsRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ProvidedNonNullArgumentsRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ScalarLeafsRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"o\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"SingleFieldSubscriptionsRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"p\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueArgumentNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueDirectivesPerLocationRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"r\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueFragmentNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"s\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueInputFieldNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"t\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueOperationNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"u\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueVariableNamesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"v\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ValuesOfCorrectTypeRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"x\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VariablesAreInputTypesRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"y\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VariablesDefaultValueAllowedRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"z\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VariablesInAllowedPositionRule\", function() { return __WEBPACK_IMPORTED_MODULE_5__validation__[\"A\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__error__ = __webpack_require__(1760);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"GraphQLError\", function() { return __WEBPACK_IMPORTED_MODULE_6__error__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"formatError\", function() { return __WEBPACK_IMPORTED_MODULE_6__error__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printError\", function() { return __WEBPACK_IMPORTED_MODULE_6__error__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utilities__ = __webpack_require__(1979);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getIntrospectionQuery\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"introspectionQuery\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"t\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getOperationAST\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"r\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"introspectionFromSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"s\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"buildClientSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"buildASTSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"buildSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"getDescription\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"p\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"extendSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"lexicographicSortSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"z\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"B\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printIntrospectionSchema\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"A\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printType\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"C\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"typeFromAST\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"E\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"valueFromAST\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"F\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"valueFromASTUntyped\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"G\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"astFromValue\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeInfo\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"coerceValue\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidJSValue\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"w\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidLiteralValue\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"x\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"concatAST\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"separateOperations\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"D\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqualType\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"u\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isTypeSubTypeOf\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"v\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"doTypesOverlap\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"assertValidName\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"isValidNameError\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"y\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"findBreakingChanges\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"findDangerousChanges\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"BreakingChangeType\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"DangerousChangeType\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"findDeprecatedUsages\", function() { return __WEBPACK_IMPORTED_MODULE_7__utilities__[\"o\"]; });\n\n\n\n// Create and operate on GraphQL type definitions and schema.\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n *     import { parse } from 'graphql';\n *     import { parse } from 'graphql/language';\n */\n\n// The primary entry point into fulfilling a GraphQL request.\n\n\n// Parse and operate on GraphQL language source files.\n\n\n// Execute GraphQL queries.\n\n\n\n\n// Validate GraphQL queries.\n\n\n// Create, format, and print GraphQL errors.\n\n\n// Utilities for operating on GraphQL type schema and parsed sources.\n\n\n/***/ }),\n\n/***/ 1780:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = find;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction find(list, predicate) {\n  for (var i = 0; i < list.length; i++) {\n    if (predicate(list[i])) {\n      return list[i];\n    }\n  }\n}\n\n/***/ }),\n\n/***/ 1781:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NetworkStatus; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isNetworkRequestInFlight;\n/**\n * The current status of a query’s execution in our system.\n */\nvar NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n//# sourceMappingURL=networkStatus.js.map\n\n/***/ }),\n\n/***/ 1782:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NetworkStatus; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isNetworkRequestInFlight;\n/**\n * The current status of a query’s execution in our system.\n */\nvar NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n//# sourceMappingURL=networkStatus.js.map\n\n/***/ }),\n\n/***/ 1783:\n/***/ (function(module, exports, __webpack_require__) {\n\n// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(77);\nvar core = __webpack_require__(48);\nvar fails = __webpack_require__(162);\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n/***/ }),\n\n/***/ 1784:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export $$iterator */\n/* unused harmony export isIterable */\n/* unused harmony export isArrayLike */\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = isCollection;\n/* unused harmony export getIterator */\n/* unused harmony export getIteratorMethod */\n/* unused harmony export createIterator */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = forEach;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return $$asyncIterator; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = isAsyncIterable;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getAsyncIterator;\n/* unused harmony export getAsyncIteratorMethod */\n/* unused harmony export createAsyncIterator */\n/* unused harmony export forAwaitEach */\n/**\n * Copyright (c) 2016, Lee Byron\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @ignore\n */\n\n/**\n * [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator)\n * is a *protocol* which describes a standard way to produce a sequence of\n * values, typically the values of the Iterable represented by this Iterator.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterator-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterator\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator|MDN Iteration protocols}\n */\n\n/**\n * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * their iteration behavior, such as what values are looped over in a\n * [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)\n * loop or `iterall`'s `forEach` function. Many [built-in types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#Builtin_iterables)\n * implement the Iterable protocol, including `Array` and `Map`.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterable-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterable\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable|MDN Iteration protocols}\n */\n\n// In ES2015 environments, Symbol exists\nvar SYMBOL /*: any */ = typeof Symbol === 'function' ? Symbol : void 0\n\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator\n\n/**\n * A property name to be used as the name of an Iterable's method responsible\n * for producing an Iterator, referred to as `@@iterator`. Typically represents\n * the value `Symbol.iterator` but falls back to the string `\"@@iterator\"` when\n * `Symbol.iterator` is not defined.\n *\n * Use `$$iterator` for defining new Iterables instead of `Symbol.iterator`,\n * but do not use it for accessing existing Iterables, instead use\n * {@link getIterator} or {@link isIterable}.\n *\n * @example\n *\n * var $$iterator = require('iterall').$$iterator\n *\n * function Counter (to) {\n *   this.to = to\n * }\n *\n * Counter.prototype[$$iterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       if (this.num >= this.to) {\n *         return { value: undefined, done: true }\n *       }\n *       return { value: this.num++, done: false }\n *     }\n *   }\n * }\n *\n * var counter = new Counter(3)\n * for (var number of counter) {\n *   console.log(number) // 0 ... 1 ... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$iterator: '@@iterator'; */\nvar $$iterator = SYMBOL_ITERATOR || '@@iterator'\n\n/**\n * Returns true if the provided object implements the Iterator protocol via\n * either implementing a `Symbol.iterator` or `\"@@iterator\"` method.\n *\n * @example\n *\n * var isIterable = require('iterall').isIterable\n * isIterable([ 1, 2, 3 ]) // true\n * isIterable('ABC') // true\n * isIterable({ length: 1, 0: 'Alpha' }) // false\n * isIterable({ key: 'value' }) // false\n * isIterable(new Map()) // true\n *\n * @param obj\n *   A value which might implement the Iterable protocol.\n * @return {boolean} true if Iterable.\n */\n/*:: declare export function isIterable(obj: any): boolean; */\nfunction isIterable(obj) {\n  return !!getIteratorMethod(obj)\n}\n\n/**\n * Returns true if the provided object implements the Array-like protocol via\n * defining a positive-integer `length` property.\n *\n * @example\n *\n * var isArrayLike = require('iterall').isArrayLike\n * isArrayLike([ 1, 2, 3 ]) // true\n * isArrayLike('ABC') // true\n * isArrayLike({ length: 1, 0: 'Alpha' }) // true\n * isArrayLike({ key: 'value' }) // false\n * isArrayLike(new Map()) // false\n *\n * @param obj\n *   A value which might implement the Array-like protocol.\n * @return {boolean} true if Array-like.\n */\n/*:: declare export function isArrayLike(obj: any): boolean; */\nfunction isArrayLike(obj) {\n  var length = obj != null && obj.length\n  return typeof length === 'number' && length >= 0 && length % 1 === 0\n}\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and is either Iterable or Array-like.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if an\n * object should be iterated-over. It always excludes string literals and\n * includes Arrays (regardless of if it is Iterable). It also includes other\n * Array-like objects such as NodeList, TypedArray, and Buffer.\n *\n * @example\n *\n * var isCollection = require('iterall').isCollection\n * isCollection([ 1, 2, 3 ]) // true\n * isCollection('ABC') // false\n * isCollection({ length: 1, 0: 'Alpha' }) // true\n * isCollection({ key: 'value' }) // false\n * isCollection(new Map()) // true\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n * if (isCollection(obj)) {\n *   forEach(obj, function (value) {\n *     console.log(value)\n *   })\n * }\n *\n * @param obj\n *   An Object value which might implement the Iterable or Array-like protocols.\n * @return {boolean} true if Iterable or Array-like Object.\n */\n/*:: declare export function isCollection(obj: any): boolean; */\nfunction isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj))\n}\n\n/**\n * If the provided object implements the Iterator protocol, its Iterator object\n * is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getIterator = require('iterall').getIterator\n * var iterator = getIterator([ 1, 2, 3 ])\n * iterator.next() // { value: 1, done: false }\n * iterator.next() // { value: 2, done: false }\n * iterator.next() // { value: 3, done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which is the source of an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var getIterator:\n  & (<+TValue>(iterable: Iterable<TValue>) => Iterator<TValue>)\n  & ((iterable: mixed) => void | Iterator<mixed>); */\nfunction getIterator(iterable) {\n  var method = getIteratorMethod(iterable)\n  if (method) {\n    return method.call(iterable)\n  }\n}\n\n/**\n * If the provided object implements the Iterator protocol, the method\n * responsible for producing its Iterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getIteratorMethod = require('iterall').getIteratorMethod\n * var myArray = [ 1, 2, 3 ]\n * var method = getIteratorMethod(myArray)\n * if (method) {\n *   var iterator = method.call(myArray)\n * }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which defines an `@@iterator` method.\n * @return {function(): Iterator<T>} `@@iterator` method.\n */\n/*:: declare export var getIteratorMethod:\n  & (<+TValue>(iterable: Iterable<TValue>) => (() => Iterator<TValue>))\n  & ((iterable: mixed) => (void | (() => Iterator<mixed>))); */\nfunction getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method =\n      (SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR]) || iterable['@@iterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getIterator}, this method returns a new Iterator given an\n * Iterable. However it will also create an Iterator for a non-Iterable\n * Array-like collection, such as Array in a non-ES2015 environment.\n *\n * `createIterator` is complimentary to `forEach`, but allows a \"pull\"-based\n * iteration as opposed to `forEach`'s \"push\"-based iteration.\n *\n * `createIterator` produces an Iterator for Array-likes with the same behavior\n * as ArrayIteratorPrototype described in the ECMAScript specification, and\n * does *not* skip over \"holes\".\n *\n * @example\n *\n * var createIterator = require('iterall').createIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createIterator(myArraylike)\n * iterator.next() // { value: 'Alpha', done: false }\n * iterator.next() // { value: 'Bravo', done: false }\n * iterator.next() // { value: 'Charlie', done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   An Iterable or Array-like object to produce an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var createIterator:\n  & (<+TValue>(collection: Iterable<TValue>) => Iterator<TValue>)\n  & ((collection: {length: number}) => Iterator<mixed>)\n  & ((collection: mixed) => (void | Iterator<mixed>)); */\nfunction createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection)\n    if (iterator) {\n      return iterator\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection)\n    }\n  }\n}\n\n// When the object provided to `createIterator` is not Iterable but is\n// Array-like, this simple Iterator is created.\nfunction ArrayLikeIterator(obj) {\n  this._o = obj\n  this._i = 0\n}\n\n// Note: all Iterators are themselves Iterable.\nArrayLikeIterator.prototype[$$iterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nArrayLikeIterator.prototype.next = function() {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0\n    return { value: void 0, done: true }\n  }\n  return { value: this._o[this._i++], done: false }\n}\n\n/**\n * Given an object which either implements the Iterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forEach` where you would expect to use a `for ... of` loop in ES6.\n * However `forEach` adheres to the behavior of [Array#forEach][] described in\n * the ECMAScript specification, skipping over \"holes\" in Array-likes. It will\n * also delegate to a `forEach` method on `collection` if one is defined,\n * ensuring native performance for `Arrays`.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * Note: providing an infinite Iterator to forEach will produce an error.\n *\n * [Array#forEach]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n *\n * forEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES6:\n * for (let value of myIterable) {\n *   console.log(value)\n * }\n *\n * // Any JavaScript environment:\n * forEach(myIterable, function (value) {\n *   console.log(value)\n * })\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   The Iterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forEach:\n  & (<+TValue, TCollection: Iterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void)\n  & (<TCollection: {length: number}>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void); */\nfunction forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg)\n    }\n    var i = 0\n    var iterator = getIterator(collection)\n    if (iterator) {\n      var step\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection)\n        // Infinite Iterators could cause forEach to run forever.\n        // After a very large number of iterations, produce an error.\n        /* istanbul ignore if */\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.')\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection)\n        }\n      }\n    }\n  }\n}\n\n/////////////////////////////////////////////////////\n//                                                 //\n//                 ASYNC ITERATORS                 //\n//                                                 //\n/////////////////////////////////////////////////////\n\n/**\n * [AsyncIterable](https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * an asynchronous iteration behavior, such as what values are looped over in\n * a [`for-await-of`](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements)\n * loop or `iterall`'s {@link forAwaitEach} function.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterable\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface|Async Iteration Proposal}\n * @template T The type of each iterated value\n * @property {function (): AsyncIterator<T>} Symbol.asyncIterator\n *   A method which produces an AsyncIterator for this AsyncIterable.\n */\n\n/**\n * [AsyncIterator](https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface)\n * is a *protocol* which describes a standard way to produce and consume an\n * asynchronous sequence of values, typically the values of the\n * {@link AsyncIterable} represented by this {@link AsyncIterator}.\n *\n * AsyncIterator is similar to Observable or Stream. Like an {@link Iterator} it\n * also as a `next()` method, however instead of an IteratorResult,\n * calling this method returns a {@link Promise} for a IteratorResult.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterator\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface|Async Iteration Proposal}\n */\n\n// In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator\n\n/**\n * A property name to be used as the name of an AsyncIterable's method\n * responsible for producing an Iterator, referred to as `@@asyncIterator`.\n * Typically represents the value `Symbol.asyncIterator` but falls back to the\n * string `\"@@asyncIterator\"` when `Symbol.asyncIterator` is not defined.\n *\n * Use `$$asyncIterator` for defining new AsyncIterables instead of\n * `Symbol.asyncIterator`, but do not use it for accessing existing Iterables,\n * instead use {@link getAsyncIterator} or {@link isAsyncIterable}.\n *\n * @example\n *\n * var $$asyncIterator = require('iterall').$$asyncIterator\n *\n * function Chirper (to) {\n *   this.to = to\n * }\n *\n * Chirper.prototype[$$asyncIterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       return new Promise(resolve => {\n *         if (this.num >= this.to) {\n *           resolve({ value: undefined, done: true })\n *         } else {\n *           setTimeout(() => {\n *             resolve({ value: this.num++, done: false })\n *           }, 1000)\n *         }\n *       })\n *     }\n *   }\n * }\n *\n * var chirper = new Chirper(3)\n * for await (var number of chirper) {\n *   console.log(number) // 0 ...wait... 1 ...wait... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$asyncIterator: '@@asyncIterator'; */\nvar $$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator'\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n *\n * @example\n *\n * var isAsyncIterable = require('iterall').isAsyncIterable\n * isAsyncIterable(myStream) // true\n * isAsyncIterable('ABC') // false\n *\n * @param obj\n *   A value which might implement the AsyncIterable protocol.\n * @return {boolean} true if AsyncIterable.\n */\n/*:: declare export function isAsyncIterable(obj: any): boolean; */\nfunction isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj)\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, its\n * AsyncIterator object is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getAsyncIterator = require('iterall').getAsyncIterator\n * var asyncIterator = getAsyncIterator(myStream)\n * asyncIterator.next().then(console.log) // { value: 1, done: false }\n * asyncIterator.next().then(console.log) // { value: 2, done: false }\n * asyncIterator.next().then(console.log) // { value: 3, done: false }\n * asyncIterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which is the source of an AsyncIterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var getAsyncIterator:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => AsyncIterator<TValue>)\n  & ((asyncIterable: mixed) => (void | AsyncIterator<mixed>)); */\nfunction getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable)\n  if (method) {\n    return method.call(asyncIterable)\n  }\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, the method\n * responsible for producing its AsyncIterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getAsyncIteratorMethod = require('iterall').getAsyncIteratorMethod\n * var method = getAsyncIteratorMethod(myStream)\n * if (method) {\n *   var asyncIterator = method.call(myStream)\n * }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which defines an `@@asyncIterator` method.\n * @return {function(): AsyncIterator<T>} `@@asyncIterator` method.\n */\n/*:: declare export var getAsyncIteratorMethod:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => (() => AsyncIterator<TValue>))\n  & ((asyncIterable: mixed) => (void | (() => AsyncIterator<mixed>))); */\nfunction getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method =\n      (SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR]) ||\n      asyncIterable['@@asyncIterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getAsyncIterator}, this method returns a new AsyncIterator\n * given an AsyncIterable. However it will also create an AsyncIterator for a\n * non-async Iterable as well as non-Iterable Array-like collection, such as\n * Array in a pre-ES2015 environment.\n *\n * `createAsyncIterator` is complimentary to `forAwaitEach`, but allows a\n * buffering \"pull\"-based iteration as opposed to `forAwaitEach`'s\n * \"push\"-based iteration.\n *\n * `createAsyncIterator` produces an AsyncIterator for non-async Iterables as\n * described in the ECMAScript proposal [Async-from-Sync Iterator Objects](https://tc39.github.io/proposal-async-iteration/#sec-async-from-sync-iterator-objects).\n *\n * > Note: Creating `AsyncIterator`s requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var createAsyncIterator = require('iterall').createAsyncIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createAsyncIterator(myArraylike)\n * iterator.next().then(console.log) // { value: 'Alpha', done: false }\n * iterator.next().then(console.log) // { value: 'Bravo', done: false }\n * iterator.next().then(console.log) // { value: 'Charlie', done: false }\n * iterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<T>|{ length: number }} source\n *   An AsyncIterable, Iterable, or Array-like object to produce an Iterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var createAsyncIterator:\n  & (<+TValue>(\n      collection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>\n    ) => AsyncIterator<TValue>)\n  & ((collection: {length: number}) => AsyncIterator<mixed>)\n  & ((collection: mixed) => (void | AsyncIterator<mixed>)); */\nfunction createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source)\n    if (asyncIterator) {\n      return asyncIterator\n    }\n    var iterator = createIterator(source)\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator)\n    }\n  }\n}\n\n// When the object provided to `createAsyncIterator` is not AsyncIterable but is\n// sync Iterable, this simple wrapper is created.\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator\n}\n\n// Note: all AsyncIterators are themselves AsyncIterable.\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nAsyncFromSyncIterator.prototype.next = function() {\n  var step = this._i.next()\n  return Promise.resolve(step.value).then(function(value) {\n    return { value: value, done: step.done }\n  })\n}\n\n/**\n * Given an object which either implements the AsyncIterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forAwaitEach` where you would expect to use a [for-await-of](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements) loop.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * > Note: Using `forAwaitEach` requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var forAwaitEach = require('iterall').forAwaitEach\n *\n * forAwaitEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES2017:\n * for await (let value of myAsyncIterable) {\n *   console.log(await doSomethingAsync(value))\n * }\n * console.log('done')\n *\n * // Any JavaScript environment:\n * forAwaitEach(myAsyncIterable, function (value) {\n *   return doSomethingAsync(value).then(console.log)\n * }).then(function () {\n *   console.log('done')\n * })\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<Promise<T> | T>|{ length: number }} source\n *   The AsyncIterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forAwaitEach:\n  & (<+TValue, TCollection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>)\n  & (<TCollection: { length: number }>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>); */\nfunction forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source)\n  if (asyncIterator) {\n    var i = 0\n    return new Promise(function(resolve, reject) {\n      function next() {\n        asyncIterator\n          .next()\n          .then(function(step) {\n            if (!step.done) {\n              Promise.resolve(callback.call(thisArg, step.value, i++, source))\n                .then(next)\n                .catch(reject)\n            } else {\n              resolve()\n            }\n            // Explicitly return null, silencing bluebird-style warnings.\n            return null\n          })\n          .catch(reject)\n        // Explicitly return null, silencing bluebird-style warnings.\n        return null\n      }\n      next()\n    })\n  }\n}\n\n\n/***/ }),\n\n/***/ 1785:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TypeInfo; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__typeFromAST__ = __webpack_require__(1771);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_find__ = __webpack_require__(1780);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nvar TypeInfo = function () {\n  function TypeInfo(schema,\n  // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant codebases. You should never need to use it.\n  getFieldDefFn,\n  // Initial type may be provided in rare cases to facilitate traversals\n  initialType) {\n    _classCallCheck(this, TypeInfo);\n\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn || getFieldDef;\n    if (initialType) {\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"F\" /* isInputType */])(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"C\" /* isCompositeType */])(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"N\" /* isOutputType */])(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  TypeInfo.prototype.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  TypeInfo.prototype.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  TypeInfo.prototype.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  TypeInfo.prototype.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  // Flow does not yet handle this case.\n\n\n  TypeInfo.prototype.enter = function enter(node /* ASTNode */) {\n    var schema = this._schema;\n    // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n    switch (node.kind) {\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].SELECTION_SET:\n        var namedType = Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"z\" /* getNamedType */])(this.getType());\n        this._parentTypeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"C\" /* isCompositeType */])(namedType) ? namedType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].FIELD:\n        var parentType = this.getParentType();\n        var fieldDef = void 0;\n        var fieldType = void 0;\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n        this._fieldDefStack.push(fieldDef);\n        this._typeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"N\" /* isOutputType */])(fieldType) ? fieldType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION:\n        var type = void 0;\n        if (node.operation === 'query') {\n          type = schema.getQueryType();\n        } else if (node.operation === 'mutation') {\n          type = schema.getMutationType();\n        } else if (node.operation === 'subscription') {\n          type = schema.getSubscriptionType();\n        }\n        this._typeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"M\" /* isObjectType */])(type) ? type : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].INLINE_FRAGMENT:\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION:\n        var typeConditionAST = node.typeCondition;\n        var outputType = typeConditionAST ? Object(__WEBPACK_IMPORTED_MODULE_3__typeFromAST__[\"a\" /* typeFromAST */])(schema, typeConditionAST) : Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"z\" /* getNamedType */])(this.getType());\n        this._typeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"N\" /* isOutputType */])(outputType) ? outputType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].VARIABLE_DEFINITION:\n        var inputType = Object(__WEBPACK_IMPORTED_MODULE_3__typeFromAST__[\"a\" /* typeFromAST */])(schema, node.type);\n        this._inputTypeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"F\" /* isInputType */])(inputType) ? inputType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].ARGUMENT:\n        var argDef = void 0;\n        var argType = void 0;\n        var fieldOrDirective = this.getDirective() || this.getFieldDef();\n        if (fieldOrDirective) {\n          argDef = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_find__[\"a\" /* default */])(fieldOrDirective.args, function (arg) {\n            return arg.name === node.name.value;\n          });\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n        this._argument = argDef;\n        this._inputTypeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"F\" /* isInputType */])(argType) ? argType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].LIST:\n        var listType = Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"A\" /* getNullableType */])(this.getInputType());\n        var itemType = Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"I\" /* isListType */])(listType) ? listType.ofType : listType;\n        this._inputTypeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"F\" /* isInputType */])(itemType) ? itemType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].OBJECT_FIELD:\n        var objectType = Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"z\" /* getNamedType */])(this.getInputType());\n        var inputFieldType = void 0;\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"E\" /* isInputObjectType */])(objectType)) {\n          var inputField = objectType.getFields()[node.name.value];\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n        this._inputTypeStack.push(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"F\" /* isInputType */])(inputFieldType) ? inputFieldType : undefined);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].ENUM:\n        var enumType = Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"z\" /* getNamedType */])(this.getInputType());\n        var enumValue = void 0;\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"D\" /* isEnumType */])(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n        this._enumValue = enumValue;\n        break;\n    }\n  };\n\n  TypeInfo.prototype.leave = function leave(node) {\n    switch (node.kind) {\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].SELECTION_SET:\n        this._parentTypeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].FIELD:\n        this._fieldDefStack.pop();\n        this._typeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].DIRECTIVE:\n        this._directive = null;\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].INLINE_FRAGMENT:\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].ARGUMENT:\n        this._argument = null;\n        this._inputTypeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].LIST:\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].OBJECT_FIELD:\n        this._inputTypeStack.pop();\n        break;\n      case __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n  if (name === __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"a\" /* SchemaMetaFieldDef */].name && schema.getQueryType() === parentType) {\n    return __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"a\" /* SchemaMetaFieldDef */];\n  }\n  if (name === __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"c\" /* TypeMetaFieldDef */].name && schema.getQueryType() === parentType) {\n    return __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"c\" /* TypeMetaFieldDef */];\n  }\n  if (name === __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"d\" /* TypeNameMetaFieldDef */].name && Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"C\" /* isCompositeType */])(parentType)) {\n    return __WEBPACK_IMPORTED_MODULE_2__type_introspection__[\"d\" /* TypeNameMetaFieldDef */];\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"M\" /* isObjectType */])(parentType) || Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"G\" /* isInterfaceType */])(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n\n/***/ }),\n\n/***/ 1786:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = suggestionList;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var oLength = options.length;\n  var inputThreshold = input.length / 2;\n  for (var i = 0; i < oLength; i++) {\n    var distance = lexicalDistance(input, options[i]);\n    var threshold = Math.max(inputThreshold, options[i].length / 2, 1);\n    if (distance <= threshold) {\n      optionsByDistance[options[i]] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    return optionsByDistance[a] - optionsByDistance[b];\n  });\n}\n\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\nfunction lexicalDistance(aStr, bStr) {\n  if (aStr === bStr) {\n    return 0;\n  }\n\n  var i = void 0;\n  var j = void 0;\n  var d = [];\n  var a = aStr.toLowerCase();\n  var b = bStr.toLowerCase();\n  var aLength = a.length;\n  var bLength = b.length;\n\n  // Any case change counts as a single edit\n  if (a === b) {\n    return 1;\n  }\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n\n/***/ }),\n\n/***/ 1793:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FetchType; });\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n//# sourceMappingURL=types.js.map\n\n/***/ }),\n\n/***/ 1794:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FetchType; });\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n//# sourceMappingURL=types.js.map\n\n/***/ }),\n\n/***/ 1795:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = validateSchema;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = assertValidSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_find__ = __webpack_require__(1780);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__error_GraphQLError__ = __webpack_require__(1772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utilities_assertValidName__ = __webpack_require__(1882);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utilities_typeComparators__ = __webpack_require__(1798);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  !Object(__WEBPACK_IMPORTED_MODULE_3__schema__[\"b\" /* isSchema */])(schema) ? Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_invariant__[\"a\" /* default */])(0, 'Expected ' + String(schema) + ' to be a GraphQL schema.') : void 0;\n\n  // If this Schema has already been validated, return the previous results.\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  }\n\n  // Validate the schema, producing a list of errors.\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context);\n\n  // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\nfunction assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext = function () {\n  function SchemaValidationContext(schema) {\n    _classCallCheck(this, SchemaValidationContext);\n\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  SchemaValidationContext.prototype.reportError = function reportError(message, nodes) {\n    var _nodes = (Array.isArray(nodes) ? nodes : [nodes]).filter(Boolean);\n    this.addError(new __WEBPACK_IMPORTED_MODULE_7__error_GraphQLError__[\"a\" /* GraphQLError */](message, _nodes));\n  };\n\n  SchemaValidationContext.prototype.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  SchemaValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(queryType)) {\n    context.reportError('Query root type must be Object type, it cannot be ' + String(queryType) + '.', getOperationTypeNode(schema, queryType, 'query'));\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && !Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(mutationType)) {\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + (String(mutationType) + '.'), getOperationTypeNode(schema, mutationType, 'mutation'));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && !Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(subscriptionType)) {\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + (String(subscriptionType) + '.'), getOperationTypeNode(schema, subscriptionType, 'subscription'));\n  }\n}\n\nfunction getOperationTypeNode(schema, type, operation) {\n  var astNode = schema.astNode;\n  var operationTypeNode = astNode && astNode.operationTypes.find(function (operationType) {\n    return operationType.operation === operation;\n  });\n  return operationTypeNode ? operationTypeNode.type : type && type.astNode;\n}\n\nfunction validateDirectives(context) {\n  var directives = context.schema.getDirectives();\n  directives.forEach(function (directive) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__directives__[\"f\" /* isDirective */])(directive)) {\n      context.reportError('Expected directive but got: ' + String(directive) + '.', directive && directive.astNode);\n      return;\n    }\n\n    // Ensure they are named correctly.\n    validateName(context, directive);\n\n    // TODO: Ensure proper locations.\n\n    // Ensure the arguments are valid.\n    var argNames = Object.create(null);\n    directive.args.forEach(function (arg) {\n      var argName = arg.name;\n\n      // Ensure they are named correctly.\n      validateName(context, arg);\n\n      // Ensure they are unique per directive.\n      if (argNames[argName]) {\n        context.reportError('Argument @' + directive.name + '(' + argName + ':) can only be defined once.', getAllDirectiveArgNodes(directive, argName));\n        return; // continue loop\n      }\n      argNames[argName] = true;\n\n      // Ensure the type is an input type.\n      if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"F\" /* isInputType */])(arg.type)) {\n        context.reportError('The type of @' + directive.name + '(' + argName + ':) must be Input Type ' + ('but got: ' + String(arg.type) + '.'), getDirectiveArgTypeNode(directive, argName));\n      }\n    });\n  });\n}\n\nfunction validateName(context, node) {\n  // If a schema explicitly allows some legacy name which is no longer valid,\n  // allow it to be assumed valid.\n  if (context.schema.__allowedLegacyNames && context.schema.__allowedLegacyNames.indexOf(node.name) !== -1) {\n    return;\n  }\n  // Ensure names are valid, however introspection types opt out.\n  var error = Object(__WEBPACK_IMPORTED_MODULE_8__utilities_assertValidName__[\"b\" /* isValidNameError */])(node.name, node.astNode || undefined);\n  if (error) {\n    context.addError(error);\n  }\n}\n\nfunction validateTypes(context) {\n  var typeMap = context.schema.getTypeMap();\n  Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__[\"a\" /* default */])(typeMap).forEach(function (type) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"J\" /* isNamedType */])(type)) {\n      context.reportError('Expected GraphQL named type but got: ' + String(type) + '.', type && type.astNode);\n      return;\n    }\n\n    // Ensure it is named correctly (excluding introspection types).\n    if (!Object(__WEBPACK_IMPORTED_MODULE_2__introspection__[\"n\" /* isIntrospectionType */])(type)) {\n      validateName(context, type);\n    }\n\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(type)) {\n      // Ensure fields are valid\n      validateFields(context, type);\n\n      // Ensure objects implement the interfaces they claim to.\n      validateObjectInterfaces(context, type);\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"G\" /* isInterfaceType */])(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type);\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"Q\" /* isUnionType */])(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"D\" /* isEnumType */])(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"E\" /* isInputObjectType */])(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type);\n    }\n  });\n}\n\nfunction validateFields(context, type) {\n  var fields = Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n\n  // Objects and Interfaces both must define one or more fields.\n  if (fields.length === 0) {\n    context.reportError('Type ' + type.name + ' must define one or more fields.', getAllObjectOrInterfaceNodes(type));\n  }\n\n  fields.forEach(function (field) {\n    // Ensure they are named correctly.\n    validateName(context, field);\n\n    // Ensure they were defined at most once.\n    var fieldNodes = getAllFieldNodes(type, field.name);\n    if (fieldNodes.length > 1) {\n      context.reportError('Field ' + type.name + '.' + field.name + ' can only be defined once.', fieldNodes);\n      return; // continue loop\n    }\n\n    // Ensure the type is an output type\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"N\" /* isOutputType */])(field.type)) {\n      context.reportError('The type of ' + type.name + '.' + field.name + ' must be Output Type ' + ('but got: ' + String(field.type) + '.'), getFieldTypeNode(type, field.name));\n    }\n\n    // Ensure the arguments are valid\n    var argNames = Object.create(null);\n    field.args.forEach(function (arg) {\n      var argName = arg.name;\n\n      // Ensure they are named correctly.\n      validateName(context, arg);\n\n      // Ensure they are unique per field.\n      if (argNames[argName]) {\n        context.reportError('Field argument ' + type.name + '.' + field.name + '(' + argName + ':) can only ' + 'be defined once.', getAllFieldArgNodes(type, field.name, argName));\n      }\n      argNames[argName] = true;\n\n      // Ensure the type is an input type\n      if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"F\" /* isInputType */])(arg.type)) {\n        context.reportError('The type of ' + type.name + '.' + field.name + '(' + argName + ':) must be Input ' + ('Type but got: ' + String(arg.type) + '.'), getFieldArgTypeNode(type, field.name, argName));\n      }\n    });\n  });\n}\n\nfunction validateObjectInterfaces(context, object) {\n  var implementedTypeNames = Object.create(null);\n  object.getInterfaces().forEach(function (iface) {\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"G\" /* isInterfaceType */])(iface)) {\n      context.reportError('Type ' + String(object) + ' must only implement Interface types, ' + ('it cannot implement ' + String(iface) + '.'), getImplementsInterfaceNode(object, iface));\n      return;\n    }\n\n    if (implementedTypeNames[iface.name]) {\n      context.reportError('Type ' + object.name + ' can only implement ' + iface.name + ' once.', getAllImplementsInterfaceNodes(object, iface));\n      return; // continue loop\n    }\n    implementedTypeNames[iface.name] = true;\n    validateObjectImplementsInterface(context, object, iface);\n  });\n}\n\nfunction validateObjectImplementsInterface(context, object, iface) {\n  var objectFieldMap = object.getFields();\n  var ifaceFieldMap = iface.getFields();\n\n  // Assert each interface field is implemented.\n  Object.keys(ifaceFieldMap).forEach(function (fieldName) {\n    var objectField = objectFieldMap[fieldName];\n    var ifaceField = ifaceFieldMap[fieldName];\n\n    // Assert interface field exists on object.\n    if (!objectField) {\n      context.reportError('Interface field ' + iface.name + '.' + fieldName + ' expected but ' + (object.name + ' does not provide it.'), [getFieldNode(iface, fieldName), object.astNode]);\n      // Continue loop over fields.\n      return;\n    }\n\n    // Assert interface field type is satisfied by object field type, by being\n    // a valid subtype. (covariant)\n    if (!Object(__WEBPACK_IMPORTED_MODULE_9__utilities_typeComparators__[\"c\" /* isTypeSubTypeOf */])(context.schema, objectField.type, ifaceField.type)) {\n      context.reportError('Interface field ' + iface.name + '.' + fieldName + ' expects type ' + (String(ifaceField.type) + ' but ' + object.name + '.' + fieldName + ' ') + ('is type ' + String(objectField.type) + '.'), [getFieldTypeNode(iface, fieldName), getFieldTypeNode(object, fieldName)]);\n    }\n\n    // Assert each interface field arg is implemented.\n    ifaceField.args.forEach(function (ifaceArg) {\n      var argName = ifaceArg.name;\n      var objectArg = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_find__[\"a\" /* default */])(objectField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      // Assert interface field arg exists on object field.\n      if (!objectArg) {\n        context.reportError('Interface field argument ' + iface.name + '.' + fieldName + '(' + argName + ':) ' + ('expected but ' + object.name + '.' + fieldName + ' does not provide it.'), [getFieldArgNode(iface, fieldName, argName), getFieldNode(object, fieldName)]);\n        // Continue loop over arguments.\n        return;\n      }\n\n      // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n      if (!Object(__WEBPACK_IMPORTED_MODULE_9__utilities_typeComparators__[\"b\" /* isEqualType */])(ifaceArg.type, objectArg.type)) {\n        context.reportError('Interface field argument ' + iface.name + '.' + fieldName + '(' + argName + ':) ' + ('expects type ' + String(ifaceArg.type) + ' but ') + (object.name + '.' + fieldName + '(' + argName + ':) is type ') + (String(objectArg.type) + '.'), [getFieldArgTypeNode(iface, fieldName, argName), getFieldArgTypeNode(object, fieldName, argName)]);\n      }\n\n      // TODO: validate default values?\n    });\n\n    // Assert additional arguments must not be required.\n    objectField.args.forEach(function (objectArg) {\n      var argName = objectArg.name;\n      var ifaceArg = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_find__[\"a\" /* default */])(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n      if (!ifaceArg && Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"K\" /* isNonNullType */])(objectArg.type)) {\n        context.reportError('Object field argument ' + object.name + '.' + fieldName + '(' + argName + ':) ' + ('is of required type ' + String(objectArg.type) + ' but is not also ') + ('provided by the Interface field ' + iface.name + '.' + fieldName + '.'), [getFieldArgTypeNode(object, fieldName, argName), getFieldNode(iface, fieldName)]);\n      }\n    });\n  });\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError('Union type ' + union.name + ' must define one or more member types.', union.astNode);\n  }\n\n  var includedTypeNames = Object.create(null);\n  memberTypes.forEach(function (memberType) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError('Union type ' + union.name + ' can only include type ' + (memberType.name + ' once.'), getUnionMemberTypeNodes(union, memberType.name));\n      return; // continue loop\n    }\n    includedTypeNames[memberType.name] = true;\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"M\" /* isObjectType */])(memberType)) {\n      context.reportError('Union type ' + union.name + ' can only include Object types, ' + ('it cannot include ' + String(memberType) + '.'), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  });\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError('Enum type ' + enumType.name + ' must define one or more values.', enumType.astNode);\n  }\n\n  enumValues.forEach(function (enumValue) {\n    var valueName = enumValue.name;\n\n    // Ensure no duplicates.\n    var allNodes = getEnumValueNodes(enumType, valueName);\n    if (allNodes && allNodes.length > 1) {\n      context.reportError('Enum type ' + enumType.name + ' can include value ' + valueName + ' only once.', allNodes);\n    }\n\n    // Ensure valid name.\n    validateName(context, enumValue);\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError('Enum type ' + enumType.name + ' cannot include value: ' + valueName + '.', enumValue.astNode);\n    }\n  });\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_objectValues__[\"a\" /* default */])(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError('Input Object type ' + inputObj.name + ' must define one or more fields.', inputObj.astNode);\n  }\n\n  // Ensure the arguments are valid\n  fields.forEach(function (field) {\n    // Ensure they are named correctly.\n    validateName(context, field);\n\n    // TODO: Ensure they are unique per field.\n\n    // Ensure the type is an input type\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__definition__[\"F\" /* isInputType */])(field.type)) {\n      context.reportError('The type of ' + inputObj.name + '.' + field.name + ' must be Input Type ' + ('but got: ' + String(field.type) + '.'), field.astNode && field.astNode.type);\n    }\n  });\n}\n\nfunction getAllObjectNodes(type) {\n  return type.astNode ? type.extensionASTNodes ? [type.astNode].concat(type.extensionASTNodes) : [type.astNode] : type.extensionASTNodes || [];\n}\n\nfunction getAllObjectOrInterfaceNodes(type) {\n  return type.astNode ? type.extensionASTNodes ? [type.astNode].concat(type.extensionASTNodes) : [type.astNode] : type.extensionASTNodes || [];\n}\n\nfunction getImplementsInterfaceNode(type, iface) {\n  return getAllImplementsInterfaceNodes(type, iface)[0];\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  var implementsNodes = [];\n  var astNodes = getAllObjectNodes(type);\n  for (var i = 0; i < astNodes.length; i++) {\n    var _astNode = astNodes[i];\n    if (_astNode && _astNode.interfaces) {\n      _astNode.interfaces.forEach(function (node) {\n        if (node.name.value === iface.name) {\n          implementsNodes.push(node);\n        }\n      });\n    }\n  }\n  return implementsNodes;\n}\n\nfunction getFieldNode(type, fieldName) {\n  return getAllFieldNodes(type, fieldName)[0];\n}\n\nfunction getAllFieldNodes(type, fieldName) {\n  var fieldNodes = [];\n  var astNodes = getAllObjectOrInterfaceNodes(type);\n  for (var i = 0; i < astNodes.length; i++) {\n    var _astNode2 = astNodes[i];\n    if (_astNode2 && _astNode2.fields) {\n      _astNode2.fields.forEach(function (node) {\n        if (node.name.value === fieldName) {\n          fieldNodes.push(node);\n        }\n      });\n    }\n  }\n  return fieldNodes;\n}\n\nfunction getFieldTypeNode(type, fieldName) {\n  var fieldNode = getFieldNode(type, fieldName);\n  return fieldNode && fieldNode.type;\n}\n\nfunction getFieldArgNode(type, fieldName, argName) {\n  return getAllFieldArgNodes(type, fieldName, argName)[0];\n}\n\nfunction getAllFieldArgNodes(type, fieldName, argName) {\n  var argNodes = [];\n  var fieldNode = getFieldNode(type, fieldName);\n  if (fieldNode && fieldNode.arguments) {\n    fieldNode.arguments.forEach(function (node) {\n      if (node.name.value === argName) {\n        argNodes.push(node);\n      }\n    });\n  }\n  return argNodes;\n}\n\nfunction getFieldArgTypeNode(type, fieldName, argName) {\n  var fieldArgNode = getFieldArgNode(type, fieldName, argName);\n  return fieldArgNode && fieldArgNode.type;\n}\n\nfunction getAllDirectiveArgNodes(directive, argName) {\n  var argNodes = [];\n  var directiveNode = directive.astNode;\n  if (directiveNode && directiveNode.arguments) {\n    directiveNode.arguments.forEach(function (node) {\n      if (node.name.value === argName) {\n        argNodes.push(node);\n      }\n    });\n  }\n  return argNodes;\n}\n\nfunction getDirectiveArgTypeNode(directive, argName) {\n  var argNode = getAllDirectiveArgNodes(directive, argName)[0];\n  return argNode && argNode.type;\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return union.astNode && union.astNode.types && union.astNode.types.filter(function (type) {\n    return type.name.value === typeName;\n  });\n}\n\nfunction getEnumValueNodes(enumType, valueName) {\n  return enumType.astNode && enumType.astNode.values && enumType.astNode.values.filter(function (value) {\n    return value.name.value === valueName;\n  });\n}\n\n/***/ }),\n\n/***/ 1796:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = keyValMap;\n\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nfunction keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = valFn(item), map;\n  }, Object.create(null));\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/***/ }),\n\n/***/ 1797:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isNullish;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Returns true if a value is null, undefined, or NaN.\n */\nfunction isNullish(value) {\n  return value === null || value === undefined || value !== value;\n}\n\n/***/ }),\n\n/***/ 1798:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isEqualType;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isTypeSubTypeOf;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = doTypesOverlap;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__type_definition__ = __webpack_require__(1761);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  }\n\n  // If either type is non-null, the other must also be non-null.\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(typeA) && Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // If either type is a list, the other must also be a list.\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(typeA) && Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // Otherwise the types are not equal.\n  return false;\n}\n\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  }\n\n  // If superType is non-null, maybeSubType must also be non-null.\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(superType)) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  }\n\n  // If superType type is a list, maybeSubType type must also be a list.\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(superType)) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  }\n\n  // If superType type is an abstract type, maybeSubType type may be a currently\n  // possible object type.\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"B\" /* isAbstractType */])(superType) && Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(maybeSubType) && schema.isPossibleType(superType, maybeSubType)) {\n    return true;\n  }\n\n  // Otherwise, the child type is not a valid subtype of the parent type.\n  return false;\n}\n\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"B\" /* isAbstractType */])(typeA)) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"B\" /* isAbstractType */])(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isPossibleType(typeB, type);\n      });\n    }\n    // Determine if the latter type is a possible concrete type of the former.\n    return schema.isPossibleType(typeA, typeB);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"B\" /* isAbstractType */])(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isPossibleType(typeB, typeA);\n  }\n\n  // Otherwise the types do not overlap.\n  return false;\n}\n\n/***/ }),\n\n/***/ 1799:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = execute;\n/* harmony export (immutable) */ __webpack_exports__[\"k\"] = responsePathAsArray;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addPath;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = assertValidExecutionArguments;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = buildExecutionContext;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = getOperationRootType;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = collectFields;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = buildResolveInfo;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = resolveFieldValueOrError;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return defaultFieldResolver; });\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = getFieldDef;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iterall__ = __webpack_require__(1784);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_isNullish__ = __webpack_require__(1797);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__ = __webpack_require__(1910);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__jsutils_memoize3__ = __webpack_require__(1969);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__jsutils_promiseForObject__ = __webpack_require__(1970);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__jsutils_promiseReduce__ = __webpack_require__(1971);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utilities_typeFromAST__ = __webpack_require__(1771);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__values__ = __webpack_require__(1818);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__type_introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__type_validate__ = __webpack_require__(1795);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g \"a\"\n * 2) fragment \"spreads\" e.g. \"...c\"\n * 3) inline fragment \"spreads\" e.g. \"...on Type { a }\"\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n\n/**\n * The result of GraphQL execution.\n *\n *   - `errors` is included when any errors occurred as a non-empty array.\n *   - `data` is the result of a successful execution of the query.\n */\n\n\n/**\n * Implements the \"Evaluating requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\n\nfunction execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? executeImpl(argsOrSchema.schema, argsOrSchema.document, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : executeImpl(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n\nfunction executeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrect, throw an error.\n  assertValidExecutionArguments(schema, document, variableValues);\n\n  // If a valid context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n  var context = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n  // Return early errors if execution context failed.\n  if (Array.isArray(context)) {\n    return { errors: context };\n  }\n\n  // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  var data = executeOperation(context, context.operation, rootValue);\n  return buildResponse(context, data);\n}\n\n/**\n * Given a completed execution context and data, build the { errors, data }\n * response defined by the \"Response\" section of the GraphQL specification.\n */\nfunction buildResponse(context, data) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(data)) {\n    return data.then(function (resolved) {\n      return buildResponse(context, resolved);\n    });\n  }\n  return context.errors.length === 0 ? { data: data } : { errors: context.errors, data: data };\n}\n\n/**\n * Given a ResponsePath (found in the `path` entry in the information provided\n * as the last argument to a field resolver), return an Array of the path keys.\n */\nfunction responsePathAsArray(path) {\n  var flattened = [];\n  var curr = path;\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\n/**\n * Given a ResponsePath and a key, return a new ResponsePath containing the\n * new key.\n */\nfunction addPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n */\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  !document ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide document') : void 0;\n\n  // If the schema used for execution is invalid, throw an error.\n  Object(__WEBPACK_IMPORTED_MODULE_16__type_validate__[\"a\" /* assertValidSchema */])(schema);\n\n  // Variables, if provided, must be an object.\n  !(!rawVariableValues || (typeof rawVariableValues === 'undefined' ? 'undefined' : _typeof(rawVariableValues)) === 'object') ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Variables must be provided as an Object where each property is a ' + 'variable value. Perhaps look to see if an unparsed JSON string ' + 'was provided.') : void 0;\n}\n\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n */\nfunction buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver) {\n  var errors = [];\n  var operation = void 0;\n  var hasMultipleAssumedOperations = false;\n  var fragments = Object.create(null);\n  for (var i = 0; i < document.definitions.length; i++) {\n    var definition = document.definitions[i];\n    switch (definition.kind) {\n      case __WEBPACK_IMPORTED_MODULE_10__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION:\n        if (!operationName && operation) {\n          hasMultipleAssumedOperations = true;\n        } else if (!operationName || definition.name && definition.name.value === operationName) {\n          operation = definition;\n        }\n        break;\n      case __WEBPACK_IMPORTED_MODULE_10__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n    }\n  }\n\n  if (!operation) {\n    if (operationName) {\n      errors.push(new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Unknown operation named \"' + operationName + '\".'));\n    } else {\n      errors.push(new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Must provide an operation.'));\n    }\n  } else if (hasMultipleAssumedOperations) {\n    errors.push(new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Must provide operation name if query contains ' + 'multiple operations.'));\n  }\n\n  var variableValues = void 0;\n  if (operation) {\n    var coercedVariableValues = Object(__WEBPACK_IMPORTED_MODULE_11__values__[\"c\" /* getVariableValues */])(schema, operation.variableDefinitions || [], rawVariableValues || {});\n\n    if (coercedVariableValues.errors) {\n      errors.push.apply(errors, coercedVariableValues.errors);\n    } else {\n      variableValues = coercedVariableValues.coerced;\n    }\n  }\n\n  if (errors.length !== 0) {\n    return errors;\n  }\n\n  !operation ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Has operation if no errors.') : void 0;\n  !variableValues ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Has variables if no errors.') : void 0;\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: variableValues,\n    fieldResolver: fieldResolver || defaultFieldResolver,\n    errors: errors\n  };\n}\n\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = getOperationRootType(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n\n  var path = undefined;\n\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n  //\n  // Similar to completeValueCatchingError.\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(result)) {\n      return result.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nfunction getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      var queryType = schema.getQueryType();\n      if (!queryType) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Schema does not define the required query root type.', [operation]);\n      }\n      return queryType;\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n      if (!mutationType) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Schema is not configured for mutations.', [operation]);\n      }\n      return mutationType;\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n      if (!subscriptionType) {\n        throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Schema is not configured for subscriptions.', [operation]);\n      }\n      return subscriptionType;\n    default:\n      throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Can only execute queries, mutations and subscriptions.', [operation]);\n  }\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return Object(__WEBPACK_IMPORTED_MODULE_8__jsutils_promiseReduce__[\"a\" /* default */])(Object.keys(fields), function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(result)) {\n      return result.then(function (resolvedResult) {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var containsPromise = false;\n\n  var finalResults = Object.keys(fields).reduce(function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    results[responseName] = result;\n    if (!containsPromise && Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(result)) {\n      containsPromise = true;\n    }\n    return results;\n  }, Object.create(null));\n\n  // If there are no promises, we can just return the object\n  if (!containsPromise) {\n    return finalResults;\n  }\n\n  // Otherwise, results is a map from field name to the result\n  // of resolving that field, which is possibly a promise. Return\n  // a promise that will return this same map, but with any\n  // promises replaced with the values they resolved to.\n  return Object(__WEBPACK_IMPORTED_MODULE_7__jsutils_promiseForObject__[\"a\" /* default */])(finalResults);\n}\n\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n */\nfunction collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case __WEBPACK_IMPORTED_MODULE_10__language_kinds__[\"a\" /* Kind */].FIELD:\n        if (!shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        var name = getFieldEntryKey(selection);\n        if (!fields[name]) {\n          fields[name] = [];\n        }\n        fields[name].push(selection);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_10__language_kinds__[\"a\" /* Kind */].INLINE_FRAGMENT:\n        if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_10__language_kinds__[\"a\" /* Kind */].FRAGMENT_SPREAD:\n        var fragName = selection.name.value;\n        if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        visitedFragmentNames[fragName] = true;\n        var fragment = exeContext.fragments[fragName];\n        if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n        break;\n    }\n  }\n  return fields;\n}\n\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precidence than @include.\n */\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = Object(__WEBPACK_IMPORTED_MODULE_11__values__[\"b\" /* getDirectiveValues */])(__WEBPACK_IMPORTED_MODULE_15__type_directives__[\"e\" /* GraphQLSkipDirective */], node, exeContext.variableValues);\n  if (skip && skip.if === true) {\n    return false;\n  }\n\n  var include = Object(__WEBPACK_IMPORTED_MODULE_11__values__[\"b\" /* getDirectiveValues */])(__WEBPACK_IMPORTED_MODULE_15__type_directives__[\"d\" /* GraphQLIncludeDirective */], node, exeContext.variableValues);\n  if (include && include.if === false) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n  if (!typeConditionNode) {\n    return true;\n  }\n  var conditionalType = Object(__WEBPACK_IMPORTED_MODULE_9__utilities_typeFromAST__[\"a\" /* typeFromAST */])(exeContext.schema, typeConditionNode);\n  if (conditionalType === type) {\n    return true;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"B\" /* isAbstractType */])(conditionalType)) {\n    return exeContext.schema.isPossibleType(conditionalType, type);\n  }\n  return false;\n}\n\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n  if (!fieldDef) {\n    return;\n  }\n\n  var resolveFn = fieldDef.resolve || exeContext.fieldResolver;\n\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n\n  // Get the resolve function, regardless of if its result is normal\n  // or abrupt (error).\n  var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info);\n\n  return completeValueCatchingError(exeContext, fieldDef.type, fieldNodes, info, path, result);\n}\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldNodes[0].name.value,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\n\n// Isolates the \"ReturnOrAbrupt\" behavior to not de-opt the `resolveField`\n// function. Returns the result of resolveFn or the abrupt-return Error object.\nfunction resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info) {\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = Object(__WEBPACK_IMPORTED_MODULE_11__values__[\"a\" /* getArgumentValues */])(fieldDef, fieldNodes[0], exeContext.variableValues);\n\n    // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n    var context = exeContext.contextValue;\n\n    var result = resolveFn(source, args, context, info);\n    return Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(result) ? result.then(undefined, asErrorInstance) : result;\n  } catch (error) {\n    return asErrorInstance(error);\n  }\n}\n\n// Sometimes a non-error is thrown, wrap it as an Error instance to ensure a\n// consistent Error interface.\nfunction asErrorInstance(error) {\n  return error instanceof Error ? error : new Error(error || undefined);\n}\n\n// This is a small wrapper around completeValue which detects and logs errors\n// in the execution context.\nfunction completeValueCatchingError(exeContext, returnType, fieldNodes, info, path, result) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"K\" /* isNonNullType */])(returnType)) {\n    return completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n  try {\n    var completed = completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(completed)) {\n      // If `completeValueWithLocatedError` returned a rejected promise, log\n      // the rejection error and resolve to null.\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return completed;\n  } catch (error) {\n    // If `completeValueWithLocatedError` returned abruptly (threw an error),\n    // log the error and return null.\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n// This is a small wrapper around completeValue which annotates errors with\n// location information.\nfunction completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result) {\n  try {\n    var completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(completed)) {\n      return completed.then(undefined, function (error) {\n        return Promise.reject(Object(__WEBPACK_IMPORTED_MODULE_1__error__[\"c\" /* locatedError */])(asErrorInstance(error), fieldNodes, responsePathAsArray(path)));\n      });\n    }\n    return completed;\n  } catch (error) {\n    throw Object(__WEBPACK_IMPORTED_MODULE_1__error__[\"c\" /* locatedError */])(asErrorInstance(error), fieldNodes, responsePathAsArray(path));\n  }\n}\n\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is a Promise, apply-lift over completeValue.\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(result)) {\n    return result.then(function (resolved) {\n      return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n    });\n  }\n\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  }\n\n  // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"K\" /* isNonNullType */])(returnType)) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n    if (completed === null) {\n      throw new Error('Cannot return null for non-nullable field ' + info.parentType.name + '.' + info.fieldName + '.');\n    }\n    return completed;\n  }\n\n  // If result value is null-ish (null, undefined, or NaN) then return null.\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_isNullish__[\"a\" /* default */])(result)) {\n    return null;\n  }\n\n  // If field type is List, complete each item in the list with the inner type\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"I\" /* isListType */])(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"H\" /* isLeafType */])(returnType)) {\n    return completeLeafValue(returnType, result);\n  }\n\n  // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"B\" /* isAbstractType */])(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is Object, execute and complete all sub-selections.\n  if (Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"M\" /* isObjectType */])(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Not reachable. All possible output types have been considered.\n  /* istanbul ignore next */\n  throw new Error('Cannot complete value of unexpected type \"' + String(returnType) + '\".');\n}\n\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  !Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"e\" /* isCollection */])(result) ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Expected Iterable, but did not find one for field ' + info.parentType.name + '.' + info.fieldName + '.') : void 0;\n\n  // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = [];\n  Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"b\" /* forEach */])(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var fieldPath = addPath(path, index);\n    var completedItem = completeValueCatchingError(exeContext, itemType, fieldNodes, info, fieldPath, item);\n\n    if (!containsPromise && Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(completedItem)) {\n      containsPromise = true;\n    }\n    completedResults.push(completedItem);\n  });\n\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n  !returnType.serialize ? Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_invariant__[\"a\" /* default */])(0, 'Missing serialize method on type') : void 0;\n  var serializedResult = returnType.serialize(result);\n  if (Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_isInvalid__[\"a\" /* default */])(serializedResult)) {\n    throw new Error('Expected a value of type \"' + String(returnType) + '\" but ' + ('received: ' + String(result)));\n  }\n  return serializedResult;\n}\n\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var runtimeType = returnType.resolveType ? returnType.resolveType(result, exeContext.contextValue, info) : defaultResolveTypeFn(result, exeContext.contextValue, info, returnType);\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(runtimeType)) {\n    return runtimeType.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  var runtimeType = typeof runtimeTypeOrName === 'string' ? exeContext.schema.getType(runtimeTypeOrName) : runtimeTypeOrName;\n\n  if (!Object(__WEBPACK_IMPORTED_MODULE_12__type_definition__[\"M\" /* isObjectType */])(runtimeType)) {\n    throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Abstract type ' + returnType.name + ' must resolve to an Object type at ' + ('runtime for field ' + info.parentType.name + '.' + info.fieldName + ' with ') + ('value \"' + String(result) + '\", received \"' + String(runtimeType) + '\". ') + ('Either the ' + returnType.name + ' type should provide a \"resolveType\" ') + 'function or each possible types should provide an ' + '\"isTypeOf\" function.', fieldNodes);\n  }\n\n  if (!exeContext.schema.isPossibleType(returnType, runtimeType)) {\n    throw new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Runtime Object type \"' + runtimeType.name + '\" is not a possible type ' + ('for \"' + returnType.name + '\".'), fieldNodes);\n  }\n\n  return runtimeType;\n}\n\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(isTypeOf)) {\n      return isTypeOf.then(function (resolvedIsTypeOf) {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new __WEBPACK_IMPORTED_MODULE_1__error__[\"a\" /* GraphQLError */]('Expected value of type \"' + returnType.name + '\" but got: ' + String(result) + '.', fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes);\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\n/**\n * A memoized collection of relevant subfields in the context of the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nvar collectSubfields = Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_memoize3__[\"a\" /* default */])(_collectSubfields);\nfunction _collectSubfields(exeContext, returnType, fieldNodes) {\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n  for (var i = 0; i < fieldNodes.length; i++) {\n    var selectionSet = fieldNodes[i].selectionSet;\n    if (selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n  return subFieldNodes;\n}\n\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nfunction defaultResolveTypeFn(value, context, info, abstractType) {\n  // First, look for `__typename`.\n  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.__typename === 'string') {\n    return value.__typename;\n  }\n\n  // Otherwise, test each possible type.\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, context, info);\n\n      if (Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_isPromise__[\"a\" /* default */])(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i = 0; _i < isTypeOfResults.length; _i++) {\n        if (isTypeOfResults[_i]) {\n          return possibleTypes[_i];\n        }\n      }\n    });\n  }\n}\n\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context.\n */\nvar defaultFieldResolver = function defaultFieldResolver(source, args, context, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((typeof source === 'undefined' ? 'undefined' : _typeof(source)) === 'object' || typeof source === 'function') {\n    var property = source[info.fieldName];\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, context, info);\n    }\n    return property;\n  }\n};\n\n/**\n * This method looks up the field on the given type defintion.\n * It has special casing for the two introspection fields, __schema\n * and __typename. __typename is special because it can always be\n * queried as a field, even in situations where no other fields\n * are allowed, like on a Union. __schema could get automatically\n * added to the query type, but that would require mutating type\n * definitions, which would cause issues.\n */\nfunction getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"a\" /* SchemaMetaFieldDef */].name && schema.getQueryType() === parentType) {\n    return __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"a\" /* SchemaMetaFieldDef */];\n  } else if (fieldName === __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"c\" /* TypeMetaFieldDef */].name && schema.getQueryType() === parentType) {\n    return __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"c\" /* TypeMetaFieldDef */];\n  } else if (fieldName === __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"d\" /* TypeNameMetaFieldDef */].name) {\n    return __WEBPACK_IMPORTED_MODULE_14__type_introspection__[\"d\" /* TypeNameMetaFieldDef */];\n  }\n  return parentType.getFields()[fieldName];\n}\n\n/***/ }),\n\n/***/ 1800:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = valueFromAST;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__type_definition__ = __webpack_require__(1761);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(type)) {\n    if (valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].VARIABLE) {\n    var variableName = valueNode.name.value;\n    if (!variables || Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(variables[variableName])) {\n      // No valid return value.\n      return;\n    }\n    // Note: we're not doing any checking that this variable is correct. We're\n    // assuming that this query has been validated and the variable usage here\n    // is of the correct type.\n    return variables[variableName];\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"I\" /* isListType */])(type)) {\n    var itemType = type.ofType;\n    if (valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].LIST) {\n      var coercedValues = [];\n      var itemNodes = valueNode.values;\n      for (var i = 0; i < itemNodes.length; i++) {\n        if (isMissingVariable(itemNodes[i], variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNodes[i], itemType, variables);\n          if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(itemValue)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(itemValue);\n        }\n      }\n      return coercedValues;\n    }\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(coercedValue)) {\n      return; // Invalid: intentionally return no value.\n    }\n    return [coercedValue];\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n    if (valueNode.kind !== __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n    var coercedObj = Object.create(null);\n    var fieldNodes = Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_keyMap__[\"a\" /* default */])(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n    var fields = Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n    for (var _i = 0; _i < fields.length; _i++) {\n      var field = fields[_i];\n      var fieldNode = fieldNodes[field.name];\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (!Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(field.defaultValue)) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n        continue;\n      }\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(fieldValue)) {\n        return; // Invalid: intentionally return no value.\n      }\n      coercedObj[field.name] = fieldValue;\n    }\n    return coercedObj;\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"D\" /* isEnumType */])(type)) {\n    if (valueNode.kind !== __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].ENUM) {\n      return; // Invalid: intentionally return no value.\n    }\n    var enumValue = type.getValue(valueNode.value);\n    if (!enumValue) {\n      return; // Invalid: intentionally return no value.\n    }\n    return enumValue.value;\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"O\" /* isScalarType */])(type)) {\n    // Scalars fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result = void 0;\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(result)) {\n      return; // Invalid: intentionally return no value.\n    }\n    return result;\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\n// Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].VARIABLE && (!variables || Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(variables[valueNode.name.value]));\n}\n\n/***/ }),\n\n/***/ 1801:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export hasError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObservableQuery; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__networkStatus__ = __webpack_require__(1781);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_Observable__ = __webpack_require__(1863);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__errors_ApolloError__ = __webpack_require__(1805);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__types__ = __webpack_require__(1793);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var scheduler = _a.scheduler, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        // active state\n        _this.isCurrentlyPolling = false;\n        _this.isTornDown = false;\n        // query information\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = scheduler.queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        // related classes\n        _this.scheduler = scheduler;\n        _this.queryManager = scheduler.queryManager;\n        // interal data stores\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    /**\n     * Return the result of the query from the local cache as well as some fetching status\n     * `loading` and `networkStatus` allow to know if a request is in flight\n     * `partial` lets you know if the result from the local cache is complete or partial\n     * @return {result: Object, loading: boolean, networkStatus: number, partial: boolean}\n     */\n    ObservableQuery.prototype.currentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError ? {} : this.lastResult ? this.lastResult.data : {},\n                error: this.lastError,\n                loading: false,\n                networkStatus: __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: {},\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new __WEBPACK_IMPORTED_MODULE_3__errors_ApolloError__[\"a\" /* ApolloError */]({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].loading;\n        // We need to be careful about the loading state we show to the user, to try\n        // and be vaguely in line with what the user would have seen from .subscribe()\n        // but to still provide useful information synchronously when the query\n        // will not end up hitting the server.\n        // See more: https://github.com/apollostack/apollo-client/issues/707\n        // Basically: is there a query in flight right now (modolo the next tick)?\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        // if there is nothing in the query store, it means this query hasn't fired yet or it has been cleaned up. Therefore the\n        // network status is dependent on queryLoading.\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].loading : __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].ready;\n        }\n        var result = {\n            data: data,\n            loading: Object(__WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            var stale = false;\n            this.lastResult = __assign({}, result, { stale: stale });\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    // Returns the last result that observer.next was called with. This is not the same as\n    // currentResult! If you're not sure which you need, then you probably need currentResult.\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        // early return if trying to read from cache during refetch\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(this.variables, variables)) {\n            // update observable variables\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(this.options.variables, this.variables)) {\n            // Update the existing options with new variables\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        // Override fetchPolicy for this call only\n        // only network-only and no-cache are safe to use\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, __WEBPACK_IMPORTED_MODULE_4__types__[\"a\" /* FetchType */].refetch)\n            .then(function (result) { return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(result); });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        // early return if no update Query\n        if (!fetchMoreOptions.updateQuery) {\n            throw new Error('updateQuery option is required. This function defines how to update the query data with the new results.');\n        }\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                // fetch a new query\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                // fetch the same query with a possibly new variables\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, __WEBPACK_IMPORTED_MODULE_4__types__[\"a\" /* FetchType */].normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (data) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: data,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    // Note: if the query is not active (there are no subscribers), the promise\n    // will return null immediately.\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        // If fetchPolicy went from cache-only to something else, or from something else to network-only\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. If you want to force new results, use `refetch`.\n     *\n     * Note: if the variables have not changed, the promise will return the old\n     * results immediately, and the `next` callback will *not* fire.\n     *\n     * Note: if the query is not active (there are no subscribers), the promise\n     * will return null immediately.\n     *\n     * @param variables: The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     *\n     * @param tryFetch: Try and fetch new results even if the variables haven't\n     * changed (we may still just hit the store, but if there's nothing in there\n     * this will refetch)\n     *\n     * @param fetchResults: Option to ignore fetching results when updating variables\n     *\n     */\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        // since setVariables restarts the subscription, we reset the tornDown status\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(newVariables, this.variables) && !tryFetch) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            // See comment above\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            // Use the same options as before, but with new variables\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(result); });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.options.pollInterval = undefined;\n            this.isCurrentlyPolling = false;\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        if (this.options.fetchPolicy === 'cache-first' ||\n            this.options.fetchPolicy === 'cache-only') {\n            throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n        }\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.options.pollInterval = pollInterval;\n        this.isCurrentlyPolling = true;\n        this.scheduler.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        // Zen Observable has its own error function, in order to log correctly\n        // we need to declare a custom error if nothing is passed\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        // Deliver initial result\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        // setup the query if it hasn't been done before\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            if (this.options.fetchPolicy === 'cache-first' ||\n                this.options.fetchPolicy === 'cache-only') {\n                throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n            }\n            this.isCurrentlyPolling = true;\n            this.scheduler.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        // stop all active GraphQL subscriptions\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(__WEBPACK_IMPORTED_MODULE_2__util_Observable__[\"a\" /* Observable */]));\n\n//# sourceMappingURL=ObservableQuery.js.map\n\n/***/ }),\n\n/***/ 1802:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export isScalarValue */\n/* unused harmony export isNumberValue */\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = valueToObjectRepresentation;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = storeKeyNameFromField;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getStoreKeyName;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = argumentsObjectFromField;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = resultKeyNameFromField;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isField;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = isInlineFragment;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = isIdValue;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = toIdValue;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = isJsonValue;\n/* unused harmony export valueFromNode */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify__ = __webpack_require__(1920);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify__);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw new Error(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = __WEBPACK_IMPORTED_MODULE_0_fast_json_stable_stringify___default()(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject && idObject.type === 'id';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw new Error(\"Variable nodes are not supported by valueFromNode\");\n}\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n//# sourceMappingURL=storeUtils.js.map\n\n/***/ }),\n\n/***/ 1803:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export getEnv */\n/* unused harmony export isEnv */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isProduction;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isDevelopment;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isTest;\nfunction getEnv() {\n    if (typeof process !== 'undefined' && \"production\") {\n        return \"production\";\n    }\n    // default environment\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n//# sourceMappingURL=environment.js.map\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(204)))\n\n/***/ }),\n\n/***/ 1804:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__zenObservable__ = __webpack_require__(1864);\n/* unused harmony namespace reexport */\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_0__zenObservable__[\"a\" /* Observable */]);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1805:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isApolloError;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ApolloError; });\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var message = '';\n    // If we have GraphQL errors present, add that to the error message.\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    // strip newline from the end of the message\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\n//# sourceMappingURL=ApolloError.js.map\n\n/***/ }),\n\n/***/ 1806:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export hasError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObservableQuery; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__networkStatus__ = __webpack_require__(1782);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_Observable__ = __webpack_require__(1868);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__errors_ApolloError__ = __webpack_require__(1807);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__types__ = __webpack_require__(1794);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var scheduler = _a.scheduler, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        // active state\n        _this.isCurrentlyPolling = false;\n        _this.isTornDown = false;\n        // query information\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = scheduler.queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        // related classes\n        _this.scheduler = scheduler;\n        _this.queryManager = scheduler.queryManager;\n        // interal data stores\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    /**\n     * Return the result of the query from the local cache as well as some fetching status\n     * `loading` and `networkStatus` allow to know if a request is in flight\n     * `partial` lets you know if the result from the local cache is complete or partial\n     * @return {result: Object, loading: boolean, networkStatus: number, partial: boolean}\n     */\n    ObservableQuery.prototype.currentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError ? {} : this.lastResult ? this.lastResult.data : {},\n                error: this.lastError,\n                loading: false,\n                networkStatus: __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: {},\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new __WEBPACK_IMPORTED_MODULE_3__errors_ApolloError__[\"a\" /* ApolloError */]({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].loading;\n        // We need to be careful about the loading state we show to the user, to try\n        // and be vaguely in line with what the user would have seen from .subscribe()\n        // but to still provide useful information synchronously when the query\n        // will not end up hitting the server.\n        // See more: https://github.com/apollostack/apollo-client/issues/707\n        // Basically: is there a query in flight right now (modolo the next tick)?\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        // if there is nothing in the query store, it means this query hasn't fired yet or it has been cleaned up. Therefore the\n        // network status is dependent on queryLoading.\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].loading : __WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"a\" /* NetworkStatus */].ready;\n        }\n        var result = {\n            data: data,\n            loading: Object(__WEBPACK_IMPORTED_MODULE_1__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            var stale = false;\n            this.lastResult = __assign({}, result, { stale: stale });\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    // Returns the last result that observer.next was called with. This is not the same as\n    // currentResult! If you're not sure which you need, then you probably need currentResult.\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        // early return if trying to read from cache during refetch\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(this.variables, variables)) {\n            // update observable variables\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(this.options.variables, this.variables)) {\n            // Update the existing options with new variables\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        // Override fetchPolicy for this call only\n        // only network-only and no-cache are safe to use\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, __WEBPACK_IMPORTED_MODULE_4__types__[\"a\" /* FetchType */].refetch)\n            .then(function (result) { return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(result); });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        // early return if no update Query\n        if (!fetchMoreOptions.updateQuery) {\n            throw new Error('updateQuery option is required. This function defines how to update the query data with the new results.');\n        }\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                // fetch a new query\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                // fetch the same query with a possibly new variables\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, __WEBPACK_IMPORTED_MODULE_4__types__[\"a\" /* FetchType */].normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (data) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: data,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    // Note: if the query is not active (there are no subscribers), the promise\n    // will return null immediately.\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        // If fetchPolicy went from cache-only to something else, or from something else to network-only\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. If you want to force new results, use `refetch`.\n     *\n     * Note: if the variables have not changed, the promise will return the old\n     * results immediately, and the `next` callback will *not* fire.\n     *\n     * Note: if the query is not active (there are no subscribers), the promise\n     * will return null immediately.\n     *\n     * @param variables: The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     *\n     * @param tryFetch: Try and fetch new results even if the variables haven't\n     * changed (we may still just hit the store, but if there's nothing in there\n     * this will refetch)\n     *\n     * @param fetchResults: Option to ignore fetching results when updating variables\n     *\n     */\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        // since setVariables restarts the subscription, we reset the tornDown status\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"q\" /* isEqual */])(newVariables, this.variables) && !tryFetch) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            // See comment above\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            // Use the same options as before, but with new variables\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(result); });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.options.pollInterval = undefined;\n            this.isCurrentlyPolling = false;\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        if (this.options.fetchPolicy === 'cache-first' ||\n            this.options.fetchPolicy === 'cache-only') {\n            throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n        }\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.options.pollInterval = pollInterval;\n        this.isCurrentlyPolling = true;\n        this.scheduler.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        // Zen Observable has its own error function, in order to log correctly\n        // we need to declare a custom error if nothing is passed\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        // Deliver initial result\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        // setup the query if it hasn't been done before\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            if (this.options.fetchPolicy === 'cache-first' ||\n                this.options.fetchPolicy === 'cache-only') {\n                throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n            }\n            this.isCurrentlyPolling = true;\n            this.scheduler.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        // stop all active GraphQL subscriptions\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(__WEBPACK_IMPORTED_MODULE_2__util_Observable__[\"a\" /* Observable */]));\n\n//# sourceMappingURL=ObservableQuery.js.map\n\n/***/ }),\n\n/***/ 1807:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isApolloError;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ApolloError; });\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var message = '';\n    // If we have GraphQL errors present, add that to the error message.\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    // strip newline from the end of the message\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\n//# sourceMappingURL=ApolloError.js.map\n\n/***/ }),\n\n/***/ 1808:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObjectCache; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = defaultNormalizedCacheFactory;\nvar ObjectCache = /** @class */ (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = undefined;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\n\nfunction defaultNormalizedCacheFactory(seed) {\n    return new ObjectCache(seed);\n}\n//# sourceMappingURL=objectCache.js.map\n\n/***/ }),\n\n/***/ 1809:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar parser = __webpack_require__(1777);\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n\n\n/***/ }),\n\n/***/ 1810:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getLocation;\n\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */\n\n/***/ }),\n\n/***/ 1811:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createLexer;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TokenKind; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getTokenDesc;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__blockStringValue__ = __webpack_require__(1878);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nfunction createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n\n/**\n * The enum type representing the token kinds values.\n */\n\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, pos);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, pos, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, pos + 1) === 46 && charCodeAt.call(body, pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, pos + 1) === 34 && charCodeAt.call(body, pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev);\n      }\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, pos, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, Object(__WEBPACK_IMPORTED_MODULE_1__blockStringValue__[\"a\" /* default */])(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw Object(__WEBPACK_IMPORTED_MODULE_0__error__[\"e\" /* syntaxError */])(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n  while (position !== bodyLength && (code = charCodeAt.call(body, position)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/***/ }),\n\n/***/ 1812:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (process && \"production\" !== 'production' ? // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n  if (value) {\n    var valueClass = value.constructor;\n    var className = constructor.name;\n    if (valueClass && valueClass.name === className) {\n      throw new Error('Cannot use ' + className + ' \"' + value + '\" from another module or realm.\\n\\nEnsure that there is only one instance of \"graphql\" in the node_modules\\ndirectory. If different versions of \"graphql\" are the dependencies of other\\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \"graphql\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.');\n    }\n  }\n  return false;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n}); /**\n    * Copyright (c) 2015-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    *  strict\n    */\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(204)))\n\n/***/ }),\n\n/***/ 1813:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = astFromValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iterall__ = __webpack_require__(1784);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_isNullish__ = __webpack_require__(1797);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__type_scalars__ = __webpack_require__(1773);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"K\" /* isNonNullType */])(type)) {\n    var astValue = astFromValue(value, type.ofType);\n    if (astValue && astValue.kind === __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].NULL) {\n      return null;\n    }\n    return astValue;\n  }\n\n  // only explicit null, not undefined, NaN\n  if (value === null) {\n    return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].NULL };\n  }\n\n  // undefined, NaN\n  if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(value)) {\n    return null;\n  }\n\n  // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"I\" /* isListType */])(type)) {\n    var itemType = type.ofType;\n    if (Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"e\" /* isCollection */])(value)) {\n      var valuesNodes = [];\n      Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"b\" /* forEach */])(value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].LIST, values: valuesNodes };\n    }\n    return astFromValue(value, itemType);\n  }\n\n  // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n    if (value === null || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return null;\n    }\n    var fields = Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n    var fieldNodes = [];\n    fields.forEach(function (field) {\n      var fieldValue = astFromValue(value[field.name], field.type);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].OBJECT_FIELD,\n          name: { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].NAME, value: field.name },\n          value: fieldValue\n        });\n      }\n    });\n    return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].OBJECT, fields: fieldNodes };\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"O\" /* isScalarType */])(type) || Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"D\" /* isEnumType */])(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isNullish__[\"a\" /* default */])(serialized)) {\n      return null;\n    }\n\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof serialized === 'boolean') {\n      return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].BOOLEAN, value: serialized };\n    }\n\n    // JavaScript numbers can be Int or Float values.\n    if (typeof serialized === 'number') {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].INT, value: stringNum } : { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].FLOAT, value: stringNum };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"D\" /* isEnumType */])(type)) {\n        return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].ENUM, value: serialized };\n      }\n\n      // ID types can use Int literals.\n      if (type === __WEBPACK_IMPORTED_MODULE_6__type_scalars__[\"c\" /* GraphQLID */] && integerStringRegExp.test(serialized)) {\n        return { kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].INT, value: serialized };\n      }\n\n      return {\n        kind: __WEBPACK_IMPORTED_MODULE_4__language_kinds__[\"a\" /* Kind */].STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError('Cannot convert value to AST: ' + String(serialized));\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nvar integerStringRegExp = /^-?(0|[1-9][0-9]*)$/;\n\n/***/ }),\n\n/***/ 1814:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = quotedOrList;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__orList__ = __webpack_require__(1815);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n/**\n * Given [ A, B, C ] return '\"A\", \"B\", or \"C\"'.\n */\nfunction quotedOrList(items) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__orList__[\"a\" /* default */])(items.map(function (item) {\n    return '\"' + item + '\"';\n  }));\n}\n\n/***/ }),\n\n/***/ 1815:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = orList;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar MAX_LENGTH = 5;\n\n/**\n * Given [ A, B, C ] return 'A, B, or C'.\n */\nfunction orList(items) {\n  var selected = items.slice(0, MAX_LENGTH);\n  return selected.reduce(function (list, quoted, index) {\n    return list + (selected.length > 2 ? ', ' : ' ') + (index === selected.length - 1 ? 'or ' : '') + quoted;\n  });\n}\n\n/***/ }),\n\n/***/ 1816:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export badValueMessage */\n/* unused harmony export requiredFieldMessage */\n/* unused harmony export unknownFieldMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ValuesOfCorrectType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__jsutils_orList__ = __webpack_require__(1815);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__jsutils_suggestionList__ = __webpack_require__(1786);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\n\n\n\n\nfunction badValueMessage(typeName, valueName, message) {\n  return 'Expected type ' + typeName + ', found ' + valueName + (message ? '; ' + message : '.');\n}\n\nfunction requiredFieldMessage(typeName, fieldName, fieldTypeName) {\n  return 'Field ' + typeName + '.' + fieldName + ' of required type ' + (fieldTypeName + ' was not provided.');\n}\n\nfunction unknownFieldMessage(typeName, fieldName, message) {\n  return 'Field \"' + fieldName + '\" is not defined by type ' + typeName + (message ? '; ' + message : '.');\n}\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nfunction ValuesOfCorrectType(context) {\n  return {\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n      if (Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"K\" /* isNonNullType */])(type)) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badValueMessage(String(type), Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node)), node));\n      }\n    },\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"A\" /* getNullableType */])(context.getParentInputType());\n      if (!Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"I\" /* isListType */])(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"z\" /* getNamedType */])(context.getInputType());\n      if (!Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n      // Ensure every required field exists.\n      var inputFields = type.getFields();\n      var fieldNodeMap = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_keyMap__[\"a\" /* default */])(node.fields, function (field) {\n        return field.name.value;\n      });\n      Object.keys(inputFields).forEach(function (fieldName) {\n        var fieldType = inputFields[fieldName].type;\n        var fieldNode = fieldNodeMap[fieldName];\n        if (!fieldNode && Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"K\" /* isNonNullType */])(fieldType)) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](requiredFieldMessage(type.name, fieldName, String(fieldType)), node));\n        }\n      });\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"z\" /* getNamedType */])(context.getParentInputType());\n      var fieldType = context.getInputType();\n      if (!fieldType && Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"E\" /* isInputObjectType */])(parentType)) {\n        var suggestions = Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_suggestionList__[\"a\" /* default */])(node.name.value, Object.keys(parentType.getFields()));\n        var didYouMean = suggestions.length !== 0 ? 'Did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_orList__[\"a\" /* default */])(suggestions) + '?' : undefined;\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownFieldMessage(parentType.name, node.name.value, didYouMean), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"z\" /* getNamedType */])(context.getInputType());\n      if (!Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"D\" /* isEnumType */])(type)) {\n        isValidScalar(context, node);\n      } else if (!type.getValue(node.value)) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badValueMessage(type.name, Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node), enumTypeSuggestion(type, node)), node));\n      }\n    },\n\n    IntValue: function IntValue(node) {\n      return isValidScalar(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidScalar(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidScalar(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidScalar(context, node);\n    }\n  };\n}\n\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\nfunction isValidScalar(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n  if (!locationType) {\n    return;\n  }\n\n  var type = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"z\" /* getNamedType */])(locationType);\n\n  if (!Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"O\" /* isScalarType */])(type)) {\n    context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badValueMessage(String(locationType), Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node), enumTypeSuggestion(type, node)), node));\n    return;\n  }\n\n  // Scalars determine if a literal value is valid via parseLiteral() which\n  // may throw or return an invalid value to indicate failure.\n  try {\n    var parseResult = type.parseLiteral(node, undefined /* variables */);\n    if (Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_isInvalid__[\"a\" /* default */])(parseResult)) {\n      context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badValueMessage(String(locationType), Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node)), node));\n    }\n  } catch (error) {\n    // Ensure a reference to the original error is maintained.\n    context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badValueMessage(String(locationType), Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node), error.message), node, undefined, undefined, undefined, error));\n  }\n}\n\nfunction enumTypeSuggestion(type, node) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"D\" /* isEnumType */])(type)) {\n    var suggestions = Object(__WEBPACK_IMPORTED_MODULE_6__jsutils_suggestionList__[\"a\" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node), type.getValues().map(function (value) {\n      return value.name;\n    }));\n    if (suggestions.length !== 0) {\n      return 'Did you mean the enum value ' + Object(__WEBPACK_IMPORTED_MODULE_5__jsutils_orList__[\"a\" /* default */])(suggestions) + '?';\n    }\n  }\n}\n\n/***/ }),\n\n/***/ 1817:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_visitor__ = __webpack_require__(1776);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utilities_TypeInfo__ = __webpack_require__(1785);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n /**\n                                          * Copyright (c) 2015-present, Facebook, Inc.\n                                          *\n                                          * This source code is licensed under the MIT license found in the\n                                          * LICENSE file in the root directory of this source tree.\n                                          *\n                                          *  strict\n                                          */\n\n\n\n\n\n\n\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new __WEBPACK_IMPORTED_MODULE_4__utilities_TypeInfo__[\"a\" /* TypeInfo */](this._schema);\n      Object(__WEBPACK_IMPORTED_MODULE_1__language_visitor__[\"c\" /* visit */])(node, Object(__WEBPACK_IMPORTED_MODULE_1__language_visitor__[\"e\" /* visitWithTypeInfo */])(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ValidationContext);\n\n/***/ }),\n\n/***/ 1818:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getVariableValues;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getArgumentValues;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getDirectiveValues;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_find__ = __webpack_require__(1780);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utilities_coerceValue__ = __webpack_require__(1819);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__ = __webpack_require__(1771);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utilities_valueFromAST__ = __webpack_require__(1800);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__type_definition__ = __webpack_require__(1761);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs) {\n  var errors = [];\n  var coercedValues = {};\n  for (var i = 0; i < varDefNodes.length; i++) {\n    var varDefNode = varDefNodes[i];\n    var varName = varDefNode.variable.name.value;\n    var varType = Object(__WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__[\"a\" /* typeFromAST */])(schema, varDefNode.type);\n    if (!Object(__WEBPACK_IMPORTED_MODULE_9__type_definition__[\"F\" /* isInputType */])(varType)) {\n      errors.push(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */]('Variable \"$' + varName + '\" expected value of type ' + ('\"' + Object(__WEBPACK_IMPORTED_MODULE_8__language_printer__[\"a\" /* print */])(varDefNode.type) + '\" which cannot be used as an input type.'), [varDefNode.type]));\n    } else {\n      var value = inputs[varName];\n      if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(value)) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_9__type_definition__[\"K\" /* isNonNullType */])(varType)) {\n          errors.push(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */]('Variable \"$' + varName + '\" of required type ' + ('\"' + String(varType) + '\" was not provided.'), [varDefNode]));\n        } else if (varDefNode.defaultValue) {\n          coercedValues[varName] = Object(__WEBPACK_IMPORTED_MODULE_6__utilities_valueFromAST__[\"a\" /* valueFromAST */])(varDefNode.defaultValue, varType);\n        }\n      } else {\n        var _coerced = Object(__WEBPACK_IMPORTED_MODULE_4__utilities_coerceValue__[\"a\" /* coerceValue */])(value, varType, varDefNode);\n        var coercionErrors = _coerced.errors;\n        if (coercionErrors) {\n          (function () {\n            var messagePrelude = 'Variable \"$' + varName + '\" got invalid value ' + JSON.stringify(value) + '; ';\n            coercionErrors.forEach(function (error) {\n              error.message = messagePrelude + error.message;\n            });\n            errors.push.apply(errors, coercionErrors);\n          })();\n        } else {\n          coercedValues[varName] = _coerced.value;\n        }\n      }\n    }\n  }\n  return errors.length === 0 ? { errors: undefined, coerced: coercedValues } : { errors: errors, coerced: undefined };\n}\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues) {\n  var coercedValues = {};\n  var argDefs = def.args;\n  var argNodes = node.arguments;\n  if (!argDefs || !argNodes) {\n    return coercedValues;\n  }\n  var argNodeMap = Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__[\"a\" /* default */])(argNodes, function (arg) {\n    return arg.name.value;\n  });\n  for (var i = 0; i < argDefs.length; i++) {\n    var argDef = argDefs[i];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n    var defaultValue = argDef.defaultValue;\n    if (!argumentNode) {\n      if (!Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (Object(__WEBPACK_IMPORTED_MODULE_9__type_definition__[\"K\" /* isNonNullType */])(argType)) {\n        throw new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */]('Argument \"' + name + '\" of required type ' + ('\"' + String(argType) + '\" was not provided.'), [node]);\n      }\n    } else if (argumentNode.value.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].VARIABLE) {\n      var variableName = argumentNode.value.name.value;\n      if (variableValues && Object.prototype.hasOwnProperty.call(variableValues, variableName) && !Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(variableValues[variableName])) {\n        // Note: this does not check that this variable value is correct.\n        // This assumes that this query has been validated and the variable\n        // usage here is of the correct type.\n        coercedValues[name] = variableValues[variableName];\n      } else if (!Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (Object(__WEBPACK_IMPORTED_MODULE_9__type_definition__[\"K\" /* isNonNullType */])(argType)) {\n        throw new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */]('Argument \"' + name + '\" of required type \"' + String(argType) + '\" was ' + ('provided the variable \"$' + variableName + '\" which was not provided ') + 'a runtime value.', [argumentNode.value]);\n      }\n    } else {\n      var valueNode = argumentNode.value;\n      var coercedValue = Object(__WEBPACK_IMPORTED_MODULE_6__utilities_valueFromAST__[\"a\" /* valueFromAST */])(valueNode, argType, variableValues);\n      if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isInvalid__[\"a\" /* default */])(coercedValue)) {\n        // Note: ValuesOfCorrectType validation should catch this before\n        // execution. This is a runtime check to ensure execution does not\n        // continue with an invalid argument value.\n        throw new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */]('Argument \"' + name + '\" has invalid value ' + Object(__WEBPACK_IMPORTED_MODULE_8__language_printer__[\"a\" /* print */])(valueNode) + '.', [argumentNode.value]);\n      }\n      coercedValues[name] = coercedValue;\n    }\n  }\n  return coercedValues;\n}\n\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_find__[\"a\" /* default */])(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\n/***/ }),\n\n/***/ 1819:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = coerceValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iterall__ = __webpack_require__(1784);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_isNullish__ = __webpack_require__(1797);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_orList__ = __webpack_require__(1815);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__jsutils_suggestionList__ = __webpack_require__(1786);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__type_definition__ = __webpack_require__(1761);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nfunction coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"K\" /* isNonNullType */])(type)) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isNullish__[\"a\" /* default */])(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_isNullish__[\"a\" /* default */])(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"O\" /* isScalarType */])(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"D\" /* isEnumType */])(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n    var suggestions = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_suggestionList__[\"a\" /* default */])(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_orList__[\"a\" /* default */])(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"I\" /* isListType */])(type)) {\n    var itemType = type.ofType;\n    if (Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"e\" /* isCollection */])(value)) {\n      var _errors = void 0;\n      var coercedValue = [];\n      Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"b\" /* forEach */])(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    }\n    // Lists accept a non-list value as a list of one.\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n    var _errors2 = void 0;\n    var _coercedValue = {};\n    var fields = type.getFields();\n\n    // Ensure every defined field is valid.\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(fieldValue)) {\n          if (!Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (Object(__WEBPACK_IMPORTED_MODULE_6__type_definition__[\"K\" /* isNonNullType */])(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    }\n\n    // Ensure every provided field is defined.\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = Object(__WEBPACK_IMPORTED_MODULE_4__jsutils_suggestionList__[\"a\" /* default */])(_fieldName, Object.keys(fields));\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_orList__[\"a\" /* default */])(_suggestions) + '?' : undefined;\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return { errors: undefined, value: value };\n}\n\nfunction ofErrors(errors) {\n  return { errors: errors, value: undefined };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  // Return a GraphQLError instance\n  return new __WEBPACK_IMPORTED_MODULE_5__error__[\"a\" /* GraphQLError */](message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n}\n\n// Build a string describing the path into the value where the error was found\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/***/ }),\n\n/***/ 1820:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = __webpack_require__(1779);\n\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\nvar getFinalType = function getFinalType(type) {\n    if (type.kind === _graphql.TypeKind.NON_NULL || type.kind === _graphql.TypeKind.LIST) {\n        return getFinalType(type.ofType);\n    }\n\n    return type;\n};\n\nexports.default = getFinalType;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1858:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseMerge = __webpack_require__(426),\n    createAssigner = __webpack_require__(777);\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n\n\n/***/ }),\n\n/***/ 1859:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ALL_TYPES = exports.MUTATION_TYPES = exports.QUERY_TYPES = undefined;\n\nvar _regenerator = __webpack_require__(46);\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = __webpack_require__(5);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = __webpack_require__(6);\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _asyncToGenerator2 = __webpack_require__(421);\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _defineProperty2 = __webpack_require__(37);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _operationNames;\n\nvar _merge2 = __webpack_require__(1858);\n\nvar _merge3 = _interopRequireDefault(_merge2);\n\nvar _get = __webpack_require__(38);\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _pluralize = __webpack_require__(1916);\n\nvar _pluralize2 = _interopRequireDefault(_pluralize);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _buildApolloClient = __webpack_require__(1917);\n\nvar _buildApolloClient2 = _interopRequireDefault(_buildApolloClient);\n\nvar _constants = __webpack_require__(1879);\n\nvar _introspection = __webpack_require__(1960);\n\nvar _introspection2 = _interopRequireDefault(_introspection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QUERY_TYPES = exports.QUERY_TYPES = _constants.QUERY_TYPES;\nvar MUTATION_TYPES = exports.MUTATION_TYPES = _constants.MUTATION_TYPES;\nvar ALL_TYPES = exports.ALL_TYPES = _constants.ALL_TYPES;\n\nvar defaultOptions = {\n    resolveIntrospection: _introspection2.default,\n    introspection: {\n        operationNames: (_operationNames = {}, (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_LIST, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_ONE, function (resource) {\n            return '' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_MANY, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_MANY_REFERENCE, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.CREATE, function (resource) {\n            return 'create' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.UPDATE, function (resource) {\n            return 'update' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.DELETE, function (resource) {\n            return 'delete' + resource.name;\n        }), _operationNames),\n        exclude: undefined,\n        include: undefined\n    }\n};\n\nvar getOptions = function getOptions(options, aorFetchType, resource) {\n    if (typeof options === 'function') {\n        return options(resource, aorFetchType);\n    }\n\n    return options;\n};\n\nexports.default = function () {\n    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var _merge, clientObject, clientOptions, introspection, resolveIntrospection, buildQueryFactory, _merge$override, override, otherOptions, client, introspectionResults, buildQuery, raDataProvider;\n\n        return _regenerator2.default.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        _merge = (0, _merge3.default)({}, defaultOptions, options), clientObject = _merge.client, clientOptions = _merge.clientOptions, introspection = _merge.introspection, resolveIntrospection = _merge.resolveIntrospection, buildQueryFactory = _merge.buildQuery, _merge$override = _merge.override, override = _merge$override === undefined ? {} : _merge$override, otherOptions = (0, _objectWithoutProperties3.default)(_merge, ['client', 'clientOptions', 'introspection', 'resolveIntrospection', 'buildQuery', 'override']);\n                        client = clientObject || (0, _buildApolloClient2.default)(clientOptions);\n                        introspectionResults = void 0;\n\n                        if (!introspection) {\n                            _context.next = 7;\n                            break;\n                        }\n\n                        _context.next = 6;\n                        return resolveIntrospection(client, introspection);\n\n                    case 6:\n                        introspectionResults = _context.sent;\n\n                    case 7:\n                        buildQuery = buildQueryFactory(introspectionResults, otherOptions);\n\n                        raDataProvider = function raDataProvider(aorFetchType, resource, params) {\n                            var overridedbuildQuery = (0, _get2.default)(override, resource + '.' + aorFetchType);\n\n                            var _ref2 = overridedbuildQuery ? (0, _extends3.default)({}, buildQuery(aorFetchType, resource, params), overridedbuildQuery(params)) : buildQuery(aorFetchType, resource, params),\n                                parseResponse = _ref2.parseResponse,\n                                query = (0, _objectWithoutProperties3.default)(_ref2, ['parseResponse']);\n\n                            if (QUERY_TYPES.includes(aorFetchType)) {\n                                var _apolloQuery = (0, _extends3.default)({}, query, {\n                                    fetchPolicy: 'network-only'\n                                }, getOptions(otherOptions.query, aorFetchType, resource));\n\n                                return client.query(_apolloQuery).then(parseResponse);\n                            }\n\n                            var apolloQuery = (0, _extends3.default)({\n                                mutation: query.query,\n                                variables: query.variables\n                            }, getOptions(otherOptions.mutation, aorFetchType, resource));\n\n                            return client.mutate(apolloQuery).then(parseResponse);\n                        };\n\n                        raDataProvider.observeRequest = function (aorFetchType, resource, params) {\n                            var _buildQuery = buildQuery(aorFetchType, resource, params),\n                                parseResponse = _buildQuery.parseResponse,\n                                query = (0, _objectWithoutProperties3.default)(_buildQuery, ['parseResponse']);\n\n                            var apolloQuery = (0, _extends3.default)({}, query, getOptions(otherOptions.watchQuery, aorFetchType, resource));\n\n                            return client.watchQuery(apolloQuery).then(parseResponse);\n                        };\n\n                        raDataProvider.saga = function () {};\n\n                        return _context.abrupt('return', raDataProvider);\n\n                    case 12:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n\n    return function (_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n/***/ }),\n\n/***/ 1860:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = getMutationDefinition;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = checkDocument;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = getOperationDefinition;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = getOperationDefinitionOrDie;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = getOperationName;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = getFragmentDefinitions;\n/* harmony export (immutable) */ __webpack_exports__[\"j\"] = getQueryDefinition;\n/* unused harmony export getFragmentDefinition */\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = getMainDefinition;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createFragmentMap;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getDefaultValues;\n/* unused harmony export variablesInOperation */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assign__ = __webpack_require__(1861);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__storeUtils__ = __webpack_require__(1802);\n\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    if (!mutationDef) {\n        throw new Error('Must contain a mutation definition.');\n    }\n    return mutationDef;\n}\n// Checks the document for errors and throws an exception if there is an error.\nfunction checkDocument(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw new Error(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    if (operations.length > 1) {\n        throw new Error(\"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    }\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    if (!def) {\n        throw new Error(\"GraphQL document is missing an operation\");\n    }\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    if (!queryDef || queryDef.operation !== 'query') {\n        throw new Error('Must contain a query definition.');\n    }\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    if (doc.definitions.length > 1) {\n        throw new Error('Fragment must have exactly one definition.');\n    }\n    var fragmentDef = doc.definitions[0];\n    if (fragmentDef.kind !== 'FragmentDefinition') {\n        throw new Error('Must be a fragment definition.');\n    }\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw new Error('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            Object(__WEBPACK_IMPORTED_MODULE_1__storeUtils__[\"j\" /* valueToObjectRepresentation */])(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return __WEBPACK_IMPORTED_MODULE_0__util_assign__[\"a\" /* assign */].apply(void 0, [{}].concat(defaultValues));\n    }\n    return {};\n}\n/**\n * Returns the names of all variables declared by the operation.\n */\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n//# sourceMappingURL=getFromAST.js.map\n\n/***/ }),\n\n/***/ 1861:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = assign;\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n//# sourceMappingURL=assign.js.map\n\n/***/ }),\n\n/***/ 1862:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cloneDeep;\n/**\n * Deeply clones a value to create a new instance.\n */\nfunction cloneDeep(value) {\n    // If the value is an array, create a new array where every item has been cloned.\n    if (Array.isArray(value)) {\n        return value.map(function (item) { return cloneDeep(item); });\n    }\n    // If the value is an object, go through all of the object’s properties and add them to a new\n    // object.\n    if (value !== null && typeof value === 'object') {\n        var nextValue = {};\n        for (var key in value) {\n            if (value.hasOwnProperty(key)) {\n                nextValue[key] = cloneDeep(value[key]);\n            }\n        }\n        return nextValue;\n    }\n    // Otherwise this is some primitive value and it is therefore immutable so we can just return it\n    // directly.\n    return value;\n}\n//# sourceMappingURL=cloneDeep.js.map\n\n/***/ }),\n\n/***/ 1863:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Observable; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(285);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\n\n\n// rxjs interopt\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__[\"default\"]] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"Observable\"]));\n\n//# sourceMappingURL=Observable.js.map\n\n/***/ }),\n\n/***/ 1864:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Observable; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_zen_observable__ = __webpack_require__(1929);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_zen_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_zen_observable__);\n\nvar Observable = __WEBPACK_IMPORTED_MODULE_0_zen_observable___default.a;\n//# sourceMappingURL=zenObservable.js.map\n\n/***/ }),\n\n/***/ 1865:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = validateOperation;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LinkError; });\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = isTerminating;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = toPromise;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return makePromise; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = fromPromise;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = fromError;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = transformOperation;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createOperation;\n/* unused harmony export getKey */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_zen_observable_ts__ = __webpack_require__(1804);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_graphql_language_printer__ = __webpack_require__(1764);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw new Error(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = /** @class */ (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\n\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n// backwards compat\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new __WEBPACK_IMPORTED_MODULE_1_zen_observable_ts__[\"a\" /* default */](function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new __WEBPACK_IMPORTED_MODULE_1_zen_observable_ts__[\"a\" /* default */](function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"l\" /* getOperationName */])(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    // XXX we're assuming here that variables will be serialized in the same order.\n    // that might not always be true\n    return Object(__WEBPACK_IMPORTED_MODULE_2_graphql_language_printer__[\"a\" /* print */])(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n//# sourceMappingURL=linkUtils.js.map\n\n/***/ }),\n\n/***/ 1866:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dedupLink__ = __webpack_require__(1933);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__dedupLink__[\"a\"]; });\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1867:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printAST\", function() { return __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__ = __webpack_require__(1806);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ObservableQuery\", function() { return __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1782);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NetworkStatus\", function() { return __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_types__ = __webpack_require__(1794);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FetchType\", function() { return __WEBPACK_IMPORTED_MODULE_3__core_types__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__errors_ApolloError__ = __webpack_require__(1807);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloError\", function() { return __WEBPACK_IMPORTED_MODULE_4__errors_ApolloError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ApolloClient__ = __webpack_require__(1940);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloClient\", function() { return __WEBPACK_IMPORTED_MODULE_5__ApolloClient__[\"a\"]; });\n\n\n\n\n\n\n// export the client as both default and named\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_5__ApolloClient__[\"a\" /* default */]);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1868:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Observable; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(285);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\n\n\n// rxjs interopt\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[__WEBPACK_IMPORTED_MODULE_1_symbol_observable__[\"default\"]] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"Observable\"]));\n\n//# sourceMappingURL=Observable.js.map\n\n/***/ }),\n\n/***/ 1869:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__inMemoryCache__ = __webpack_require__(1950);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"InMemoryCache\", function() { return __WEBPACK_IMPORTED_MODULE_0__inMemoryCache__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultDataIdFromObject\", function() { return __WEBPACK_IMPORTED_MODULE_0__inMemoryCache__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__readFromStore__ = __webpack_require__(1872);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ID_KEY\", function() { return __WEBPACK_IMPORTED_MODULE_1__readFromStore__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"readQueryFromStore\", function() { return __WEBPACK_IMPORTED_MODULE_1__readFromStore__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"diffQueryAgainstStore\", function() { return __WEBPACK_IMPORTED_MODULE_1__readFromStore__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"assertIdValue\", function() { return __WEBPACK_IMPORTED_MODULE_1__readFromStore__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__writeToStore__ = __webpack_require__(1871);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WriteError\", function() { return __WEBPACK_IMPORTED_MODULE_2__writeToStore__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"enhanceErrorWithDocument\", function() { return __WEBPACK_IMPORTED_MODULE_2__writeToStore__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"writeQueryToStore\", function() { return __WEBPACK_IMPORTED_MODULE_2__writeToStore__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"writeResultToStore\", function() { return __WEBPACK_IMPORTED_MODULE_2__writeToStore__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"writeSelectionSetToStore\", function() { return __WEBPACK_IMPORTED_MODULE_2__writeToStore__[\"e\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fragmentMatcher__ = __webpack_require__(1870);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"HeuristicFragmentMatcher\", function() { return __WEBPACK_IMPORTED_MODULE_3__fragmentMatcher__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"IntrospectionFragmentMatcher\", function() { return __WEBPACK_IMPORTED_MODULE_3__fragmentMatcher__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__objectCache__ = __webpack_require__(1808);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ObjectCache\", function() { return __WEBPACK_IMPORTED_MODULE_4__objectCache__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"defaultNormalizedCacheFactory\", function() { return __WEBPACK_IMPORTED_MODULE_4__objectCache__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__recordingCache__ = __webpack_require__(1874);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RecordingCache\", function() { return __WEBPACK_IMPORTED_MODULE_5__recordingCache__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"record\", function() { return __WEBPACK_IMPORTED_MODULE_5__recordingCache__[\"b\"]; });\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1870:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HeuristicFragmentMatcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return IntrospectionFragmentMatcher; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n\nvar haveWarned = false;\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nvar HeuristicFragmentMatcher = /** @class */ (function () {\n    function HeuristicFragmentMatcher() {\n        // do nothing\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true; // we don't need to initialize this fragment matcher.\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        if (!obj && idValue.id === 'ROOT_QUERY') {\n            return true;\n        }\n        if (!obj) {\n            return false;\n        }\n        if (!obj.__typename) {\n            if (!haveWarned) {\n                console.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                console.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                console.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n                /* istanbul ignore if */\n                if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"w\" /* isTest */])()) {\n                    // When running tests, we want to print the warning every time\n                    haveWarned = true;\n                }\n            }\n            context.returnPartialData = true;\n            return true;\n        }\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        // XXX here we reach an issue - we don't know if this fragment should match or not. It's either:\n        // 1. A fragment on a non-matching concrete type or interface or union\n        // 2. A fragment on a matching interface or union\n        // If it's 1, we don't want to return anything, if it's 2 we want to match. We can't tell the\n        // difference, so we warn the user, but still try to match it (backcompat).\n        Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"E\" /* warnOnceInDevelopment */])(\"You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types.\\n     Apollo Client will not be able to able to accurately map fragments.\" +\n            \"To make this error go away, use the IntrospectionFragmentMatcher as described in the docs: \" +\n            \"https://www.apollographql.com/docs/react/recipes/fragment-matching.html\", 'error');\n        context.returnPartialData = true;\n        return true;\n    };\n    return HeuristicFragmentMatcher;\n}());\n\nvar IntrospectionFragmentMatcher = /** @class */ (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        if (!this.isReady) {\n            // this should basically never happen in proper use.\n            throw new Error('FragmentMatcher.match() was called before FragmentMatcher.init()');\n        }\n        var obj = context.store.get(idValue.id);\n        if (!obj) {\n            return false;\n        }\n        if (!obj.__typename) {\n            throw new Error(\"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        }\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\n//# sourceMappingURL=fragmentMatcher.js.map\n\n/***/ }),\n\n/***/ 1871:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WriteError; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = enhanceErrorWithDocument;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = writeQueryToStore;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = writeResultToStore;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = writeSelectionSetToStore;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectCache__ = __webpack_require__(1808);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar WriteError = /** @class */ (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\n\nfunction enhanceErrorWithDocument(error, document) {\n    // XXX A bit hacky maybe ...\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\n/**\n * Writes the result of a query to the store.\n *\n * @param result The result object returned for the query document.\n *\n * @param query The query document whose result we are writing to the store.\n *\n * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n *\n * @param variables A map from the name of a variable to its value. These variables can be\n * referenced by the query document.\n *\n * @param dataIdFromObject A function that returns an object identifier given a particular result\n * object. See the store documentation for details and an example of this function.\n *\n * @param fragmentMap A map from the name of a fragment to its fragment definition. These fragments\n * can be referenced within the query document.\n *\n * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n */\nfunction writeQueryToStore(_a) {\n    var result = _a.result, query = _a.query, _b = _a.storeFactory, storeFactory = _b === void 0 ? __WEBPACK_IMPORTED_MODULE_2__objectCache__[\"b\" /* defaultNormalizedCacheFactory */] : _b, _c = _a.store, store = _c === void 0 ? storeFactory() : _c, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, _d = _a.fragmentMap, fragmentMap = _d === void 0 ? {} : _d, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    var queryDefinition = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"m\" /* getQueryDefinition */])(query);\n    variables = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"e\" /* getDefaultValues */])(queryDefinition), variables);\n    try {\n        return writeSelectionSetToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            selectionSet: queryDefinition.selectionSet,\n            context: {\n                store: store,\n                storeFactory: storeFactory,\n                processedData: {},\n                variables: variables,\n                dataIdFromObject: dataIdFromObject,\n                fragmentMap: fragmentMap,\n                fragmentMatcherFunction: fragmentMatcherFunction,\n            },\n        });\n    }\n    catch (e) {\n        throw enhanceErrorWithDocument(e, query);\n    }\n}\nfunction writeResultToStore(_a) {\n    var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.storeFactory, storeFactory = _b === void 0 ? __WEBPACK_IMPORTED_MODULE_2__objectCache__[\"b\" /* defaultNormalizedCacheFactory */] : _b, _c = _a.store, store = _c === void 0 ? storeFactory() : _c, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    var operationDefinition = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"k\" /* getOperationDefinition */])(document);\n    var selectionSet = operationDefinition.selectionSet;\n    var fragmentMap = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"d\" /* createFragmentMap */])(Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"g\" /* getFragmentDefinitions */])(document));\n    variables = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"e\" /* getDefaultValues */])(operationDefinition), variables);\n    try {\n        return writeSelectionSetToStore({\n            result: result,\n            dataId: dataId,\n            selectionSet: selectionSet,\n            context: {\n                store: store,\n                storeFactory: storeFactory,\n                processedData: {},\n                variables: variables,\n                dataIdFromObject: dataIdFromObject,\n                fragmentMap: fragmentMap,\n                fragmentMatcherFunction: fragmentMatcherFunction,\n            },\n        });\n    }\n    catch (e) {\n        throw enhanceErrorWithDocument(e, document);\n    }\n}\nfunction writeSelectionSetToStore(_a) {\n    var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n    var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n    selectionSet.selections.forEach(function (selection) {\n        var included = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"A\" /* shouldInclude */])(selection, variables);\n        if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"r\" /* isField */])(selection)) {\n            var resultFieldKey = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"z\" /* resultKeyNameFromField */])(selection);\n            var value = result[resultFieldKey];\n            if (included) {\n                if (typeof value !== 'undefined') {\n                    writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    // if this is a defered field we don't need to throw / warn\n                    var isDefered = selection.directives &&\n                        selection.directives.length &&\n                        selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                    if (!isDefered && context.fragmentMatcherFunction) {\n                        // XXX We'd like to throw an error, but for backwards compatibility's sake\n                        // we just print a warning for the time being.\n                        //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n                        if (!Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])()) {\n                            console.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            // This is not a field, so it must be a fragment, either inline or named\n            var fragment = void 0;\n            if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"t\" /* isInlineFragment */])(selection)) {\n                fragment = selection;\n            }\n            else {\n                // Named fragment\n                fragment = (fragmentMap || {})[selection.name.value];\n                if (!fragment) {\n                    throw new Error(\"No fragment named \" + selection.name.value + \".\");\n                }\n            }\n            var matches = true;\n            if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n                // Right now we have to pretend that we're passing in an idValue and that there's a store\n                // on the context.\n                var idValue = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"C\" /* toIdValue */])({ id: 'self', typename: undefined });\n                var fakeContext = {\n                    // NOTE: fakeContext always uses ObjectCache\n                    // since this is only to ensure the return value of 'matches'\n                    store: new __WEBPACK_IMPORTED_MODULE_2__objectCache__[\"a\" /* ObjectCache */]({ self: result }),\n                    returnPartialData: false,\n                    hasMissingField: false,\n                    cacheRedirects: {},\n                };\n                matches = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                if (!Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])() && fakeContext.returnPartialData) {\n                    console.error('WARNING: heuristic fragment matching going on!');\n                }\n            }\n            if (included && matches) {\n                writeSelectionSetToStore({\n                    result: result,\n                    selectionSet: fragment.selectionSet,\n                    dataId: dataId,\n                    context: context,\n                });\n            }\n        }\n    });\n    return store;\n}\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(value) && isGeneratedId(value.id) && Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(realValue)) {\n            mergeWithGenerated(value.id, realValue.id, cache);\n        }\n        cache.delete(generatedKey);\n        cache.set(realKey, __assign({}, generated, real));\n    });\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\nfunction writeFieldToStore(_a) {\n    var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n    var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n    var storeValue;\n    var storeObject;\n    var storeFieldName = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"B\" /* storeKeyNameFromField */])(field, variables);\n    // specifies if we need to merge existing keys in the store\n    var shouldMerge = false;\n    // If we merge, this will be the generatedKey\n    var generatedKey = '';\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n        storeValue =\n            value != null && typeof value === 'object'\n                ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n                    // an id.\n                    { type: 'json', json: value }\n                : // Otherwise, just store the scalar directly in the store.\n                    value;\n    }\n    else if (Array.isArray(value)) {\n        var generatedId = dataId + \".\" + storeFieldName;\n        storeValue = processArrayValue(value, generatedId, field.selectionSet, context);\n    }\n    else {\n        // It's an object\n        var valueDataId = dataId + \".\" + storeFieldName;\n        var generated = true;\n        // We only prepend the '$' if the valueDataId isn't already a generated\n        // id.\n        if (!isGeneratedId(valueDataId)) {\n            valueDataId = '$' + valueDataId;\n        }\n        if (dataIdFromObject) {\n            var semanticId = dataIdFromObject(value);\n            // We throw an error if the first character of the id is '$. This is\n            // because we use that character to designate an Apollo-generated id\n            // and we use the distinction between user-desiginated and application-provided\n            // ids when managing overwrites.\n            if (semanticId && isGeneratedId(semanticId)) {\n                throw new Error('IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n            }\n            if (semanticId) {\n                valueDataId = semanticId;\n                generated = false;\n            }\n        }\n        if (!isDataProcessed(valueDataId, field, context.processedData)) {\n            writeSelectionSetToStore({\n                dataId: valueDataId,\n                result: value,\n                selectionSet: field.selectionSet,\n                context: context,\n            });\n        }\n        // We take the id and escape it (i.e. wrap it with an enclosing object).\n        // This allows us to distinguish IDs from normal scalars.\n        var typename = value.__typename;\n        storeValue = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"C\" /* toIdValue */])({ id: valueDataId, typename: typename }, generated);\n        // check if there was a generated id at the location where we're\n        // about to place this new id. If there was, we have to merge the\n        // data from that id with the data we're about to write in the store.\n        storeObject = store.get(dataId);\n        var escapedId = storeObject && storeObject[storeFieldName];\n        if (escapedId !== storeValue && Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(escapedId)) {\n            var hadTypename = escapedId.typename !== undefined;\n            var hasTypename = typename !== undefined;\n            var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n            // If there is already a real id in the store and the current id we\n            // are dealing with is generated, we throw an error.\n            // One exception we allow is when the typename has changed, which occurs\n            // when schema defines a union, both with and without an ID in the same place.\n            // checks if we \"lost\" the read id\n            if (generated && !escapedId.generated && !typenameChanged) {\n                throw new Error(\"Store error: the application attempted to write an object with no provided id\" +\n                    (\" but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet\") +\n                    \" that was trying to be written is:\\n\" +\n                    Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(field));\n            }\n            // checks if we \"lost\" the typename\n            if (hadTypename && !hasTypename) {\n                throw new Error(\"Store error: the application attempted to write an object with no provided typename\" +\n                    (\" but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet\") +\n                    \" that was trying to be written is:\\n\" +\n                    Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(field));\n            }\n            if (escapedId.generated) {\n                generatedKey = escapedId.id;\n                // We should only merge if it's an object of the same type,\n                // otherwise we should delete the generated object\n                if (typenameChanged) {\n                    // Only delete the generated object when the old object was\n                    // inlined, and the new object is not. This is indicated by\n                    // the old id being generated, and the new id being real.\n                    if (!generated) {\n                        store.delete(generatedKey);\n                    }\n                }\n                else {\n                    shouldMerge = true;\n                }\n            }\n        }\n    }\n    var newStoreObj = __assign({}, store.get(dataId), (_b = {}, _b[storeFieldName] = storeValue, _b));\n    if (shouldMerge) {\n        mergeWithGenerated(generatedKey, storeValue.id, store);\n    }\n    storeObject = store.get(dataId);\n    if (!storeObject || storeValue !== storeObject[storeFieldName]) {\n        store.set(dataId, newStoreObj);\n    }\n    var _b;\n}\nfunction processArrayValue(value, generatedId, selectionSet, context) {\n    return value.map(function (item, index) {\n        if (item === null) {\n            return null;\n        }\n        var itemDataId = generatedId + \".\" + index;\n        if (Array.isArray(item)) {\n            return processArrayValue(item, itemDataId, selectionSet, context);\n        }\n        var generated = true;\n        if (context.dataIdFromObject) {\n            var semanticId = context.dataIdFromObject(item);\n            if (semanticId) {\n                itemDataId = semanticId;\n                generated = false;\n            }\n        }\n        if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n            writeSelectionSetToStore({\n                dataId: itemDataId,\n                result: item,\n                selectionSet: selectionSet,\n                context: context,\n            });\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"C\" /* toIdValue */])({ id: itemDataId, typename: item.__typename }, generated);\n    });\n}\n//# sourceMappingURL=writeToStore.js.map\n\n/***/ }),\n\n/***/ 1872:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ID_KEY; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = readQueryFromStore;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = diffQueryAgainstStore;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = assertIdValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_anywhere__ = __webpack_require__(1956);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n/**\n * The key which the cache id for a given value is stored in the result object. This key is private\n * and should not be used by Apollo client users.\n *\n * Uses a symbol if available in the environment.\n *\n * @private\n */\nvar ID_KEY = typeof Symbol !== 'undefined' ? Symbol('id') : '@@id';\n/**\n * Resolves the result of a query solely from the store (i.e. never hits the server).\n *\n * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n * store.\n *\n * @param {DocumentNode} query The query document to resolve from the data available in the store.\n *\n * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n * be referenced by the query document.\n *\n * @param {any} previousResult The previous result returned by this function for the same query.\n * If nothing in the store changed since that previous result then values from the previous result\n * will be returned to preserve referential equality.\n */\nfunction readQueryFromStore(options) {\n    var optsPatch = { returnPartialData: false };\n    return diffQueryAgainstStore(__assign({}, options, optsPatch)).result;\n}\nvar readStoreResolver = function (fieldName, idValue, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    assertIdValue(idValue);\n    var objId = idValue.id;\n    var obj = context.store.get(objId);\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        // We happen to know here that getStoreKeyName returns its first\n        // argument unmodified if there are no args or directives, so we can\n        // avoid calling the function at all in that case, as a small but\n        // important optimization to this frequently executed code.\n        storeKeyName = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"n\" /* getStoreKeyName */])(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (obj) {\n        fieldValue = obj[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            (obj.__typename || objId === 'ROOT_QUERY')) {\n            var typename = obj.__typename || 'Query';\n            // Look for the type in the custom resolver map\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                // Look for the field in the custom resolver map\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(obj, args, {\n                        getCacheKey: function (storeObj) {\n                            return Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"C\" /* toIdValue */])({\n                                id: context.dataIdFromObject(storeObj),\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        if (!context.returnPartialData) {\n            throw new Error(\"Can't find field \" + storeKeyName + \" on object (\" + objId + \") \" + JSON.stringify(obj, null, 2) + \".\");\n        }\n        context.hasMissingField = true;\n        return fieldValue;\n    }\n    // if this is an object scalar, it must be a json blob and we have to unescape it\n    if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"u\" /* isJsonValue */])(fieldValue)) {\n        // If the JSON blob is the same now as in the previous result, return the previous result to\n        // maintain referential equality.\n        //\n        // `isEqual` will first perform a referential equality check (with `===`) in case the JSON\n        // value has not changed in the store, and then a deep equality check if that fails in case a\n        // new JSON object was returned by the API but that object may still be the same.\n        if (idValue.previousResult &&\n            Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"q\" /* isEqual */])(idValue.previousResult[resultKey], fieldValue.json)) {\n            return idValue.previousResult[resultKey];\n        }\n        return fieldValue.json;\n    }\n    // If we had a previous result, try adding that previous result value for this field to our field\n    // value. This will create a new value without mutating the old one.\n    if (idValue.previousResult) {\n        fieldValue = addPreviousResultToIdValues(fieldValue, idValue.previousResult[resultKey]);\n    }\n    return fieldValue;\n};\n/**\n * Given a store and a query, return as much of the result as possible and\n * identify if any data was missing from the store.\n * @param  {DocumentNode} query A parsed GraphQL query document\n * @param  {Store} store The Apollo Client store object\n * @param  {any} previousResult The previous result returned by this function for the same query\n * @return {result: Object, complete: [boolean]}\n */\nfunction diffQueryAgainstStore(_a) {\n    var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n    // Throw the right validation error by trying to find a query in the document\n    var queryDefinition = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"m\" /* getQueryDefinition */])(query);\n    variables = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"e\" /* getDefaultValues */])(queryDefinition), variables);\n    var context = {\n        // Global settings\n        store: store,\n        returnPartialData: returnPartialData,\n        dataIdFromObject: (config && config.dataIdFromObject) || null,\n        cacheRedirects: (config && config.cacheRedirects) || {},\n        // Flag set during execution\n        hasMissingField: false,\n    };\n    var rootIdValue = {\n        type: 'id',\n        id: rootId,\n        previousResult: previousResult,\n    };\n    var result = Object(__WEBPACK_IMPORTED_MODULE_0_graphql_anywhere__[\"a\" /* default */])(readStoreResolver, query, rootIdValue, context, variables, {\n        fragmentMatcher: fragmentMatcherFunction,\n        resultMapper: resultMapper,\n    });\n    return {\n        result: result,\n        complete: !context.hasMissingField,\n    };\n}\nfunction assertIdValue(idValue) {\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(idValue)) {\n        throw new Error(\"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n    }\n}\n/**\n * Adds a previous result value to id values in a nested array. For a single id value and a single\n * previous result then the previous value is added directly.\n *\n * For arrays we put all of the ids from the previous result array in a map and add them to id\n * values with the same id.\n *\n * This function does not mutate. Instead it returns new instances of modified values.\n *\n * @private\n */\nfunction addPreviousResultToIdValues(value, previousResult) {\n    // If the value is an `IdValue`, add the previous result to it whether or not that\n    // `previousResult` is undefined.\n    //\n    // If the value is an array, recurse over each item trying to add the `previousResult` for that\n    // item.\n    if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(value)) {\n        return __assign({}, value, { previousResult: previousResult });\n    }\n    else if (Array.isArray(value)) {\n        var idToPreviousResult_1 = new Map();\n        // If the previous result was an array, we want to build up our map of ids to previous results\n        // using the private `ID_KEY` property that is added in `resultMapper`.\n        if (Array.isArray(previousResult)) {\n            previousResult.forEach(function (item) {\n                // item can be null\n                if (item && item[ID_KEY]) {\n                    idToPreviousResult_1.set(item[ID_KEY], item);\n                    // idToPreviousResult[item[ID_KEY]] = item;\n                }\n            });\n        }\n        // For every value we want to add the previous result.\n        return value.map(function (item, i) {\n            // By default the previous result for this item will be in the same array position as this\n            // item.\n            var itemPreviousResult = previousResult && previousResult[i];\n            // If the item is an id value, we should check to see if there is a previous result for this\n            // specific id. If there is, that will be the value for `itemPreviousResult`.\n            if (Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"s\" /* isIdValue */])(item)) {\n                itemPreviousResult =\n                    idToPreviousResult_1.get(item.id) || itemPreviousResult;\n            }\n            return addPreviousResultToIdValues(item, itemPreviousResult);\n        });\n    }\n    // Return the value, nothing changed.\n    return value;\n}\n/**\n * Maps a result from `graphql-anywhere` to a final result value.\n *\n * If the result and the previous result from the `idValue` pass a shallow equality test, we just\n * return the `previousResult` to maintain referential equality.\n *\n * We also add a private id property to the result that we can use later on.\n *\n * @private\n */\nfunction resultMapper(resultFields, idValue) {\n    // If we had a previous result, we may be able to return that and preserve referential equality\n    if (idValue.previousResult) {\n        var currentResultKeys_1 = Object.keys(resultFields);\n        var sameAsPreviousResult = \n        // Confirm that we have the same keys in both the current result and the previous result.\n        Object.keys(idValue.previousResult).every(function (key) { return currentResultKeys_1.indexOf(key) > -1; }) &&\n            // Perform a shallow comparison of the result fields with the previous result. If all of\n            // the shallow fields are referentially equal to the fields of the previous result we can\n            // just return the previous result.\n            //\n            // While we do a shallow comparison of objects, but we do a deep comparison of arrays.\n            currentResultKeys_1.every(function (key) {\n                return areNestedArrayItemsStrictlyEqual(resultFields[key], idValue.previousResult[key]);\n            });\n        if (sameAsPreviousResult) {\n            return idValue.previousResult;\n        }\n    }\n    Object.defineProperty(resultFields, ID_KEY, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: idValue.id,\n    });\n    return resultFields;\n}\n/**\n * Compare all the items to see if they are all referentially equal in two arrays no matter how\n * deeply nested the arrays are.\n *\n * @private\n */\nfunction areNestedArrayItemsStrictlyEqual(a, b) {\n    // If `a` and `b` are referentially equal, return true.\n    if (a === b) {\n        return true;\n    }\n    // If either `a` or `b` are not an array or not of the same length return false. `a` and `b` are\n    // known to not be equal here, we checked above.\n    if (!Array.isArray(a) || !Array.isArray(b) || a.length !== b.length) {\n        return false;\n    }\n    // Otherwise let us compare all of the array items (which are potentially nested arrays!) to see\n    // if they are equal.\n    return a.every(function (item, i) { return areNestedArrayItemsStrictlyEqual(item, b[i]); });\n}\n//# sourceMappingURL=readFromStore.js.map\n\n/***/ }),\n\n/***/ 1873:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = graphql;\n/* unused harmony export merge */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n\n/* Based on graphql function from graphql-js:\n *\n * graphql(\n *   schema: GraphQLSchema,\n *   requestString: string,\n *   rootValue?: ?any,\n *   contextValue?: ?any,\n *   variableValues?: ?{[key: string]: any},\n *   operationName?: ?string\n * ): Promise<GraphQLResult>\n *\n * The default export as of graphql-anywhere is sync as of 4.0,\n * but below is an exported alternative that is async.\n * In the 5.0 version, this will be the only export again\n * and it will be async\n *\n */\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n    if (execOptions === void 0) { execOptions = {}; }\n    var mainDefinition = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"i\" /* getMainDefinition */])(document);\n    var fragments = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"g\" /* getFragmentDefinitions */])(document);\n    var fragmentMap = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"d\" /* createFragmentMap */])(fragments);\n    var resultMapper = execOptions.resultMapper;\n    // Default matcher always matches all fragments\n    var fragmentMatcher = execOptions.fragmentMatcher || (function () { return true; });\n    var execContext = {\n        fragmentMap: fragmentMap,\n        contextValue: contextValue,\n        variableValues: variableValues,\n        resultMapper: resultMapper,\n        resolver: resolver,\n        fragmentMatcher: fragmentMatcher,\n    };\n    return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n    var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n    var result = {};\n    selectionSet.selections.forEach(function (selection) {\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"A\" /* shouldInclude */])(selection, variables)) {\n            // Skip this entirely\n            return;\n        }\n        if (Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"r\" /* isField */])(selection)) {\n            var fieldResult = executeField(selection, rootValue, execContext);\n            var resultFieldKey = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"z\" /* resultKeyNameFromField */])(selection);\n            if (fieldResult !== undefined) {\n                if (result[resultFieldKey] === undefined) {\n                    result[resultFieldKey] = fieldResult;\n                }\n                else {\n                    merge(result[resultFieldKey], fieldResult);\n                }\n            }\n        }\n        else {\n            var fragment = void 0;\n            if (Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"t\" /* isInlineFragment */])(selection)) {\n                fragment = selection;\n            }\n            else {\n                // This is a named fragment\n                fragment = fragmentMap[selection.name.value];\n                if (!fragment) {\n                    throw new Error(\"No fragment named \" + selection.name.value);\n                }\n            }\n            var typeCondition = fragment.typeCondition.name.value;\n            if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n                var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);\n                merge(result, fragmentResult);\n            }\n        }\n    });\n    if (execContext.resultMapper) {\n        return execContext.resultMapper(result, rootValue);\n    }\n    return result;\n}\nfunction executeField(field, rootValue, execContext) {\n    var variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n    var fieldName = field.name.value;\n    var args = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"b\" /* argumentsObjectFromField */])(field, variables);\n    var info = {\n        isLeaf: !field.selectionSet,\n        resultKey: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"z\" /* resultKeyNameFromField */])(field),\n        directives: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"f\" /* getDirectiveInfoFromField */])(field, variables),\n    };\n    var result = resolver(fieldName, rootValue, args, contextValue, info);\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n        return result;\n    }\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n    }\n    if (Array.isArray(result)) {\n        return executeSubSelectedArray(field, result, execContext);\n    }\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return executeSelectionSet(field.selectionSet, result, execContext);\n}\nfunction executeSubSelectedArray(field, result, execContext) {\n    return result.map(function (item) {\n        // null value in array\n        if (item === null) {\n            return null;\n        }\n        // This is a nested array, recurse\n        if (Array.isArray(item)) {\n            return executeSubSelectedArray(field, item, execContext);\n        }\n        // This is an object, run the selection set on it\n        return executeSelectionSet(field.selectionSet, item, execContext);\n    });\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction merge(dest, src) {\n    if (src !== null && typeof src === 'object') {\n        Object.keys(src).forEach(function (key) {\n            var srcVal = src[key];\n            if (!hasOwn.call(dest, key)) {\n                dest[key] = srcVal;\n            }\n            else {\n                merge(dest[key], srcVal);\n            }\n        });\n    }\n}\n//# sourceMappingURL=graphql.js.map\n\n/***/ }),\n\n/***/ 1874:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RecordingCache; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = record;\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar RecordingCache = /** @class */ (function () {\n    function RecordingCache(data) {\n        if (data === void 0) { data = {}; }\n        this.data = data;\n        this.recordedData = {};\n    }\n    RecordingCache.prototype.record = function (transaction) {\n        transaction(this);\n        var recordedData = this.recordedData;\n        this.recordedData = {};\n        return recordedData;\n    };\n    RecordingCache.prototype.toObject = function () {\n        return __assign({}, this.data, this.recordedData);\n    };\n    RecordingCache.prototype.get = function (dataId) {\n        if (this.recordedData.hasOwnProperty(dataId)) {\n            // recording always takes precedence:\n            return this.recordedData[dataId];\n        }\n        return this.data[dataId];\n    };\n    RecordingCache.prototype.set = function (dataId, value) {\n        if (this.get(dataId) !== value) {\n            this.recordedData[dataId] = value;\n        }\n    };\n    RecordingCache.prototype.delete = function (dataId) {\n        this.recordedData[dataId] = undefined;\n    };\n    RecordingCache.prototype.clear = function () {\n        var _this = this;\n        Object.keys(this.data).forEach(function (dataId) { return _this.delete(dataId); });\n        this.recordedData = {};\n    };\n    RecordingCache.prototype.replace = function (newData) {\n        this.clear();\n        this.recordedData = __assign({}, newData);\n    };\n    return RecordingCache;\n}());\n\nfunction record(startingState, transaction) {\n    var recordingCache = new RecordingCache(startingState);\n    return recordingCache.record(transaction);\n}\n//# sourceMappingURL=recordingCache.js.map\n\n/***/ }),\n\n/***/ 1875:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Source; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nvar Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};\n\n/***/ }),\n\n/***/ 1876:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = printError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__language_location__ = __webpack_require__(1810);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nfunction printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, Object(__WEBPACK_IMPORTED_MODULE_0__language_location__[\"a\" /* getLocation */])(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n\n/***/ }),\n\n/***/ 1877:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = locatedError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GraphQLError__ = __webpack_require__(1772);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  // $FlowFixMe(>=0.68.0)\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0__GraphQLError__[\"a\" /* GraphQLError */](originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n}\n\n/***/ }),\n\n/***/ 1878:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = blockStringValue;\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nfunction blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n\n  // Remove common indentation from all lines but first.\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  }\n\n  // Remove leading and trailing blank lines.\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  }\n\n  // Return a string of the lines joined with U+000A.\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n\n/***/ }),\n\n/***/ 1879:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ALL_TYPES = exports.MUTATION_TYPES = exports.QUERY_TYPES = undefined;\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar QUERY_TYPES = exports.QUERY_TYPES = [_reactAdmin.GET_LIST, _reactAdmin.GET_MANY, _reactAdmin.GET_MANY_REFERENCE, _reactAdmin.GET_ONE];\nvar MUTATION_TYPES = exports.MUTATION_TYPES = [_reactAdmin.CREATE, _reactAdmin.UPDATE, _reactAdmin.DELETE, _reactAdmin.UPDATE_MANY, _reactAdmin.DELETE_MANY];\nvar ALL_TYPES = exports.ALL_TYPES = QUERY_TYPES.concat(MUTATION_TYPES);\n\n/***/ }),\n\n/***/ 1880:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperties = __webpack_require__(1961);\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _freeze = __webpack_require__(1964);\n\nvar _freeze2 = _interopRequireDefault(_freeze);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (strings, raw) {\n  return (0, _freeze2.default)((0, _defineProperties2.default)(strings, {\n    raw: {\n      value: (0, _freeze2.default)(raw)\n    }\n  }));\n};\n\n/***/ }),\n\n/***/ 1881:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = valueFromASTUntyped;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__ = __webpack_require__(1796);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_kinds__ = __webpack_require__(1762);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].NULL:\n      return null;\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INT:\n      return parseInt(valueNode.value, 10);\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FLOAT:\n      return parseFloat(valueNode.value);\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].STRING:\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].ENUM:\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].BOOLEAN:\n      return valueNode.value;\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].OBJECT:\n      return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__[\"a\" /* default */])(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n    case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].VARIABLE:\n      var variableName = valueNode.name.value;\n      return variables && !Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(variables[variableName]) ? variables[variableName] : undefined;\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected value kind: ' + valueNode.kind);\n}\n\n/***/ }),\n\n/***/ 1882:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = assertValidName;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isValidNameError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__ = __webpack_require__(1772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__ = __webpack_require__(1766);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertValidName(name) {\n  var error = isValidNameError(name);\n  if (error) {\n    throw error;\n  }\n  return name;\n}\n\n/**\n * Returns an Error if a name is invalid.\n */\nfunction isValidNameError(name, node) {\n  !(typeof name === 'string') ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_invariant__[\"a\" /* default */])(0, 'Expected string') : void 0;\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__[\"a\" /* GraphQLError */]('Name \"' + name + '\" must not begin with \"__\", which is reserved by ' + 'GraphQL introspection.', node);\n  }\n  if (!NAME_RX.test(name)) {\n    return new __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__[\"a\" /* GraphQLError */]('Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"' + name + '\" does not.', node);\n  }\n}\n\n/***/ }),\n\n/***/ 1883:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = validate;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_visitor__ = __webpack_require__(1776);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__type_validate__ = __webpack_require__(1795);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities_TypeInfo__ = __webpack_require__(1785);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__specifiedRules__ = __webpack_require__(1884);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ValidationContext__ = __webpack_require__(1817);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(schema, ast, rules, typeInfo) {\n  !ast ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide document') : void 0;\n  // If the schema used for validation is invalid, throw an error.\n  Object(__WEBPACK_IMPORTED_MODULE_4__type_validate__[\"a\" /* assertValidSchema */])(schema);\n  return visitUsingRules(schema, typeInfo || new __WEBPACK_IMPORTED_MODULE_5__utilities_TypeInfo__[\"a\" /* TypeInfo */](schema), ast, rules || __WEBPACK_IMPORTED_MODULE_6__specifiedRules__[\"a\" /* specifiedRules */]);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new __WEBPACK_IMPORTED_MODULE_7__ValidationContext__[\"a\" /* default */](schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  Object(__WEBPACK_IMPORTED_MODULE_2__language_visitor__[\"c\" /* visit */])(documentAST, Object(__WEBPACK_IMPORTED_MODULE_2__language_visitor__[\"e\" /* visitWithTypeInfo */])(typeInfo, Object(__WEBPACK_IMPORTED_MODULE_2__language_visitor__[\"d\" /* visitInParallel */])(visitors)));\n  return context.getErrors();\n}\n\n/***/ }),\n\n/***/ 1884:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return specifiedRules; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rules_ExecutableDefinitions__ = __webpack_require__(1968);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rules_UniqueOperationNames__ = __webpack_require__(1885);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rules_LoneAnonymousOperation__ = __webpack_require__(1886);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__rules_SingleFieldSubscriptions__ = __webpack_require__(1887);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rules_KnownTypeNames__ = __webpack_require__(1888);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__rules_FragmentsOnCompositeTypes__ = __webpack_require__(1889);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__rules_VariablesAreInputTypes__ = __webpack_require__(1890);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__rules_ScalarLeafs__ = __webpack_require__(1891);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__rules_FieldsOnCorrectType__ = __webpack_require__(1892);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__rules_UniqueFragmentNames__ = __webpack_require__(1893);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__rules_KnownFragmentNames__ = __webpack_require__(1894);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__rules_NoUnusedFragments__ = __webpack_require__(1895);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__rules_PossibleFragmentSpreads__ = __webpack_require__(1896);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__rules_NoFragmentCycles__ = __webpack_require__(1897);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__rules_UniqueVariableNames__ = __webpack_require__(1898);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__rules_NoUndefinedVariables__ = __webpack_require__(1899);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__rules_NoUnusedVariables__ = __webpack_require__(1900);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__rules_KnownDirectives__ = __webpack_require__(1901);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__rules_UniqueDirectivesPerLocation__ = __webpack_require__(1902);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__rules_KnownArgumentNames__ = __webpack_require__(1903);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__rules_UniqueArgumentNames__ = __webpack_require__(1904);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__rules_ValuesOfCorrectType__ = __webpack_require__(1816);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__rules_ProvidedNonNullArguments__ = __webpack_require__(1905);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__rules_VariablesDefaultValueAllowed__ = __webpack_require__(1906);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__rules_VariablesInAllowedPosition__ = __webpack_require__(1907);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__rules_OverlappingFieldsCanBeMerged__ = __webpack_require__(1908);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__rules_UniqueInputFieldNames__ = __webpack_require__(1909);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n// Spec Section: \"Executable Definitions\"\n\n\n// Spec Section: \"Operation Name Uniqueness\"\n\n\n// Spec Section: \"Lone Anonymous Operation\"\n\n\n// Spec Section: \"Subscriptions with Single Root Field\"\n\n\n// Spec Section: \"Fragment Spread Type Existence\"\n\n\n// Spec Section: \"Fragments on Composite Types\"\n\n\n// Spec Section: \"Variables are Input Types\"\n\n\n// Spec Section: \"Leaf Field Selections\"\n\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\n\n// Spec Section: \"Fragment Name Uniqueness\"\n\n\n// Spec Section: \"Fragment spread target defined\"\n\n\n// Spec Section: \"Fragments must be used\"\n\n\n// Spec Section: \"Fragment spread is possible\"\n\n\n// Spec Section: \"Fragments must not form cycles\"\n\n\n// Spec Section: \"Variable Uniqueness\"\n\n\n// Spec Section: \"All Variable Used Defined\"\n\n\n// Spec Section: \"All Variables Used\"\n\n\n// Spec Section: \"Directives Are Defined\"\n\n\n// Spec Section: \"Directives Are Unique Per Location\"\n\n\n// Spec Section: \"Argument Names\"\n\n\n// Spec Section: \"Argument Uniqueness\"\n\n\n// Spec Section: \"Value Type Correctness\"\n\n\n// Spec Section: \"Argument Optionality\"\n\n\n// Spec Section: \"Variables Default Value Is Allowed\"\n\n\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n\n// Spec Section: \"Field Selection Merging\"\n\n\n// Spec Section: \"Input Object Field Uniqueness\"\n\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nvar specifiedRules = [__WEBPACK_IMPORTED_MODULE_0__rules_ExecutableDefinitions__[\"a\" /* ExecutableDefinitions */], __WEBPACK_IMPORTED_MODULE_1__rules_UniqueOperationNames__[\"a\" /* UniqueOperationNames */], __WEBPACK_IMPORTED_MODULE_2__rules_LoneAnonymousOperation__[\"a\" /* LoneAnonymousOperation */], __WEBPACK_IMPORTED_MODULE_3__rules_SingleFieldSubscriptions__[\"a\" /* SingleFieldSubscriptions */], __WEBPACK_IMPORTED_MODULE_4__rules_KnownTypeNames__[\"a\" /* KnownTypeNames */], __WEBPACK_IMPORTED_MODULE_5__rules_FragmentsOnCompositeTypes__[\"a\" /* FragmentsOnCompositeTypes */], __WEBPACK_IMPORTED_MODULE_6__rules_VariablesAreInputTypes__[\"a\" /* VariablesAreInputTypes */], __WEBPACK_IMPORTED_MODULE_7__rules_ScalarLeafs__[\"a\" /* ScalarLeafs */], __WEBPACK_IMPORTED_MODULE_8__rules_FieldsOnCorrectType__[\"a\" /* FieldsOnCorrectType */], __WEBPACK_IMPORTED_MODULE_9__rules_UniqueFragmentNames__[\"a\" /* UniqueFragmentNames */], __WEBPACK_IMPORTED_MODULE_10__rules_KnownFragmentNames__[\"a\" /* KnownFragmentNames */], __WEBPACK_IMPORTED_MODULE_11__rules_NoUnusedFragments__[\"a\" /* NoUnusedFragments */], __WEBPACK_IMPORTED_MODULE_12__rules_PossibleFragmentSpreads__[\"a\" /* PossibleFragmentSpreads */], __WEBPACK_IMPORTED_MODULE_13__rules_NoFragmentCycles__[\"a\" /* NoFragmentCycles */], __WEBPACK_IMPORTED_MODULE_14__rules_UniqueVariableNames__[\"a\" /* UniqueVariableNames */], __WEBPACK_IMPORTED_MODULE_15__rules_NoUndefinedVariables__[\"a\" /* NoUndefinedVariables */], __WEBPACK_IMPORTED_MODULE_16__rules_NoUnusedVariables__[\"a\" /* NoUnusedVariables */], __WEBPACK_IMPORTED_MODULE_17__rules_KnownDirectives__[\"a\" /* KnownDirectives */], __WEBPACK_IMPORTED_MODULE_18__rules_UniqueDirectivesPerLocation__[\"a\" /* UniqueDirectivesPerLocation */], __WEBPACK_IMPORTED_MODULE_19__rules_KnownArgumentNames__[\"a\" /* KnownArgumentNames */], __WEBPACK_IMPORTED_MODULE_20__rules_UniqueArgumentNames__[\"a\" /* UniqueArgumentNames */], __WEBPACK_IMPORTED_MODULE_21__rules_ValuesOfCorrectType__[\"a\" /* ValuesOfCorrectType */], __WEBPACK_IMPORTED_MODULE_22__rules_ProvidedNonNullArguments__[\"a\" /* ProvidedNonNullArguments */], __WEBPACK_IMPORTED_MODULE_23__rules_VariablesDefaultValueAllowed__[\"a\" /* VariablesDefaultValueAllowed */], __WEBPACK_IMPORTED_MODULE_24__rules_VariablesInAllowedPosition__[\"a\" /* VariablesInAllowedPosition */], __WEBPACK_IMPORTED_MODULE_25__rules_OverlappingFieldsCanBeMerged__[\"a\" /* OverlappingFieldsCanBeMerged */], __WEBPACK_IMPORTED_MODULE_26__rules_UniqueInputFieldNames__[\"a\" /* UniqueInputFieldNames */]];\n\n/***/ }),\n\n/***/ 1885:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateOperationNameMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueOperationNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nfunction UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1886:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export anonOperationNotAloneMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = LoneAnonymousOperation;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_kinds__ = __webpack_require__(1762);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\nfunction anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nfunction LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1887:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export singleFieldOnlyMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = SingleFieldSubscriptions;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nfunction SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1888:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unknownTypeMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KnownTypeNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__ = __webpack_require__(1786);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__ = __webpack_require__(1814);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\nfunction unknownTypeMessage(typeName, suggestedTypes) {\n  var message = 'Unknown type \"' + typeName + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__[\"a\" /* default */])(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nfunction KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownTypeMessage(typeName, Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__[\"a\" /* default */])(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1889:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export inlineFragmentOnNonCompositeErrorMessage */\n/* unused harmony export fragmentOnNonCompositeErrorMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = FragmentsOnCompositeTypes;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__ = __webpack_require__(1771);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\n\nfunction inlineFragmentOnNonCompositeErrorMessage(type) {\n  return 'Fragment cannot condition on non composite type \"' + String(type) + '\".';\n}\n\nfunction fragmentOnNonCompositeErrorMessage(fragName, type) {\n  return 'Fragment \"' + fragName + '\" cannot condition on non composite ' + ('type \"' + String(type) + '\".');\n}\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nfunction FragmentsOnCompositeTypes(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n      if (typeCondition) {\n        var type = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), typeCondition);\n        if (type && !Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"C\" /* isCompositeType */])(type)) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](inlineFragmentOnNonCompositeErrorMessage(Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(typeCondition)), [typeCondition]));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), node.typeCondition);\n      if (type && !Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"C\" /* isCompositeType */])(type)) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](fragmentOnNonCompositeErrorMessage(node.name.value, Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node.typeCondition)), [node.typeCondition]));\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1890:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export nonInputTypeOnVarMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = VariablesAreInputTypes;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__ = __webpack_require__(1771);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\nfunction nonInputTypeOnVarMessage(variableName, typeName) {\n  return 'Variable \"$' + variableName + '\" cannot be non-input type \"' + typeName + '\".';\n}\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nfunction VariablesAreInputTypes(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), node.type);\n\n      // If the variable type is not an input type, return an error.\n      if (type && !Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"F\" /* isInputType */])(type)) {\n        var variableName = node.variable.name.value;\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](nonInputTypeOnVarMessage(variableName, Object(__WEBPACK_IMPORTED_MODULE_1__language_printer__[\"a\" /* print */])(node.type)), [node.type]));\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1891:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export noSubselectionAllowedMessage */\n/* unused harmony export requiredSubselectionMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ScalarLeafs;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_definition__ = __webpack_require__(1761);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\nfunction noSubselectionAllowedMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" must not have a selection since ' + ('type \"' + String(type) + '\" has no subfields.');\n}\n\nfunction requiredSubselectionMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" of type \"' + String(type) + '\" must have a ' + ('selection of subfields. Did you mean \"' + fieldName + ' { ... }\"?');\n}\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n      if (type) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"H\" /* isLeafType */])(Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"z\" /* getNamedType */])(type))) {\n          if (selectionSet) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](noSubselectionAllowedMessage(node.name.value, type), [selectionSet]));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](requiredSubselectionMessage(node.name.value, type), [node]));\n        }\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1892:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export undefinedFieldMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = FieldsOnCorrectType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__ = __webpack_require__(1786);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__ = __webpack_require__(1814);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_definition__ = __webpack_require__(1761);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\nfunction undefinedFieldMessage(fieldName, type, suggestedTypeNames, suggestedFieldNames) {\n  var message = 'Cannot query field \"' + fieldName + '\" on type \"' + type + '\".';\n  if (suggestedTypeNames.length !== 0) {\n    var suggestions = Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__[\"a\" /* default */])(suggestedTypeNames);\n    message += ' Did you mean to use an inline fragment on ' + suggestions + '?';\n  } else if (suggestedFieldNames.length !== 0) {\n    message += ' Did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__[\"a\" /* default */])(suggestedFieldNames) + '?';\n  }\n  return message;\n}\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\nfunction FieldsOnCorrectType(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n      if (type) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value;\n          // First determine if there are any suggested types to condition on.\n          var suggestedTypeNames = getSuggestedTypeNames(schema, type, fieldName);\n          // If there are no suggested types, then perhaps this was a typo?\n          var suggestedFieldNames = suggestedTypeNames.length !== 0 ? [] : getSuggestedFieldNames(schema, type, fieldName);\n\n          // Report an error, including helpful suggestions.\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](undefinedFieldMessage(fieldName, type.name, suggestedTypeNames, suggestedFieldNames), [node]));\n        }\n      }\n    }\n  };\n}\n\n/**\n * Go through all of the implementations of type, as well as the interfaces\n * that they implement. If any of those types include the provided field,\n * suggest them, sorted by how often the type is referenced,  starting\n * with Interfaces.\n */\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"B\" /* isAbstractType */])(type)) {\n    var suggestedObjectTypes = [];\n    var interfaceUsageCount = Object.create(null);\n    schema.getPossibleTypes(type).forEach(function (possibleType) {\n      if (!possibleType.getFields()[fieldName]) {\n        return;\n      }\n      // This object type defines this field.\n      suggestedObjectTypes.push(possibleType.name);\n      possibleType.getInterfaces().forEach(function (possibleInterface) {\n        if (!possibleInterface.getFields()[fieldName]) {\n          return;\n        }\n        // This interface type defines this field.\n        interfaceUsageCount[possibleInterface.name] = (interfaceUsageCount[possibleInterface.name] || 0) + 1;\n      });\n    });\n\n    // Suggest interface types based on how common they are.\n    var suggestedInterfaceTypes = Object.keys(interfaceUsageCount).sort(function (a, b) {\n      return interfaceUsageCount[b] - interfaceUsageCount[a];\n    });\n\n    // Suggest both interface and object types.\n    return suggestedInterfaceTypes.concat(suggestedObjectTypes);\n  }\n\n  // Otherwise, must be an Object type, which does not have possible fields.\n  return [];\n}\n\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\nfunction getSuggestedFieldNames(schema, type, fieldName) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"M\" /* isObjectType */])(type) || Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__[\"a\" /* default */])(fieldName, possibleFieldNames);\n  }\n  // Otherwise, must be a Union type, which does not define fields.\n  return [];\n}\n\n/***/ }),\n\n/***/ 1893:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateFragmentNameMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueFragmentNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nfunction UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1894:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unknownFragmentMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KnownFragmentNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nfunction KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1895:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unusedFragMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NoUnusedFragments;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nfunction NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1896:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export typeIncompatibleSpreadMessage */\n/* unused harmony export typeIncompatibleAnonSpreadMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PossibleFragmentSpreads;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utilities_typeComparators__ = __webpack_require__(1798);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_typeFromAST__ = __webpack_require__(1771);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_definition__ = __webpack_require__(1761);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\nfunction typeIncompatibleSpreadMessage(fragName, parentType, fragType) {\n  return 'Fragment \"' + fragName + '\" cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\nfunction typeIncompatibleAnonSpreadMessage(parentType, fragType) {\n  return 'Fragment cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreads(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n      if (Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"C\" /* isCompositeType */])(fragType) && Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"C\" /* isCompositeType */])(parentType) && !Object(__WEBPACK_IMPORTED_MODULE_1__utilities_typeComparators__[\"a\" /* doTypesOverlap */])(context.getSchema(), fragType, parentType)) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](typeIncompatibleAnonSpreadMessage(parentType, fragType), [node]));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n      if (fragType && parentType && !Object(__WEBPACK_IMPORTED_MODULE_1__utilities_typeComparators__[\"a\" /* doTypesOverlap */])(context.getSchema(), fragType, parentType)) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](typeIncompatibleSpreadMessage(fragName, parentType, fragType), [node]));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n  if (frag) {\n    var type = Object(__WEBPACK_IMPORTED_MODULE_2__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), frag.typeCondition);\n    if (Object(__WEBPACK_IMPORTED_MODULE_3__type_definition__[\"C\" /* isCompositeType */])(type)) {\n      return type;\n    }\n  }\n}\n\n/***/ }),\n\n/***/ 1897:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export cycleErrorMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NoFragmentCycles;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction cycleErrorMessage(fragName, spreadNames) {\n  var via = spreadNames.length ? ' via ' + spreadNames.join(', ') : '';\n  return 'Cannot spread fragment \"' + fragName + '\" within itself' + via + '.';\n}\n\nfunction NoFragmentCycles(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null);\n\n  // Array of AST nodes used to produce meaningful errors\n  var spreadPath = [];\n\n  // Position in the spread path\n  var spreadPathIndexByName = Object.create(null);\n\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      if (!visitedFrags[node.name.value]) {\n        detectCycleRecursive(node);\n      }\n      return false;\n    }\n  };\n\n  // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n  function detectCycleRecursive(fragment) {\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var i = 0; i < spreadNodes.length; i++) {\n      var spreadNode = spreadNodes[i];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n\n      if (cycleIndex === undefined) {\n        spreadPath.push(spreadNode);\n        if (!visitedFrags[spreadName]) {\n          var spreadFragment = context.getFragment(spreadName);\n          if (spreadFragment) {\n            detectCycleRecursive(spreadFragment);\n          }\n        }\n        spreadPath.pop();\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](cycleErrorMessage(spreadName, cyclePath.map(function (s) {\n          return s.name.value;\n        })), cyclePath.concat(spreadNode)));\n      }\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n\n/***/ }),\n\n/***/ 1898:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateVariableMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueVariableNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\nfunction duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1899:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export undefinedVarMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NoUndefinedVariables;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction undefinedVarMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is not defined by operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is not defined.';\n}\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nfunction NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          var varName = node.name.value;\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1900:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unusedVariableMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NoUnusedVariables;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction unusedVariableMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is never used in operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is never used.';\n}\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nfunction NoUnusedVariables(context) {\n  var variableDefs = [];\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        var opName = operation.name ? operation.name.value : null;\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          variableNameUsed[node.name.value] = true;\n        });\n\n        variableDefs.forEach(function (variableDef) {\n          var variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unusedVariableMessage(variableName, opName), [variableDef]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1901:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unknownDirectiveMessage */\n/* unused harmony export misplacedDirectiveMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KnownDirectives;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_find__ = __webpack_require__(1780);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__ = __webpack_require__(1778);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\nfunction unknownDirectiveMessage(directiveName) {\n  return 'Unknown directive \"' + directiveName + '\".';\n}\n\nfunction misplacedDirectiveMessage(directiveName, location) {\n  return 'Directive \"' + directiveName + '\" may not be used on ' + location + '.';\n}\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nfunction KnownDirectives(context) {\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var directiveDef = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_find__[\"a\" /* default */])(context.getSchema().getDirectives(), function (def) {\n        return def.name === node.name.value;\n      });\n      if (!directiveDef) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownDirectiveMessage(node.name.value), [node]));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && directiveDef.locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](misplacedDirectiveMessage(node.name.value, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].QUERY;\n          case 'mutation':\n            return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].MUTATION;\n          case 'subscription':\n            return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].SUBSCRIPTION;\n        }\n        break;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FIELD:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FRAGMENT_SPREAD:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INLINE_FRAGMENT:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_DEFINITION;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].SCHEMA_DEFINITION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].SCHEMA;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].SCALAR;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].OBJECT;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FIELD_DEFINITION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD_DEFINITION;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].INTERFACE;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].UNION_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].UNION_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].UNION;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].ENUM;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].ENUM_VALUE_DEFINITION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].ENUM_VALUE;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_EXTENSION:\n        return __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].INPUT_OBJECT;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION ? __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].INPUT_FIELD_DEFINITION : __WEBPACK_IMPORTED_MODULE_3__language_directiveLocation__[\"a\" /* DirectiveLocation */].ARGUMENT_DEFINITION;\n    }\n  }\n}\n\n/***/ }),\n\n/***/ 1902:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateDirectiveMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueDirectivesPerLocation;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction duplicateDirectiveMessage(directiveName) {\n  return 'The directive \"' + directiveName + '\" can only be used once at ' + 'this location.';\n}\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all directives at a given location\n * are uniquely named.\n */\nfunction UniqueDirectivesPerLocation(context) {\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      // Flow can't refine that node.directives will only contain directives,\n      var directives = node.directives;\n      if (directives) {\n        var knownDirectives = Object.create(null);\n        directives.forEach(function (directive) {\n          var directiveName = directive.name.value;\n          if (knownDirectives[directiveName]) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateDirectiveMessage(directiveName), [knownDirectives[directiveName], directive]));\n          } else {\n            knownDirectives[directiveName] = directive;\n          }\n        });\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1903:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export unknownArgMessage */\n/* unused harmony export unknownDirectiveArgMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KnownArgumentNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__ = __webpack_require__(1786);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__ = __webpack_require__(1814);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_kinds__ = __webpack_require__(1762);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\nfunction unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on field \"' + fieldName + '\" of ' + ('type \"' + typeName + '\".');\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__[\"a\" /* default */])(suggestedArgs) + '?';\n  }\n  return message;\n}\n\nfunction unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on directive \"@' + directiveName + '\".';\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_quotedOrList__[\"a\" /* default */])(suggestedArgs) + '?';\n  }\n  return message;\n}\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nfunction KnownArgumentNames(context) {\n  return {\n    Argument: function Argument(node, key, parent, path, ancestors) {\n      var argDef = context.getArgument();\n      if (!argDef) {\n        var argumentOf = ancestors[ancestors.length - 1];\n        if (argumentOf.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].FIELD) {\n          var fieldDef = context.getFieldDef();\n          var parentType = context.getParentType();\n          if (fieldDef && parentType) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownArgMessage(node.name.value, fieldDef.name, parentType.name, Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__[\"a\" /* default */])(node.name.value, fieldDef.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        } else if (argumentOf.kind === __WEBPACK_IMPORTED_MODULE_3__language_kinds__[\"a\" /* Kind */].DIRECTIVE) {\n          var directive = context.getDirective();\n          if (directive) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](unknownDirectiveArgMessage(node.name.value, directive.name, Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_suggestionList__[\"a\" /* default */])(node.name.value, directive.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        }\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1904:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateArgMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueArgumentNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction duplicateArgMessage(argName) {\n  return 'There can be only one argument named \"' + argName + '\".';\n}\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nfunction UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n      if (knownArgNames[argName]) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1905:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export missingFieldArgMessage */\n/* unused harmony export missingDirectiveArgMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ProvidedNonNullArguments;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_definition__ = __webpack_require__(1761);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\nfunction missingFieldArgMessage(fieldName, argName, type) {\n  return 'Field \"' + fieldName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\nfunction missingDirectiveArgMessage(directiveName, argName, type) {\n  return 'Directive \"@' + directiveName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null) field arguments\n * have been provided.\n */\nfunction ProvidedNonNullArguments(context) {\n  return {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__[\"a\" /* default */])(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        fieldDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"K\" /* isNonNullType */])(argDef.type)) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](missingFieldArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    },\n\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var directiveDef = context.getDirective();\n        if (!directiveDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__[\"a\" /* default */])(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        directiveDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"K\" /* isNonNullType */])(argDef.type)) {\n            context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](missingDirectiveArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1906:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export defaultForRequiredVarMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = VariablesDefaultValueAllowed;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_definition__ = __webpack_require__(1761);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\nfunction defaultForRequiredVarMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n\n/**\n * Variable's default value is allowed\n *\n * A GraphQL document is only valid if all variable default values are allowed\n * due to a variable not being required.\n */\nfunction VariablesDefaultValueAllowed(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"K\" /* isNonNullType */])(type) && defaultValue) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));\n      }\n      return false; // Do not traverse further.\n    },\n\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1907:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export badVarPosMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = VariablesInAllowedPosition;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utilities_typeComparators__ = __webpack_require__(1798);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__ = __webpack_require__(1771);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\nfunction badVarPosMessage(varName, varType, expectedType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(varType) + '\" used in ' + ('position expecting type \"' + String(expectedType) + '\".');\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\nfunction VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node,\n              type = _ref.type;\n\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = Object(__WEBPACK_IMPORTED_MODULE_3__utilities_typeFromAST__[\"a\" /* typeFromAST */])(schema, varDef.type);\n            if (varType && !Object(__WEBPACK_IMPORTED_MODULE_2__utilities_typeComparators__[\"c\" /* isTypeSubTypeOf */])(schema, effectiveType(varType, varDef), type)) {\n              context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](badVarPosMessage(varName, varType, type), [varDef, node]));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"K\" /* isNonNullType */])(varType) ? varType : Object(__WEBPACK_IMPORTED_MODULE_1__type_definition__[\"e\" /* GraphQLNonNull */])(varType);\n}\n\n/***/ }),\n\n/***/ 1908:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export fieldsConflictMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = OverlappingFieldsCanBeMerged;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_find__ = __webpack_require__(1780);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__ = __webpack_require__(1771);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\n\n\n\n\n\n\nfunction fieldsConflictMessage(responseName, reason) {\n  return 'Fields \"' + responseName + '\" conflict because ' + reasonMessage(reason) + '. Use different aliases on the fields to fetch both if this was ' + 'intentional.';\n}\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subreason = _ref[1];\n      return 'subfields \"' + responseName + '\" conflict because ' + reasonMessage(subreason);\n    }).join(' and ');\n  }\n  return reason;\n}\n\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\nfunction OverlappingFieldsCanBeMerged(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet();\n\n  // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n  var cachedFieldsAndFragmentNames = new Map();\n\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n      conflicts.forEach(function (_ref2) {\n        var _ref2$ = _ref2[0],\n            responseName = _ref2$[0],\n            reason = _ref2$[1],\n            fields1 = _ref2[1],\n            fields2 = _ref2[2];\n        return context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](fieldsConflictMessage(responseName, reason), fields1.concat(fields2)));\n      });\n    }\n  };\n}\n// Field name and reason.\n\n// Reason is a string, or a nested list of conflicts.\n\n// Tuple defining a field node in a context.\n\n// Map of array of those.\n\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1];\n\n  // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    var comparedFragments = Object.create(null);\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, false, fieldMap, fragmentNames[i]);\n      // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n  return conflicts;\n}\n\n// Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  // Memoize so a fragment is not compared for conflicts more than once.\n  if (comparedFragments[fragmentName]) {\n    return;\n  }\n  comparedFragments[fragmentName] = true;\n\n  var fragment = context.getFragment(fragmentName);\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1];\n\n  // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  }\n\n  // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2);\n\n  // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n}\n\n// Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  }\n\n  // Memoize so two fragments are not compared for conflicts more than once.\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1];\n\n  // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  }\n\n  // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n}\n\n// Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1];\n\n  // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n  if (fragmentNames2.length !== 0) {\n    var comparedFragments = Object.create(null);\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  }\n\n  // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n  if (fragmentNames1.length !== 0) {\n    var _comparedFragments = Object.create(null);\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, _comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  }\n\n  // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n  for (var _i = 0; _i < fragmentNames1.length; _i++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i], fragmentNames2[_j]);\n    }\n  }\n  return conflicts;\n}\n\n// Collect all Conflicts \"within\" one collection of fields.\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  Object.keys(fieldMap).forEach(function (responseName) {\n    var fields = fieldMap[responseName];\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  Object.keys(fieldMap1).forEach(function (responseName) {\n    var fields2 = fieldMap2[responseName];\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2];\n\n  // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"M\" /* isObjectType */])(parentType1) && Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"M\" /* isObjectType */])(parentType2);\n\n  // The return type for each field.\n  var type1 = def1 && def1.type;\n  var type2 = def2 && def2.type;\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n    if (name1 !== name2) {\n      return [[responseName, name1 + ' and ' + name2 + ' are different fields'], [node1], [node2]];\n    }\n\n    // Two field calls must have the same arguments.\n    if (!sameArguments(node1.arguments || [], node2.arguments || [])) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  }\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, 'they return conflicting types ' + String(type1) + ' and ' + String(type2)], [node1], [node2]];\n  }\n\n  // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"z\" /* getNamedType */])(type1), selectionSet1, Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"z\" /* getNamedType */])(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n  return arguments1.every(function (argument1) {\n    var argument2 = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_find__[\"a\" /* default */])(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n    if (!argument2) {\n      return false;\n    }\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return !value1 && !value2 || Object(__WEBPACK_IMPORTED_MODULE_3__language_printer__[\"a\" /* print */])(value1) === Object(__WEBPACK_IMPORTED_MODULE_3__language_printer__[\"a\" /* print */])(value2);\n}\n\n// Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\nfunction doTypesConflict(type1, type2) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"I\" /* isListType */])(type1)) {\n    return Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"I\" /* isListType */])(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"I\" /* isListType */])(type2)) {\n    return true;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(type1)) {\n    return Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(type2)) {\n    return true;\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"H\" /* isLeafType */])(type1) || Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"H\" /* isLeafType */])(type2)) {\n    return type1 !== type2;\n  }\n  return false;\n}\n\n// Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n  return cached;\n}\n\n// Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = Object(__WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FIELD:\n        var fieldName = selection.name.value;\n        var fieldDef = void 0;\n        if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"M\" /* isObjectType */])(parentType) || Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"G\" /* isInterfaceType */])(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n        var responseName = selection.alias ? selection.alias.value : fieldName;\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n      case __WEBPACK_IMPORTED_MODULE_2__language_kinds__[\"a\" /* Kind */].INLINE_FRAGMENT:\n        var typeCondition = selection.typeCondition;\n        var inlineFragmentType = typeCondition ? Object(__WEBPACK_IMPORTED_MODULE_5__utilities_typeFromAST__[\"a\" /* typeFromAST */])(context.getSchema(), typeCondition) : parentType;\n        _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n        break;\n    }\n  }\n}\n\n// Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref3) {\n      var reason = _ref3[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref4) {\n      var fields1 = _ref4[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref5) {\n      var fields2 = _ref5[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\nvar PairSet = function () {\n  function PairSet() {\n    _classCallCheck(this, PairSet);\n\n    this._data = Object.create(null);\n  }\n\n  PairSet.prototype.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n    if (result === undefined) {\n      return false;\n    }\n    // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n    return true;\n  };\n\n  PairSet.prototype.add = function add(a, b, areMutuallyExclusive) {\n    _pairSetAdd(this._data, a, b, areMutuallyExclusive);\n    _pairSetAdd(this._data, b, a, areMutuallyExclusive);\n  };\n\n  return PairSet;\n}();\n\nfunction _pairSetAdd(data, a, b, areMutuallyExclusive) {\n  var map = data[a];\n  if (!map) {\n    map = Object.create(null);\n    data[a] = map;\n  }\n  map[b] = areMutuallyExclusive;\n}\n\n/***/ }),\n\n/***/ 1909:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export duplicateInputFieldMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = UniqueInputFieldNames;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nfunction duplicateInputFieldMessage(fieldName) {\n  return 'There can be only one input field named \"' + fieldName + '\".';\n}\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nfunction UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1910:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isPromise;\n\n\n// eslint-disable-next-line no-redeclare\nfunction isPromise(value) {\n  return Boolean(value && typeof value.then === 'function');\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\n\n/***/ }),\n\n/***/ 1911:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getIntrospectionQuery;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return introspectionQuery; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction getIntrospectionQuery(options) {\n  var descriptions = !(options && options.descriptions === false);\n  return '\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          ' + (descriptions ? 'description' : '') + '\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      fields(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  ';\n}\n\nvar introspectionQuery = getIntrospectionQuery();\n\n/***/ }),\n\n/***/ 1912:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = buildASTSchema;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ASTDefinitionBuilder; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = getDescription;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = buildSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_keyValMap__ = __webpack_require__(1796);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__valueFromAST__ = __webpack_require__(1800);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__language_blockStringValue__ = __webpack_require__(1878);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_lexer__ = __webpack_require__(1811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__language_parser__ = __webpack_require__(1777);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__execution_values__ = __webpack_require__(1818);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__type_introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__type_scalars__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__type_schema__ = __webpack_require__(1765);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction buildWrappedType(innerType, inputTypeNode) {\n  if (inputTypeNode.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].LIST_TYPE) {\n    return Object(__WEBPACK_IMPORTED_MODULE_8__type_definition__[\"d\" /* GraphQLList */])(buildWrappedType(innerType, inputTypeNode.type));\n  }\n  if (inputTypeNode.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].NON_NULL_TYPE) {\n    var wrappedType = buildWrappedType(innerType, inputTypeNode.type);\n    return Object(__WEBPACK_IMPORTED_MODULE_8__type_definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_8__type_definition__[\"s\" /* assertNullableType */])(wrappedType));\n  }\n  return innerType;\n}\n\nfunction getNamedTypeNode(typeNode) {\n  var namedType = typeNode;\n  while (namedType.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].LIST_TYPE || namedType.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].NON_NULL_TYPE) {\n    namedType = namedType.type;\n  }\n  return namedType;\n}\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction buildASTSchema(ast, options) {\n  if (!ast || ast.kind !== __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].DOCUMENT) {\n    throw new Error('Must provide a document ast.');\n  }\n\n  var schemaDef = void 0;\n\n  var typeDefs = [];\n  var nodeMap = Object.create(null);\n  var directiveDefs = [];\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var d = ast.definitions[i];\n    switch (d.kind) {\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].SCHEMA_DEFINITION:\n        if (schemaDef) {\n          throw new Error('Must provide only one schema definition.');\n        }\n        schemaDef = d;\n        break;\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].UNION_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION:\n        var typeName = d.name.value;\n        if (nodeMap[typeName]) {\n          throw new Error('Type \"' + typeName + '\" was defined more than once.');\n        }\n        typeDefs.push(d);\n        nodeMap[typeName] = d;\n        break;\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].DIRECTIVE_DEFINITION:\n        directiveDefs.push(d);\n        break;\n    }\n  }\n\n  var operationTypes = schemaDef ? getOperationTypes(schemaDef) : {\n    query: nodeMap.Query,\n    mutation: nodeMap.Mutation,\n    subscription: nodeMap.Subscription\n  };\n\n  var definitionBuilder = new ASTDefinitionBuilder(nodeMap, options, function (typeRef) {\n    throw new Error('Type \"' + typeRef.name.value + '\" not found in document.');\n  });\n\n  var types = definitionBuilder.buildTypes(typeDefs);\n  var directives = directiveDefs.map(function (def) {\n    return definitionBuilder.buildDirective(def);\n  });\n\n  // If specified directives were not explicitly declared, add them.\n  if (!directives.some(function (directive) {\n    return directive.name === 'skip';\n  })) {\n    directives.push(__WEBPACK_IMPORTED_MODULE_9__type_directives__[\"e\" /* GraphQLSkipDirective */]);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'include';\n  })) {\n    directives.push(__WEBPACK_IMPORTED_MODULE_9__type_directives__[\"d\" /* GraphQLIncludeDirective */]);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'deprecated';\n  })) {\n    directives.push(__WEBPACK_IMPORTED_MODULE_9__type_directives__[\"b\" /* GraphQLDeprecatedDirective */]);\n  }\n\n  // Note: While this could make early assertions to get the correctly\n  // typed values below, that would throw immediately while type system\n  // validation with validateSchema() will produce more actionable results.\n  return new __WEBPACK_IMPORTED_MODULE_12__type_schema__[\"a\" /* GraphQLSchema */]({\n    query: operationTypes.query ? definitionBuilder.buildType(operationTypes.query) : null,\n    mutation: operationTypes.mutation ? definitionBuilder.buildType(operationTypes.mutation) : null,\n    subscription: operationTypes.subscription ? definitionBuilder.buildType(operationTypes.subscription) : null,\n    types: types,\n    directives: directives,\n    astNode: schemaDef,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  });\n\n  function getOperationTypes(schema) {\n    var opTypes = {};\n    schema.operationTypes.forEach(function (operationType) {\n      var typeName = operationType.type.name.value;\n      var operation = operationType.operation;\n      if (opTypes[operation]) {\n        throw new Error('Must provide only one ' + operation + ' type in schema.');\n      }\n      if (!nodeMap[typeName]) {\n        throw new Error('Specified ' + operation + ' type \"' + typeName + '\" not found in document.');\n      }\n      opTypes[operation] = operationType.type;\n    });\n    return opTypes;\n  }\n}\n\nvar ASTDefinitionBuilder = function () {\n  function ASTDefinitionBuilder(typeDefinitionsMap, options, resolveType) {\n    _classCallCheck(this, ASTDefinitionBuilder);\n\n    this._typeDefinitionsMap = typeDefinitionsMap;\n    this._options = options;\n    this._resolveType = resolveType;\n    // Initialize to the GraphQL built in scalars and introspection types.\n    this._cache = Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_keyMap__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_11__type_scalars__[\"g\" /* specifiedScalarTypes */].concat(__WEBPACK_IMPORTED_MODULE_10__type_introspection__[\"m\" /* introspectionTypes */]), function (type) {\n      return type.name;\n    });\n  }\n\n  ASTDefinitionBuilder.prototype.buildTypes = function buildTypes(nodes) {\n    var _this = this;\n\n    return nodes.map(function (node) {\n      return _this.buildType(node);\n    });\n  };\n\n  ASTDefinitionBuilder.prototype.buildType = function buildType(node) {\n    var typeName = node.name.value;\n    if (!this._cache[typeName]) {\n      if (node.kind === __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].NAMED_TYPE) {\n        var defNode = this._typeDefinitionsMap[typeName];\n        this._cache[typeName] = defNode ? this._makeSchemaDef(defNode) : this._resolveType(node);\n      } else {\n        this._cache[typeName] = this._makeSchemaDef(node);\n      }\n    }\n    return this._cache[typeName];\n  };\n\n  ASTDefinitionBuilder.prototype._buildWrappedType = function _buildWrappedType(typeNode) {\n    var typeDef = this.buildType(getNamedTypeNode(typeNode));\n    return buildWrappedType(typeDef, typeNode);\n  };\n\n  ASTDefinitionBuilder.prototype.buildDirective = function buildDirective(directiveNode) {\n    return new __WEBPACK_IMPORTED_MODULE_9__type_directives__[\"c\" /* GraphQLDirective */]({\n      name: directiveNode.name.value,\n      description: getDescription(directiveNode, this._options),\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && this._makeInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  };\n\n  ASTDefinitionBuilder.prototype.buildField = function buildField(field) {\n    return {\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      type: this._buildWrappedType(field.type),\n      description: getDescription(field, this._options),\n      args: field.arguments && this._makeInputValues(field.arguments),\n      deprecationReason: getDeprecationReason(field),\n      astNode: field\n    };\n  };\n\n  ASTDefinitionBuilder.prototype._makeSchemaDef = function _makeSchemaDef(def) {\n    switch (def.kind) {\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_DEFINITION:\n        return this._makeTypeDef(def);\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_DEFINITION:\n        return this._makeInterfaceDef(def);\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_DEFINITION:\n        return this._makeEnumDef(def);\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].UNION_TYPE_DEFINITION:\n        return this._makeUnionDef(def);\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_DEFINITION:\n        return this._makeScalarDef(def);\n      case __WEBPACK_IMPORTED_MODULE_7__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION:\n        return this._makeInputObjectDef(def);\n      default:\n        throw new Error('Type kind \"' + def.kind + '\" not supported.');\n    }\n  };\n\n  ASTDefinitionBuilder.prototype._makeTypeDef = function _makeTypeDef(def) {\n    var _this2 = this;\n\n    var typeName = def.name.value;\n    var interfaces = def.interfaces;\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"f\" /* GraphQLObjectType */]({\n      name: typeName,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return _this2._makeFieldDefMap(def);\n      },\n      // Note: While this could make early assertions to get the correctly\n      // typed values, that would throw immediately while type system\n      // validation with validateSchema() will produce more actionable results.\n      interfaces: interfaces ? function () {\n        return _this2.buildTypes(interfaces);\n      } : [],\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeFieldDefMap = function _makeFieldDefMap(def) {\n    var _this3 = this;\n\n    return def.fields ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyValMap__[\"a\" /* default */])(def.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return _this3.buildField(field);\n    }) : {};\n  };\n\n  ASTDefinitionBuilder.prototype._makeInputValues = function _makeInputValues(values) {\n    var _this4 = this;\n\n    return Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyValMap__[\"a\" /* default */])(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      var type = _this4._buildWrappedType(value.type);\n      return {\n        type: type,\n        description: getDescription(value, _this4._options),\n        defaultValue: Object(__WEBPACK_IMPORTED_MODULE_2__valueFromAST__[\"a\" /* valueFromAST */])(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeInterfaceDef = function _makeInterfaceDef(def) {\n    var _this5 = this;\n\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"c\" /* GraphQLInterfaceType */]({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return _this5._makeFieldDefMap(def);\n      },\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeEnumDef = function _makeEnumDef(def) {\n    var _this6 = this;\n\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"a\" /* GraphQLEnumType */]({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      values: def.values ? Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyValMap__[\"a\" /* default */])(def.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: getDescription(enumValue, _this6._options),\n          deprecationReason: getDeprecationReason(enumValue),\n          astNode: enumValue\n        };\n      }) : {},\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeUnionDef = function _makeUnionDef(def) {\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"h\" /* GraphQLUnionType */]({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      // Note: While this could make assertions to get the correctly typed\n      // values below, that would throw immediately while type system\n      // validation with validateSchema() will produce more actionable results.\n      types: def.types ? this.buildTypes(def.types) : [],\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeScalarDef = function _makeScalarDef(def) {\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"g\" /* GraphQLScalarType */]({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      astNode: def,\n      serialize: function serialize(value) {\n        return value;\n      }\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeInputObjectDef = function _makeInputObjectDef(def) {\n    var _this7 = this;\n\n    return new __WEBPACK_IMPORTED_MODULE_8__type_definition__[\"b\" /* GraphQLInputObjectType */]({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return def.fields ? _this7._makeInputValues(def.fields) : {};\n      },\n      astNode: def\n    });\n  };\n\n  return ASTDefinitionBuilder;\n}();\n\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\nfunction getDeprecationReason(node) {\n  var deprecated = Object(__WEBPACK_IMPORTED_MODULE_6__execution_values__[\"b\" /* getDirectiveValues */])(__WEBPACK_IMPORTED_MODULE_9__type_directives__[\"b\" /* GraphQLDeprecatedDirective */], node);\n  return deprecated && deprecated.reason;\n}\n\n/**\n * Given an ast node, returns its string description.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction getDescription(node, options) {\n  if (node.description) {\n    return node.description.value;\n  }\n  if (options && options.commentDescriptions) {\n    var rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n      return Object(__WEBPACK_IMPORTED_MODULE_3__language_blockStringValue__[\"a\" /* default */])('\\n' + rawValue);\n    }\n  }\n}\n\nfunction getLeadingCommentBlock(node) {\n  var loc = node.loc;\n  if (!loc) {\n    return;\n  }\n  var comments = [];\n  var token = loc.startToken.prev;\n  while (token && token.kind === __WEBPACK_IMPORTED_MODULE_4__language_lexer__[\"a\" /* TokenKind */].COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    comments.push(value);\n    token = token.prev;\n  }\n  return comments.reverse().join('\\n');\n}\n\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\nfunction buildSchema(source, options) {\n  return buildASTSchema(Object(__WEBPACK_IMPORTED_MODULE_5__language_parser__[\"parse\"])(source, options), options);\n}\n\n/***/ }),\n\n/***/ 1913:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = __webpack_require__(1779);\n\nvar isList = function isList(type) {\n    if (type.kind === _graphql.TypeKind.NON_NULL) {\n        return isList(type.ofType);\n    }\n\n    return type.kind === _graphql.TypeKind.LIST;\n};\n\nexports.default = isList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1915:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toConsumableArray2 = __webpack_require__(89);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = __webpack_require__(5);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = __webpack_require__(6);\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _merge = __webpack_require__(1858);\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _raDataGraphql = __webpack_require__(1859);\n\nvar _raDataGraphql2 = _interopRequireDefault(_raDataGraphql);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _buildQuery = __webpack_require__(1992);\n\nvar _buildQuery2 = _interopRequireDefault(_buildQuery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n    buildQuery: _buildQuery2.default\n};\n\nexports.default = function (options) {\n    return (0, _raDataGraphql2.default)((0, _merge2.default)({}, defaultOptions, options)).then(function (defaultDataProvider) {\n        return function (fetchType, resource, params) {\n            // This provider does not support multiple deletions so instead we send multiple DELETE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === _reactAdmin.DELETE_MANY) {\n                var ids = params.ids,\n                    otherParams = (0, _objectWithoutProperties3.default)(params, ['ids']);\n\n                return Promise.all(params.ids.map(function (id) {\n                    return defaultDataProvider(_reactAdmin.DELETE, resource, (0, _extends3.default)({\n                        id: id\n                    }, otherParams));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _ref) {\n                        var data = _ref.data;\n                        return [].concat((0, _toConsumableArray3.default)(acc), [data.id]);\n                    }, []);\n\n                    return { data: data };\n                });\n            }\n            // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === _reactAdmin.UPDATE_MANY) {\n                var _ids = params.ids,\n                    _otherParams = (0, _objectWithoutProperties3.default)(params, ['ids']);\n\n                return Promise.all(params.ids.map(function (id) {\n                    return defaultDataProvider(_reactAdmin.UPDATE, resource, (0, _extends3.default)({\n                        id: id\n                    }, _otherParams));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _ref2) {\n                        var data = _ref2.data;\n                        return [].concat((0, _toConsumableArray3.default)(acc), [data.id]);\n                    }, []);\n\n                    return { data: data };\n                });\n            }\n\n            return defaultDataProvider(fetchType, resource, params);\n        };\n    });\n};\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1916:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (true) {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word\n   * @param  {number}  count\n   * @param  {boolean} inclusive\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(analy|ba|diagno|parenthe|progno|synop|the|empha|cri)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'alcohol',\n    'ammo',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'manga',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transporation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n\n\n/***/ }),\n\n/***/ 1917:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(5);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = __webpack_require__(6);\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _apolloClient = __webpack_require__(1918);\n\nvar _apolloClientPreset = __webpack_require__(1939);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (options) {\n    if (!options) {\n        return new _apolloClient.ApolloClient();\n    }\n\n    var cache = options.cache,\n        link = options.link,\n        uri = options.uri,\n        otherOptions = (0, _objectWithoutProperties3.default)(options, ['cache', 'link', 'uri']);\n\n    var finalLink = link;\n    var finalCache = cache;\n\n    if (!link && uri) {\n        finalLink = new _apolloClientPreset.HttpLink({ uri: uri });\n    }\n\n    if (!cache) {\n        finalCache = new _apolloClientPreset.InMemoryCache().restore({});\n    }\n\n    return new _apolloClient.ApolloClient((0, _extends3.default)({\n        link: finalLink,\n        cache: finalCache\n    }, otherOptions));\n};\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1918:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"printAST\", function() { return __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__ = __webpack_require__(1801);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ObservableQuery\", function() { return __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1781);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"NetworkStatus\", function() { return __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_types__ = __webpack_require__(1793);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FetchType\", function() { return __WEBPACK_IMPORTED_MODULE_3__core_types__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__errors_ApolloError__ = __webpack_require__(1805);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloError\", function() { return __WEBPACK_IMPORTED_MODULE_4__errors_ApolloError__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ApolloClient__ = __webpack_require__(1931);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ApolloClient\", function() { return __WEBPACK_IMPORTED_MODULE_5__ApolloClient__[\"a\"]; });\n\n\n\n\n\n\n// export the client as both default and named\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_5__ApolloClient__[\"a\" /* default */]);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1919:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getDirectiveInfoFromField;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = shouldInclude;\n/* unused harmony export flattenSelections */\n/* unused harmony export getDirectiveNames */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = hasDirectives;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__storeUtils__ = __webpack_require__(1802);\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = Object(__WEBPACK_IMPORTED_MODULE_0__storeUtils__[\"a\" /* argumentsObjectFromField */])(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    if (!selection.directives) {\n        return true;\n    }\n    var res = true;\n    selection.directives.forEach(function (directive) {\n        // TODO should move this validation to GraphQL validation once that's implemented.\n        if (directive.name.value !== 'skip' && directive.name.value !== 'include') {\n            // Just don't worry about directives we don't understand\n            return;\n        }\n        //evaluate the \"if\" argument and skip (i.e. return undefined) if it evaluates to true.\n        var directiveArguments = directive.arguments || [];\n        var directiveName = directive.name.value;\n        if (directiveArguments.length !== 1) {\n            throw new Error(\"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        }\n        var ifArgument = directiveArguments[0];\n        if (!ifArgument.name || ifArgument.name.value !== 'if') {\n            throw new Error(\"Invalid argument for the @\" + directiveName + \" directive.\");\n        }\n        var ifValue = directiveArguments[0].value;\n        var evaledValue = false;\n        if (!ifValue || ifValue.kind !== 'BooleanValue') {\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            if (ifValue.kind !== 'Variable') {\n                throw new Error(\"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n            }\n            else {\n                evaledValue = variables[ifValue.name.value];\n                if (evaledValue === undefined) {\n                    throw new Error(\"Invalid variable referenced in @\" + directiveName + \" directive.\");\n                }\n            }\n        }\n        else {\n            evaledValue = ifValue.value;\n        }\n        if (directiveName === 'skip') {\n            evaledValue = !evaledValue;\n        }\n        if (!evaledValue) {\n            res = false;\n        }\n    });\n    return res;\n}\nfunction flattenSelections(selection) {\n    if (!selection.selectionSet ||\n        !(selection.selectionSet.selections.length > 0))\n        return [selection];\n    return [selection].concat(selection.selectionSet.selections\n        .map(function (selectionNode) {\n        return [selectionNode].concat(flattenSelections(selectionNode));\n    })\n        .reduce(function (selections, selected) { return selections.concat(selected); }, []));\n}\nfunction getDirectiveNames(doc) {\n    // operation => [names of directives];\n    var directiveNames = doc.definitions\n        .filter(function (definition) {\n        return definition.selectionSet && definition.selectionSet.selections;\n    })\n        // operation => [[Selection]]\n        .map(function (x) { return flattenSelections(x); })\n        // [[Selection]] => [Selection]\n        .reduce(function (selections, selected) { return selections.concat(selected); }, [])\n        // [Selection] => [Selection with Directives]\n        .filter(function (selection) {\n        return selection.directives && selection.directives.length > 0;\n    })\n        // [Selection with Directives] => [[Directives]]\n        .map(function (selection) { return selection.directives; })\n        // [[Directives]] => [Directives]\n        .reduce(function (directives, directive) { return directives.concat(directive); }, [])\n        // [Directives] => [Name]\n        .map(function (directive) { return directive.name.value; });\n    return directiveNames;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\n//# sourceMappingURL=directives.js.map\n\n/***/ }),\n\n/***/ 1920:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n\n\n/***/ }),\n\n/***/ 1921:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getFragmentQueryDocument;\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more then one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    // Build an array of all our fragment definitions that will be used for\n    // validations. We also do some validations on the other definitions in the\n    // document while building this list.\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        // Throw an error if we encounter an operation definition because we will\n        // define our own operation definition later on.\n        if (definition.kind === 'OperationDefinition') {\n            throw new Error(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        // Add our definition to the fragments array if it is a fragment\n        // definition.\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    // If the user did not give us a fragment name then let us try to get a\n    // name from a single fragment in the definition.\n    if (typeof actualFragmentName === 'undefined') {\n        if (fragments.length !== 1) {\n            throw new Error(\"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        }\n        actualFragmentName = fragments[0].name.value;\n    }\n    // Generate a query document with an operation that simply spreads the\n    // fragment inside of it.\n    var query = __assign({}, document, { definitions: [\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ].concat(document.definitions) });\n    return query;\n}\n//# sourceMappingURL=fragments.js.map\n\n/***/ }),\n\n/***/ 1922:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export removeDirectivesFromDocument */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addTypenameToDocument;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = removeConnectionDirectiveFromDocument;\n/* unused harmony export getDirectivesFromDocument */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_cloneDeep__ = __webpack_require__(1862);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getFromAST__ = __webpack_require__(1860);\n\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isNotEmpty(op, fragments) {\n    // keep selections that are still valid\n    return (op.selectionSet.selections.filter(function (selectionSet) {\n        // anything that doesn't match the compound filter is okay\n        return !(selectionSet &&\n            // look into fragments to verify they should stay\n            selectionSet.kind === 'FragmentSpread' &&\n            // see if the fragment in the map is valid (recursively)\n            !isNotEmpty(fragments[selectionSet.name.value], fragments));\n    }).length > 0);\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            if (dir.name && dir.name === directive.name.value)\n                return true;\n            if (dir.test && dir.test(directive))\n                return true;\n            return false;\n        });\n    };\n}\nfunction addTypenameToSelectionSet(selectionSet, isRoot) {\n    if (isRoot === void 0) { isRoot = false; }\n    if (selectionSet.selections) {\n        if (!isRoot) {\n            var alreadyHasThisField = selectionSet.selections.some(function (selection) {\n                return (selection.kind === 'Field' &&\n                    selection.name.value === '__typename');\n            });\n            if (!alreadyHasThisField) {\n                selectionSet.selections.push(TYPENAME_FIELD);\n            }\n        }\n        selectionSet.selections.forEach(function (selection) {\n            // Must not add __typename if we're inside an introspection query\n            if (selection.kind === 'Field') {\n                if (selection.name.value.lastIndexOf('__', 0) !== 0 &&\n                    selection.selectionSet) {\n                    addTypenameToSelectionSet(selection.selectionSet);\n                }\n            }\n            else if (selection.kind === 'InlineFragment') {\n                if (selection.selectionSet) {\n                    addTypenameToSelectionSet(selection.selectionSet);\n                }\n            }\n        });\n    }\n}\nfunction removeDirectivesFromSelectionSet(directives, selectionSet) {\n    if (!selectionSet.selections)\n        return selectionSet;\n    // if any of the directives are set to remove this selectionSet, remove it\n    var agressiveRemove = directives.some(function (dir) { return dir.remove; });\n    selectionSet.selections = selectionSet.selections\n        .map(function (selection) {\n        if (selection.kind !== 'Field' ||\n            !selection ||\n            !selection.directives)\n            return selection;\n        var directiveMatcher = getDirectiveMatcher(directives);\n        var remove;\n        selection.directives = selection.directives.filter(function (directive) {\n            var shouldKeep = !directiveMatcher(directive);\n            if (!remove && !shouldKeep && agressiveRemove)\n                remove = true;\n            return shouldKeep;\n        });\n        return remove ? null : selection;\n    })\n        .filter(function (x) { return !!x; });\n    selectionSet.selections.forEach(function (selection) {\n        if ((selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n            selection.selectionSet) {\n            removeDirectivesFromSelectionSet(directives, selection.selectionSet);\n        }\n    });\n    return selectionSet;\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var docClone = Object(__WEBPACK_IMPORTED_MODULE_0__util_cloneDeep__[\"a\" /* cloneDeep */])(doc);\n    docClone.definitions.forEach(function (definition) {\n        removeDirectivesFromSelectionSet(directives, definition.selectionSet);\n    });\n    var operation = Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"h\" /* getOperationDefinitionOrDie */])(docClone);\n    var fragments = Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"b\" /* createFragmentMap */])(Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"d\" /* getFragmentDefinitions */])(docClone));\n    return isNotEmpty(operation, fragments) ? docClone : null;\n}\nfunction addTypenameToDocument(doc) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"a\" /* checkDocument */])(doc);\n    var docClone = Object(__WEBPACK_IMPORTED_MODULE_0__util_cloneDeep__[\"a\" /* cloneDeep */])(doc);\n    docClone.definitions.forEach(function (definition) {\n        var isRoot = definition.kind === 'OperationDefinition';\n        addTypenameToSelectionSet(definition.selectionSet, isRoot);\n    });\n    return docClone;\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                console.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"a\" /* checkDocument */])(doc);\n    return removeDirectivesFromDocument([connectionRemoveConfig], doc);\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!(selectionSet && selectionSet.selections)) {\n        return false;\n    }\n    var matchedSelections = selectionSet.selections.filter(function (selection) {\n        return hasDirectivesInSelection(directives, selection, nestedCheck);\n    });\n    return matchedSelections.length > 0;\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (selection.kind !== 'Field' || !selection) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    var directiveMatcher = getDirectiveMatcher(directives);\n    var matchedDirectives = selection.directives.filter(directiveMatcher);\n    return (matchedDirectives.length > 0 ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromSelectionSet(directives, selectionSet) {\n    selectionSet.selections = selectionSet.selections\n        .filter(function (selection) {\n        return hasDirectivesInSelection(directives, selection, true);\n    })\n        .map(function (selection) {\n        if (hasDirectivesInSelection(directives, selection, false)) {\n            return selection;\n        }\n        if ((selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n            selection.selectionSet) {\n            selection.selectionSet = getDirectivesFromSelectionSet(directives, selection.selectionSet);\n        }\n        return selection;\n    });\n    return selectionSet;\n}\nfunction getDirectivesFromDocument(directives, doc, includeAllFragments) {\n    if (includeAllFragments === void 0) { includeAllFragments = false; }\n    Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"a\" /* checkDocument */])(doc);\n    var docClone = Object(__WEBPACK_IMPORTED_MODULE_0__util_cloneDeep__[\"a\" /* cloneDeep */])(doc);\n    docClone.definitions = docClone.definitions.map(function (definition) {\n        if ((definition.kind === 'OperationDefinition' ||\n            (definition.kind === 'FragmentDefinition' && !includeAllFragments)) &&\n            definition.selectionSet) {\n            definition.selectionSet = getDirectivesFromSelectionSet(directives, definition.selectionSet);\n        }\n        return definition;\n    });\n    var operation = Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"h\" /* getOperationDefinitionOrDie */])(docClone);\n    var fragments = Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"b\" /* createFragmentMap */])(Object(__WEBPACK_IMPORTED_MODULE_1__getFromAST__[\"d\" /* getFragmentDefinitions */])(docClone));\n    return isNotEmpty(operation, fragments) ? docClone : null;\n}\n//# sourceMappingURL=transform.js.map\n\n/***/ }),\n\n/***/ 1923:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = tryFunctionOrLogError;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = graphQLResultHasError;\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n//# sourceMappingURL=errorHandling.js.map\n\n/***/ }),\n\n/***/ 1924:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isEqual;\n/**\n * Performs a deep equality check on two JavaScript values.\n */\nfunction isEqual(a, b) {\n    // If the two values are strictly equal, we are good.\n    if (a === b) {\n        return true;\n    }\n    // Dates are equivalent if their time values are equal.\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    // If a and b are both objects, we will compare their properties. This will compare arrays as\n    // well.\n    if (a != null &&\n        typeof a === 'object' &&\n        b != null &&\n        typeof b === 'object') {\n        // Compare all of the keys in `a`. If one of the keys has a different value, or that key does\n        // not exist in `b` return false immediately.\n        for (var key in a) {\n            if (Object.prototype.hasOwnProperty.call(a, key)) {\n                if (!Object.prototype.hasOwnProperty.call(b, key)) {\n                    return false;\n                }\n                if (!isEqual(a[key], b[key])) {\n                    return false;\n                }\n            }\n        }\n        // Look through all the keys in `b`. If `b` has a key that `a` does not, return false.\n        for (var key in b) {\n            if (!Object.prototype.hasOwnProperty.call(a, key)) {\n                return false;\n            }\n        }\n        // If we made it this far the objects are equal!\n        return true;\n    }\n    // Otherwise the values are not equal.\n    return false;\n}\n//# sourceMappingURL=isEqual.js.map\n\n/***/ }),\n\n/***/ 1925:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = maybeDeepFreeze;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__environment__ = __webpack_require__(1803);\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__environment__[\"a\" /* isDevelopment */])() || Object(__WEBPACK_IMPORTED_MODULE_0__environment__[\"c\" /* isTest */])()) {\n        // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n        // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map\n\n/***/ }),\n\n/***/ 1926:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = warnOnceInDevelopment;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__environment__ = __webpack_require__(1803);\n\nvar haveWarned = Object.create({});\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__environment__[\"b\" /* isProduction */])()) {\n        return;\n    }\n    if (!haveWarned[msg]) {\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0__environment__[\"c\" /* isTest */])()) {\n            haveWarned[msg] = true;\n        }\n        switch (type) {\n            case 'error':\n                console.error(msg);\n                break;\n            default:\n                console.warn(msg);\n        }\n    }\n}\n//# sourceMappingURL=warnOnce.js.map\n\n/***/ }),\n\n/***/ 1927:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export stripSymbols */\n/**\n * In order to make assertions easier, this function strips `symbol`'s from\n * the incoming data.\n *\n * This can be handy when running tests against `apollo-client` for example,\n * since it adds `symbol`'s to the data in the store. Jest's `toEqual`\n * function now covers `symbol`'s (https://github.com/facebook/jest/pull/3437),\n * which means all test data used in a `toEqual` comparison would also have to\n * include `symbol`'s, to pass. By stripping `symbol`'s from the cache data\n * we can compare against more simplified test data.\n */\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n//# sourceMappingURL=stripSymbols.js.map\n\n/***/ }),\n\n/***/ 1928:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return empty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return from; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return split; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return concat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ApolloLink; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = execute;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__ = __webpack_require__(1804);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__linkUtils__ = __webpack_require__(1865);\n\n\nvar passthrough = function (op, forward) { return (forward ? forward(op) : __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of()); };\nvar toLink = function (handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\nvar empty = function () {\n    return new ApolloLink(function (op, forward) { return __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of(); });\n};\nvar from = function (links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n};\nvar split = function (test, left, right) {\n    if (right === void 0) { right = new ApolloLink(passthrough); }\n    var leftLink = toLink(left);\n    var rightLink = toLink(right);\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"e\" /* isTerminating */])(leftLink) && Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"e\" /* isTerminating */])(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of()\n                : rightLink.request(operation) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of()\n                : rightLink.request(operation, forward) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of();\n        });\n    }\n};\n// join two Links together\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"e\" /* isTerminating */])(firstLink)) {\n        console.warn(new __WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"a\" /* LinkError */](\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"e\" /* isTerminating */])(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of(); }) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of();\n            }) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of());\n        });\n    }\n};\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = new ApolloLink(passthrough); }\n        return this.concat(split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw new Error('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\n\nfunction execute(link, operation) {\n    return (link.request(Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"b\" /* createOperation */])(operation.context, Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"h\" /* transformOperation */])(Object(__WEBPACK_IMPORTED_MODULE_1__linkUtils__[\"i\" /* validateOperation */])(operation)))) || __WEBPACK_IMPORTED_MODULE_0_zen_observable_ts__[\"a\" /* default */].of());\n}\n//# sourceMappingURL=link.js.map\n\n/***/ }),\n\n/***/ 1929:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1930).Observable;\n\n\n/***/ }),\n\n/***/ 1930:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[getSymbol('species')];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (sources.length === 0) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources.shift()));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription = undefined;\n            subscription.unsubscribe();\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: getSymbol('observable'),\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, getSymbol('observable'));\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, getSymbol('iterator'));\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: getSymbol('species'),\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: getSymbol('observable'),\n      hostReportError: hostReportError\n    },\n    configurabe: true\n  });\n}\n\n/***/ }),\n\n/***/ 1931:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_QueryManager__ = __webpack_require__(1932);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data_store__ = __webpack_require__(1937);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__version__ = __webpack_require__(1938);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__version___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__version__);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\nvar hasSuggestedDevtools = false;\nvar supportedDirectives = new __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"](function (operation, forward) {\n    operation.query = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"y\" /* removeConnectionDirectiveFromDocument */])(operation.query);\n    return forward(operation);\n});\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ApolloClient}.\n     *\n     * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n     *\n     * @param cache The initial cache to use in the data store.\n     *\n     * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n     *\n     * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n     * server side render.\n     *\n     * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n     * with identical parameters (query, variables, operationName) is already in flight.\n     *\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        // remove apollo-client supported directives\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new __WEBPACK_IMPORTED_MODULE_3__data_store__[\"a\" /* DataStore */](cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        // Attach the client instance to window to let us be found by chrome devtools, but only in\n        // development mode\n        var defaultConnectToDevTools = !Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && !Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                // First check if devtools is not installed\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    // Only for Chrome\n                    if (window.navigator &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        // tslint:disable-next-line\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = __WEBPACK_IMPORTED_MODULE_4__version__[\"version\"];\n    }\n    /**\n     * This watches the results of the query according to the options specified and\n     * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n     * receive updated results through a GraphQL observer.\n     * <p /><p />\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     * <p /><p />\n     * For example, suppose you call watchQuery on a GraphQL query that fetches an person's\n     * first name and last name and this person has a particular object identifer, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and his/her first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     * <p /><p />\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     *\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a {@link Promise} which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options An object of type {@link QueryOptions} that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        // XXX Overwriting options is probably not the best way to do this long\n        // term...\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * {@link Promise} which is either resolved with the resulting data or rejected with an\n     * error.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * {@link Observable} which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        this.initQueryManager();\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     */\n    ApolloClient.prototype.readQuery = function (options) {\n        return this.initProxy().readQuery(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.readFragment = function (options) {\n        return this.initProxy().readFragment(options);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Sugar for writeQuery & writeFragment\n     * This method will construct a query from the data object passed in.\n     * If no id is supplied, writeData will write the data to the root.\n     * If an id is supplied, writeData will write a fragment to the object\n     * specified by the id in the store.\n     *\n     * Since you aren't passing in a query to check the shape of the data,\n     * you must pass in an object that conforms to the shape of valid GraphQL data.\n     */\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(this.link, payload);\n    };\n    /**\n     * This initializes the query manager that tracks queries and the cache\n     */\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (this.queryManager)\n            return;\n        this.queryManager = new __WEBPACK_IMPORTED_MODULE_2__core_QueryManager__[\"a\" /* QueryManager */]({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: this.queryDeduplication,\n            ssrMode: this.ssrMode,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    /**\n     * Allows callbacks to be registered that are executed with the store is reset.\n     * onResetStore returns an unsubscribe function for removing your registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    /**\n     * Initializes a data proxy for this client instance if one does not already\n     * exist and returns either a previously initialized proxy instance or the\n     * newly initialized instance.\n     */\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\n/* harmony default export */ __webpack_exports__[\"a\"] = (ApolloClient);\n//# sourceMappingURL=ApolloClient.js.map\n\n/***/ }),\n\n/***/ 1932:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryManager; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_apollo_link_dedup__ = __webpack_require__(1866);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__scheduler_scheduler__ = __webpack_require__(1934);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__ = __webpack_require__(1805);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_Observable__ = __webpack_require__(1863);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__data_mutations__ = __webpack_require__(1935);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__data_queries__ = __webpack_require__(1936);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ObservableQuery__ = __webpack_require__(1801);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__networkStatus__ = __webpack_require__(1781);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__types__ = __webpack_require__(1793);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultQueryInfo = {\n    listeners: [],\n    invalidated: false,\n    document: null,\n    newData: null,\n    lastRequestId: null,\n    observableQuery: null,\n    subscriptions: [],\n};\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d;\n        this.mutationStore = new __WEBPACK_IMPORTED_MODULE_7__data_mutations__[\"a\" /* MutationStore */]();\n        this.queryStore = new __WEBPACK_IMPORTED_MODULE_8__data_queries__[\"a\" /* QueryStore */]();\n        // let's not start at zero to avoid pain with bad checks\n        this.idCounter = 1;\n        // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n        // subscriptions as well\n        this.queries = new Map();\n        // A map going from a requestId to a promise that has not yet been resolved. We use this to keep\n        // track of queries that are inflight and reject them in case some\n        // destabalizing action occurs (e.g. reset of the Apollo store).\n        this.fetchQueryPromises = new Map();\n        // A map going from the name of a query to an observer issued for it by watchQuery. This is\n        // generally used to refetches for refetchQueries and to update mutation results through\n        // updateQueries.\n        this.queryIdsByName = {};\n        this.link = link;\n        this.deduplicator = __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"].from([new __WEBPACK_IMPORTED_MODULE_2_apollo_link_dedup__[\"a\" /* DedupLink */](), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.scheduler = new __WEBPACK_IMPORTED_MODULE_4__scheduler_scheduler__[\"a\" /* QueryScheduler */]({ queryManager: this, ssrMode: ssrMode });\n    }\n    QueryManager.prototype.mutate = function (_a) {\n        var _this = this;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, updateWithProxyFn = _a.update, _c = _a.errorPolicy, errorPolicy = _c === void 0 ? 'none' : _c, fetchPolicy = _a.fetchPolicy, _d = _a.context, context = _d === void 0 ? {} : _d;\n        if (!mutation) {\n            throw new Error('mutation option is required. You must specify your GraphQL document in the mutation option.');\n        }\n        if (fetchPolicy && fetchPolicy !== 'no-cache') {\n            throw new Error(\"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n        }\n        var mutationId = this.generateQueryId();\n        var cache = this.dataStore.getCache();\n        (mutation = cache.transformDocument(mutation)),\n            (variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"j\" /* getMutationDefinition */])(mutation)), variables));\n        var mutationString = Object(__WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__[\"a\" /* print */])(mutation);\n        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n        // Create a map of update queries by id to the query instead of by name.\n        var generateUpdateQueriesInfo = function () {\n            var ret = {};\n            if (updateQueriesByName) {\n                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                        ret[queryId] = {\n                            updater: updateQueriesByName[queryName],\n                            query: _this.queryStore.get(queryId),\n                        };\n                    });\n                });\n            }\n            return ret;\n        };\n        this.mutationStore.initMutation(mutationId, mutationString, variables);\n        this.dataStore.markMutationInit({\n            mutationId: mutationId,\n            document: mutation,\n            variables: variables || {},\n            updateQueries: generateUpdateQueriesInfo(),\n            update: updateWithProxyFn,\n            optimisticResponse: optimisticResponse,\n        });\n        this.broadcastQueries();\n        return new Promise(function (resolve, reject) {\n            var storeResult;\n            var error;\n            var operation = _this.buildOperationForLink(mutation, variables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n            Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.link, operation).subscribe({\n                next: function (result) {\n                    if (Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result) && errorPolicy === 'none') {\n                        error = new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                            graphQLErrors: result.errors,\n                        });\n                        return;\n                    }\n                    _this.mutationStore.markMutationResult(mutationId);\n                    if (fetchPolicy !== 'no-cache') {\n                        _this.dataStore.markMutationResult({\n                            mutationId: mutationId,\n                            result: result,\n                            document: mutation,\n                            variables: variables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                        });\n                    }\n                    storeResult = result;\n                },\n                error: function (err) {\n                    _this.mutationStore.markMutationError(mutationId, err);\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    reject(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                        networkError: err,\n                    }));\n                },\n                complete: function () {\n                    if (error) {\n                        _this.mutationStore.markMutationError(mutationId, error);\n                    }\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    // allow for conditional refetches\n                    // XXX do we want to make this the only API one day?\n                    if (typeof refetchQueries === 'function') {\n                        refetchQueries = refetchQueries(storeResult);\n                    }\n                    if (refetchQueries) {\n                        refetchQueries.forEach(function (refetchQuery) {\n                            if (typeof refetchQuery === 'string') {\n                                _this.refetchQueryByName(refetchQuery);\n                                return;\n                            }\n                            _this.query({\n                                query: refetchQuery.query,\n                                variables: refetchQuery.variables,\n                                fetchPolicy: 'network-only',\n                            });\n                        });\n                    }\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    if (errorPolicy === 'ignore' &&\n                        storeResult &&\n                        Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"o\" /* graphQLResultHasError */])(storeResult)) {\n                        delete storeResult.errors;\n                    }\n                    resolve(storeResult);\n                },\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, \n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId) {\n        var _this = this;\n        var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;\n        var cache = this.dataStore.getCache();\n        var query = cache.transformDocument(options.query);\n        var storeResult;\n        var needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        // If this is not a force fetch, we want to diff the query against the\n        // store before we fetch it from the network interface.\n        // TODO we hit the cache even if the policy is network-first. This could be unnecessary if the network is up.\n        if (fetchType !== __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].refetch &&\n            fetchPolicy !== 'network-only' &&\n            fetchPolicy !== 'no-cache') {\n            var _d = this.dataStore.getCache().diff({\n                query: query,\n                variables: variables,\n                returnPartialData: true,\n                optimistic: false,\n            }), complete = _d.complete, result = _d.result;\n            // If we're in here, only fetch if we have missing fields\n            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n            storeResult = result;\n        }\n        var shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n        // we need to check to see if this is an operation that uses the @live directive\n        if (Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"p\" /* hasDirectives */])(['live'], query))\n            shouldFetch = true;\n        var requestId = this.generateRequestId();\n        // set up a watcher to listen to cache updates\n        var cancel = this.updateQueryWatch(queryId, query, options);\n        // Initialize query in store with unique requestId\n        this.setQuery(queryId, function () { return ({\n            document: query,\n            lastRequestId: requestId,\n            invalidated: true,\n            cancel: cancel,\n        }); });\n        this.invalidate(true, fetchMoreForQueryId);\n        this.queryStore.initQuery({\n            queryId: queryId,\n            document: query,\n            storePreviousVariables: shouldFetch,\n            variables: variables,\n            isPoll: fetchType === __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].poll,\n            isRefetch: fetchType === __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].refetch,\n            metadata: metadata,\n            fetchMoreForQueryId: fetchMoreForQueryId,\n        });\n        this.broadcastQueries();\n        // If there is no part of the query we need to fetch from the server (or,\n        // fetchPolicy is cache-only), we just write the store result as the final result.\n        var shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n        if (shouldDispatchClientResult) {\n            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n            this.broadcastQueries();\n        }\n        if (shouldFetch) {\n            var networkResult = this.fetchRequest({\n                requestId: requestId,\n                queryId: queryId,\n                document: query,\n                options: options,\n                fetchMoreForQueryId: fetchMoreForQueryId,\n            }).catch(function (error) {\n                // This is for the benefit of `refetch` promises, which currently don't get their errors\n                // through the store like watchQuery observers do\n                if (Object(__WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"b\" /* isApolloError */])(error)) {\n                    throw error;\n                }\n                else {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    _this.removeFetchQueryPromise(requestId);\n                    throw new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({ networkError: error });\n                }\n            });\n            // we don't return the promise for cache-and-network since it is already\n            // returned below from the cache\n            if (fetchPolicy !== 'cache-and-network') {\n                return networkResult;\n            }\n            else {\n                // however we need to catch the error so it isn't unhandled in case of\n                // network error\n                networkResult.catch(function () { });\n            }\n        }\n        // If we have no query to send to the server, we should return the result\n        // found within the store.\n        return Promise.resolve({ data: storeResult });\n    };\n    // Returns a query listener that will update the given observer based on the\n    // results (or lack thereof) for a particular query.\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData) {\n            // we're going to take a look at the data, so the query is no longer invalidated\n            _this.invalidate(false, queryId);\n            // The query store value can be undefined in the event of a store\n            // reset.\n            if (!queryStoreValue)\n                return;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            // don't watch the store for queries on standby\n            if (fetchPolicy === 'standby')\n                return;\n            var errorPolicy = observableQuery\n                ? observableQuery.options.errorPolicy\n                : options.errorPolicy;\n            var lastResult = observableQuery\n                ? observableQuery.getLastResult()\n                : null;\n            var lastError = observableQuery ? observableQuery.getLastError() : null;\n            var shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            // if this caused by a cache broadcast but the query is still in flight\n            // don't notify the observer\n            // if (\n            //   isCacheBroadcast &&\n            //   isNetworkRequestInFlight(queryStoreValue.networkStatus)\n            // ) {\n            //   shouldNotifyIfLoading = false;\n            // }\n            var networkStatusChanged = Boolean(lastResult &&\n                queryStoreValue.networkStatus !== lastResult.networkStatus);\n            var errorStatusChanged = errorPolicy &&\n                (lastError && lastError.graphQLErrors) !==\n                    queryStoreValue.graphQLErrors &&\n                errorPolicy !== 'none';\n            if (!Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                shouldNotifyIfLoading) {\n                // If we have either a GraphQL error or a network error, we create\n                // an error and tell the observer about it.\n                if (((!errorPolicy || errorPolicy === 'none') &&\n                    queryStoreValue.graphQLErrors &&\n                    queryStoreValue.graphQLErrors.length > 0) ||\n                    queryStoreValue.networkError) {\n                    var apolloError_1 = new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    });\n                    previouslyHadError = true;\n                    if (observer.error) {\n                        try {\n                            observer.error(apolloError_1);\n                        }\n                        catch (e) {\n                            // Throw error outside this control flow to avoid breaking Apollo's state\n                            setTimeout(function () {\n                                throw e;\n                            }, 0);\n                        }\n                    }\n                    else {\n                        // Throw error outside this control flow to avoid breaking Apollo's state\n                        setTimeout(function () {\n                            throw apolloError_1;\n                        }, 0);\n                        if (!Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"v\" /* isProduction */])()) {\n                            /* tslint:disable-next-line */\n                            console.info('An unhandled error was thrown because no error handler is registered ' +\n                                'for the query ' +\n                                Object(__WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__[\"a\" /* print */])(queryStoreValue.document));\n                        }\n                    }\n                    return;\n                }\n                try {\n                    var data = void 0;\n                    var isMissing = void 0;\n                    if (newData) {\n                        // clear out the latest new data, since we're now using it\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                        data = newData.result;\n                        isMissing = !newData.complete || false;\n                    }\n                    else {\n                        if (lastResult && lastResult.data && !errorStatusChanged) {\n                            data = lastResult.data;\n                            isMissing = false;\n                        }\n                        else {\n                            var document_1 = _this.getQuery(queryId).document;\n                            var readResult = _this.dataStore.getCache().diff({\n                                query: document_1,\n                                variables: queryStoreValue.previousVariables ||\n                                    queryStoreValue.variables,\n                                optimistic: true,\n                            });\n                            data = readResult.result;\n                            isMissing = !readResult.complete;\n                        }\n                    }\n                    var resultFromStore = void 0;\n                    // If there is some data missing and the user has told us that they\n                    // do not tolerate partial data then we want to return the previous\n                    // result and mark it as stale.\n                    if (isMissing && fetchPolicy !== 'cache-only') {\n                        resultFromStore = {\n                            data: lastResult && lastResult.data,\n                            loading: Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: true,\n                        };\n                    }\n                    else {\n                        resultFromStore = {\n                            data: data,\n                            loading: Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: false,\n                        };\n                    }\n                    // if the query wants updates on errors we need to add it to the result\n                    if (errorPolicy === 'all' &&\n                        queryStoreValue.graphQLErrors &&\n                        queryStoreValue.graphQLErrors.length > 0) {\n                        resultFromStore.errors = queryStoreValue.graphQLErrors;\n                    }\n                    if (observer.next) {\n                        var isDifferentResult = !(lastResult &&\n                            resultFromStore &&\n                            lastResult.networkStatus === resultFromStore.networkStatus &&\n                            lastResult.stale === resultFromStore.stale &&\n                            // We can do a strict equality check here because we include a `previousResult`\n                            // with `readQueryFromStore`. So if the results are the same they will be\n                            // referentially equal.\n                            lastResult.data === resultFromStore.data);\n                        if (isDifferentResult || previouslyHadError) {\n                            try {\n                                observer.next(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(resultFromStore));\n                            }\n                            catch (e) {\n                                // Throw error outside this control flow to avoid breaking Apollo's state\n                                setTimeout(function () {\n                                    throw e;\n                                }, 0);\n                            }\n                        }\n                    }\n                    previouslyHadError = false;\n                }\n                catch (error) {\n                    previouslyHadError = true;\n                    if (observer.error)\n                        observer.error(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({ networkError: error }));\n                    return;\n                }\n            }\n        };\n    };\n    // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n    // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n    // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n    // but we don't want to keep track observables issued for the query method since those aren't\n    // supposed to be refetched in the event of a store reset. Once we unify error handling for\n    // network errors and non-network errors, the shouldSubscribe option will go away.\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        if (options.fetchPolicy === 'standby') {\n            throw new Error('client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        }\n        // get errors synchronously\n        var queryDefinition = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(options.query);\n        // assign variable default values if supplied\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(queryDefinition);\n            options.variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new __WEBPACK_IMPORTED_MODULE_9__ObservableQuery__[\"a\" /* ObservableQuery */]({\n            scheduler: this.scheduler,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        if (!options.query) {\n            throw new Error('query option is required. You must specify your GraphQL document ' +\n                'in the query option.');\n        }\n        if (options.query.kind !== 'Document') {\n            throw new Error('You must wrap the query string in a \"gql\" tag.');\n        }\n        if (options.returnPartialData) {\n            throw new Error('returnPartialData option only supported on watchQuery.');\n        }\n        if (options.pollInterval) {\n            throw new Error('pollInterval option only supported on watchQuery.');\n        }\n        var requestId = this.idCounter;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            return _this.watchQuery(options, false)\n                .result()\n                .then(function (result) {\n                _this.removeFetchQueryPromise(requestId);\n                resolve(result);\n            })\n                .catch(function (error) {\n                _this.removeFetchQueryPromise(requestId);\n                reject(error);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidate: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    // Adds a promise to this.fetchQueryPromises for a given request ID.\n    QueryManager.prototype.addFetchQueryPromise = function (requestId, resolve, reject) {\n        this.fetchQueryPromises.set(requestId.toString(), {\n            resolve: resolve,\n            reject: reject,\n        });\n    };\n    // Removes the promise in this.fetchQueryPromises for a particular request ID.\n    QueryManager.prototype.removeFetchQueryPromise = function (requestId) {\n        this.fetchQueryPromises.delete(requestId.toString());\n    };\n    // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        // Insert the ObservableQuery into this.observableQueriesByName if the query has a name\n        var queryDef = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            // XXX we may we want to warn the user about query name conflicts in the future\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        // Before we have sent the reset action to the store,\n        // we can no longer rely on the results returned by in-flight\n        // requests since these may depend on values that previously existed\n        // in the data portion of the store. So, we cancel the promises and observers\n        // that we have issued so far and not yet resolved (in the case of\n        // queries).\n        this.fetchQueryPromises.forEach(function (_a) {\n            var reject = _a.reject;\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        // begin removing data from the store\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        // Similarly, we have to have to refetch each of the queries currently being\n        // observed. We refetch instead of error'ing on these since the assumption is that\n        // resetting the store doesn't eliminate the need for the queries currently being\n        // watched. If there is an existing query in flight when the store is reset,\n        // the promise for it will be rejected and its results will not be written to the\n        // store.\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n            // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"k\" /* getOperationDefinition */])(query)), options.variables);\n        var sub;\n        var observers = [];\n        return new __WEBPACK_IMPORTED_MODULE_6__util_Observable__[\"a\" /* Observable */](function (observer) {\n            observers.push(observer);\n            // If this is the first observer, actually initiate the network subscription\n            if (observers.length === 1) {\n                var handler = {\n                    next: function (result) {\n                        _this.dataStore.markSubscriptionResult(result, transformedDoc, variables);\n                        _this.broadcastQueries();\n                        // It's slightly awkward that the data for subscriptions doesn't come from the store.\n                        observers.forEach(function (obs) {\n                            // XXX I'd prefer a different way to handle errors for subscriptions\n                            if (obs.next)\n                                obs.next(result);\n                        });\n                    },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error)\n                                obs.error(error);\n                        });\n                    },\n                };\n                // TODO: Should subscriptions also accept a `context` option to pass\n                // through to links?\n                var operation = _this.buildOperationForLink(transformedDoc, variables);\n                sub = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.link, operation).subscribe(handler);\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                // If we removed the last observer, tear down the network subscription\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryInStore(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        // teardown all links\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        // XXX test this\n        if (newData) {\n            return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: newData.result, partial: false });\n        }\n        else {\n            try {\n                // the query is brand new, so we read from the store to see if anything is there\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                });\n                return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: data, partial: false });\n            }\n            catch (e) {\n                return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: {}, partial: true });\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            if (!foundObserveableQuery) {\n                throw new Error(\"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            }\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                // it's possible for the listener to be undefined if the query is being stopped\n                // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData);\n            });\n        });\n    };\n    // Takes a request id, query id, a query document and information associated with the query\n    // and send it to the network interface. Returns\n    // a promise for the result associated with that request.\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var operation = this.buildOperationForLink(document, variables, __assign({}, context, { \n            // TODO: Should this be included for all entry points via\n            // buildOperationForLink?\n            forceFetch: !this.queryDeduplication }));\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            var subscription = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.deduplicator, operation).subscribe({\n                next: function (result) {\n                    // default the lastRequestId to 1\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        if (fetchPolicy !== 'no-cache') {\n                            try {\n                                _this.dataStore.markQueryResult(result, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                            }\n                            catch (e) {\n                                reject(e);\n                                return;\n                            }\n                        }\n                        else {\n                            _this.setQuery(queryId, function () { return ({\n                                newData: { result: result.data, complete: true },\n                            }); });\n                        }\n                        _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    if (result.errors && errorPolicy === 'none') {\n                        reject(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                            graphQLErrors: result.errors,\n                        }));\n                        return;\n                    }\n                    else if (errorPolicy === 'all') {\n                        errorsFromStore = result.errors;\n                    }\n                    if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                        // We don't write fetchMore results to the store because this would overwrite\n                        // the original result in case an @connection directive is used.\n                        resultFromStore = result.data;\n                    }\n                    else {\n                        try {\n                            // ensure result is combined with data already in store\n                            resultFromStore = _this.dataStore.getCache().read({\n                                variables: variables,\n                                query: document,\n                                optimistic: false,\n                            });\n                            // this will throw an error if there are missing fields in\n                            // the results which can happen with errors from the server.\n                            // tslint:disable-next-line\n                        }\n                        catch (e) { }\n                    }\n                },\n                error: function (error) {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: __WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"a\" /* NetworkStatus */].ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        });\n    };\n    // Refetches a query given that query's name. Refetches\n    // all ObservableQuery instances associated with the query name.\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        // early return if the query named does not exist (not yet fetched)\n        // this used to warn but it may be inteneded behavoir to try and refetch\n        // un called queries because they could be on different routes\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return this.queries.get(queryId) || __assign({}, defaultQueryInfo);\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"l\" /* getOperationName */])(document) || undefined,\n            context: __assign({}, extraContext, { cache: cache, \n                // getting an entry's cache key is useful for cacheResolvers & state-link\n                getCacheKey: function (obj) {\n                    if (cache.config) {\n                        // on the link, we just want the id string, not the full id value from toIdValue\n                        return cache.config.dataIdFromObject(obj);\n                    }\n                    else {\n                        throw new Error('To use context.getCacheKey, you need to use a cache that has a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                    }\n                } }),\n        };\n    };\n    return QueryManager;\n}());\n\n//# sourceMappingURL=QueryManager.js.map\n\n/***/ }),\n\n/***/ 1933:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DedupLink; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nvar DedupLink = /** @class */ (function (_super) {\n    __extends(DedupLink, _super);\n    function DedupLink() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.inFlightRequestObservables = new Map();\n        _this.subscribers = new Map();\n        return _this;\n    }\n    DedupLink.prototype.request = function (operation, forward) {\n        var _this = this;\n        // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n        if (operation.getContext().forceFetch) {\n            return forward(operation);\n        }\n        var key = operation.toKey();\n        var cleanup = function (key) {\n            _this.inFlightRequestObservables.delete(key);\n            var prev = _this.subscribers.get(key);\n            return prev;\n        };\n        if (!this.inFlightRequestObservables.get(key)) {\n            // this is a new request, i.e. we haven't deduplicated it yet\n            // call the next link\n            var singleObserver_1 = forward(operation);\n            var subscription_1;\n            var sharedObserver = new __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"Observable\"](function (observer) {\n                // this will still be called by each subscriber regardless of\n                // deduplication status\n                var prev = _this.subscribers.get(key);\n                if (!prev)\n                    prev = { next: [], error: [], complete: [] };\n                _this.subscribers.set(key, {\n                    next: prev.next.concat([observer.next.bind(observer)]),\n                    error: prev.error.concat([observer.error.bind(observer)]),\n                    complete: prev.complete.concat([observer.complete.bind(observer)]),\n                });\n                if (!subscription_1) {\n                    subscription_1 = singleObserver_1.subscribe({\n                        next: function (result) {\n                            var prev = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (prev) {\n                                prev.next.forEach(function (next) { return next(result); });\n                                prev.complete.forEach(function (complete) { return complete(); });\n                            }\n                        },\n                        error: function (error) {\n                            var prev = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (prev)\n                                prev.error.forEach(function (err) { return err(error); });\n                        },\n                    });\n                }\n                return function () {\n                    if (subscription_1)\n                        subscription_1.unsubscribe();\n                    _this.inFlightRequestObservables.delete(key);\n                };\n            });\n            this.inFlightRequestObservables.set(key, sharedObserver);\n        }\n        // return shared Observable\n        return this.inFlightRequestObservables.get(key);\n    };\n    return DedupLink;\n}(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"]));\n\n//# sourceMappingURL=dedupLink.js.map\n\n/***/ }),\n\n/***/ 1934:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryScheduler; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_types__ = __webpack_require__(1793);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__ = __webpack_require__(1801);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1781);\n// The QueryScheduler is supposed to be a mechanism that schedules polling queries such that\n// they are clustered into the time slots of the QueryBatcher and are batched together. It\n// also makes sure that for a given polling query, if one instance of the query is inflight,\n// another instance will not be fired until the query returns or times out. We do this because\n// another query fires while one is already in flight, the data will stay in the \"loading\" state\n// even after the first query has returned.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar QueryScheduler = /** @class */ (function () {\n    function QueryScheduler(_a) {\n        var queryManager = _a.queryManager, ssrMode = _a.ssrMode;\n        // Map going from queryIds to query options that are in flight.\n        this.inFlightQueries = {};\n        // Map going from query ids to the query options associated with those queries. Contains all of\n        // the queries, both in flight and not in flight.\n        this.registeredQueries = {};\n        // Map going from polling interval with to the query ids that fire on that interval.\n        // These query ids are associated with a set of options in the this.registeredQueries.\n        this.intervalQueries = {};\n        // Map going from polling interval widths to polling timers.\n        this.pollingTimers = {};\n        this.ssrMode = false;\n        this.queryManager = queryManager;\n        this.ssrMode = ssrMode || false;\n    }\n    QueryScheduler.prototype.checkInFlight = function (queryId) {\n        var query = this.queryManager.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready &&\n            query.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].error);\n    };\n    QueryScheduler.prototype.fetchQuery = function (queryId, options, fetchType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.queryManager\n                .fetchQuery(queryId, options, fetchType)\n                .then(function (result) {\n                resolve(result);\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    QueryScheduler.prototype.startPollingQuery = function (options, queryId, listener) {\n        if (!options.pollInterval) {\n            throw new Error('Attempted to start a polling query without a polling interval.');\n        }\n        // Do not poll in SSR mode\n        if (this.ssrMode)\n            return queryId;\n        this.registeredQueries[queryId] = options;\n        if (listener) {\n            this.queryManager.addQueryListener(queryId, listener);\n        }\n        this.addQueryOnInterval(queryId, options);\n        return queryId;\n    };\n    QueryScheduler.prototype.stopPollingQuery = function (queryId) {\n        // Remove the query options from one of the registered queries.\n        // The polling function will then take care of not firing it anymore.\n        delete this.registeredQueries[queryId];\n    };\n    // Fires the all of the queries on a particular interval. Called on a setInterval.\n    QueryScheduler.prototype.fetchQueriesOnInterval = function (interval) {\n        var _this = this;\n        // XXX this \"filter\" here is nasty, because it does two things at the same time.\n        // 1. remove queries that have stopped polling\n        // 2. call fetchQueries for queries that are polling and not in flight.\n        // TODO: refactor this to make it cleaner\n        this.intervalQueries[interval] = this.intervalQueries[interval].filter(function (queryId) {\n            // If queryOptions can't be found from registeredQueries or if it has a\n            // different interval, it means that this queryId is no longer registered\n            // and should be removed from the list of queries firing on this interval.\n            //\n            // We don't remove queries from intervalQueries immediately in\n            // stopPollingQuery so that we can keep the timer consistent when queries\n            // are removed and replaced, and to avoid quadratic behavior when stopping\n            // many queries.\n            if (!(_this.registeredQueries.hasOwnProperty(queryId) &&\n                _this.registeredQueries[queryId].pollInterval === interval)) {\n                return false;\n            }\n            // Don't fire this instance of the polling query is one of the instances is already in\n            // flight.\n            if (_this.checkInFlight(queryId)) {\n                return true;\n            }\n            var queryOptions = _this.registeredQueries[queryId];\n            var pollingOptions = __assign({}, queryOptions);\n            pollingOptions.fetchPolicy = 'network-only';\n            // don't let unhandled rejections happen\n            _this.fetchQuery(queryId, pollingOptions, __WEBPACK_IMPORTED_MODULE_0__core_types__[\"a\" /* FetchType */].poll).catch(function () { });\n            return true;\n        });\n        if (this.intervalQueries[interval].length === 0) {\n            clearInterval(this.pollingTimers[interval]);\n            delete this.intervalQueries[interval];\n        }\n    };\n    // Adds a query on a particular interval to this.intervalQueries and then fires\n    // that query with all the other queries executing on that interval. Note that the query id\n    // and query options must have been added to this.registeredQueries before this function is called.\n    QueryScheduler.prototype.addQueryOnInterval = function (queryId, queryOptions) {\n        var _this = this;\n        var interval = queryOptions.pollInterval;\n        if (!interval) {\n            throw new Error(\"A poll interval is required to start polling query with id '\" + queryId + \"'.\");\n        }\n        // If there are other queries on this interval, this query will just fire with those\n        // and we don't need to create a new timer.\n        if (this.intervalQueries.hasOwnProperty(interval.toString()) &&\n            this.intervalQueries[interval].length > 0) {\n            this.intervalQueries[interval].push(queryId);\n        }\n        else {\n            this.intervalQueries[interval] = [queryId];\n            // set up the timer for the function that will handle this interval\n            this.pollingTimers[interval] = setInterval(function () {\n                _this.fetchQueriesOnInterval(interval);\n            }, interval);\n        }\n    };\n    // Used only for unit testing.\n    QueryScheduler.prototype.registerPollingQuery = function (queryOptions) {\n        if (!queryOptions.pollInterval) {\n            throw new Error('Attempted to register a non-polling query with the scheduler.');\n        }\n        return new __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__[\"a\" /* ObservableQuery */]({\n            scheduler: this,\n            options: queryOptions,\n        });\n    };\n    return QueryScheduler;\n}());\n\n//# sourceMappingURL=scheduler.js.map\n\n/***/ }),\n\n/***/ 1935:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MutationStore; });\nvar MutationStore = /** @class */ (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutationString, variables) {\n        this.store[mutationId] = {\n            mutationString: mutationString,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\n//# sourceMappingURL=mutations.js.map\n\n/***/ }),\n\n/***/ 1936:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1781);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar QueryStore = /** @class */ (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(previousQuery.document) !== Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(query.document)) {\n            // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n            // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n            // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n            throw new Error('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading\n        // if the previous query was still loading, we don't want to remember it at all.\n        ) {\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"q\" /* isEqual */])(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        // TODO break this out into a separate function\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].refetch;\n            // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n        }\n        else {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n        // the store. We probably want a refetch action instead, because I suspect that if you refetch\n        // before the initial fetch is done, you'll get an error.\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        // If the action had a `moreForQueryId` property then we need to set the\n        // network status on that query as well to `fetchMore`.\n        //\n        // We have a complement to this if statement in the query result and query\n        // error action branch, but importantly *not* in the client result branch.\n        // This is because the implementation of `fetchMore` *always* sets\n        // `fetchPolicy` to `network-only` so we would never have a client result.\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].error;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready\n            : __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        // keep only the queries with query ids that are associated with observables\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            // XXX set loading to true so listeners don't trigger unless they want results with partial data\n            res[key] = __assign({}, _this.store[key], { networkStatus: __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\n\n//# sourceMappingURL=queries.js.map\n\n/***/ }),\n\n/***/ 1937:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DataStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n\nvar DataStore = /** @class */ (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result);\n        if (ignoreErrors && Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        // the subscription interface should handle not sending us results we no longer subscribe to.\n        // XXX I don't think we ever send in an object with errors, but we might in the future...\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        // Incorporate the result from this mutation into the store\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    // Read the current query result from the store.\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    // Run our reducer using the current query result and the mutation result.\n                    var nextQueryResult = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"l\" /* getOperationName */])(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    // Write the modified result back into the store if we got a new result.\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            // If the mutation has some writes associated with it then we need to\n            // apply those writes to the store by running this reducer again with a\n            // write action.\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\n//# sourceMappingURL=store.js.map\n\n/***/ }),\n\n/***/ 1938:\n/***/ (function(module, exports) {\n\nexports.version = \"2.2.8\"\n\n/***/ }),\n\n/***/ 1939:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(1867));\n__export(__webpack_require__(1770));\nvar apollo_link_http_1 = __webpack_require__(1947);\nexports.HttpLink = apollo_link_http_1.HttpLink;\n__export(__webpack_require__(1869));\nvar apollo_cache_inmemory_1 = __webpack_require__(1869);\nexports.InMemoryCache = apollo_cache_inmemory_1.InMemoryCache;\nvar graphql_tag_1 = __webpack_require__(1809);\nexports.gql = graphql_tag_1.default;\nvar apollo_client_1 = __webpack_require__(1867);\nvar DefaultClient = (function (_super) {\n    __extends(DefaultClient, _super);\n    function DefaultClient(config) {\n        if (config === void 0) { config = {}; }\n        var _this = this;\n        if (!config.cache)\n            config.cache = new apollo_cache_inmemory_1.InMemoryCache();\n        if (!config.link)\n            config.link = new apollo_link_http_1.HttpLink({ uri: '/graphql' });\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    return DefaultClient;\n}(apollo_client_1.default));\nexports.default = DefaultClient;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1940:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_QueryManager__ = __webpack_require__(1941);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__data_store__ = __webpack_require__(1945);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__version__ = __webpack_require__(1946);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__version___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__version__);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\nvar hasSuggestedDevtools = false;\nvar supportedDirectives = new __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"](function (operation, forward) {\n    operation.query = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"y\" /* removeConnectionDirectiveFromDocument */])(operation.query);\n    return forward(operation);\n});\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ApolloClient}.\n     *\n     * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n     *\n     * @param cache The initial cache to use in the data store.\n     *\n     * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n     *\n     * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n     * server side render.\n     *\n     * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n     * with identical parameters (query, variables, operationName) is already in flight.\n     *\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        // remove apollo-client supported directives\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new __WEBPACK_IMPORTED_MODULE_3__data_store__[\"a\" /* DataStore */](cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        // Attach the client instance to window to let us be found by chrome devtools, but only in\n        // development mode\n        var defaultConnectToDevTools = !Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && !Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"v\" /* isProduction */])()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                // First check if devtools is not installed\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    // Only for Chrome\n                    if (window.navigator &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        // tslint:disable-next-line\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = __WEBPACK_IMPORTED_MODULE_4__version__[\"version\"];\n    }\n    /**\n     * This watches the results of the query according to the options specified and\n     * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n     * receive updated results through a GraphQL observer.\n     * <p /><p />\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     * <p /><p />\n     * For example, suppose you call watchQuery on a GraphQL query that fetches an person's\n     * first name and last name and this person has a particular object identifer, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and his/her first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     * <p /><p />\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     *\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a {@link Promise} which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options An object of type {@link QueryOptions} that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        // XXX Overwriting options is probably not the best way to do this long\n        // term...\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * {@link Promise} which is either resolved with the resulting data or rejected with an\n     * error.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * {@link Observable} which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        this.initQueryManager();\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     */\n    ApolloClient.prototype.readQuery = function (options) {\n        return this.initProxy().readQuery(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.readFragment = function (options) {\n        return this.initProxy().readFragment(options);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Sugar for writeQuery & writeFragment\n     * This method will construct a query from the data object passed in.\n     * If no id is supplied, writeData will write the data to the root.\n     * If an id is supplied, writeData will write a fragment to the object\n     * specified by the id in the store.\n     *\n     * Since you aren't passing in a query to check the shape of the data,\n     * you must pass in an object that conforms to the shape of valid GraphQL data.\n     */\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(this.link, payload);\n    };\n    /**\n     * This initializes the query manager that tracks queries and the cache\n     */\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (this.queryManager)\n            return;\n        this.queryManager = new __WEBPACK_IMPORTED_MODULE_2__core_QueryManager__[\"a\" /* QueryManager */]({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: this.queryDeduplication,\n            ssrMode: this.ssrMode,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    /**\n     * Allows callbacks to be registered that are executed with the store is reset.\n     * onResetStore returns an unsubscribe function for removing your registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    /**\n     * Initializes a data proxy for this client instance if one does not already\n     * exist and returns either a previously initialized proxy instance or the\n     * newly initialized instance.\n     */\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\n/* harmony default export */ __webpack_exports__[\"a\"] = (ApolloClient);\n//# sourceMappingURL=ApolloClient.js.map\n\n/***/ }),\n\n/***/ 1941:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryManager; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_apollo_link_dedup__ = __webpack_require__(1866);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__scheduler_scheduler__ = __webpack_require__(1942);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__ = __webpack_require__(1807);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_Observable__ = __webpack_require__(1868);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__data_mutations__ = __webpack_require__(1943);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__data_queries__ = __webpack_require__(1944);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ObservableQuery__ = __webpack_require__(1806);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__networkStatus__ = __webpack_require__(1782);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__types__ = __webpack_require__(1794);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar defaultQueryInfo = {\n    listeners: [],\n    invalidated: false,\n    document: null,\n    newData: null,\n    lastRequestId: null,\n    observableQuery: null,\n    subscriptions: [],\n};\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d;\n        this.mutationStore = new __WEBPACK_IMPORTED_MODULE_7__data_mutations__[\"a\" /* MutationStore */]();\n        this.queryStore = new __WEBPACK_IMPORTED_MODULE_8__data_queries__[\"a\" /* QueryStore */]();\n        // let's not start at zero to avoid pain with bad checks\n        this.idCounter = 1;\n        // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n        // subscriptions as well\n        this.queries = new Map();\n        // A map going from a requestId to a promise that has not yet been resolved. We use this to keep\n        // track of queries that are inflight and reject them in case some\n        // destabalizing action occurs (e.g. reset of the Apollo store).\n        this.fetchQueryPromises = new Map();\n        // A map going from the name of a query to an observer issued for it by watchQuery. This is\n        // generally used to refetches for refetchQueries and to update mutation results through\n        // updateQueries.\n        this.queryIdsByName = {};\n        this.link = link;\n        this.deduplicator = __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"].from([new __WEBPACK_IMPORTED_MODULE_2_apollo_link_dedup__[\"a\" /* DedupLink */](), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.scheduler = new __WEBPACK_IMPORTED_MODULE_4__scheduler_scheduler__[\"a\" /* QueryScheduler */]({ queryManager: this, ssrMode: ssrMode });\n    }\n    QueryManager.prototype.mutate = function (_a) {\n        var _this = this;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, updateWithProxyFn = _a.update, _c = _a.errorPolicy, errorPolicy = _c === void 0 ? 'none' : _c, fetchPolicy = _a.fetchPolicy, _d = _a.context, context = _d === void 0 ? {} : _d;\n        if (!mutation) {\n            throw new Error('mutation option is required. You must specify your GraphQL document in the mutation option.');\n        }\n        if (fetchPolicy && fetchPolicy !== 'no-cache') {\n            throw new Error(\"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n        }\n        var mutationId = this.generateQueryId();\n        var cache = this.dataStore.getCache();\n        (mutation = cache.transformDocument(mutation)),\n            (variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"j\" /* getMutationDefinition */])(mutation)), variables));\n        var mutationString = Object(__WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__[\"a\" /* print */])(mutation);\n        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n        // Create a map of update queries by id to the query instead of by name.\n        var generateUpdateQueriesInfo = function () {\n            var ret = {};\n            if (updateQueriesByName) {\n                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                        ret[queryId] = {\n                            updater: updateQueriesByName[queryName],\n                            query: _this.queryStore.get(queryId),\n                        };\n                    });\n                });\n            }\n            return ret;\n        };\n        this.mutationStore.initMutation(mutationId, mutationString, variables);\n        this.dataStore.markMutationInit({\n            mutationId: mutationId,\n            document: mutation,\n            variables: variables || {},\n            updateQueries: generateUpdateQueriesInfo(),\n            update: updateWithProxyFn,\n            optimisticResponse: optimisticResponse,\n        });\n        this.broadcastQueries();\n        return new Promise(function (resolve, reject) {\n            var storeResult;\n            var error;\n            var operation = _this.buildOperationForLink(mutation, variables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n            Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.link, operation).subscribe({\n                next: function (result) {\n                    if (Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result) && errorPolicy === 'none') {\n                        error = new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                            graphQLErrors: result.errors,\n                        });\n                        return;\n                    }\n                    _this.mutationStore.markMutationResult(mutationId);\n                    if (fetchPolicy !== 'no-cache') {\n                        _this.dataStore.markMutationResult({\n                            mutationId: mutationId,\n                            result: result,\n                            document: mutation,\n                            variables: variables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                        });\n                    }\n                    storeResult = result;\n                },\n                error: function (err) {\n                    _this.mutationStore.markMutationError(mutationId, err);\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    reject(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                        networkError: err,\n                    }));\n                },\n                complete: function () {\n                    if (error) {\n                        _this.mutationStore.markMutationError(mutationId, error);\n                    }\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    // allow for conditional refetches\n                    // XXX do we want to make this the only API one day?\n                    if (typeof refetchQueries === 'function') {\n                        refetchQueries = refetchQueries(storeResult);\n                    }\n                    if (refetchQueries) {\n                        refetchQueries.forEach(function (refetchQuery) {\n                            if (typeof refetchQuery === 'string') {\n                                _this.refetchQueryByName(refetchQuery);\n                                return;\n                            }\n                            _this.query({\n                                query: refetchQuery.query,\n                                variables: refetchQuery.variables,\n                                fetchPolicy: 'network-only',\n                            });\n                        });\n                    }\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    if (errorPolicy === 'ignore' &&\n                        storeResult &&\n                        Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"o\" /* graphQLResultHasError */])(storeResult)) {\n                        delete storeResult.errors;\n                    }\n                    resolve(storeResult);\n                },\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, \n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId) {\n        var _this = this;\n        var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;\n        var cache = this.dataStore.getCache();\n        var query = cache.transformDocument(options.query);\n        var storeResult;\n        var needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        // If this is not a force fetch, we want to diff the query against the\n        // store before we fetch it from the network interface.\n        // TODO we hit the cache even if the policy is network-first. This could be unnecessary if the network is up.\n        if (fetchType !== __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].refetch &&\n            fetchPolicy !== 'network-only' &&\n            fetchPolicy !== 'no-cache') {\n            var _d = this.dataStore.getCache().diff({\n                query: query,\n                variables: variables,\n                returnPartialData: true,\n                optimistic: false,\n            }), complete = _d.complete, result = _d.result;\n            // If we're in here, only fetch if we have missing fields\n            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n            storeResult = result;\n        }\n        var shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n        // we need to check to see if this is an operation that uses the @live directive\n        if (Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"p\" /* hasDirectives */])(['live'], query))\n            shouldFetch = true;\n        var requestId = this.generateRequestId();\n        // set up a watcher to listen to cache updates\n        var cancel = this.updateQueryWatch(queryId, query, options);\n        // Initialize query in store with unique requestId\n        this.setQuery(queryId, function () { return ({\n            document: query,\n            lastRequestId: requestId,\n            invalidated: true,\n            cancel: cancel,\n        }); });\n        this.invalidate(true, fetchMoreForQueryId);\n        this.queryStore.initQuery({\n            queryId: queryId,\n            document: query,\n            storePreviousVariables: shouldFetch,\n            variables: variables,\n            isPoll: fetchType === __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].poll,\n            isRefetch: fetchType === __WEBPACK_IMPORTED_MODULE_11__types__[\"a\" /* FetchType */].refetch,\n            metadata: metadata,\n            fetchMoreForQueryId: fetchMoreForQueryId,\n        });\n        this.broadcastQueries();\n        // If there is no part of the query we need to fetch from the server (or,\n        // fetchPolicy is cache-only), we just write the store result as the final result.\n        var shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n        if (shouldDispatchClientResult) {\n            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n            this.broadcastQueries();\n        }\n        if (shouldFetch) {\n            var networkResult = this.fetchRequest({\n                requestId: requestId,\n                queryId: queryId,\n                document: query,\n                options: options,\n                fetchMoreForQueryId: fetchMoreForQueryId,\n            }).catch(function (error) {\n                // This is for the benefit of `refetch` promises, which currently don't get their errors\n                // through the store like watchQuery observers do\n                if (Object(__WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"b\" /* isApolloError */])(error)) {\n                    throw error;\n                }\n                else {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    _this.removeFetchQueryPromise(requestId);\n                    throw new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({ networkError: error });\n                }\n            });\n            // we don't return the promise for cache-and-network since it is already\n            // returned below from the cache\n            if (fetchPolicy !== 'cache-and-network') {\n                return networkResult;\n            }\n            else {\n                // however we need to catch the error so it isn't unhandled in case of\n                // network error\n                networkResult.catch(function () { });\n            }\n        }\n        // If we have no query to send to the server, we should return the result\n        // found within the store.\n        return Promise.resolve({ data: storeResult });\n    };\n    // Returns a query listener that will update the given observer based on the\n    // results (or lack thereof) for a particular query.\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData) {\n            // we're going to take a look at the data, so the query is no longer invalidated\n            _this.invalidate(false, queryId);\n            // The query store value can be undefined in the event of a store\n            // reset.\n            if (!queryStoreValue)\n                return;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            // don't watch the store for queries on standby\n            if (fetchPolicy === 'standby')\n                return;\n            var errorPolicy = observableQuery\n                ? observableQuery.options.errorPolicy\n                : options.errorPolicy;\n            var lastResult = observableQuery\n                ? observableQuery.getLastResult()\n                : null;\n            var lastError = observableQuery ? observableQuery.getLastError() : null;\n            var shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            // if this caused by a cache broadcast but the query is still in flight\n            // don't notify the observer\n            // if (\n            //   isCacheBroadcast &&\n            //   isNetworkRequestInFlight(queryStoreValue.networkStatus)\n            // ) {\n            //   shouldNotifyIfLoading = false;\n            // }\n            var networkStatusChanged = Boolean(lastResult &&\n                queryStoreValue.networkStatus !== lastResult.networkStatus);\n            var errorStatusChanged = errorPolicy &&\n                (lastError && lastError.graphQLErrors) !==\n                    queryStoreValue.graphQLErrors &&\n                errorPolicy !== 'none';\n            if (!Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                shouldNotifyIfLoading) {\n                // If we have either a GraphQL error or a network error, we create\n                // an error and tell the observer about it.\n                if (((!errorPolicy || errorPolicy === 'none') &&\n                    queryStoreValue.graphQLErrors &&\n                    queryStoreValue.graphQLErrors.length > 0) ||\n                    queryStoreValue.networkError) {\n                    var apolloError_1 = new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    });\n                    previouslyHadError = true;\n                    if (observer.error) {\n                        try {\n                            observer.error(apolloError_1);\n                        }\n                        catch (e) {\n                            // Throw error outside this control flow to avoid breaking Apollo's state\n                            setTimeout(function () {\n                                throw e;\n                            }, 0);\n                        }\n                    }\n                    else {\n                        // Throw error outside this control flow to avoid breaking Apollo's state\n                        setTimeout(function () {\n                            throw apolloError_1;\n                        }, 0);\n                        if (!Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"v\" /* isProduction */])()) {\n                            /* tslint:disable-next-line */\n                            console.info('An unhandled error was thrown because no error handler is registered ' +\n                                'for the query ' +\n                                Object(__WEBPACK_IMPORTED_MODULE_1_graphql_language_printer__[\"a\" /* print */])(queryStoreValue.document));\n                        }\n                    }\n                    return;\n                }\n                try {\n                    var data = void 0;\n                    var isMissing = void 0;\n                    if (newData) {\n                        // clear out the latest new data, since we're now using it\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                        data = newData.result;\n                        isMissing = !newData.complete || false;\n                    }\n                    else {\n                        if (lastResult && lastResult.data && !errorStatusChanged) {\n                            data = lastResult.data;\n                            isMissing = false;\n                        }\n                        else {\n                            var document_1 = _this.getQuery(queryId).document;\n                            var readResult = _this.dataStore.getCache().diff({\n                                query: document_1,\n                                variables: queryStoreValue.previousVariables ||\n                                    queryStoreValue.variables,\n                                optimistic: true,\n                            });\n                            data = readResult.result;\n                            isMissing = !readResult.complete;\n                        }\n                    }\n                    var resultFromStore = void 0;\n                    // If there is some data missing and the user has told us that they\n                    // do not tolerate partial data then we want to return the previous\n                    // result and mark it as stale.\n                    if (isMissing && fetchPolicy !== 'cache-only') {\n                        resultFromStore = {\n                            data: lastResult && lastResult.data,\n                            loading: Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: true,\n                        };\n                    }\n                    else {\n                        resultFromStore = {\n                            data: data,\n                            loading: Object(__WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"b\" /* isNetworkRequestInFlight */])(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: false,\n                        };\n                    }\n                    // if the query wants updates on errors we need to add it to the result\n                    if (errorPolicy === 'all' &&\n                        queryStoreValue.graphQLErrors &&\n                        queryStoreValue.graphQLErrors.length > 0) {\n                        resultFromStore.errors = queryStoreValue.graphQLErrors;\n                    }\n                    if (observer.next) {\n                        var isDifferentResult = !(lastResult &&\n                            resultFromStore &&\n                            lastResult.networkStatus === resultFromStore.networkStatus &&\n                            lastResult.stale === resultFromStore.stale &&\n                            // We can do a strict equality check here because we include a `previousResult`\n                            // with `readQueryFromStore`. So if the results are the same they will be\n                            // referentially equal.\n                            lastResult.data === resultFromStore.data);\n                        if (isDifferentResult || previouslyHadError) {\n                            try {\n                                observer.next(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])(resultFromStore));\n                            }\n                            catch (e) {\n                                // Throw error outside this control flow to avoid breaking Apollo's state\n                                setTimeout(function () {\n                                    throw e;\n                                }, 0);\n                            }\n                        }\n                    }\n                    previouslyHadError = false;\n                }\n                catch (error) {\n                    previouslyHadError = true;\n                    if (observer.error)\n                        observer.error(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({ networkError: error }));\n                    return;\n                }\n            }\n        };\n    };\n    // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n    // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n    // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n    // but we don't want to keep track observables issued for the query method since those aren't\n    // supposed to be refetched in the event of a store reset. Once we unify error handling for\n    // network errors and non-network errors, the shouldSubscribe option will go away.\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        if (options.fetchPolicy === 'standby') {\n            throw new Error('client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        }\n        // get errors synchronously\n        var queryDefinition = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(options.query);\n        // assign variable default values if supplied\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(queryDefinition);\n            options.variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new __WEBPACK_IMPORTED_MODULE_9__ObservableQuery__[\"a\" /* ObservableQuery */]({\n            scheduler: this.scheduler,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        if (!options.query) {\n            throw new Error('query option is required. You must specify your GraphQL document ' +\n                'in the query option.');\n        }\n        if (options.query.kind !== 'Document') {\n            throw new Error('You must wrap the query string in a \"gql\" tag.');\n        }\n        if (options.returnPartialData) {\n            throw new Error('returnPartialData option only supported on watchQuery.');\n        }\n        if (options.pollInterval) {\n            throw new Error('pollInterval option only supported on watchQuery.');\n        }\n        var requestId = this.idCounter;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            return _this.watchQuery(options, false)\n                .result()\n                .then(function (result) {\n                _this.removeFetchQueryPromise(requestId);\n                resolve(result);\n            })\n                .catch(function (error) {\n                _this.removeFetchQueryPromise(requestId);\n                reject(error);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidate: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    // Adds a promise to this.fetchQueryPromises for a given request ID.\n    QueryManager.prototype.addFetchQueryPromise = function (requestId, resolve, reject) {\n        this.fetchQueryPromises.set(requestId.toString(), {\n            resolve: resolve,\n            reject: reject,\n        });\n    };\n    // Removes the promise in this.fetchQueryPromises for a particular request ID.\n    QueryManager.prototype.removeFetchQueryPromise = function (requestId) {\n        this.fetchQueryPromises.delete(requestId.toString());\n    };\n    // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        // Insert the ObservableQuery into this.observableQueriesByName if the query has a name\n        var queryDef = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            // XXX we may we want to warn the user about query name conflicts in the future\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"m\" /* getQueryDefinition */])(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        // Before we have sent the reset action to the store,\n        // we can no longer rely on the results returned by in-flight\n        // requests since these may depend on values that previously existed\n        // in the data portion of the store. So, we cancel the promises and observers\n        // that we have issued so far and not yet resolved (in the case of\n        // queries).\n        this.fetchQueryPromises.forEach(function (_a) {\n            var reject = _a.reject;\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        // begin removing data from the store\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        // Similarly, we have to have to refetch each of the queries currently being\n        // observed. We refetch instead of error'ing on these since the assumption is that\n        // resetting the store doesn't eliminate the need for the queries currently being\n        // watched. If there is an existing query in flight when the store is reset,\n        // the promise for it will be rejected and its results will not be written to the\n        // store.\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n            // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"c\" /* assign */])({}, Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"e\" /* getDefaultValues */])(Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"k\" /* getOperationDefinition */])(query)), options.variables);\n        var sub;\n        var observers = [];\n        return new __WEBPACK_IMPORTED_MODULE_6__util_Observable__[\"a\" /* Observable */](function (observer) {\n            observers.push(observer);\n            // If this is the first observer, actually initiate the network subscription\n            if (observers.length === 1) {\n                var handler = {\n                    next: function (result) {\n                        _this.dataStore.markSubscriptionResult(result, transformedDoc, variables);\n                        _this.broadcastQueries();\n                        // It's slightly awkward that the data for subscriptions doesn't come from the store.\n                        observers.forEach(function (obs) {\n                            // XXX I'd prefer a different way to handle errors for subscriptions\n                            if (obs.next)\n                                obs.next(result);\n                        });\n                    },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error)\n                                obs.error(error);\n                        });\n                    },\n                };\n                // TODO: Should subscriptions also accept a `context` option to pass\n                // through to links?\n                var operation = _this.buildOperationForLink(transformedDoc, variables);\n                sub = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.link, operation).subscribe(handler);\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                // If we removed the last observer, tear down the network subscription\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryInStore(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        // teardown all links\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        // XXX test this\n        if (newData) {\n            return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: newData.result, partial: false });\n        }\n        else {\n            try {\n                // the query is brand new, so we read from the store to see if anything is there\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                });\n                return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: data, partial: false });\n            }\n            catch (e) {\n                return Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"x\" /* maybeDeepFreeze */])({ data: {}, partial: true });\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            if (!foundObserveableQuery) {\n                throw new Error(\"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            }\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                // it's possible for the listener to be undefined if the query is being stopped\n                // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData);\n            });\n        });\n    };\n    // Takes a request id, query id, a query document and information associated with the query\n    // and send it to the network interface. Returns\n    // a promise for the result associated with that request.\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var operation = this.buildOperationForLink(document, variables, __assign({}, context, { \n            // TODO: Should this be included for all entry points via\n            // buildOperationForLink?\n            forceFetch: !this.queryDeduplication }));\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            var subscription = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"execute\"])(_this.deduplicator, operation).subscribe({\n                next: function (result) {\n                    // default the lastRequestId to 1\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        if (fetchPolicy !== 'no-cache') {\n                            try {\n                                _this.dataStore.markQueryResult(result, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                            }\n                            catch (e) {\n                                reject(e);\n                                return;\n                            }\n                        }\n                        else {\n                            _this.setQuery(queryId, function () { return ({\n                                newData: { result: result.data, complete: true },\n                            }); });\n                        }\n                        _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    if (result.errors && errorPolicy === 'none') {\n                        reject(new __WEBPACK_IMPORTED_MODULE_5__errors_ApolloError__[\"a\" /* ApolloError */]({\n                            graphQLErrors: result.errors,\n                        }));\n                        return;\n                    }\n                    else if (errorPolicy === 'all') {\n                        errorsFromStore = result.errors;\n                    }\n                    if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                        // We don't write fetchMore results to the store because this would overwrite\n                        // the original result in case an @connection directive is used.\n                        resultFromStore = result.data;\n                    }\n                    else {\n                        try {\n                            // ensure result is combined with data already in store\n                            resultFromStore = _this.dataStore.getCache().read({\n                                variables: variables,\n                                query: document,\n                                optimistic: false,\n                            });\n                            // this will throw an error if there are missing fields in\n                            // the results which can happen with errors from the server.\n                            // tslint:disable-next-line\n                        }\n                        catch (e) { }\n                    }\n                },\n                error: function (error) {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: __WEBPACK_IMPORTED_MODULE_10__networkStatus__[\"a\" /* NetworkStatus */].ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        });\n    };\n    // Refetches a query given that query's name. Refetches\n    // all ObservableQuery instances associated with the query name.\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        // early return if the query named does not exist (not yet fetched)\n        // this used to warn but it may be inteneded behavoir to try and refetch\n        // un called queries because they could be on different routes\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return this.queries.get(queryId) || __assign({}, defaultQueryInfo);\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: Object(__WEBPACK_IMPORTED_MODULE_3_apollo_utilities__[\"l\" /* getOperationName */])(document) || undefined,\n            context: __assign({}, extraContext, { cache: cache, \n                // getting an entry's cache key is useful for cacheResolvers & state-link\n                getCacheKey: function (obj) {\n                    if (cache.config) {\n                        // on the link, we just want the id string, not the full id value from toIdValue\n                        return cache.config.dataIdFromObject(obj);\n                    }\n                    else {\n                        throw new Error('To use context.getCacheKey, you need to use a cache that has a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                    }\n                } }),\n        };\n    };\n    return QueryManager;\n}());\n\n//# sourceMappingURL=QueryManager.js.map\n\n/***/ }),\n\n/***/ 1942:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryScheduler; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core_types__ = __webpack_require__(1794);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__ = __webpack_require__(1806);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1782);\n// The QueryScheduler is supposed to be a mechanism that schedules polling queries such that\n// they are clustered into the time slots of the QueryBatcher and are batched together. It\n// also makes sure that for a given polling query, if one instance of the query is inflight,\n// another instance will not be fired until the query returns or times out. We do this because\n// another query fires while one is already in flight, the data will stay in the \"loading\" state\n// even after the first query has returned.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar QueryScheduler = /** @class */ (function () {\n    function QueryScheduler(_a) {\n        var queryManager = _a.queryManager, ssrMode = _a.ssrMode;\n        // Map going from queryIds to query options that are in flight.\n        this.inFlightQueries = {};\n        // Map going from query ids to the query options associated with those queries. Contains all of\n        // the queries, both in flight and not in flight.\n        this.registeredQueries = {};\n        // Map going from polling interval with to the query ids that fire on that interval.\n        // These query ids are associated with a set of options in the this.registeredQueries.\n        this.intervalQueries = {};\n        // Map going from polling interval widths to polling timers.\n        this.pollingTimers = {};\n        this.ssrMode = false;\n        this.queryManager = queryManager;\n        this.ssrMode = ssrMode || false;\n    }\n    QueryScheduler.prototype.checkInFlight = function (queryId) {\n        var query = this.queryManager.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready &&\n            query.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].error);\n    };\n    QueryScheduler.prototype.fetchQuery = function (queryId, options, fetchType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.queryManager\n                .fetchQuery(queryId, options, fetchType)\n                .then(function (result) {\n                resolve(result);\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    QueryScheduler.prototype.startPollingQuery = function (options, queryId, listener) {\n        if (!options.pollInterval) {\n            throw new Error('Attempted to start a polling query without a polling interval.');\n        }\n        // Do not poll in SSR mode\n        if (this.ssrMode)\n            return queryId;\n        this.registeredQueries[queryId] = options;\n        if (listener) {\n            this.queryManager.addQueryListener(queryId, listener);\n        }\n        this.addQueryOnInterval(queryId, options);\n        return queryId;\n    };\n    QueryScheduler.prototype.stopPollingQuery = function (queryId) {\n        // Remove the query options from one of the registered queries.\n        // The polling function will then take care of not firing it anymore.\n        delete this.registeredQueries[queryId];\n    };\n    // Fires the all of the queries on a particular interval. Called on a setInterval.\n    QueryScheduler.prototype.fetchQueriesOnInterval = function (interval) {\n        var _this = this;\n        // XXX this \"filter\" here is nasty, because it does two things at the same time.\n        // 1. remove queries that have stopped polling\n        // 2. call fetchQueries for queries that are polling and not in flight.\n        // TODO: refactor this to make it cleaner\n        this.intervalQueries[interval] = this.intervalQueries[interval].filter(function (queryId) {\n            // If queryOptions can't be found from registeredQueries or if it has a\n            // different interval, it means that this queryId is no longer registered\n            // and should be removed from the list of queries firing on this interval.\n            //\n            // We don't remove queries from intervalQueries immediately in\n            // stopPollingQuery so that we can keep the timer consistent when queries\n            // are removed and replaced, and to avoid quadratic behavior when stopping\n            // many queries.\n            if (!(_this.registeredQueries.hasOwnProperty(queryId) &&\n                _this.registeredQueries[queryId].pollInterval === interval)) {\n                return false;\n            }\n            // Don't fire this instance of the polling query is one of the instances is already in\n            // flight.\n            if (_this.checkInFlight(queryId)) {\n                return true;\n            }\n            var queryOptions = _this.registeredQueries[queryId];\n            var pollingOptions = __assign({}, queryOptions);\n            pollingOptions.fetchPolicy = 'network-only';\n            // don't let unhandled rejections happen\n            _this.fetchQuery(queryId, pollingOptions, __WEBPACK_IMPORTED_MODULE_0__core_types__[\"a\" /* FetchType */].poll).catch(function () { });\n            return true;\n        });\n        if (this.intervalQueries[interval].length === 0) {\n            clearInterval(this.pollingTimers[interval]);\n            delete this.intervalQueries[interval];\n        }\n    };\n    // Adds a query on a particular interval to this.intervalQueries and then fires\n    // that query with all the other queries executing on that interval. Note that the query id\n    // and query options must have been added to this.registeredQueries before this function is called.\n    QueryScheduler.prototype.addQueryOnInterval = function (queryId, queryOptions) {\n        var _this = this;\n        var interval = queryOptions.pollInterval;\n        if (!interval) {\n            throw new Error(\"A poll interval is required to start polling query with id '\" + queryId + \"'.\");\n        }\n        // If there are other queries on this interval, this query will just fire with those\n        // and we don't need to create a new timer.\n        if (this.intervalQueries.hasOwnProperty(interval.toString()) &&\n            this.intervalQueries[interval].length > 0) {\n            this.intervalQueries[interval].push(queryId);\n        }\n        else {\n            this.intervalQueries[interval] = [queryId];\n            // set up the timer for the function that will handle this interval\n            this.pollingTimers[interval] = setInterval(function () {\n                _this.fetchQueriesOnInterval(interval);\n            }, interval);\n        }\n    };\n    // Used only for unit testing.\n    QueryScheduler.prototype.registerPollingQuery = function (queryOptions) {\n        if (!queryOptions.pollInterval) {\n            throw new Error('Attempted to register a non-polling query with the scheduler.');\n        }\n        return new __WEBPACK_IMPORTED_MODULE_1__core_ObservableQuery__[\"a\" /* ObservableQuery */]({\n            scheduler: this,\n            options: queryOptions,\n        });\n    };\n    return QueryScheduler;\n}());\n\n//# sourceMappingURL=scheduler.js.map\n\n/***/ }),\n\n/***/ 1943:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MutationStore; });\nvar MutationStore = /** @class */ (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutationString, variables) {\n        this.store[mutationId] = {\n            mutationString: mutationString,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\n//# sourceMappingURL=mutations.js.map\n\n/***/ }),\n\n/***/ 1944:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__ = __webpack_require__(1782);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\nvar QueryStore = /** @class */ (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(previousQuery.document) !== Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(query.document)) {\n            // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n            // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n            // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n            throw new Error('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading\n        // if the previous query was still loading, we don't want to remember it at all.\n        ) {\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"q\" /* isEqual */])(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        // TODO break this out into a separate function\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].refetch;\n            // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n        }\n        else {\n            networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n        // the store. We probably want a refetch action instead, because I suspect that if you refetch\n        // before the initial fetch is done, you'll get an error.\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        // If the action had a `moreForQueryId` property then we need to set the\n        // network status on that query as well to `fetchMore`.\n        //\n        // We have a complement to this if statement in the query result and query\n        // error action branch, but importantly *not* in the client result branch.\n        // This is because the implementation of `fetchMore` *always* sets\n        // `fetchPolicy` to `network-only` so we would never have a client result.\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].error;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].ready\n            : __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        // keep only the queries with query ids that are associated with observables\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            // XXX set loading to true so listeners don't trigger unless they want results with partial data\n            res[key] = __assign({}, _this.store[key], { networkStatus: __WEBPACK_IMPORTED_MODULE_2__core_networkStatus__[\"a\" /* NetworkStatus */].loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\n\n//# sourceMappingURL=queries.js.map\n\n/***/ }),\n\n/***/ 1945:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DataStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n\nvar DataStore = /** @class */ (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result);\n        if (ignoreErrors && Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        // the subscription interface should handle not sending us results we no longer subscribe to.\n        // XXX I don't think we ever send in an object with errors, but we might in the future...\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        // Incorporate the result from this mutation into the store\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"o\" /* graphQLResultHasError */])(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    // Read the current query result from the store.\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    // Run our reducer using the current query result and the mutation result.\n                    var nextQueryResult = Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"l\" /* getOperationName */])(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    // Write the modified result back into the store if we got a new result.\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            // If the mutation has some writes associated with it then we need to\n            // apply those writes to the store by running this reducer again with a\n            // write action.\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"D\" /* tryFunctionOrLogError */])(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\n//# sourceMappingURL=store.js.map\n\n/***/ }),\n\n/***/ 1946:\n/***/ (function(module, exports) {\n\nexports.version = \"2.3.5\"\n\n/***/ }),\n\n/***/ 1947:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__httpLink__ = __webpack_require__(1948);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"createHttpLink\", function() { return __WEBPACK_IMPORTED_MODULE_0__httpLink__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"HttpLink\", function() { return __WEBPACK_IMPORTED_MODULE_0__httpLink__[\"a\"]; });\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1948:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createHttpLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HttpLink; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_link__ = __webpack_require__(1770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__ = __webpack_require__(1949);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\n\n\nvar createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, \n    // use default global fetch is nothing passed in\n    fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    // dev warnings to ensure fetch is present\n    Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"a\" /* checkFetcher */])(fetcher);\n    //fetcher is set here rather than the destructuring to ensure fetch is\n    //declared before referencing it. Reference in the destructuring would cause\n    //a ReferenceError\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"](function (operation) {\n        var chosenURI = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"f\" /* selectURI */])(operation, uri);\n        var context = operation.getContext();\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: context.headers,\n        };\n        //uses fallback, link, and then context to build options\n        var _a = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"e\" /* selectHttpOptionsAndBody */])(operation, __WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"c\" /* fallbackHttpConfig */], linkConfig, contextConfig), options = _a.options, body = _a.body;\n        var controller;\n        if (!options.signal) {\n            var _b = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"b\" /* createSignalIfSupported */])(), _controller = _b.controller, signal = _b.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        // If requested, set method to GET if there are no mutations.\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _c = rewriteURIForGET(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"fromError\"])(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"g\" /* serializeFetchParameter */])(body, 'Payload');\n            }\n            catch (parseError) {\n                return Object(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"fromError\"])(parseError);\n            }\n        }\n        return new __WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"Observable\"](function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"d\" /* parseAndCheckHttpResponse */])(operation))\n                .then(function (result) {\n                // we have data and can send it to back up the link chain\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                // fetch was cancelled so its already been cleaned up in the unsubscribe\n                if (err.name === 'AbortError')\n                    return;\n                // if it is a network error, BUT there is graphql result info\n                // fire the next observer before calling error\n                // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n                // to pass to UI\n                // this should only happen if we *also* have data as part of the response key per\n                // the spec\n                if (err.result && err.result.errors && err.result.data) {\n                    // if we dont' call next, the UI can only show networkError because AC didn't\n                    // get andy graphqlErrors\n                    // this is graphql execution result info (i.e errors and possibly data)\n                    // this is because there is no formal spec how errors should translate to\n                    // http status codes. So an auth error (401) could have both data\n                    // from a public field, errors from a private field, and a status of 401\n                    // {\n                    //  user { // this will have errors\n                    //    firstName\n                    //  }\n                    //  products { // this is public so will have data\n                    //    cost\n                    //  }\n                    // }\n                    //\n                    // the result of above *could* look like this:\n                    // {\n                    //   data: { products: [{ cost: \"$10\" }] },\n                    //   errors: [{\n                    //      message: 'your session has timed out',\n                    //      path: []\n                    //   }]\n                    // }\n                    // status code of above would be a 401\n                    // in the UI you want to show data where you can, errors as data where you can\n                    // and use correct http status codes\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                // XXX support canceling this request\n                // https://developers.google.com/web/updates/2017/09/abortable-fetch\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI, body) {\n    // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n    // the extra level of JSON serialization!\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"g\" /* serializeFetchParameter */])(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_link_http_common__[\"g\" /* serializeFetchParameter */])(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    // Reconstruct the URI with added query params.\n    // XXX This assumes that the URI is well-formed and that it doesn't\n    //     already contain any of these query params. We could instead use the\n    //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n    //     don't support URLSearchParams. Note that some browsers (and\n    //     versions of whatwg-url) support URL but not URLSearchParams!\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = /** @class */ (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(__WEBPACK_IMPORTED_MODULE_0_apollo_link__[\"ApolloLink\"]));\n\n//# sourceMappingURL=httpLink.js.map\n\n/***/ }),\n\n/***/ 1949:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return fallbackHttpConfig; });\n/* unused harmony export throwServerError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return parseAndCheckHttpResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return checkFetcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createSignalIfSupported; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return selectHttpOptionsAndBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return serializeFetchParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return selectURI; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__ = __webpack_require__(1764);\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    // headers are case insensitive (https://stackoverflow.com/a/5259004)\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nvar throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nvar parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            //Network error\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            //Data error\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nvar checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw new Error(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nvar createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    /*\n     * use the rest of the configs to populate the options\n     * configs later in the list will overwrite earlier fields\n     */\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    //The body depends on the http options\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    // not sending the query (i.e persisted queries)\n    if (http.includeQuery)\n        body.query = Object(__WEBPACK_IMPORTED_MODULE_0_graphql_language_printer__[\"a\" /* print */])(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nvar serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = new Error(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\n//selects \"/graphql\" by default\nvar selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1950:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = defaultDataIdFromObject;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return InMemoryCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_cache__ = __webpack_require__(1951);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fragmentMatcher__ = __webpack_require__(1870);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__writeToStore__ = __webpack_require__(1871);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__readFromStore__ = __webpack_require__(1872);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__objectCache__ = __webpack_require__(1808);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__recordingCache__ = __webpack_require__(1874);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n\n\n\n\n\n\n\nvar defaultConfig = {\n    fragmentMatcher: new __WEBPACK_IMPORTED_MODULE_2__fragmentMatcher__[\"a\" /* HeuristicFragmentMatcher */](),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    storeFactory: __WEBPACK_IMPORTED_MODULE_5__objectCache__[\"b\" /* defaultNormalizedCacheFactory */],\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.optimistic = [];\n        _this.watches = [];\n        _this.typenameDocumentCache = new WeakMap();\n        // Set this while in a transaction to prevent broadcasts...\n        // don't forget to turn it back on!\n        _this.silenceBroadcast = false;\n        _this.config = __assign({}, defaultConfig, config);\n        // backwards compat\n        if (_this.config.customResolvers) {\n            console.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            console.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = _this.config.addTypename;\n        _this.data = _this.config.storeFactory();\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        if (optimistic && this.optimistic.length > 0) {\n            var patches = this.optimistic.map(function (opt) { return opt.data; });\n            return Object.assign.apply(Object, [{}, this.data.toObject()].concat(patches));\n        }\n        return this.data.toObject();\n    };\n    InMemoryCache.prototype.read = function (query) {\n        if (query.rootId && this.data.get(query.rootId) === undefined) {\n            return null;\n        }\n        return Object(__WEBPACK_IMPORTED_MODULE_4__readFromStore__[\"d\" /* readQueryFromStore */])({\n            store: this.config.storeFactory(this.extract(query.optimistic)),\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            rootId: query.rootId,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            previousResult: query.previousResult,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.write = function (write) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__writeToStore__[\"d\" /* writeResultToStore */])({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        return Object(__WEBPACK_IMPORTED_MODULE_4__readFromStore__[\"c\" /* diffQueryAgainstStore */])({\n            store: this.config.storeFactory(this.extract(query.optimistic)),\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.push(watch);\n        return function () {\n            _this.watches = _this.watches.filter(function (c) { return c !== watch; });\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw new Error(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (id) {\n        var _this = this;\n        // Throw away optimistic changes of that particular mutation\n        var toPerform = this.optimistic.filter(function (item) { return item.id !== id; });\n        this.optimistic = [];\n        // Re-run all of our optimistic data actions on top of one another.\n        toPerform.forEach(function (change) {\n            _this.recordOptimisticTransaction(change.transaction, change.id);\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction) {\n        // TODO: does this need to be different, or is this okay for an in-memory cache?\n        var alreadySilenced = this.silenceBroadcast;\n        this.silenceBroadcast = true;\n        transaction(this);\n        if (!alreadySilenced) {\n            // Don't un-silence since this is a nested transaction\n            // (for example, a transaction inside an optimistic record)\n            this.silenceBroadcast = false;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        var _this = this;\n        this.silenceBroadcast = true;\n        var patch = Object(__WEBPACK_IMPORTED_MODULE_6__recordingCache__[\"b\" /* record */])(this.extract(true), function (recordingCache) {\n            // swapping data instance on 'this' is currently necessary\n            // because of the current architecture\n            var dataCache = _this.data;\n            _this.data = recordingCache;\n            _this.performTransaction(transaction);\n            _this.data = dataCache;\n        });\n        this.optimistic.push({\n            id: id,\n            transaction: transaction,\n            data: patch,\n        });\n        this.silenceBroadcast = false;\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                this.typenameDocumentCache.set(document, (result = Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"a\" /* addTypenameToDocument */])(document)));\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: this.transformDocument(Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"h\" /* getFragmentQueryDocument */])(options.fragment, options.fragmentName)),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            query: this.transformDocument(Object(__WEBPACK_IMPORTED_MODULE_1_apollo_utilities__[\"h\" /* getFragmentQueryDocument */])(options.fragment, options.fragmentName)),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        // Skip this when silenced (like inside a transaction)\n        if (this.silenceBroadcast)\n            return;\n        // right now, we invalidate all queries whenever anything changes\n        this.watches.forEach(function (c) {\n            var newData = _this.diff({\n                query: c.query,\n                variables: c.variables,\n                // TODO: previousResult isn't in the types - this will only work\n                // with ObservableQuery which is in a different package\n                previousResult: c.previousResult && c.previousResult(),\n                optimistic: c.optimistic,\n            });\n            c.callback(newData);\n        });\n    };\n    return InMemoryCache;\n}(__WEBPACK_IMPORTED_MODULE_0_apollo_cache__[\"a\" /* ApolloCache */]));\n\n//# sourceMappingURL=inMemoryCache.js.map\n\n/***/ }),\n\n/***/ 1951:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cache__ = __webpack_require__(1952);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__cache__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__types__ = __webpack_require__(1954);\n/* unused harmony namespace reexport */\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1952:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ApolloCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_apollo_utilities__ = __webpack_require__(1763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(1953);\n\n\nvar ApolloCache = /** @class */ (function () {\n    function ApolloCache() {\n    }\n    // optional API\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    // experimental\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    // DataProxy API\n    /**\n     *\n     * @param options\n     * @param optimistic\n     */\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"h\" /* getFragmentQueryDocument */])(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_utilities__[\"h\" /* getFragmentQueryDocument */])(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            // Since we can't use fragments without having a typename in the store,\n            // we need to make sure we have one.\n            // To avoid overwriting an existing typename, we need to read it out first\n            // and generate a fake one if none exists.\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: __WEBPACK_IMPORTED_MODULE_1__utils__[\"b\" /* justTypenameQuery */],\n                });\n            }\n            catch (e) {\n                // Do nothing, since an error just means no typename exists\n            }\n            // tslint:disable-next-line\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            // Add a type here to satisfy the inmemory cache\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"a\" /* fragmentFromPojo */])(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* queryFromPojo */])(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\n//# sourceMappingURL=cache.js.map\n\n/***/ }),\n\n/***/ 1953:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = queryFromPojo;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fragmentFromPojo;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return justTypenameQuery; });\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        // No selection set here\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        // GraphQL queries don't include arrays\n        return selectionSetFromObj(obj[0]);\n    }\n    // Now we know it's an object\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n        };\n        // Recurse\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        if (nestedSelSet) {\n            field.selectionSet = nestedSelSet;\n        }\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n//# sourceMappingURL=utils.js.map\n\n/***/ }),\n\n/***/ 1954:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Cache__ = __webpack_require__(1955);\n/* unused harmony namespace reexport */\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1955:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Cache */\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n//# sourceMappingURL=Cache.js.map\n\n/***/ }),\n\n/***/ 1956:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utilities__ = __webpack_require__(1957);\n/* unused harmony reexport filter */\n/* unused harmony reexport check */\n/* unused harmony reexport propType */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__graphql__ = __webpack_require__(1873);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (__WEBPACK_IMPORTED_MODULE_1__graphql__[\"a\" /* graphql */]);\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 1957:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export filter */\n/* unused harmony export check */\n/* unused harmony export propType */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__graphql__ = __webpack_require__(1873);\n\nfunction filter(doc, data) {\n    var resolver = function (fieldName, root, args, context, info) {\n        return root[info.resultKey];\n    };\n    return Object(__WEBPACK_IMPORTED_MODULE_0__graphql__[\"a\" /* graphql */])(resolver, doc, data);\n}\n// TODO: we should probably make check call propType and then throw,\n// rather than the other way round, to avoid constructing stack traces\n// for things like oneOf uses in React. At this stage I doubt many people\n// are using this like that, but in the future, who knows?\nfunction check(doc, data) {\n    var resolver = function (fieldName, root, args, context, info) {\n        if (!{}.hasOwnProperty.call(root, info.resultKey)) {\n            throw new Error(info.resultKey + \" missing on \" + root);\n        }\n        return root[info.resultKey];\n    };\n    Object(__WEBPACK_IMPORTED_MODULE_0__graphql__[\"a\" /* graphql */])(resolver, doc, data, {}, {}, {\n        fragmentMatcher: function () { return false; },\n    });\n}\n// Lifted/adapted from\n//   https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\nvar ANONYMOUS = '<<anonymous>>';\nfunction PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\nvar reactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context',\n};\nfunction createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n        componentName = componentName || ANONYMOUS;\n        propFullName = propFullName || propName;\n        if (props[propName] == null) {\n            var locationName = reactPropTypeLocationNames[location];\n            if (isRequired) {\n                if (props[propName] === null) {\n                    return new PropTypeError(\"The \" + locationName + \" `\" + propFullName + \"` is marked as required \" +\n                        (\"in `\" + componentName + \"`, but its value is `null`.\"));\n                }\n                return new PropTypeError(\"The \" + locationName + \" `\" + propFullName + \"` is marked as required in \" +\n                    (\"`\" + componentName + \"`, but its value is `undefined`.\"));\n            }\n            return null;\n        }\n        else {\n            return validate(props, propName, componentName, location, propFullName);\n        }\n    }\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n}\nfunction propType(doc) {\n    return createChainableTypeChecker(function (props, propName) {\n        var prop = props[propName];\n        try {\n            if (!prop.loading) {\n                check(doc, prop);\n            }\n            return null;\n        }\n        catch (e) {\n            // Need a much better error.\n            // Also we aren't checking for extra fields\n            return e;\n        }\n    });\n}\n//# sourceMappingURL=utilities.js.map\n\n/***/ }),\n\n/***/ 1958:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = syntaxError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__GraphQLError__ = __webpack_require__(1772);\n\n\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nfunction syntaxError(source, position, description) {\n  return new __WEBPACK_IMPORTED_MODULE_0__GraphQLError__[\"a\" /* GraphQLError */]('Syntax Error: ' + description, undefined, source, [position]);\n}\n\n/***/ }),\n\n/***/ 1959:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = formatError;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nfunction formatError(error) {\n  !error ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Received null or undefined error.') : void 0;\n  return _extends({}, error.extensions, {\n    message: error.message || 'An unknown error occurred.',\n    locations: error.locations,\n    path: error.path\n  });\n}\n\n/***/ }),\n\n/***/ 1960:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.filterTypesByIncludeExclude = undefined;\n\nvar _regenerator = __webpack_require__(46);\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _defineProperty2 = __webpack_require__(37);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = __webpack_require__(5);\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _toConsumableArray2 = __webpack_require__(89);\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _taggedTemplateLiteral2 = __webpack_require__(1880);\n\nvar _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);\n\nvar _asyncToGenerator2 = __webpack_require__(421);\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _templateObject = (0, _taggedTemplateLiteral3.default)(['\\n                      ', '\\n                  '], ['\\n                      ', '\\n                  ']);\n\nvar _graphql = __webpack_require__(1779);\n\nvar _graphqlTag = __webpack_require__(1809);\n\nvar _graphqlTag2 = _interopRequireDefault(_graphqlTag);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _constants = __webpack_require__(1879);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar filterTypesByIncludeExclude = exports.filterTypesByIncludeExclude = function filterTypesByIncludeExclude(_ref) {\n    var include = _ref.include,\n        exclude = _ref.exclude;\n\n    if (Array.isArray(include)) {\n        return function (type) {\n            return include.includes(type.name);\n        };\n    }\n\n    if (typeof include === 'function') {\n        return function (type) {\n            return include(type);\n        };\n    }\n\n    if (Array.isArray(exclude)) {\n        return function (type) {\n            return !exclude.includes(type.name);\n        };\n    }\n\n    if (typeof exclude === 'function') {\n        return function (type) {\n            return !exclude(type);\n        };\n    }\n\n    return function () {\n        return true;\n    };\n};\n\n/**\n * @param {ApolloClient} client The Apollo client\n * @param {Object} options The introspection options\n */\n\nexports.default = function () {\n    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(client, options) {\n        var schema, queries, types, isResource, buildResource, potentialResources, filteredResources, resources;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        if (!options.schema) {\n                            _context.next = 4;\n                            break;\n                        }\n\n                        _context.t0 = options.schema;\n                        _context.next = 7;\n                        break;\n\n                    case 4:\n                        _context.next = 6;\n                        return client.query({\n                            query: (0, _graphqlTag2.default)(_templateObject, _graphql.introspectionQuery)\n                        }).then(function (_ref3) {\n                            var __schema = _ref3.data.__schema;\n                            return __schema;\n                        });\n\n                    case 6:\n                        _context.t0 = _context.sent;\n\n                    case 7:\n                        schema = _context.t0;\n                        queries = schema.types.reduce(function (acc, type) {\n                            if (type.name !== 'Query' && type.name !== 'Mutation') return acc;\n\n                            return [].concat((0, _toConsumableArray3.default)(acc), (0, _toConsumableArray3.default)(type.fields));\n                        }, []);\n                        types = schema.types.filter(function (type) {\n                            return type.name !== 'Query' && type.name !== 'Mutation';\n                        });\n\n                        isResource = function isResource(type) {\n                            return queries.some(function (query) {\n                                return query.name === options.operationNames[_reactAdmin.GET_LIST](type);\n                            }) && queries.some(function (query) {\n                                return query.name === options.operationNames[_reactAdmin.GET_ONE](type);\n                            });\n                        };\n\n                        buildResource = function buildResource(type) {\n                            return _constants.ALL_TYPES.reduce(function (acc, aorFetchType) {\n                                return (0, _extends4.default)({}, acc, (0, _defineProperty3.default)({}, aorFetchType, queries.find(function (query) {\n                                    return options.operationNames[aorFetchType] && query.name == options.operationNames[aorFetchType](type);\n                                })));\n                            }, { type: type });\n                        };\n\n                        potentialResources = types.filter(isResource);\n                        filteredResources = potentialResources.filter(filterTypesByIncludeExclude(options));\n                        resources = filteredResources.map(buildResource);\n                        return _context.abrupt('return', {\n                            types: types,\n                            queries: queries,\n                            resources: resources\n                        });\n\n                    case 16:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n    };\n}();\n\n/***/ }),\n\n/***/ 1961:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(1962), __esModule: true };\n\n/***/ }),\n\n/***/ 1962:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1963);\nvar $Object = __webpack_require__(48).Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n\n\n/***/ }),\n\n/***/ 1963:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(77);\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !__webpack_require__(102), 'Object', { defineProperties: __webpack_require__(775) });\n\n\n/***/ }),\n\n/***/ 1964:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(1965), __esModule: true };\n\n/***/ }),\n\n/***/ 1965:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1966);\nmodule.exports = __webpack_require__(48).Object.freeze;\n\n\n/***/ }),\n\n/***/ 1966:\n/***/ (function(module, exports, __webpack_require__) {\n\n// 19.1.2.5 Object.freeze(O)\nvar isObject = __webpack_require__(101);\nvar meta = __webpack_require__(776).onFreeze;\n\n__webpack_require__(1783)('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n\n/***/ }),\n\n/***/ 1967:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = graphql;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = graphqlSync;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__type_validate__ = __webpack_require__(1795);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_parser__ = __webpack_require__(1777);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__validation_validate__ = __webpack_require__(1883);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__execution_execute__ = __webpack_require__(1799);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n */\n\n/* eslint-disable no-redeclare */\n\nfunction graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  var _arguments = arguments;\n\n  /* eslint-enable no-redeclare */\n  // Always return a Promise for a consistent API.\n  return new Promise(function (resolve) {\n    return resolve(\n    // Extract arguments from object args if provided.\n    _arguments.length === 1 ? graphqlImpl(argsOrSchema.schema, argsOrSchema.source, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : graphqlImpl(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver));\n  });\n}\n\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\n/* eslint-disable no-redeclare */\n\nfunction graphqlSync(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Extract arguments from object args if provided.\n  var result = arguments.length === 1 ? graphqlImpl(argsOrSchema.schema, argsOrSchema.source, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : graphqlImpl(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n  // Assert that the execution was synchronous.\n  if (result.then) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(schema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Validate Schema\n  var schemaValidationErrors = Object(__WEBPACK_IMPORTED_MODULE_0__type_validate__[\"b\" /* validateSchema */])(schema);\n  if (schemaValidationErrors.length > 0) {\n    return { errors: schemaValidationErrors };\n  }\n\n  // Parse\n  var document = void 0;\n  try {\n    document = Object(__WEBPACK_IMPORTED_MODULE_1__language_parser__[\"parse\"])(source);\n  } catch (syntaxError) {\n    return { errors: [syntaxError] };\n  }\n\n  // Validate\n  var validationErrors = Object(__WEBPACK_IMPORTED_MODULE_2__validation_validate__[\"a\" /* validate */])(schema, document);\n  if (validationErrors.length > 0) {\n    return { errors: validationErrors };\n  }\n\n  // Execute\n  return Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"g\" /* execute */])(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n\n/***/ }),\n\n/***/ 1968:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export nonExecutableDefinitionMessage */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ExecutableDefinitions;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error__ = __webpack_require__(1760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_kinds__ = __webpack_require__(1762);\n\n /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\n\n\n\nfunction nonExecutableDefinitionMessage(defName) {\n  return 'The ' + defName + ' definition is not executable.';\n}\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nfunction ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      node.definitions.forEach(function (definition) {\n        if (definition.kind !== __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION && definition.kind !== __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].FRAGMENT_DEFINITION) {\n          context.reportError(new __WEBPACK_IMPORTED_MODULE_0__error__[\"a\" /* GraphQLError */](nonExecutableDefinitionMessage(definition.kind === __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].SCHEMA_DEFINITION ? 'schema' : definition.name.value), [definition]));\n        }\n      });\n      return false;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ 1969:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = memoize3;\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  var cache0 = void 0;\n  function memoized(a1, a2, a3) {\n    if (!cache0) {\n      cache0 = new WeakMap();\n    }\n    var cache1 = cache0.get(a1);\n    var cache2 = void 0;\n    if (cache1) {\n      cache2 = cache1.get(a2);\n      if (cache2) {\n        var cachedValue = cache2.get(a3);\n        if (cachedValue !== undefined) {\n          return cachedValue;\n        }\n      }\n    } else {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n    if (!cache2) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n    var newValue = fn.apply(this, arguments);\n    cache2.set(a3, newValue);\n    return newValue;\n  }\n  return memoized;\n}\n\n/***/ }),\n\n/***/ 1970:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = promiseForObject;\n\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/***/ }),\n\n/***/ 1971:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = promiseReduce;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isPromise__ = __webpack_require__(1910);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__isPromise__[\"a\" /* default */])(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n}\n\n/***/ }),\n\n/***/ 1972:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__schema__ = __webpack_require__(1765);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_16\", function() { return __WEBPACK_IMPORTED_MODULE_0__schema__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_0__schema__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__definition__ = __webpack_require__(1761);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_19\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"P\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_15\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"O\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_13\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"M\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_6\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"G\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_20\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"Q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_3\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"D\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_4\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"E\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_9\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"I\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_11\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"K\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_5\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"F\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_14\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"N\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_8\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"H\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_1\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"C\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_0\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"B\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_21\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"R\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_12\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"L\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_10\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"J\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"T\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"w\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"S\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"v\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Q\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"t\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"K\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"U\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"x\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"H\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"I\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"M\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"p\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"O\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"r\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"J\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"R\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"u\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"L\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"o\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"W\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"y\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"P\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"s\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"N\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"q\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Y\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"A\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"X\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"z\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_1__definition__[\"e\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives__ = __webpack_require__(1768);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_2\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_17\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_22\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scalars__ = __webpack_require__(1773);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_18\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_23\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_3__scalars__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__introspection__ = __webpack_require__(1769);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_7\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"n\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Z\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"m\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"j\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"k\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"h\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"i\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"l\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return __WEBPACK_IMPORTED_MODULE_4__introspection__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__validate__ = __webpack_require__(1795);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"_24\", function() { return __WEBPACK_IMPORTED_MODULE_5__validate__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"V\", function() { return __WEBPACK_IMPORTED_MODULE_5__validate__[\"a\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n// Common built-in scalar instances.\n\n\n\n\n\n\n/***/ }),\n\n/***/ 1973:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__location__ = __webpack_require__(1810);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_0__location__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__kinds__ = __webpack_require__(1762);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__kinds__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lexer__ = __webpack_require__(1811);\n/* unused harmony reexport createLexer */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__lexer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__parser__ = __webpack_require__(1777);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_3__parser__[\"parse\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_3__parser__[\"parseValue\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_3__parser__[\"parseType\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__printer__ = __webpack_require__(1764);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_4__printer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__source__ = __webpack_require__(1875);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_5__source__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__visitor__ = __webpack_require__(1776);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_6__visitor__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_6__visitor__[\"d\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_6__visitor__[\"e\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__visitor__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_6__visitor__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directiveLocation__ = __webpack_require__(1778);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_7__directiveLocation__[\"a\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ 1974:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__execute__ = __webpack_require__(1799);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_0__execute__[\"g\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__execute__[\"f\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__execute__[\"k\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__values__ = __webpack_require__(1818);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__values__[\"b\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/***/ }),\n\n/***/ 1975:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__subscribe__ = __webpack_require__(1976);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_0__subscribe__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__subscribe__[\"a\"]; });\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n/***/ }),\n\n/***/ 1976:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = subscribe;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createSourceEventStream;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iterall__ = __webpack_require__(1784);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__error_GraphQLError__ = __webpack_require__(1772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__error_locatedError__ = __webpack_require__(1877);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__execution_execute__ = __webpack_require__(1799);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mapAsyncIterator__ = __webpack_require__(1977);\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (client error). The promise will be rejected if a\n * server error occurs.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\n\nfunction subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? subscribeImpl(argsOrSchema.schema, argsOrSchema.document, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver, argsOrSchema.subscribeFieldResolver) : subscribeImpl(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver);\n}\n\n/**\n * This function checks if the error is a GraphQLError. If it is, report it as\n * an ExecutionResult, containing only errors and no data. Otherwise treat the\n * error as a system-class error and re-throw it.\n */\nfunction reportGraphQLError(error) {\n  if (error instanceof __WEBPACK_IMPORTED_MODULE_1__error_GraphQLError__[\"a\" /* GraphQLError */]) {\n    return { errors: [error] };\n  }\n  throw error;\n}\n\nfunction subscribeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  var sourcePromise = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver);\n\n  // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n  var mapSourceToResponse = function mapSourceToResponse(payload) {\n    return Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"g\" /* execute */])(schema, document, payload, contextValue, variableValues, operationName, fieldResolver);\n  };\n\n  // Resolve the Source Stream, then map every source value to a\n  // ExecutionResult value as described above.\n  return sourcePromise.then(function (resultOrStream) {\n    return (\n      // Note: Flow can't refine isAsyncIterable, so explicit casts are used.\n      Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"d\" /* isAsyncIterable */])(resultOrStream) ? Object(__WEBPACK_IMPORTED_MODULE_5__mapAsyncIterator__[\"a\" /* default */])(resultOrStream, mapSourceToResponse, reportGraphQLError) : resultOrStream\n    );\n  }, reportGraphQLError);\n}\n\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise<AsyncIterable>.\n *\n * If the client-provided invalid arguments, the source stream could not be\n * created, or the resolver did not return an AsyncIterable, this function will\n * will throw an error, which should be caught and handled by the caller.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\nfunction createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"b\" /* assertValidExecutionArguments */])(schema, document, variableValues);\n\n  try {\n    // If a valid context cannot be created due to incorrect arguments,\n    // this will throw an error.\n    var exeContext = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"c\" /* buildExecutionContext */])(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n    // Return early errors if execution context failed.\n    if (Array.isArray(exeContext)) {\n      return Promise.resolve({ errors: exeContext });\n    }\n\n    var type = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"i\" /* getOperationRootType */])(schema, exeContext.operation);\n    var fields = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"e\" /* collectFields */])(exeContext, type, exeContext.operation.selectionSet, Object.create(null), Object.create(null));\n    var responseNames = Object.keys(fields);\n    var responseName = responseNames[0];\n    var fieldNodes = fields[responseName];\n    var fieldNode = fieldNodes[0];\n    var fieldName = fieldNode.name.value;\n    var fieldDef = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"h\" /* getFieldDef */])(schema, type, fieldName);\n\n    if (!fieldDef) {\n      throw new __WEBPACK_IMPORTED_MODULE_1__error_GraphQLError__[\"a\" /* GraphQLError */]('The subscription field \"' + fieldName + '\" is not defined.', fieldNodes);\n    }\n\n    // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n    var resolveFn = fieldDef.subscribe || exeContext.fieldResolver;\n\n    var path = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"a\" /* addPath */])(undefined, responseName);\n\n    var info = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"d\" /* buildResolveInfo */])(exeContext, fieldDef, fieldNodes, type, path);\n\n    // resolveFieldValueOrError implements the \"ResolveFieldEventStream\"\n    // algorithm from GraphQL specification. It differs from\n    // \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    var result = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"j\" /* resolveFieldValueOrError */])(exeContext, fieldDef, fieldNodes, resolveFn, rootValue, info);\n\n    // Coerce to Promise for easier error handling and consistent return type.\n    return Promise.resolve(result).then(function (eventStream) {\n      // If eventStream is an Error, rethrow a located error.\n      if (eventStream instanceof Error) {\n        throw Object(__WEBPACK_IMPORTED_MODULE_2__error_locatedError__[\"a\" /* locatedError */])(eventStream, fieldNodes, Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"k\" /* responsePathAsArray */])(path));\n      }\n\n      // Assert field returned an event stream, otherwise yield an error.\n      if (Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"d\" /* isAsyncIterable */])(eventStream)) {\n        // Note: isAsyncIterable above ensures this will be correct.\n        return eventStream;\n      }\n      throw new Error('Subscription field must return Async Iterable. Received: ' + String(eventStream));\n    });\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n/***/ }),\n\n/***/ 1977:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = mapAsyncIterator;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_iterall__ = __webpack_require__(1784);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = Object(__WEBPACK_IMPORTED_MODULE_0_iterall__[\"c\" /* getAsyncIterator */])(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n  // $FlowFixMe(>=0.68.0)\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject = void 0;\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({ value: undefined, done: true });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, __WEBPACK_IMPORTED_MODULE_0_iterall__[\"a\" /* $$asyncIterator */], function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return { value: value, done: false };\n}\n\n/***/ }),\n\n/***/ 1978:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__validate__ = __webpack_require__(1883);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return __WEBPACK_IMPORTED_MODULE_0__validate__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ValidationContext__ = __webpack_require__(1817);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return __WEBPACK_IMPORTED_MODULE_1__ValidationContext__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__specifiedRules__ = __webpack_require__(1884);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return __WEBPACK_IMPORTED_MODULE_2__specifiedRules__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__rules_FieldsOnCorrectType__ = __webpack_require__(1892);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__rules_FieldsOnCorrectType__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rules_FragmentsOnCompositeTypes__ = __webpack_require__(1889);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_4__rules_FragmentsOnCompositeTypes__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__rules_KnownArgumentNames__ = __webpack_require__(1903);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_5__rules_KnownArgumentNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__rules_KnownDirectives__ = __webpack_require__(1901);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_6__rules_KnownDirectives__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__rules_KnownFragmentNames__ = __webpack_require__(1894);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_7__rules_KnownFragmentNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__rules_KnownTypeNames__ = __webpack_require__(1888);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_8__rules_KnownTypeNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__rules_LoneAnonymousOperation__ = __webpack_require__(1886);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_9__rules_LoneAnonymousOperation__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__rules_NoFragmentCycles__ = __webpack_require__(1897);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_10__rules_NoFragmentCycles__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__rules_NoUndefinedVariables__ = __webpack_require__(1899);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_11__rules_NoUndefinedVariables__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__rules_NoUnusedFragments__ = __webpack_require__(1895);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_12__rules_NoUnusedFragments__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__rules_NoUnusedVariables__ = __webpack_require__(1900);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_13__rules_NoUnusedVariables__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__rules_OverlappingFieldsCanBeMerged__ = __webpack_require__(1908);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_14__rules_OverlappingFieldsCanBeMerged__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__rules_PossibleFragmentSpreads__ = __webpack_require__(1896);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_15__rules_PossibleFragmentSpreads__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__rules_ProvidedNonNullArguments__ = __webpack_require__(1905);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_16__rules_ProvidedNonNullArguments__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__rules_ScalarLeafs__ = __webpack_require__(1891);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_17__rules_ScalarLeafs__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__rules_SingleFieldSubscriptions__ = __webpack_require__(1887);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_18__rules_SingleFieldSubscriptions__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__rules_UniqueArgumentNames__ = __webpack_require__(1904);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_19__rules_UniqueArgumentNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__rules_UniqueDirectivesPerLocation__ = __webpack_require__(1902);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_20__rules_UniqueDirectivesPerLocation__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__rules_UniqueFragmentNames__ = __webpack_require__(1893);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_21__rules_UniqueFragmentNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__rules_UniqueInputFieldNames__ = __webpack_require__(1909);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_22__rules_UniqueInputFieldNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__rules_UniqueOperationNames__ = __webpack_require__(1885);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_23__rules_UniqueOperationNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__rules_UniqueVariableNames__ = __webpack_require__(1898);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_24__rules_UniqueVariableNames__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__rules_ValuesOfCorrectType__ = __webpack_require__(1816);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return __WEBPACK_IMPORTED_MODULE_25__rules_ValuesOfCorrectType__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__rules_VariablesAreInputTypes__ = __webpack_require__(1890);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return __WEBPACK_IMPORTED_MODULE_26__rules_VariablesAreInputTypes__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__rules_VariablesDefaultValueAllowed__ = __webpack_require__(1906);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return __WEBPACK_IMPORTED_MODULE_27__rules_VariablesDefaultValueAllowed__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__rules_VariablesInAllowedPosition__ = __webpack_require__(1907);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return __WEBPACK_IMPORTED_MODULE_28__rules_VariablesInAllowedPosition__[\"a\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n// https://github.com/tc39/proposal-export-default-from\n\n\n\n\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\n\n// Spec Section: \"Fragments on Composite Types\"\n\n\n// Spec Section: \"Argument Names\"\n\n\n// Spec Section: \"Directives Are Defined\"\n\n\n// Spec Section: \"Fragment spread target defined\"\n\n\n// Spec Section: \"Fragment Spread Type Existence\"\n\n\n// Spec Section: \"Lone Anonymous Operation\"\n\n\n// Spec Section: \"Fragments must not form cycles\"\n\n\n// Spec Section: \"All Variable Used Defined\"\n\n\n// Spec Section: \"Fragments must be used\"\n\n\n// Spec Section: \"All Variables Used\"\n\n\n// Spec Section: \"Field Selection Merging\"\n\n\n// Spec Section: \"Fragment spread is possible\"\n\n\n// Spec Section: \"Argument Optionality\"\n\n\n// Spec Section: \"Leaf Field Selections\"\n\n\n// Spec Section: \"Subscriptions with Single Root Field\"\n\n\n// Spec Section: \"Argument Uniqueness\"\n\n\n// Spec Section: \"Directives Are Unique Per Location\"\n\n\n// Spec Section: \"Fragment Name Uniqueness\"\n\n\n// Spec Section: \"Input Object Field Uniqueness\"\n\n\n// Spec Section: \"Operation Name Uniqueness\"\n\n\n// Spec Section: \"Variable Uniqueness\"\n\n\n// Spec Section: \"Values Type Correctness\"\n\n\n// Spec Section: \"Variables are Input Types\"\n\n\n// Spec Section: \"Variables Default Value Is Allowed\"\n\n\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n\n/***/ }),\n\n/***/ 1979:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__introspectionQuery__ = __webpack_require__(1911);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_0__introspectionQuery__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_0__introspectionQuery__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getOperationAST__ = __webpack_require__(1980);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_1__getOperationAST__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__introspectionFromSchema__ = __webpack_require__(1981);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_2__introspectionFromSchema__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buildClientSchema__ = __webpack_require__(1982);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_3__buildClientSchema__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__buildASTSchema__ = __webpack_require__(1912);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_4__buildASTSchema__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_4__buildASTSchema__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_4__buildASTSchema__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__extendSchema__ = __webpack_require__(1983);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_5__extendSchema__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lexicographicSortSchema__ = __webpack_require__(1984);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"z\", function() { return __WEBPACK_IMPORTED_MODULE_6__lexicographicSortSchema__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__schemaPrinter__ = __webpack_require__(1985);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"B\", function() { return __WEBPACK_IMPORTED_MODULE_7__schemaPrinter__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"C\", function() { return __WEBPACK_IMPORTED_MODULE_7__schemaPrinter__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"A\", function() { return __WEBPACK_IMPORTED_MODULE_7__schemaPrinter__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__typeFromAST__ = __webpack_require__(1771);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"E\", function() { return __WEBPACK_IMPORTED_MODULE_8__typeFromAST__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__valueFromAST__ = __webpack_require__(1800);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"F\", function() { return __WEBPACK_IMPORTED_MODULE_9__valueFromAST__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__valueFromASTUntyped__ = __webpack_require__(1881);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"G\", function() { return __WEBPACK_IMPORTED_MODULE_10__valueFromASTUntyped__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__astFromValue__ = __webpack_require__(1813);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_11__astFromValue__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__TypeInfo__ = __webpack_require__(1785);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_12__TypeInfo__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__coerceValue__ = __webpack_require__(1819);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_13__coerceValue__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__isValidJSValue__ = __webpack_require__(1986);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return __WEBPACK_IMPORTED_MODULE_14__isValidJSValue__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__isValidLiteralValue__ = __webpack_require__(1987);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"x\", function() { return __WEBPACK_IMPORTED_MODULE_15__isValidLiteralValue__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__concatAST__ = __webpack_require__(1988);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_16__concatAST__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__separateOperations__ = __webpack_require__(1989);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"D\", function() { return __WEBPACK_IMPORTED_MODULE_17__separateOperations__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__typeComparators__ = __webpack_require__(1798);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_18__typeComparators__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_18__typeComparators__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_18__typeComparators__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__assertValidName__ = __webpack_require__(1882);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_19__assertValidName__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"y\", function() { return __WEBPACK_IMPORTED_MODULE_19__assertValidName__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__ = __webpack_require__(1990);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_20__findBreakingChanges__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__findDeprecatedUsages__ = __webpack_require__(1991);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_21__findDeprecatedUsages__[\"a\"]; });\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n// The GraphQL query recommended for a full schema introspection.\n\n\n\n// Gets the target Operation from a Document\n\n\n// Convert a GraphQLSchema to an IntrospectionQuery\n\n\n// Build a GraphQLSchema from an introspection result.\n\n\n// Build a GraphQLSchema from GraphQL Schema language.\n\n\n\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\n\n\n// Sort a GraphQLSchema.\n\n\n// Print a GraphQLSchema to GraphQL Schema language.\n\n\n// Create a GraphQLType from a GraphQL language AST.\n\n\n// Create a JavaScript value from a GraphQL language AST with a type.\n\n\n// Create a JavaScript value from a GraphQL language AST without a type.\n\n\n// Create a GraphQL language AST from a JavaScript value.\n\n\n// A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\n\n\n// Coerces a JavaScript value to a GraphQL type, or produces errors.\n\n\n// @deprecated use coerceValue\n\n\n// Determine if AST values adhere to a GraphQL type.\n\n\n// Concatenates multiple AST together.\n\n\n// Separates an AST into an AST per Operation.\n\n\n// Comparators for types\n\n\n// Asserts that a string is a valid GraphQL name\n\n\n// Compares two GraphQLSchemas and detects breaking changes.\n\n\n\n// Report all deprecated usage within a GraphQL document.\n\n\n/***/ }),\n\n/***/ 1980:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getOperationAST;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__language_kinds__ = __webpack_require__(1762);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n    if (definition.kind === __WEBPACK_IMPORTED_MODULE_0__language_kinds__[\"a\" /* Kind */].OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n}\n\n/***/ }),\n\n/***/ 1981:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = introspectionFromSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__introspectionQuery__ = __webpack_require__(1911);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__execution_execute__ = __webpack_require__(1799);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_parser__ = __webpack_require__(1777);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var queryAST = Object(__WEBPACK_IMPORTED_MODULE_4__language_parser__[\"parse\"])(Object(__WEBPACK_IMPORTED_MODULE_1__introspectionQuery__[\"a\" /* getIntrospectionQuery */])(options));\n  var result = Object(__WEBPACK_IMPORTED_MODULE_3__execution_execute__[\"g\" /* execute */])(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0) : void 0;\n  return result.data;\n}\n\n/***/ }),\n\n/***/ 1982:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = buildClientSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_keyValMap__ = __webpack_require__(1796);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__valueFromAST__ = __webpack_require__(1800);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_parser__ = __webpack_require__(1777);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__ = __webpack_require__(1778);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__type_introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__type_scalars__ = __webpack_require__(1773);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nfunction buildClientSchema(introspection, options) {\n  // Get the schema from the introspection result.\n  var schemaIntrospection = introspection.__schema;\n\n  // Converts the list of types into a keyMap based on the type names.\n  var typeIntrospectionMap = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__[\"a\" /* default */])(schemaIntrospection.types, function (type) {\n    return type.name;\n  });\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars. All functions below are inline\n  // so that this type def cache is within the scope of the closure.\n  var typeDefCache = Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_10__type_scalars__[\"g\" /* specifiedScalarTypes */].concat(__WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"m\" /* introspectionTypes */]), function (type) {\n    return type.name;\n  });\n\n  // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n  function getType(typeRef) {\n    if (typeRef.kind === __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].LIST) {\n      var itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"d\" /* GraphQLList */])(getType(itemRef));\n    }\n    if (typeRef.kind === __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].NON_NULL) {\n      var nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      var nullableType = getType(nullableRef);\n      return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"e\" /* GraphQLNonNull */])(Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"s\" /* assertNullableType */])(nullableType));\n    }\n    if (!typeRef.name) {\n      throw new Error('Unknown type reference: ' + JSON.stringify(typeRef));\n    }\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    if (typeDefCache[typeName]) {\n      return typeDefCache[typeName];\n    }\n    var typeIntrospection = typeIntrospectionMap[typeName];\n    if (!typeIntrospection) {\n      throw new Error('Invalid or incomplete schema, unknown type: ' + typeName + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n    var typeDef = buildType(typeIntrospection);\n    typeDefCache[typeName] = typeDef;\n    return typeDef;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n    !Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"F\" /* isInputType */])(type) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Introspection must provide input type for arguments.') : void 0;\n    return type;\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n    !Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"N\" /* isOutputType */])(type) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Introspection must provide output type for fields.') : void 0;\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"t\" /* assertObjectType */])(type);\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"n\" /* assertInterfaceType */])(type);\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function buildType(type) {\n    if (type && type.name && type.kind) {\n      switch (type.kind) {\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].SCALAR:\n          return buildScalarDef(type);\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].OBJECT:\n          return buildObjectDef(type);\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].INTERFACE:\n          return buildInterfaceDef(type);\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].UNION:\n          return buildUnionDef(type);\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].ENUM:\n          return buildEnumDef(type);\n        case __WEBPACK_IMPORTED_MODULE_9__type_introspection__[\"b\" /* TypeKind */].INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n    throw new Error('Invalid or incomplete introspection result. Ensure that a full ' + 'introspection query is used in order to build a client schema:' + JSON.stringify(type));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"g\" /* GraphQLScalarType */]({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      serialize: function serialize(value) {\n        return value;\n      }\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    if (!objectIntrospection.interfaces) {\n      throw new Error('Introspection result missing interfaces: ' + JSON.stringify(objectIntrospection));\n    }\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"f\" /* GraphQLObjectType */]({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: objectIntrospection.interfaces.map(getInterfaceType),\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"c\" /* GraphQLInterfaceType */]({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      throw new Error('Introspection result missing possibleTypes: ' + JSON.stringify(unionIntrospection));\n    }\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"h\" /* GraphQLUnionType */]({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: unionIntrospection.possibleTypes.map(getObjectType)\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      throw new Error('Introspection result missing enumValues: ' + JSON.stringify(enumIntrospection));\n    }\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"a\" /* GraphQLEnumType */]({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_keyValMap__[\"a\" /* default */])(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      throw new Error('Introspection result missing inputFields: ' + JSON.stringify(inputObjectIntrospection));\n    }\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"b\" /* GraphQLInputObjectType */]({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error('Introspection result missing fields: ' + JSON.stringify(typeIntrospection));\n    }\n    return Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_keyValMap__[\"a\" /* default */])(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      if (!fieldIntrospection.args) {\n        throw new Error('Introspection result missing field args: ' + JSON.stringify(fieldIntrospection));\n      }\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_keyValMap__[\"a\" /* default */])(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? Object(__WEBPACK_IMPORTED_MODULE_3__valueFromAST__[\"a\" /* valueFromAST */])(Object(__WEBPACK_IMPORTED_MODULE_4__language_parser__[\"parseValue\"])(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      name: inputValueIntrospection.name,\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    // Support deprecated `on****` fields for building `locations`, as this\n    // is used by GraphiQL which may need to support outdated servers.\n    var locations = directiveIntrospection.locations ? directiveIntrospection.locations.slice() : [].concat(!directiveIntrospection.onField ? [] : [__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FIELD], !directiveIntrospection.onOperation ? [] : [__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].QUERY, __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].MUTATION, __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].SUBSCRIPTION], !directiveIntrospection.onFragment ? [] : [__WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_DEFINITION, __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].FRAGMENT_SPREAD, __WEBPACK_IMPORTED_MODULE_6__language_directiveLocation__[\"a\" /* DirectiveLocation */].INLINE_FRAGMENT]);\n    if (!directiveIntrospection.args) {\n      throw new Error('Introspection result missing directive args: ' + JSON.stringify(directiveIntrospection));\n    }\n    return new __WEBPACK_IMPORTED_MODULE_8__type_directives__[\"c\" /* GraphQLDirective */]({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: locations,\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var types = schemaIntrospection.types.map(function (typeIntrospection) {\n    return getNamedType(typeIntrospection.name);\n  });\n\n  // Get the root Query, Mutation, and Subscription types.\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null;\n\n  // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : [];\n\n  // Then produce and return a Schema with these types.\n  return new __WEBPACK_IMPORTED_MODULE_5__type_schema__[\"a\" /* GraphQLSchema */]({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: directives,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  });\n}\n\n/***/ }),\n\n/***/ 1983:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = extendSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__ = __webpack_require__(1766);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__ = __webpack_require__(1775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__buildASTSchema__ = __webpack_require__(1912);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__ = __webpack_require__(1772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__type_introspection__ = __webpack_require__(1769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__language_kinds__ = __webpack_require__(1762);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n *\n * Accepts options as a third argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction extendSchema(schema, documentAST, options) {\n  !Object(__WEBPACK_IMPORTED_MODULE_5__type_schema__[\"b\" /* isSchema */])(schema) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide valid GraphQLSchema') : void 0;\n\n  !(documentAST && documentAST.kind === __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].DOCUMENT) ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'Must provide valid Document AST') : void 0;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefinitionMap = Object.create(null);\n  var typeExtensionsMap = Object.create(null);\n\n  // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n  var directiveDefinitions = [];\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var def = documentAST.definitions[i];\n    switch (def.kind) {\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].UNION_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_DEFINITION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_DEFINITION:\n        // Sanity check that none of the defined types conflict with the\n        // schema's existing types.\n        var typeName = def.name.value;\n        if (schema.getType(typeName)) {\n          throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Type \"' + typeName + '\" already exists in the schema. It cannot also ' + 'be defined in this type definition.', [def]);\n        }\n        typeDefinitionMap[typeName] = def;\n        break;\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_EXTENSION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_EXTENSION:\n        // Sanity check that this type extension exists within the\n        // schema's existing types.\n        var extendedTypeName = def.name.value;\n        var existingType = schema.getType(extendedTypeName);\n        if (!existingType) {\n          throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Cannot extend type \"' + extendedTypeName + '\" because it does not ' + 'exist in the existing schema.', [def]);\n        }\n        checkExtensionNode(existingType, def);\n\n        var existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n        typeExtensionsMap[extendedTypeName] = existingTypeExtensions ? existingTypeExtensions.concat([def]) : [def];\n        break;\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].DIRECTIVE_DEFINITION:\n        var directiveName = def.name.value;\n        var existingDirective = schema.getDirective(directiveName);\n        if (existingDirective) {\n          throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Directive \"' + directiveName + '\" already exists in the schema. It ' + 'cannot be redefined.', [def]);\n        }\n        directiveDefinitions.push(def);\n        break;\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].SCALAR_TYPE_EXTENSION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].UNION_TYPE_EXTENSION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].ENUM_TYPE_EXTENSION:\n      case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].INPUT_OBJECT_TYPE_EXTENSION:\n        throw new Error('The ' + def.kind + ' kind is not yet supported by extendSchema().');\n    }\n  }\n\n  // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n  if (Object.keys(typeExtensionsMap).length === 0 && Object.keys(typeDefinitionMap).length === 0 && directiveDefinitions.length === 0) {\n    return schema;\n  }\n\n  var astBuilder = new __WEBPACK_IMPORTED_MODULE_3__buildASTSchema__[\"a\" /* ASTDefinitionBuilder */](typeDefinitionMap, options, function (typeRef) {\n    var typeName = typeRef.name.value;\n    var existingType = schema.getType(typeName);\n    if (existingType) {\n      return getExtendedType(existingType);\n    }\n\n    throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Unknown type: \"' + typeName + '\". Ensure that this type exists ' + 'either in the original schema, or is added in a type definition.', [typeRef]);\n  });\n\n  var extendTypeCache = Object.create(null);\n\n  // Get the root Query, Mutation, and Subscription object types.\n  var existingQueryType = schema.getQueryType();\n  var queryType = existingQueryType ? getExtendedType(existingQueryType) : null;\n\n  var existingMutationType = schema.getMutationType();\n  var mutationType = existingMutationType ? getExtendedType(existingMutationType) : null;\n\n  var existingSubscriptionType = schema.getSubscriptionType();\n  var subscriptionType = existingSubscriptionType ? getExtendedType(existingSubscriptionType) : null;\n\n  var types = [].concat(Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(schema.getTypeMap()).map(function (type) {\n    return getExtendedType(type);\n  }), astBuilder.buildTypes(Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(typeDefinitionMap)));\n\n  // Support both original legacy names and extended legacy names.\n  var schemaAllowedLegacyNames = schema.__allowedLegacyNames;\n  var extendAllowedLegacyNames = options && options.allowedLegacyNames;\n  var allowedLegacyNames = schemaAllowedLegacyNames && extendAllowedLegacyNames ? schemaAllowedLegacyNames.concat(extendAllowedLegacyNames) : schemaAllowedLegacyNames || extendAllowedLegacyNames;\n\n  // Then produce and return a Schema with these types.\n  return new __WEBPACK_IMPORTED_MODULE_5__type_schema__[\"a\" /* GraphQLSchema */]({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: getMergedDirectives(),\n    astNode: schema.astNode,\n    allowedLegacyNames: allowedLegacyNames\n  });\n\n  // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives();\n    !existingDirectives ? Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_invariant__[\"a\" /* default */])(0, 'schema must have default directives') : void 0;\n\n    return existingDirectives.concat(directiveDefinitions.map(function (node) {\n      return astBuilder.buildDirective(node);\n    }));\n  }\n\n  function getExtendedType(type) {\n    if (!extendTypeCache[type.name]) {\n      extendTypeCache[type.name] = extendType(type);\n    }\n    return extendTypeCache[type.name];\n  }\n\n  // To be called at most once per type. Only getExtendedType should call this.\n  function extendType(type) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_6__type_introspection__[\"n\" /* isIntrospectionType */])(type)) {\n      // Introspection types are not extended.\n      return type;\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"M\" /* isObjectType */])(type)) {\n      return extendObjectType(type);\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n      return extendInterfaceType(type);\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"Q\" /* isUnionType */])(type)) {\n      return extendUnionType(type);\n    }\n    // This type is not yet extendable.\n    return type;\n  }\n\n  function extendObjectType(type) {\n    var name = type.name;\n    var extensionASTNodes = typeExtensionsMap[name] ? type.extensionASTNodes ? type.extensionASTNodes.concat(typeExtensionsMap[name]) : typeExtensionsMap[name] : type.extensionASTNodes;\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"f\" /* GraphQLObjectType */]({\n      name: name,\n      description: type.description,\n      interfaces: function interfaces() {\n        return extendImplementedInterfaces(type);\n      },\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      isTypeOf: type.isTypeOf\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var name = type.name;\n    var extensionASTNodes = typeExtensionsMap[name] ? type.extensionASTNodes ? type.extensionASTNodes.concat(typeExtensionsMap[name]) : typeExtensionsMap[name] : type.extensionASTNodes;\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"c\" /* GraphQLInterfaceType */]({\n      name: type.name,\n      description: type.description,\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendUnionType(type) {\n    return new __WEBPACK_IMPORTED_MODULE_7__type_definition__[\"h\" /* GraphQLUnionType */]({\n      name: type.name,\n      description: type.description,\n      types: type.getTypes().map(getExtendedType),\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendImplementedInterfaces(type) {\n    var interfaces = type.getInterfaces().map(getExtendedType);\n\n    // If there are any extensions to the interfaces, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.interfaces.forEach(function (namedType) {\n          // Note: While this could make early assertions to get the correctly\n          // typed values, that would throw immediately while type system\n          // validation with validateSchema() will produce more actionable results.\n          interfaces.push(astBuilder.buildType(namedType));\n        });\n      });\n    }\n\n    return interfaces;\n  }\n\n  function extendFieldMap(type) {\n    var newFieldMap = Object.create(null);\n    var oldFieldMap = type.getFields();\n    Object.keys(oldFieldMap).forEach(function (fieldName) {\n      var field = oldFieldMap[fieldName];\n      newFieldMap[fieldName] = {\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        type: extendFieldType(field.type),\n        args: Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_keyMap__[\"a\" /* default */])(field.args, function (arg) {\n          return arg.name;\n        }),\n        astNode: field.astNode,\n        resolve: field.resolve\n      };\n    });\n\n    // If there are any extensions to the fields, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.fields.forEach(function (field) {\n          var fieldName = field.name.value;\n          if (oldFieldMap[fieldName]) {\n            throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Field \"' + type.name + '.' + fieldName + '\" already exists in the ' + 'schema. It cannot also be defined in this type extension.', [field]);\n          }\n          newFieldMap[fieldName] = astBuilder.buildField(field);\n        });\n      });\n    }\n\n    return newFieldMap;\n  }\n\n  function extendFieldType(typeDef) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"I\" /* isListType */])(typeDef)) {\n      return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"d\" /* GraphQLList */])(extendFieldType(typeDef.ofType));\n    }\n    if (Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"K\" /* isNonNullType */])(typeDef)) {\n      return Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"e\" /* GraphQLNonNull */])(extendFieldType(typeDef.ofType));\n    }\n    return getExtendedType(typeDef);\n  }\n}\n\nfunction checkExtensionNode(type, node) {\n  switch (node.kind) {\n    case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].OBJECT_TYPE_EXTENSION:\n      if (!Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"M\" /* isObjectType */])(type)) {\n        throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Cannot extend non-object type \"' + type.name + '\".', [node]);\n      }\n      break;\n    case __WEBPACK_IMPORTED_MODULE_9__language_kinds__[\"a\" /* Kind */].INTERFACE_TYPE_EXTENSION:\n      if (!Object(__WEBPACK_IMPORTED_MODULE_7__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n        throw new __WEBPACK_IMPORTED_MODULE_4__error_GraphQLError__[\"a\" /* GraphQLError */]('Cannot extend non-interface type \"' + type.name + '\".', [node]);\n      }\n      break;\n  }\n}\n\n/***/ }),\n\n/***/ 1984:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = lexicographicSortSchema;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__ = __webpack_require__(1796);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__type_scalars__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__type_introspection__ = __webpack_require__(1769);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n /**\n                                               * Copyright (c) 2015-present, Facebook, Inc.\n                                               *\n                                               * This source code is licensed under the MIT license found in the\n                                               * LICENSE file in the root directory of this source tree.\n                                               *\n                                               *  strict\n                                               */\n\n\n\n\n\n\n\n\n\n/**\n * Sort GraphQLSchema.\n */\nfunction lexicographicSortSchema(schema) {\n  var cache = Object.create(null);\n\n  var sortMaybeType = function sortMaybeType(maybeType) {\n    return maybeType && sortNamedType(maybeType);\n  };\n  return new __WEBPACK_IMPORTED_MODULE_2__type_schema__[\"a\" /* GraphQLSchema */]({\n    types: sortTypes(Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_objectValues__[\"a\" /* default */])(schema.getTypeMap())),\n    directives: sortByName(schema.getDirectives()).map(sortDirective),\n    query: sortMaybeType(schema.getQueryType()),\n    mutation: sortMaybeType(schema.getMutationType()),\n    subscription: sortMaybeType(schema.getSubscriptionType()),\n    astNode: schema.astNode\n  });\n\n  function sortDirective(directive) {\n    return new __WEBPACK_IMPORTED_MODULE_3__type_directives__[\"c\" /* GraphQLDirective */]({\n      name: directive.name,\n      description: directive.description,\n      locations: sortBy(directive.locations, function (x) {\n        return x;\n      }),\n      args: sortArgs(directive.args),\n      astNode: directive.astNode\n    });\n  }\n\n  function sortArgs(args) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__[\"a\" /* default */])(sortByName(args), function (arg) {\n      return arg.name;\n    }, function (arg) {\n      return _extends({}, arg, {\n        type: sortType(arg.type)\n      });\n    });\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return {\n        type: sortType(field.type),\n        args: sortArgs(field.args),\n        resolve: field.resolve,\n        subscribe: field.subscribe,\n        deprecationReason: field.deprecationReason,\n        description: field.description,\n        astNode: field.astNode\n      };\n    });\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return {\n        type: sortType(field.type),\n        defaultValue: field.defaultValue,\n        description: field.description,\n        astNode: field.astNode\n      };\n    });\n  }\n\n  function sortType(type) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"I\" /* isListType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"d\" /* GraphQLList */](sortType(type.ofType));\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"K\" /* isNonNullType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"e\" /* GraphQLNonNull */](sortType(type.ofType));\n    }\n    return sortNamedType(type);\n  }\n\n  function sortTypes(arr) {\n    return sortByName(arr).map(sortNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_5__type_scalars__[\"f\" /* isSpecifiedScalarType */])(type) || Object(__WEBPACK_IMPORTED_MODULE_6__type_introspection__[\"n\" /* isIntrospectionType */])(type)) {\n      return type;\n    }\n\n    var sortedType = cache[type.name];\n    if (!sortedType) {\n      sortedType = sortNamedTypeImpl(type);\n      cache[type.name] = sortedType;\n    }\n    return sortedType;\n  }\n\n  function sortNamedTypeImpl(type) {\n    if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"O\" /* isScalarType */])(type)) {\n      return type;\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"M\" /* isObjectType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"f\" /* GraphQLObjectType */]({\n        name: type.name,\n        interfaces: function interfaces() {\n          return sortTypes(type.getInterfaces());\n        },\n        fields: function fields() {\n          return sortFields(type.getFields());\n        },\n        isTypeOf: type.isTypeOf,\n        description: type.description,\n        astNode: type.astNode,\n        extensionASTNodes: type.extensionASTNodes\n      });\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"c\" /* GraphQLInterfaceType */]({\n        name: type.name,\n        fields: function fields() {\n          return sortFields(type.getFields());\n        },\n        resolveType: type.resolveType,\n        description: type.description,\n        astNode: type.astNode,\n        extensionASTNodes: type.extensionASTNodes\n      });\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"Q\" /* isUnionType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"h\" /* GraphQLUnionType */]({\n        name: type.name,\n        types: function types() {\n          return sortTypes(type.getTypes());\n        },\n        resolveType: type.resolveType,\n        description: type.description,\n        astNode: type.astNode\n      });\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"D\" /* isEnumType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"a\" /* GraphQLEnumType */]({\n        name: type.name,\n        values: Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_keyValMap__[\"a\" /* default */])(sortByName(type.getValues()), function (val) {\n          return val.name;\n        }, function (val) {\n          return {\n            value: val.value,\n            deprecationReason: val.deprecationReason,\n            description: val.description,\n            astNode: val.astNode\n          };\n        }),\n        description: type.description,\n        astNode: type.astNode\n      });\n    } else if (Object(__WEBPACK_IMPORTED_MODULE_4__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n      return new __WEBPACK_IMPORTED_MODULE_4__type_definition__[\"b\" /* GraphQLInputObjectType */]({\n        name: type.name,\n        fields: function fields() {\n          return sortInputFields(type.getFields());\n        },\n        description: type.description,\n        astNode: type.astNode\n      });\n    }\n    throw new Error('Unknown type: \"' + type + '\"');\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  var sortedMap = Object.create(null);\n  var sortedKeys = sortBy(Object.keys(map), function (x) {\n    return x;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      var value = map[key];\n      sortedMap[key] = sortValueFn ? sortValueFn(value) : value;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, function (obj) {\n    return obj.name;\n  });\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort(function (obj1, obj2) {\n    var key1 = mapToKey(obj1);\n    var key2 = mapToKey(obj2);\n    return key1.localeCompare(key2);\n  });\n}\n\n/***/ }),\n\n/***/ 1985:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = printSchema;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = printIntrospectionSchema;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = printType;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__jsutils_isNullish__ = __webpack_require__(1797);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__ = __webpack_require__(1767);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__ = __webpack_require__(1774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utilities_astFromValue__ = __webpack_require__(1813);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__language_printer__ = __webpack_require__(1764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__type_scalars__ = __webpack_require__(1773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__type_introspection__ = __webpack_require__(1769);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nfunction printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !Object(__WEBPACK_IMPORTED_MODULE_7__type_directives__[\"g\" /* isSpecifiedDirective */])(n);\n  }, isDefinedType, options);\n}\n\nfunction printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, __WEBPACK_IMPORTED_MODULE_7__type_directives__[\"g\" /* isSpecifiedDirective */], __WEBPACK_IMPORTED_MODULE_8__type_introspection__[\"n\" /* isIntrospectionType */], options);\n}\n\nfunction isDefinedType(type) {\n  return !Object(__WEBPACK_IMPORTED_MODULE_6__type_scalars__[\"f\" /* isSpecifiedScalarType */])(type) && !Object(__WEBPACK_IMPORTED_MODULE_8__type_introspection__[\"n\" /* isIntrospectionType */])(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type, options) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"O\" /* isScalarType */])(type)) {\n    return printScalar(type, options);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"M\" /* isObjectType */])(type)) {\n    return printObject(type, options);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n    return printInterface(type, options);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"Q\" /* isUnionType */])(type)) {\n    return printUnion(type, options);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"D\" /* isEnumType */])(type)) {\n    return printEnum(type, options);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_5__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + ('interface ' + type.name + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n  return printDescription(options, type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = Object(__WEBPACK_IMPORTED_MODULE_2__jsutils_objectValues__[\"a\" /* default */])(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  }\n\n  // If every arg does not have a description, print them on one line.\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!Object(__WEBPACK_IMPORTED_MODULE_1__jsutils_isInvalid__[\"a\" /* default */])(arg.defaultValue)) {\n    argDecl += ' = ' + Object(__WEBPACK_IMPORTED_MODULE_4__language_printer__[\"a\" /* print */])(Object(__WEBPACK_IMPORTED_MODULE_3__utilities_astFromValue__[\"a\" /* astFromValue */])(arg.defaultValue, arg.type));\n  }\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n  var reason = fieldOrEnumVal.deprecationReason;\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__jsutils_isNullish__[\"a\" /* default */])(reason) || reason === '' || reason === __WEBPACK_IMPORTED_MODULE_7__type_directives__[\"a\" /* DEFAULT_DEPRECATION_REASON */]) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + Object(__WEBPACK_IMPORTED_MODULE_4__language_printer__[\"a\" /* print */])(Object(__WEBPACK_IMPORTED_MODULE_3__utilities_astFromValue__[\"a\" /* astFromValue */])(reason, __WEBPACK_IMPORTED_MODULE_6__type_scalars__[\"e\" /* GraphQLString */])) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"';\n\n  // In some circumstances, a single line can be used for the description.\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  }\n\n  // Format a multi-line block quote to account for leading space.\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp('((?: |^).{15,' + (maxLen - 40) + '}(?= |$))'));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}\n\n/***/ }),\n\n/***/ 1986:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isValidJSValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__coerceValue__ = __webpack_require__(1819);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * Deprecated. Use coerceValue() directly for richer information.\n */\nfunction isValidJSValue(value, type) {\n  var errors = Object(__WEBPACK_IMPORTED_MODULE_0__coerceValue__[\"a\" /* coerceValue */])(value, type).errors;\n  return errors ? errors.map(function (error) {\n    return error.message;\n  }) : [];\n}\n\n/***/ }),\n\n/***/ 1987:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isValidLiteralValue;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__TypeInfo__ = __webpack_require__(1785);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_kinds__ = __webpack_require__(1762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__language_visitor__ = __webpack_require__(1776);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__validation_rules_ValuesOfCorrectType__ = __webpack_require__(1816);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__validation_ValidationContext__ = __webpack_require__(1817);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n */\nfunction isValidLiteralValue(type, valueNode) {\n  var emptySchema = new __WEBPACK_IMPORTED_MODULE_3__type_schema__[\"a\" /* GraphQLSchema */]({});\n  var emptyDoc = { kind: __WEBPACK_IMPORTED_MODULE_1__language_kinds__[\"a\" /* Kind */].DOCUMENT, definitions: [] };\n  var typeInfo = new __WEBPACK_IMPORTED_MODULE_0__TypeInfo__[\"a\" /* TypeInfo */](emptySchema, undefined, type);\n  var context = new __WEBPACK_IMPORTED_MODULE_5__validation_ValidationContext__[\"a\" /* default */](emptySchema, emptyDoc, typeInfo);\n  var visitor = Object(__WEBPACK_IMPORTED_MODULE_4__validation_rules_ValuesOfCorrectType__[\"a\" /* ValuesOfCorrectType */])(context);\n  Object(__WEBPACK_IMPORTED_MODULE_2__language_visitor__[\"c\" /* visit */])(valueNode, Object(__WEBPACK_IMPORTED_MODULE_2__language_visitor__[\"e\" /* visitWithTypeInfo */])(typeInfo, visitor));\n  return context.getErrors();\n}\n\n/***/ }),\n\n/***/ 1988:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = concatAST;\n\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(asts) {\n  var batchDefinitions = [];\n  for (var i = 0; i < asts.length; i++) {\n    var definitions = asts[i].definitions;\n    for (var j = 0; j < definitions.length; j++) {\n      batchDefinitions.push(definitions[j]);\n    }\n  }\n  return {\n    kind: 'Document',\n    definitions: batchDefinitions\n  };\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/***/ }),\n\n/***/ 1989:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = separateOperations;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__language_visitor__ = __webpack_require__(1776);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  Object(__WEBPACK_IMPORTED_MODULE_0__language_visitor__[\"c\" /* visit */])(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n}\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}\n\n/***/ }),\n\n/***/ 1990:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BreakingChangeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return DangerousChangeType; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = findBreakingChanges;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = findDangerousChanges;\n/* unused harmony export findRemovedTypes */\n/* unused harmony export findTypesThatChangedKind */\n/* unused harmony export findArgChanges */\n/* unused harmony export findFieldsThatChangedTypeOnObjectOrInterfaceTypes */\n/* unused harmony export findFieldsThatChangedTypeOnInputObjectTypes */\n/* unused harmony export findTypesRemovedFromUnions */\n/* unused harmony export findTypesAddedToUnions */\n/* unused harmony export findValuesRemovedFromEnums */\n/* unused harmony export findValuesAddedToEnums */\n/* unused harmony export findInterfacesRemovedFromObjectTypes */\n/* unused harmony export findInterfacesAddedToObjectTypes */\n/* unused harmony export findRemovedDirectives */\n/* unused harmony export findRemovedDirectiveArgs */\n/* unused harmony export findAddedNonNullDirectiveArgs */\n/* unused harmony export findRemovedLocationsForDirective */\n/* unused harmony export findRemovedDirectiveLocations */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__type_directives__ = __webpack_require__(1768);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__ = __webpack_require__(1775);\n/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\nvar BreakingChangeType = {\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  NON_NULL_ARG_ADDED: 'NON_NULL_ARG_ADDED',\n  NON_NULL_INPUT_FIELD_ADDED: 'NON_NULL_INPUT_FIELD_ADDED',\n  INTERFACE_REMOVED_FROM_OBJECT: 'INTERFACE_REMOVED_FROM_OBJECT',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED',\n  NON_NULL_DIRECTIVE_ARG_ADDED: 'NON_NULL_DIRECTIVE_ARG_ADDED'\n};\n\nvar DangerousChangeType = {\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE',\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  INTERFACE_ADDED_TO_OBJECT: 'INTERFACE_ADDED_TO_OBJECT',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  NULLABLE_INPUT_FIELD_ADDED: 'NULLABLE_INPUT_FIELD_ADDED',\n  NULLABLE_ARG_ADDED: 'NULLABLE_ARG_ADDED'\n};\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  return [].concat(findRemovedTypes(oldSchema, newSchema), findTypesThatChangedKind(oldSchema, newSchema), findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema), findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema).breakingChanges, findTypesRemovedFromUnions(oldSchema, newSchema), findValuesRemovedFromEnums(oldSchema, newSchema), findArgChanges(oldSchema, newSchema).breakingChanges, findInterfacesRemovedFromObjectTypes(oldSchema, newSchema), findRemovedDirectives(oldSchema, newSchema), findRemovedDirectiveArgs(oldSchema, newSchema), findAddedNonNullDirectiveArgs(oldSchema, newSchema), findRemovedDirectiveLocations(oldSchema, newSchema));\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\nfunction findDangerousChanges(oldSchema, newSchema) {\n  return [].concat(findArgChanges(oldSchema, newSchema).dangerousChanges, findValuesAddedToEnums(oldSchema, newSchema), findInterfacesAddedToObjectTypes(oldSchema, newSchema), findTypesAddedToUnions(oldSchema, newSchema), findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema).dangerousChanges);\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing an entire type.\n */\nfunction findRemovedTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_REMOVED,\n        description: typeName + ' was removed.'\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to changing the type of a type.\n */\nfunction findTypesThatChangedKind(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      return;\n    }\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (oldType.constructor !== newType.constructor) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: typeName + ' changed from ' + (typeKindName(oldType) + ' to ' + typeKindName(newType) + '.')\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any\n * breaking or dangerous changes in the newSchema related to arguments\n * (such as removal or change of type of an argument, or a change in an\n * argument's default value).\n */\nfunction findArgChanges(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  var dangerousChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(oldType) || Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"G\" /* isInterfaceType */])(oldType)) || !(Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(newType) || Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"G\" /* isInterfaceType */])(newType)) || newType.constructor !== oldType.constructor) {\n      return;\n    }\n\n    var oldTypeFields = oldType.getFields();\n    var newTypeFields = newType.getFields();\n\n    Object.keys(oldTypeFields).forEach(function (fieldName) {\n      if (!newTypeFields[fieldName]) {\n        return;\n      }\n\n      oldTypeFields[fieldName].args.forEach(function (oldArgDef) {\n        var newArgs = newTypeFields[fieldName].args;\n        var newArgDef = newArgs.find(function (arg) {\n          return arg.name === oldArgDef.name;\n        });\n\n        // Arg not present\n        if (!newArgDef) {\n          breakingChanges.push({\n            type: BreakingChangeType.ARG_REMOVED,\n            description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' was removed')\n          });\n        } else {\n          var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldArgDef.type, newArgDef.type);\n          if (!isSafe) {\n            breakingChanges.push({\n              type: BreakingChangeType.ARG_CHANGED_KIND,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed type from ') + (oldArgDef.type.toString() + ' to ' + newArgDef.type.toString())\n            });\n          } else if (oldArgDef.defaultValue !== undefined && oldArgDef.defaultValue !== newArgDef.defaultValue) {\n            dangerousChanges.push({\n              type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed defaultValue')\n            });\n          }\n        }\n      });\n      // Check if a non-null arg was added to the field\n      newTypeFields[fieldName].args.forEach(function (newArgDef) {\n        var oldArgs = oldTypeFields[fieldName].args;\n        var oldArgDef = oldArgs.find(function (arg) {\n          return arg.name === newArgDef.name;\n        });\n        if (!oldArgDef) {\n          if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newArgDef.type)) {\n            breakingChanges.push({\n              type: BreakingChangeType.NON_NULL_ARG_ADDED,\n              description: 'A non-null arg ' + newArgDef.name + ' on ' + (newType.name + '.' + fieldName + ' was added')\n            });\n          } else {\n            dangerousChanges.push({\n              type: DangerousChangeType.NULLABLE_ARG_ADDED,\n              description: 'A nullable arg ' + newArgDef.name + ' on ' + (newType.name + '.' + fieldName + ' was added')\n            });\n          }\n        }\n      });\n    });\n  });\n\n  return {\n    breakingChanges: breakingChanges,\n    dangerousChanges: dangerousChanges\n  };\n}\n\nfunction typeKindName(type) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"O\" /* isScalarType */])(type)) {\n    return 'a Scalar type';\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(type)) {\n    return 'an Object type';\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"G\" /* isInterfaceType */])(type)) {\n    return 'an Interface type';\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"Q\" /* isUnionType */])(type)) {\n    return 'a Union type';\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"D\" /* isEnumType */])(type)) {\n    return 'an Enum type';\n  }\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"E\" /* isInputObjectType */])(type)) {\n    return 'an Input type';\n  }\n  throw new TypeError('Unknown type ' + type.constructor.name);\n}\n\nfunction findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(oldType) || Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"G\" /* isInterfaceType */])(oldType)) || !(Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(newType) || Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"G\" /* isInterfaceType */])(newType)) || newType.constructor !== oldType.constructor) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n        var isSafe = isChangeSafeForObjectOrInterfaceField(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n  });\n  return breakingChanges;\n}\n\nfunction findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  var dangerousChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"E\" /* isInputObjectType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"E\" /* isInputObjectType */])(newType)) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n\n        var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n    // Check if a field was added to the input object type\n    Object.keys(newTypeFieldsDef).forEach(function (fieldName) {\n      if (!(fieldName in oldTypeFieldsDef)) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newTypeFieldsDef[fieldName].type)) {\n          breakingChanges.push({\n            type: BreakingChangeType.NON_NULL_INPUT_FIELD_ADDED,\n            description: 'A non-null field ' + fieldName + ' on ' + ('input type ' + newType.name + ' was added.')\n          });\n        } else {\n          dangerousChanges.push({\n            type: DangerousChangeType.NULLABLE_INPUT_FIELD_ADDED,\n            description: 'A nullable field ' + fieldName + ' on ' + ('input type ' + newType.name + ' was added.')\n          });\n        }\n      }\n    });\n  });\n  return {\n    breakingChanges: breakingChanges,\n    dangerousChanges: dangerousChanges\n  };\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(oldType)) {\n    return (\n      // if they're both named types, see if their names are equivalent\n      Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(newType) && oldType.name === newType.name ||\n      // moving from nullable to non-null of the same underlying type is safe\n      Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) ||\n      // moving from nullable to non-null of the same underlying type is safe\n      Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n  return false;\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(oldType)) {\n    // if they're both named types, see if their names are equivalent\n    return Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"J\" /* isNamedType */])(newType) && oldType.name === newType.name;\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"I\" /* isListType */])(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) ||\n      // moving from non-null to nullable of the same underlying type is safe\n      !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  }\n  return false;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing types from a union type.\n */\nfunction findTypesRemovedFromUnions(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var typesRemovedFromUnion = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"Q\" /* isUnionType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"Q\" /* isUnionType */])(newType)) {\n      return;\n    }\n    var typeNamesInNewUnion = Object.create(null);\n    newType.getTypes().forEach(function (type) {\n      typeNamesInNewUnion[type.name] = true;\n    });\n    oldType.getTypes().forEach(function (type) {\n      if (!typeNamesInNewUnion[type.name]) {\n        typesRemovedFromUnion.push({\n          type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n          description: type.name + ' was removed from union type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return typesRemovedFromUnion;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any dangerous\n * changes in the newSchema related to adding types to a union type.\n */\nfunction findTypesAddedToUnions(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var typesAddedToUnion = [];\n  Object.keys(newTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"Q\" /* isUnionType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"Q\" /* isUnionType */])(newType)) {\n      return;\n    }\n    var typeNamesInOldUnion = Object.create(null);\n    oldType.getTypes().forEach(function (type) {\n      typeNamesInOldUnion[type.name] = true;\n    });\n    newType.getTypes().forEach(function (type) {\n      if (!typeNamesInOldUnion[type.name]) {\n        typesAddedToUnion.push({\n          type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n          description: type.name + ' was added to union type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return typesAddedToUnion;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing values from an enum type.\n */\nfunction findValuesRemovedFromEnums(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var valuesRemovedFromEnums = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"D\" /* isEnumType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"D\" /* isEnumType */])(newType)) {\n      return;\n    }\n    var valuesInNewEnum = Object.create(null);\n    newType.getValues().forEach(function (value) {\n      valuesInNewEnum[value.name] = true;\n    });\n    oldType.getValues().forEach(function (value) {\n      if (!valuesInNewEnum[value.name]) {\n        valuesRemovedFromEnums.push({\n          type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n          description: value.name + ' was removed from enum type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return valuesRemovedFromEnums;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any dangerous\n * changes in the newSchema related to adding values to an enum type.\n */\nfunction findValuesAddedToEnums(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var valuesAddedToEnums = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"D\" /* isEnumType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"D\" /* isEnumType */])(newType)) {\n      return;\n    }\n\n    var valuesInOldEnum = Object.create(null);\n    oldType.getValues().forEach(function (value) {\n      valuesInOldEnum[value.name] = true;\n    });\n    newType.getValues().forEach(function (value) {\n      if (!valuesInOldEnum[value.name]) {\n        valuesAddedToEnums.push({\n          type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n          description: value.name + ' was added to enum type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return valuesAddedToEnums;\n}\n\nfunction findInterfacesRemovedFromObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n  var breakingChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(newType)) {\n      return;\n    }\n\n    var oldInterfaces = oldType.getInterfaces();\n    var newInterfaces = newType.getInterfaces();\n    oldInterfaces.forEach(function (oldInterface) {\n      if (!newInterfaces.some(function (int) {\n        return int.name === oldInterface.name;\n      })) {\n        breakingChanges.push({\n          type: BreakingChangeType.INTERFACE_REMOVED_FROM_OBJECT,\n          description: typeName + ' no longer implements interface ' + (oldInterface.name + '.')\n        });\n      }\n    });\n  });\n  return breakingChanges;\n}\n\nfunction findInterfacesAddedToObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n  var interfacesAddedToObjectTypes = [];\n\n  Object.keys(newTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(oldType) || !Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"M\" /* isObjectType */])(newType)) {\n      return;\n    }\n\n    var oldInterfaces = oldType.getInterfaces();\n    var newInterfaces = newType.getInterfaces();\n    newInterfaces.forEach(function (newInterface) {\n      if (!oldInterfaces.some(function (int) {\n        return int.name === newInterface.name;\n      })) {\n        interfacesAddedToObjectTypes.push({\n          type: DangerousChangeType.INTERFACE_ADDED_TO_OBJECT,\n          description: newInterface.name + ' added to interfaces implemented ' + ('by ' + typeName + '.')\n        });\n      }\n    });\n  });\n  return interfacesAddedToObjectTypes;\n}\n\nfunction findRemovedDirectives(oldSchema, newSchema) {\n  var removedDirectives = [];\n\n  var newSchemaDirectiveMap = getDirectiveMapForSchema(newSchema);\n  oldSchema.getDirectives().forEach(function (directive) {\n    if (!newSchemaDirectiveMap[directive.name]) {\n      removedDirectives.push({\n        type: BreakingChangeType.DIRECTIVE_REMOVED,\n        description: directive.name + ' was removed'\n      });\n    }\n  });\n\n  return removedDirectives;\n}\n\nfunction findRemovedArgsForDirective(oldDirective, newDirective) {\n  var removedArgs = [];\n  var newArgMap = getArgumentMapForDirective(newDirective);\n\n  oldDirective.args.forEach(function (arg) {\n    if (!newArgMap[arg.name]) {\n      removedArgs.push(arg);\n    }\n  });\n\n  return removedArgs;\n}\n\nfunction findRemovedDirectiveArgs(oldSchema, newSchema) {\n  var removedDirectiveArgs = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findRemovedArgsForDirective(oldDirective, newDirective).forEach(function (arg) {\n      removedDirectiveArgs.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: arg.name + ' was removed from ' + newDirective.name\n      });\n    });\n  });\n\n  return removedDirectiveArgs;\n}\n\nfunction findAddedArgsForDirective(oldDirective, newDirective) {\n  var addedArgs = [];\n  var oldArgMap = getArgumentMapForDirective(oldDirective);\n\n  newDirective.args.forEach(function (arg) {\n    if (!oldArgMap[arg.name]) {\n      addedArgs.push(arg);\n    }\n  });\n\n  return addedArgs;\n}\n\nfunction findAddedNonNullDirectiveArgs(oldSchema, newSchema) {\n  var addedNonNullableArgs = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findAddedArgsForDirective(oldDirective, newDirective).forEach(function (arg) {\n      if (!Object(__WEBPACK_IMPORTED_MODULE_0__type_definition__[\"K\" /* isNonNullType */])(arg.type)) {\n        return;\n      }\n\n      addedNonNullableArgs.push({\n        type: BreakingChangeType.NON_NULL_DIRECTIVE_ARG_ADDED,\n        description: 'A non-null arg ' + arg.name + ' on directive ' + (newDirective.name + ' was added')\n      });\n    });\n  });\n\n  return addedNonNullableArgs;\n}\n\nfunction findRemovedLocationsForDirective(oldDirective, newDirective) {\n  var removedLocations = [];\n  var newLocationSet = new Set(newDirective.locations);\n\n  oldDirective.locations.forEach(function (oldLocation) {\n    if (!newLocationSet.has(oldLocation)) {\n      removedLocations.push(oldLocation);\n    }\n  });\n\n  return removedLocations;\n}\n\nfunction findRemovedDirectiveLocations(oldSchema, newSchema) {\n  var removedLocations = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findRemovedLocationsForDirective(oldDirective, newDirective).forEach(function (location) {\n      removedLocations.push({\n        type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n        description: location + ' was removed from ' + newDirective.name\n      });\n    });\n  });\n\n  return removedLocations;\n}\n\nfunction getDirectiveMapForSchema(schema) {\n  return Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__[\"a\" /* default */])(schema.getDirectives(), function (dir) {\n    return dir.name;\n  });\n}\n\nfunction getArgumentMapForDirective(directive) {\n  return Object(__WEBPACK_IMPORTED_MODULE_3__jsutils_keyMap__[\"a\" /* default */])(directive.args, function (arg) {\n    return arg.name;\n  });\n}\n\n/***/ }),\n\n/***/ 1991:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = findDeprecatedUsages;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__ = __webpack_require__(1772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__language_visitor__ = __webpack_require__(1776);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__type_definition__ = __webpack_require__(1761);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__type_schema__ = __webpack_require__(1765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__TypeInfo__ = __webpack_require__(1785);\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\n\n\n\n\n\n\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\nfunction findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new __WEBPACK_IMPORTED_MODULE_4__TypeInfo__[\"a\" /* TypeInfo */](schema);\n\n  Object(__WEBPACK_IMPORTED_MODULE_1__language_visitor__[\"c\" /* visit */])(ast, Object(__WEBPACK_IMPORTED_MODULE_1__language_visitor__[\"e\" /* visitWithTypeInfo */])(typeInfo, {\n    Field: function Field(node) {\n      var fieldDef = typeInfo.getFieldDef();\n      if (fieldDef && fieldDef.isDeprecated) {\n        var parentType = typeInfo.getParentType();\n        if (parentType) {\n          var reason = fieldDef.deprecationReason;\n          errors.push(new __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__[\"a\" /* GraphQLError */]('The field ' + parentType.name + '.' + fieldDef.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumVal = typeInfo.getEnumValue();\n      if (enumVal && enumVal.isDeprecated) {\n        var type = Object(__WEBPACK_IMPORTED_MODULE_2__type_definition__[\"z\" /* getNamedType */])(typeInfo.getInputType());\n        if (type) {\n          var reason = enumVal.deprecationReason;\n          errors.push(new __WEBPACK_IMPORTED_MODULE_0__error_GraphQLError__[\"a\" /* GraphQLError */]('The enum value ' + type.name + '.' + enumVal.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    }\n  }));\n\n  return errors;\n}\n\n/***/ }),\n\n/***/ 1992:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildQueryFactory = undefined;\n\nvar _taggedTemplateLiteral2 = __webpack_require__(1880);\n\nvar _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);\n\nvar _templateObject = (0, _taggedTemplateLiteral3.default)(['\\n                ', '\\n            '], ['\\n                ', '\\n            ']);\n\nvar _graphqlTag = __webpack_require__(1809);\n\nvar _graphqlTag2 = _interopRequireDefault(_graphqlTag);\n\nvar _buildVariables = __webpack_require__(1993);\n\nvar _buildVariables2 = _interopRequireDefault(_buildVariables);\n\nvar _buildGqlQuery = __webpack_require__(1994);\n\nvar _buildGqlQuery2 = _interopRequireDefault(_buildGqlQuery);\n\nvar _getResponseParser = __webpack_require__(1997);\n\nvar _getResponseParser2 = _interopRequireDefault(_getResponseParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildQueryFactory = exports.buildQueryFactory = function buildQueryFactory(buildVariablesImpl, buildGqlQueryImpl, getResponseParserImpl) {\n    return function (introspectionResults) {\n        var knownResources = introspectionResults.resources.map(function (r) {\n            return r.type.name;\n        });\n\n        return function (aorFetchType, resourceName, params) {\n            var resource = introspectionResults.resources.find(function (r) {\n                return r.type.name === resourceName;\n            });\n\n            if (!resource) {\n                throw new Error('Unknown resource ' + resourceName + '. Make sure it has been declared on your server side schema. Known resources are ' + knownResources.join(', '));\n            }\n\n            var queryType = resource[aorFetchType];\n\n            if (!queryType) {\n                throw new Error('No query or mutation matching aor fetch type ' + aorFetchType + ' could be found for resource ' + resource.type.name);\n            }\n\n            var variables = buildVariablesImpl(introspectionResults)(resource, aorFetchType, params, queryType);\n            var query = buildGqlQueryImpl(introspectionResults)(resource, aorFetchType, queryType, variables);\n            var parseResponse = getResponseParserImpl(introspectionResults)(aorFetchType, resource, queryType);\n\n            return {\n                query: (0, _graphqlTag2.default)(_templateObject, query),\n                variables: variables,\n                parseResponse: parseResponse\n            };\n        };\n    };\n};\n\nexports.default = buildQueryFactory(_buildVariables2.default, _buildGqlQuery2.default, _getResponseParser2.default);\n\n/***/ }),\n\n/***/ 1993:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = __webpack_require__(37);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _typeof2 = __webpack_require__(201);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _extends13 = __webpack_require__(5);\n\nvar _extends14 = _interopRequireDefault(_extends13);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _getFinalType = __webpack_require__(1820);\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nvar _isList = __webpack_require__(1913);\n\nvar _isList2 = _interopRequireDefault(_isList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sanitizeValue = function sanitizeValue(type, value) {\n    if (type.name === 'Int') {\n        return parseInt(value);\n    }\n\n    if (type.name === 'Float') {\n        return parseFloat(value);\n    }\n\n    return value;\n};\n\nvar buildGetListVariables = function buildGetListVariables(introspectionResults) {\n    return function (resource, aorFetchType, params) {\n        var filter = Object.keys(params.filter).reduce(function (acc, key) {\n            if (key === 'ids') {\n                return (0, _extends14.default)({}, acc, { ids: params.filter[key] });\n            }\n\n            if ((0, _typeof3.default)(params.filter[key]) === 'object') {\n                var type = introspectionResults.types.find(function (t) {\n                    return t.name === resource.type.name + 'Filter';\n                });\n                var filterSome = type.inputFields.find(function (t) {\n                    return t.name === key + '_some';\n                });\n\n                if (filterSome) {\n                    var _filter = Object.keys(params.filter[key]).reduce(function (acc, k) {\n                        return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, k + '_in', params.filter[key][k]));\n                    }, {});\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + '_some', _filter));\n                }\n            }\n\n            var parts = key.split('.');\n\n            if (parts.length > 1) {\n                if (parts[1] == 'id') {\n                    var _type2 = introspectionResults.types.find(function (t) {\n                        return t.name === resource.type.name + 'Filter';\n                    });\n                    var _filterSome = _type2.inputFields.find(function (t) {\n                        return t.name === parts[0] + '_some';\n                    });\n\n                    if (_filterSome) {\n                        return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, parts[0] + '_some', { id: params.filter[key] }));\n                    }\n\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, parts[0], { id: params.filter[key] }));\n                }\n\n                var _resourceField = resource.type.fields.find(function (f) {\n                    return f.name === parts[0];\n                });\n                var _type = (0, _getFinalType2.default)(_resourceField.type);\n                return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, sanitizeValue(_type, params.filter[key])));\n            }\n\n            var resourceField = resource.type.fields.find(function (f) {\n                return f.name === key;\n            });\n\n            if (resourceField) {\n                var _type3 = (0, _getFinalType2.default)(resourceField.type);\n                var isAList = (0, _isList2.default)(resourceField.type);\n\n                if (isAList) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, Array.isArray(params.filter[key]) ? params.filter[key].map(function (value) {\n                        return sanitizeValue(_type3, value);\n                    }) : sanitizeValue(_type3, [params.filter[key]])));\n                }\n\n                return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, sanitizeValue(_type3, params.filter[key])));\n            }\n\n            return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, params.filter[key]));\n        }, {});\n\n        return {\n            page: parseInt(params.pagination.page) - 1,\n            perPage: parseInt(params.pagination.perPage),\n            sortField: params.sort.field,\n            sortOrder: params.sort.order,\n            filter: filter\n        };\n    };\n};\n\nvar buildCreateUpdateVariables = function buildCreateUpdateVariables() {\n    return function (resource, aorFetchType, params, queryType) {\n        return Object.keys(params.data).reduce(function (acc, key) {\n            if (Array.isArray(params.data[key])) {\n                var arg = queryType.args.find(function (a) {\n                    return a.name === key + 'Ids';\n                });\n\n                if (arg) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + 'Ids', params.data[key].map(function (_ref) {\n                        var id = _ref.id;\n                        return id;\n                    })));\n                }\n            }\n\n            if ((0, _typeof3.default)(params.data[key]) === 'object') {\n                var _arg = queryType.args.find(function (a) {\n                    return a.name === key + 'Id';\n                });\n\n                if (_arg) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + 'Id', params.data[key].id));\n                }\n            }\n\n            return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, params.data[key]));\n        }, {});\n    };\n};\n\nexports.default = function (introspectionResults) {\n    return function (resource, aorFetchType, params, queryType) {\n        switch (aorFetchType) {\n            case _reactAdmin.GET_LIST:\n                {\n                    return buildGetListVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n            case _reactAdmin.GET_MANY:\n                return {\n                    filter: { ids: params.ids }\n                };\n            case _reactAdmin.GET_MANY_REFERENCE:\n                {\n                    var parts = params.target.split('.');\n\n                    return {\n                        filter: (0, _defineProperty3.default)({}, parts[0], { id: params.id })\n                    };\n                }\n            case _reactAdmin.GET_ONE:\n                return {\n                    id: params.id\n                };\n            case _reactAdmin.UPDATE:\n                {\n                    return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n\n            case _reactAdmin.CREATE:\n                {\n                    return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n\n            case _reactAdmin.DELETE:\n                return {\n                    id: params.id\n                };\n        }\n    };\n};\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1994:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildApolloArgs = exports.buildArgs = exports.getArgType = exports.buildFields = undefined;\n\nvar _objectWithoutProperties2 = __webpack_require__(6);\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _defineProperty2 = __webpack_require__(37);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends7 = __webpack_require__(5);\n\nvar _extends8 = _interopRequireDefault(_extends7);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _raDataGraphql = __webpack_require__(1859);\n\nvar _graphql = __webpack_require__(1779);\n\nvar _graphqlify = __webpack_require__(1995);\n\nvar _getFinalType = __webpack_require__(1820);\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nvar _isList = __webpack_require__(1913);\n\nvar _isList2 = _interopRequireDefault(_isList);\n\nvar _isRequired = __webpack_require__(1996);\n\nvar _isRequired2 = _interopRequireDefault(_isRequired);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildFields = exports.buildFields = function buildFields(introspectionResults) {\n    return function (fields) {\n        return fields.reduce(function (acc, field) {\n            var type = (0, _getFinalType2.default)(field.type);\n\n            if (type.name.startsWith('_')) {\n                return acc;\n            }\n\n            if (type.kind !== _graphql.TypeKind.OBJECT) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, {}));\n            }\n\n            var linkedResource = introspectionResults.resources.find(function (r) {\n                return r.type.name === type.name;\n            });\n\n            if (linkedResource) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, { fields: { id: {} } }));\n            }\n\n            var linkedType = introspectionResults.types.find(function (t) {\n                return t.name === type.name;\n            });\n\n            if (linkedType) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, {\n                    fields: buildFields(introspectionResults)(linkedType.fields)\n                }));\n            }\n\n            // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n            // ending with endless circular dependencies\n            return acc;\n        }, {});\n    };\n};\n\nvar getArgType = exports.getArgType = function getArgType(arg) {\n    var type = (0, _getFinalType2.default)(arg.type);\n    var required = (0, _isRequired2.default)(arg.type);\n    var list = (0, _isList2.default)(arg.type);\n\n    return '' + (list ? '[' : '') + type.name + (list ? '!]' : '') + (required ? '!' : '');\n};\n\nvar buildArgs = exports.buildArgs = function buildArgs(query, variables) {\n    if (query.args.length === 0) {\n        return {};\n    }\n\n    var validVariables = Object.keys(variables).filter(function (k) {\n        return typeof variables[k] !== 'undefined';\n    });\n    var args = query.args.filter(function (a) {\n        return validVariables.includes(a.name);\n    }).reduce(function (acc, arg) {\n        return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, '' + arg.name, '$' + arg.name));\n    }, {});\n\n    return args;\n};\n\nvar buildApolloArgs = exports.buildApolloArgs = function buildApolloArgs(query, variables) {\n    if (query.args.length === 0) {\n        return {};\n    }\n\n    var validVariables = Object.keys(variables).filter(function (k) {\n        return typeof variables[k] !== 'undefined';\n    });\n\n    var args = query.args.filter(function (a) {\n        return validVariables.includes(a.name);\n    }).reduce(function (acc, arg) {\n        return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, '$' + arg.name, getArgType(arg)));\n    }, {});\n\n    return args;\n};\n\nexports.default = function (introspectionResults) {\n    return function (resource, aorFetchType, queryType, variables) {\n        var sortField = variables.sortField,\n            sortOrder = variables.sortOrder,\n            metaVariables = (0, _objectWithoutProperties3.default)(variables, ['sortField', 'sortOrder']);\n\n        var apolloArgs = buildApolloArgs(queryType, variables);\n        var args = buildArgs(queryType, variables);\n        var metaArgs = buildArgs(queryType, metaVariables);\n        var fields = buildFields(introspectionResults)(resource.type.fields);\n        if (aorFetchType === _reactAdmin.GET_LIST || aorFetchType === _reactAdmin.GET_MANY || aorFetchType === _reactAdmin.GET_MANY_REFERENCE) {\n            var _result = (0, _graphqlify.encodeQuery)(queryType.name, {\n                params: apolloArgs,\n                fields: {\n                    items: {\n                        field: queryType.name,\n                        params: args,\n                        fields: fields\n                    },\n                    total: {\n                        field: '_' + queryType.name + 'Meta',\n                        params: metaArgs,\n                        fields: { count: {} }\n                    }\n                }\n            });\n\n            return _result;\n        }\n\n        if (aorFetchType === _reactAdmin.DELETE) {\n            return (0, _graphqlify.encodeMutation)(queryType.name, {\n                params: apolloArgs,\n                fields: {\n                    data: {\n                        field: queryType.name,\n                        params: args,\n                        fields: { id: {} }\n                    }\n                }\n            });\n        }\n\n        var query = {\n            params: apolloArgs,\n            fields: {\n                data: {\n                    field: queryType.name,\n                    params: args,\n                    fields: fields\n                }\n            }\n        };\n\n        var result = _raDataGraphql.QUERY_TYPES.includes(aorFetchType) ? (0, _graphqlify.encodeQuery)(queryType.name, query) : (0, _graphqlify.encodeMutation)(queryType.name, query);\n\n        return result;\n    };\n};\n\n/***/ }),\n\n/***/ 1995:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.encodeMutation = exports.encodeQuery = undefined;\n\nvar _typeof2 = __webpack_require__(201);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Encodes a graphql query\nvar graphqlify = function graphqlify(fields) {\n    return encodeOperation('query', fields);\n};\n\n// Encodes a graphql query\nvar encodeQuery = exports.encodeQuery = function encodeQuery(_nameOrFields, _fieldsOrNil) {\n    return encodeOperation('query', _nameOrFields, _fieldsOrNil);\n};\n\n// Encodes a graphql mutation\nvar encodeMutation = exports.encodeMutation = function encodeMutation(_nameOrFields, _fieldsOrNil) {\n    return encodeOperation('mutation', _nameOrFields, _fieldsOrNil);\n};\n\n// default export graphqlify\nexports.default = graphqlify;\n\n// Encodes a graphql operation and fragments\n// The output is a complete graphql query.\n//\n//   {a: {fields: {b: 1}}}  => '{a{b}}'\n//   'mutation', {a: {fields: {b: 1}}}  => 'mutation{a{b}}'\n//\n\nfunction encodeOperation(type, _nameOrFields, _fieldsOrNil) {\n    var name = _nameOrFields;\n    var fields = _fieldsOrNil;\n    if (!_fieldsOrNil && (typeof _nameOrFields === 'undefined' ? 'undefined' : (0, _typeof3.default)(_nameOrFields)) === 'object') {\n        name = null;\n        fields = _nameOrFields;\n    }\n\n    var parts = [];\n    var fieldset = void 0;\n\n    if (name && (fields.params || fields.fields)) {\n        fieldset = encodeField(name, fields);\n        parts.push(type + ' ' + fieldset);\n    } else {\n        // stringifying the main query object\n        fieldset = encodeFieldset(fields, null);\n\n        if (name) {\n            parts.push(type + ' ' + name + fieldset);\n        } else {\n            parts.push(type + ' ' + fieldset);\n        }\n    }\n\n    return parts.join(',');\n}\n\n// Encodes a group of fields and fragments\n// The output is a piece of a graphql query.\n//\n//   {a: 1, b: true, c: {}} => '{a,b,c}'\n//   {a: {fields: {b: 1}}}  => '{a{b}}'\n//\nfunction encodeFieldset(fields, fragments) {\n    var parts = [];\n    if (fields) {\n        parts.push(encodeFields(fields));\n    }\n    if (fragments) {\n        fragments.forEach(function (f) {\n            return parts.push('...' + f.name);\n        });\n    }\n    return '{' + parts.join(',') + '}';\n}\n\n// Encodes a set of fields and nested fields.\n// The output is a piece of a graphql query.\n//\n//   {a: 1, b: true, c: {}} => 'a,b,c'\n//   {a: {fields: {b: 1}}}  => 'a{b}'\n//\nfunction encodeFields(fields) {\n    if (!fields || (typeof fields === 'undefined' ? 'undefined' : (0, _typeof3.default)(fields)) !== 'object') {\n        throw new Error('fields cannot be \"' + fields + '\"');\n    }\n\n    var encoded = Object.keys(fields).filter(function (key) {\n        return fields.hasOwnProperty(key) && fields[key];\n    }).map(function (key) {\n        return encodeField(key, fields[key]);\n    });\n\n    if (encoded.length === 0) {\n        throw new Error('fields cannot be empty');\n    }\n\n    return encoded.join(',');\n}\n\n// Encode a single field and nested fields.\n// The output is a piece of a graphql query.\n//\n//   ('a', 1)                 => 'a'\n//   ('a', {field: 'aa'})     => 'a:aa'\n//   ('a', {params: {b: 10}}) => 'a(b:10)'\n//   ('a', {fields: {b: 10}}) => 'a{b}'\n//\nfunction encodeField(key, val) {\n    if ((typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) !== 'object') {\n        return key;\n    }\n\n    var parts = [key];\n\n    if (val.field) {\n        parts.push(':' + val.field);\n    }\n    if (val.params) {\n        parts.push(encodeParams(val.params));\n    }\n    if (val.fields || val.fragments) {\n        parts.push(encodeFieldset(val.fields, val.fragments));\n    }\n\n    return parts.join('');\n}\n\n// Encodes a map of field parameters.\n//\n//   {a: 1, b: true} => '(a:1,b:true)'\n//   {a: ['b', 'c']} => '(a:[\"b\",\"c\"])'\n//   {a: {b: 'c'}}   => '(a:{b:\"c\"})'\n//\nfunction encodeParams(params) {\n    var encoded = encodeParamsMap(params);\n    if (encoded.length === 0) {\n        throw new Error('params cannot be empty');\n    }\n\n    return '(' + encoded.join(',') + ')';\n}\n\n// Encodes an object type field parameter.\n//\n//   {a: {b: {c: 10}}} => '{a:{b:{c:10}}}'\n//   {a: {b: false}}   => '{a:{b:false}}'\n//\nfunction encodeParamsObject(params) {\n    var encoded = encodeParamsMap(params);\n    return '{' + encoded.join(',') + '}';\n}\n\n// Encodes an array type field parameter.\n//\n//   [1, 2, 3]          => '[1,2,3]'\n//   [ {a: 1}, {a: 2} ] => '[{a:1},{a:2}]'\n//\nfunction encodeParamsArray(array) {\n    var encoded = array.map(encodeParamValue);\n    return '[' + encoded.join(',') + ']';\n}\n\n// Encodes a map of field parameters.\n//\n//   {a: 1, b: true} => 'a:1,b:true'\n//   {a: ['b', 'c']} => 'a:[\"b\",\"c\"]'\n//   {a: {b: 'c'}}   => 'a:{b:\"c\"}'\n//\nfunction encodeParamsMap(params) {\n    if (!params || (typeof params === 'undefined' ? 'undefined' : (0, _typeof3.default)(params)) !== 'object') {\n        throw new Error('params cannot be \"' + params + '\"');\n    }\n\n    var keys = Object.keys(params).filter(function (key) {\n        var val = params[key];\n        return params.hasOwnProperty(key) && val !== undefined && val !== null && !Number.isNaN(val);\n    });\n\n    return keys.map(function (key) {\n        return encodeParam(key, params[key]);\n    });\n}\n\n// Encodes a single parameter\n//\n//    ('a', 1) => 'a:1'\n//\nfunction encodeParam(key, val) {\n    return key + ':' + encodeParamValue(val);\n}\n\n// Encodes parameter value\n//\n//   'a'       => '\"a\"'\n//   Enum('a') => 'a'\n//\nfunction encodeParamValue(value) {\n    if (Array.isArray(value)) {\n        return encodeParamsArray(value);\n    }\n    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {\n        return encodeParamsObject(value);\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    throw new Error('unsupported param type \"' + (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) + '\"');\n}\n\n/***/ }),\n\n/***/ 1996:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = __webpack_require__(1779);\n\nvar isRequired = function isRequired(type) {\n    if (type.kind === _graphql.TypeKind.LIST) {\n        return isRequired(type.ofType);\n    }\n\n    return type.kind === _graphql.TypeKind.NON_NULL;\n};\n\nexports.default = isRequired;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1997:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = __webpack_require__(37);\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends6 = __webpack_require__(5);\n\nvar _extends7 = _interopRequireDefault(_extends6);\n\nvar _graphql = __webpack_require__(1779);\n\nvar _reactAdmin = __webpack_require__(24);\n\nvar _getFinalType = __webpack_require__(1820);\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sanitizeResource = function sanitizeResource(introspectionResults, resource) {\n    return function (data) {\n        var result = Object.keys(data).reduce(function (acc, key) {\n            if (key.startsWith('_')) {\n                return acc;\n            }\n\n            var field = resource.type.fields.find(function (f) {\n                return f.name === key;\n            });\n            var type = (0, _getFinalType2.default)(field.type);\n\n            if (type.kind !== _graphql.TypeKind.OBJECT) {\n                return (0, _extends7.default)({}, acc, (0, _defineProperty3.default)({}, field.name, data[field.name]));\n            }\n\n            // FIXME: We might have to handle linked types which are not resources but will have to be careful about\n            // endless circular dependencies\n            var linkedResource = introspectionResults.resources.find(function (r) {\n                return r.type.name === type.name;\n            });\n\n            if (linkedResource) {\n                var _extends4;\n\n                var linkedResourceData = data[field.name];\n\n                if (Array.isArray(linkedResourceData)) {\n                    var _extends3;\n\n                    return (0, _extends7.default)({}, acc, (_extends3 = {}, (0, _defineProperty3.default)(_extends3, field.name, data[field.name].map(sanitizeResource(introspectionResults, linkedResource))), (0, _defineProperty3.default)(_extends3, field.name + 'Ids', data[field.name].map(function (d) {\n                        return d.id;\n                    })), _extends3));\n                }\n\n                return (0, _extends7.default)({}, acc, (_extends4 = {}, (0, _defineProperty3.default)(_extends4, field.name + '.id', linkedResourceData ? data[field.name].id : undefined), (0, _defineProperty3.default)(_extends4, field.name, linkedResourceData ? sanitizeResource(introspectionResults, linkedResource)(data[field.name]) : undefined), _extends4));\n            }\n\n            return (0, _extends7.default)({}, acc, (0, _defineProperty3.default)({}, field.name, data[field.name]));\n        }, {});\n\n        return result;\n    };\n};\n\nexports.default = function (introspectionResults) {\n    return function (aorFetchType, resource) {\n        return function (response) {\n            var sanitize = sanitizeResource(introspectionResults, resource);\n            var data = response.data;\n\n            if (aorFetchType === _reactAdmin.GET_LIST || aorFetchType === _reactAdmin.GET_MANY || aorFetchType === _reactAdmin.GET_MANY_REFERENCE) {\n                return {\n                    data: response.data.items.map(sanitize),\n                    total: response.data.total.count\n                };\n            }\n\n            return { data: sanitize(data.data) };\n        };\n    };\n};\n\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.73b4a4be.chunk.js","import buildApolloClient from 'ra-data-graphql-simple';\n\nexport default () => {\n    const getGqlResource = resource => {\n        switch (resource) {\n            case 'customers':\n                return 'Customer';\n\n            case 'categories':\n                return 'Category';\n\n            case 'commands':\n                return 'Command';\n\n            case 'products':\n                return 'Product';\n\n            case 'reviews':\n                return 'Review';\n\n            default:\n                throw new Error(`Unknown resource ${resource}`);\n        }\n    };\n\n    return buildApolloClient({\n        clientOptions: {\n            uri: 'http://localhost:4000/graphql',\n        },\n    }).then(dataProvider => (type, resource, params) =>\n        dataProvider(type, getGqlResource(resource), params)\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/dataProvider/graphql.js","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport { GraphQLError } from './GraphQLError';\nexport { syntaxError } from './syntaxError';\nexport { locatedError } from './locatedError';\nexport { printError } from './printError';\nexport { formatError } from './formatError';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/index.mjs\n// module id = 1760\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport isInvalid from '../jsutils/isInvalid';\n\nimport { Kind } from '../language/kinds';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped';\n\n// Predicates & Assertions\n\n/**\n * These are all of the possible kinds of types.\n */\n\n\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\n\nexport function assertType(type) {\n  !isType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL type.') : void 0;\n  return type;\n}\n\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\n\nexport function assertScalarType(type) {\n  !isScalarType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Scalar type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\n\nexport function assertObjectType(type) {\n  !isObjectType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Object type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\n\nexport function assertInterfaceType(type) {\n  !isInterfaceType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Interface type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\n\nexport function assertUnionType(type) {\n  !isUnionType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Union type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\n\nexport function assertEnumType(type) {\n  !isEnumType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Enum type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\n\nexport function assertInputObjectType(type) {\n  !isInputObjectType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Input Object type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\n\nexport function assertListType(type) {\n  !isListType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL List type.') : void 0;\n  return type;\n}\n\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\n\nexport function assertNonNullType(type) {\n  !isNonNullType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL Non-Null type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as input types for arguments and directives.\n */\n\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\n\nexport function assertInputType(type) {\n  !isInputType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL input type.') : void 0;\n  return type;\n}\n\n/**\n * These types may be used as output types as the result of fields.\n */\n\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\n\nexport function assertOutputType(type) {\n  !isOutputType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL output type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe types which may be leaf values.\n */\n\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nexport function assertLeafType(type) {\n  !isLeafType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL leaf type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nexport function assertCompositeType(type) {\n  !isCompositeType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL composite type.') : void 0;\n  return type;\n}\n\n/**\n * These types may describe the parent context of a selection set.\n */\n\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nexport function assertAbstractType(type) {\n  !isAbstractType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL abstract type.') : void 0;\n  return type;\n}\n\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: GraphQLList(PersonType) },\n *         children: { type: GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n\n// eslint-disable-next-line no-redeclare\nexport function GraphQLList(ofType) {\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n}\n\n// Also provide toJSON and inspect aliases for toString.\nvar listProto = GraphQLList.prototype;\nlistProto.toString = listProto.toJSON = listProto.inspect = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function GraphQLNonNull(ofType) {\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n}\n\n// Also provide toJSON and inspect aliases for toString.\nvar nonNullProto = GraphQLNonNull.prototype;\nnonNullProto.toString = nonNullProto.toJSON = nonNullProto.inspect = function toString() {\n  return String(this.ofType) + '!';\n};\n\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nexport function assertWrappingType(type) {\n  !isWrappingType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL wrapping type.') : void 0;\n  return type;\n}\n\n/**\n * These types can all accept null as a value.\n */\n\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nexport function assertNullableType(type) {\n  !isNullableType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL nullable type.') : void 0;\n  return type;\n}\n\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\n\nexport function assertNamedType(type) {\n  !isNamedType(type) ? invariant(0, 'Expected ' + String(type) + ' to be a GraphQL named type.') : void 0;\n  return type;\n}\n\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n    return unwrappedType;\n  }\n}\n\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\n\nfunction resolveThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLScalarType = function () {\n  function GraphQLScalarType(config) {\n    _classCallCheck(this, GraphQLScalarType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._scalarConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n    !(typeof config.serialize === 'function') ? invariant(0, this.name + ' must provide \"serialize\" function. If this custom Scalar ' + 'is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" ' + 'functions are also provided.') : void 0;\n    if (config.parseValue || config.parseLiteral) {\n      !(typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function') ? invariant(0, this.name + ' must provide both \"parseValue\" and \"parseLiteral\" ' + 'functions.') : void 0;\n    }\n  }\n\n  // Serializes an internal value to include in a response.\n\n\n  GraphQLScalarType.prototype.serialize = function serialize(value) {\n    var serializer = this._scalarConfig.serialize;\n    return serializer(value);\n  };\n\n  // Parses an externally provided value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseValue = function parseValue(value) {\n    var parser = this._scalarConfig.parseValue;\n    if (isInvalid(value)) {\n      return undefined;\n    }\n    return parser ? parser(value) : value;\n  };\n\n  // Parses an externally provided literal value to use as an input.\n\n\n  GraphQLScalarType.prototype.parseLiteral = function parseLiteral(valueNode, variables) {\n    var parser = this._scalarConfig.parseLiteral;\n    return parser ? parser(valueNode, variables) : valueFromASTUntyped(valueNode, variables);\n  };\n\n  GraphQLScalarType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLScalarType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLScalarType.prototype.toJSON = GraphQLScalarType.prototype.inspect = GraphQLScalarType.prototype.toString;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType = function () {\n  function GraphQLObjectType(config) {\n    _classCallCheck(this, GraphQLObjectType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this.isTypeOf = config.isTypeOf;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n    if (config.isTypeOf) {\n      !(typeof config.isTypeOf === 'function') ? invariant(0, this.name + ' must provide \"isTypeOf\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLObjectType.prototype.getInterfaces = function getInterfaces() {\n    return this._interfaces || (this._interfaces = defineInterfaces(this, this._typeConfig.interfaces));\n  };\n\n  GraphQLObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLObjectType.prototype.toJSON = GraphQLObjectType.prototype.inspect = GraphQLObjectType.prototype.toString;\n\nfunction defineInterfaces(type, interfacesThunk) {\n  var interfaces = resolveThunk(interfacesThunk) || [];\n  !Array.isArray(interfaces) ? invariant(0, type.name + ' interfaces must be an Array or a function which returns ' + 'an Array.') : void 0;\n  return interfaces;\n}\n\nfunction defineFieldMap(type, fieldsThunk) {\n  var fieldMap = resolveThunk(fieldsThunk) || {};\n  !isPlainObj(fieldMap) ? invariant(0, type.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n\n  var resultFieldMap = Object.create(null);\n  Object.keys(fieldMap).forEach(function (fieldName) {\n    var fieldConfig = fieldMap[fieldName];\n    !isPlainObj(fieldConfig) ? invariant(0, type.name + '.' + fieldName + ' field config must be an object') : void 0;\n    !!fieldConfig.hasOwnProperty('isDeprecated') ? invariant(0, type.name + '.' + fieldName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    var field = _extends({}, fieldConfig, {\n      isDeprecated: Boolean(fieldConfig.deprecationReason),\n      name: fieldName\n    });\n    !isValidResolver(field.resolve) ? invariant(0, type.name + '.' + fieldName + ' field resolver must be a function if ' + ('provided, but got: ' + String(field.resolve) + '.')) : void 0;\n    var argsConfig = fieldConfig.args;\n    if (!argsConfig) {\n      field.args = [];\n    } else {\n      !isPlainObj(argsConfig) ? invariant(0, type.name + '.' + fieldName + ' args must be an object with argument ' + 'names as keys.') : void 0;\n      field.args = Object.keys(argsConfig).map(function (argName) {\n        var arg = argsConfig[argName];\n        return {\n          name: argName,\n          description: arg.description === undefined ? null : arg.description,\n          type: arg.type,\n          defaultValue: arg.defaultValue,\n          astNode: arg.astNode\n        };\n      });\n    }\n    resultFieldMap[fieldName] = field;\n  });\n  return resultFieldMap;\n}\n\nfunction isPlainObj(obj) {\n  return obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);\n}\n\n// If a resolver is defined, it must be a function.\nfunction isValidResolver(resolver) {\n  return resolver == null || typeof resolver === 'function';\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType = function () {\n  function GraphQLInterfaceType(config) {\n    _classCallCheck(this, GraphQLInterfaceType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.extensionASTNodes = config.extensionASTNodes;\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? invariant(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLInterfaceType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = defineFieldMap(this, this._typeConfig.fields));\n  };\n\n  GraphQLInterfaceType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInterfaceType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLInterfaceType.prototype.toJSON = GraphQLInterfaceType.prototype.inspect = GraphQLInterfaceType.prototype.toString;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType = function () {\n  function GraphQLUnionType(config) {\n    _classCallCheck(this, GraphQLUnionType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this.resolveType = config.resolveType;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n    if (config.resolveType) {\n      !(typeof config.resolveType === 'function') ? invariant(0, this.name + ' must provide \"resolveType\" as a function.') : void 0;\n    }\n  }\n\n  GraphQLUnionType.prototype.getTypes = function getTypes() {\n    return this._types || (this._types = defineTypes(this, this._typeConfig.types));\n  };\n\n  GraphQLUnionType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLUnionType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLUnionType.prototype.toJSON = GraphQLUnionType.prototype.inspect = GraphQLUnionType.prototype.toString;\n\nfunction defineTypes(unionType, typesThunk) {\n  var types = resolveThunk(typesThunk) || [];\n  !Array.isArray(types) ? invariant(0, 'Must provide Array of types or a function which returns ' + ('such an array for Union ' + unionType.name + '.')) : void 0;\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType /* <T> */ = function () {\n  function GraphQLEnumType(config /* <T> */) {\n    _classCallCheck(this, GraphQLEnumType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._enumConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n  }\n\n  GraphQLEnumType.prototype.getValues = function getValues() {\n    return this._values || (this._values = defineEnumValues(this, this._enumConfig.values));\n  };\n\n  GraphQLEnumType.prototype.getValue = function getValue(name) {\n    return this._getNameLookup()[name];\n  };\n\n  GraphQLEnumType.prototype.serialize = function serialize(value /* T */) {\n    var enumValue = this._getValueLookup().get(value);\n    if (enumValue) {\n      return enumValue.name;\n    }\n  };\n\n  GraphQLEnumType.prototype.parseValue = function parseValue(value) /* T */{\n    if (typeof value === 'string') {\n      var enumValue = this._getNameLookup()[value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype.parseLiteral = function parseLiteral(valueNode, _variables) /* T */{\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind === Kind.ENUM) {\n      var enumValue = this._getNameLookup()[valueNode.value];\n      if (enumValue) {\n        return enumValue.value;\n      }\n    }\n  };\n\n  GraphQLEnumType.prototype._getValueLookup = function _getValueLookup() {\n    if (!this._valueLookup) {\n      var lookup = new Map();\n      this.getValues().forEach(function (value) {\n        lookup.set(value.value, value);\n      });\n      this._valueLookup = lookup;\n    }\n    return this._valueLookup;\n  };\n\n  GraphQLEnumType.prototype._getNameLookup = function _getNameLookup() {\n    if (!this._nameLookup) {\n      var lookup = Object.create(null);\n      this.getValues().forEach(function (value) {\n        lookup[value.name] = value;\n      });\n      this._nameLookup = lookup;\n    }\n    return this._nameLookup;\n  };\n\n  GraphQLEnumType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLEnumType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLEnumType.prototype.toJSON = GraphQLEnumType.prototype.inspect = GraphQLEnumType.prototype.toString;\n\nfunction defineEnumValues(type, valueMap /* <T> */\n) {\n  !isPlainObj(valueMap) ? invariant(0, type.name + ' values must be an object with value names as keys.') : void 0;\n  return Object.keys(valueMap).map(function (valueName) {\n    var value = valueMap[valueName];\n    !isPlainObj(value) ? invariant(0, type.name + '.' + valueName + ' must refer to an object with a \"value\" key ' + ('representing an internal value but got: ' + String(value) + '.')) : void 0;\n    !!value.hasOwnProperty('isDeprecated') ? invariant(0, type.name + '.' + valueName + ' should provide \"deprecationReason\" instead ' + 'of \"isDeprecated\".') : void 0;\n    return {\n      name: valueName,\n      description: value.description,\n      isDeprecated: Boolean(value.deprecationReason),\n      deprecationReason: value.deprecationReason,\n      astNode: value.astNode,\n      value: value.hasOwnProperty('value') ? value.value : valueName\n    };\n  });\n} /* <T> */\n\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType = function () {\n  function GraphQLInputObjectType(config) {\n    _classCallCheck(this, GraphQLInputObjectType);\n\n    this.name = config.name;\n    this.description = config.description;\n    this.astNode = config.astNode;\n    this._typeConfig = config;\n    !(typeof config.name === 'string') ? invariant(0, 'Must provide name.') : void 0;\n  }\n\n  GraphQLInputObjectType.prototype.getFields = function getFields() {\n    return this._fields || (this._fields = this._defineFieldMap());\n  };\n\n  GraphQLInputObjectType.prototype._defineFieldMap = function _defineFieldMap() {\n    var _this = this;\n\n    var fieldMap = resolveThunk(this._typeConfig.fields) || {};\n    !isPlainObj(fieldMap) ? invariant(0, this.name + ' fields must be an object with field names as keys or a ' + 'function which returns such an object.') : void 0;\n    var resultFieldMap = Object.create(null);\n    Object.keys(fieldMap).forEach(function (fieldName) {\n      var field = _extends({}, fieldMap[fieldName], {\n        name: fieldName\n      });\n      !!field.hasOwnProperty('resolve') ? invariant(0, _this.name + '.' + fieldName + ' field type has a resolve property, but ' + 'Input Types cannot define resolvers.') : void 0;\n      resultFieldMap[fieldName] = field;\n    });\n    return resultFieldMap;\n  };\n\n  GraphQLInputObjectType.prototype.toString = function toString() {\n    return this.name;\n  };\n\n  return GraphQLInputObjectType;\n}();\n\n// Also provide toJSON and inspect aliases for toString.\nGraphQLInputObjectType.prototype.toJSON = GraphQLInputObjectType.prototype.toString;\nGraphQLInputObjectType.prototype.inspect = GraphQLInputObjectType.prototype.toString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/definition.mjs\n// module id = 1761\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  VARIABLE: 'Variable',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n\n  // Values\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n\n  // Directives\n  DIRECTIVE: 'Directive',\n\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension',\n\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition'\n});\n\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/kinds.mjs\n// module id = 1762\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { visit } from './visitor';\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nexport function print(ast) {\n  return visit(ast, { leave: printDocASTReducer });\n}\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n\n  // Document\n\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet;\n    // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n\n\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue;\n    return variable + ': ' + type + wrap(' = ', defaultValue);\n  },\n\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n\n  // Fragments\n\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (\n      // Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      'fragment ' + name + wrap('(', join(variableDefinitions, ', '), ')') + ' ' + ('on ' + typeCondition + ' ' + wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n\n  // Value\n\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n\n  // Directive\n\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n\n  // Type\n\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n\n  // Type System Definitions\n\n  SchemaDefinition: function SchemaDefinition(_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + wrap('(', join(args, ', '), ')') + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n\n  ScalarTypeExtension: function ScalarTypeExtension(_ref31) {\n    var name = _ref31.name,\n        directives = _ref31.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n\n  ObjectTypeExtension: function ObjectTypeExtension(_ref32) {\n    var name = _ref32.name,\n        interfaces = _ref32.interfaces,\n        directives = _ref32.directives,\n        fields = _ref32.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives,\n        fields = _ref33.fields;\n    return join(['extend interface', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  UnionTypeExtension: function UnionTypeExtension(_ref34) {\n    var name = _ref34.name,\n        directives = _ref34.directives,\n        types = _ref34.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n\n  EnumTypeExtension: function EnumTypeExtension(_ref35) {\n    var name = _ref35.name,\n        directives = _ref35.directives,\n        values = _ref35.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        fields = _ref36.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  },\n\n  DirectiveDefinition: addDescription(function (_ref37) {\n    var name = _ref37.name,\n        args = _ref37.arguments,\n        locations = _ref37.locations;\n    return 'directive @' + name + wrap('(', join(args, ', '), ')') + ' on ' + join(locations, ' | ');\n  })\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n  return maybeArray ? maybeArray.filter(function (x) {\n    return x;\n  }).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n  return maybeString ? start + maybeString + (end || '') : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription) {\n  var escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1 ? '\"\"\"' + escaped.replace(/\"$/, '\"\\n') + '\"\"\"' : '\"\"\"\\n' + (isDescription ? escaped : indent(escaped)) + '\\n\"\"\"';\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/printer.mjs\n// module id = 1764\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { isObjectType, isInterfaceType, isUnionType, isInputObjectType, isWrappingType } from './definition';\n\nimport { GraphQLDirective, isDirective, specifiedDirectives } from './directives';\n\nimport { __Schema } from './introspection';\nimport find from '../jsutils/find';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\nimport objectValues from '../jsutils/objectValues';\n\n/**\n * Test if the given value is a GraphQL schema.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       query: MyAppQueryRootType,\n *       mutation: MyAppMutationRootType,\n *     })\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. @include and\n * @skip) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n *     const MyAppSchema = new GraphQLSchema({\n *       ...\n *       directives: specifiedDirectives.concat([ myCustomDirective ]),\n *     })\n *\n */\nexport var GraphQLSchema = function () {\n  // Used as a cache for validateSchema().\n  function GraphQLSchema(config) {\n    var _this = this;\n\n    _classCallCheck(this, GraphQLSchema);\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    if (config && config.assumeValid) {\n      this.__validationErrors = [];\n    } else {\n      // Otherwise check for common mistakes during construction to produce\n      // clear and early error messages.\n      !((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') ? invariant(0, 'Must provide configuration object.') : void 0;\n      !(!config.types || Array.isArray(config.types)) ? invariant(0, '\"types\" must be Array if provided but got: ' + String(config.types) + '.') : void 0;\n      !(!config.directives || Array.isArray(config.directives)) ? invariant(0, '\"directives\" must be Array if provided but got: ' + (String(config.directives) + '.')) : void 0;\n      !(!config.allowedLegacyNames || Array.isArray(config.allowedLegacyNames)) ? invariant(0, '\"allowedLegacyNames\" must be Array if provided but got: ' + (String(config.allowedLegacyNames) + '.')) : void 0;\n    }\n\n    this.__allowedLegacyNames = config.allowedLegacyNames;\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription;\n    // Provide specified directives (e.g. @include and @skip) by default.\n    this._directives = config.directives || specifiedDirectives;\n    this.astNode = config.astNode;\n\n    // Build type map now to detect any errors within this schema.\n    var initialTypes = [this.getQueryType(), this.getMutationType(), this.getSubscriptionType(), __Schema];\n\n    var types = config.types;\n    if (types) {\n      initialTypes = initialTypes.concat(types);\n    }\n\n    // Keep track of all types referenced within the schema.\n    var typeMap = Object.create(null);\n\n    // First by deeply visiting all initial types.\n    typeMap = initialTypes.reduce(typeMapReducer, typeMap);\n\n    // Then by deeply visiting all directive types.\n    typeMap = this._directives.reduce(typeMapDirectiveReducer, typeMap);\n\n    // Storing the resulting map for reference by the schema.\n    this._typeMap = typeMap;\n\n    // Keep track of all implementations by interface name.\n    this._implementations = Object.create(null);\n    Object.keys(this._typeMap).forEach(function (typeName) {\n      var type = _this._typeMap[typeName];\n      if (isObjectType(type)) {\n        type.getInterfaces().forEach(function (iface) {\n          if (isInterfaceType(iface)) {\n            var impls = _this._implementations[iface.name];\n            if (impls) {\n              impls.push(type);\n            } else {\n              _this._implementations[iface.name] = [type];\n            }\n          }\n        });\n      }\n    });\n  }\n  // Referenced by validateSchema().\n\n\n  GraphQLSchema.prototype.getQueryType = function getQueryType() {\n    return this._queryType;\n  };\n\n  GraphQLSchema.prototype.getMutationType = function getMutationType() {\n    return this._mutationType;\n  };\n\n  GraphQLSchema.prototype.getSubscriptionType = function getSubscriptionType() {\n    return this._subscriptionType;\n  };\n\n  GraphQLSchema.prototype.getTypeMap = function getTypeMap() {\n    return this._typeMap;\n  };\n\n  GraphQLSchema.prototype.getType = function getType(name) {\n    return this.getTypeMap()[name];\n  };\n\n  GraphQLSchema.prototype.getPossibleTypes = function getPossibleTypes(abstractType) {\n    if (isUnionType(abstractType)) {\n      return abstractType.getTypes();\n    }\n    return this._implementations[abstractType.name];\n  };\n\n  GraphQLSchema.prototype.isPossibleType = function isPossibleType(abstractType, possibleType) {\n    var possibleTypeMap = this._possibleTypeMap;\n    if (!possibleTypeMap) {\n      this._possibleTypeMap = possibleTypeMap = Object.create(null);\n    }\n\n    if (!possibleTypeMap[abstractType.name]) {\n      var possibleTypes = this.getPossibleTypes(abstractType);\n      !Array.isArray(possibleTypes) ? invariant(0, 'Could not find possible implementing types for ' + abstractType.name + ' ' + 'in schema. Check that schema.types is defined and is an array of ' + 'all possible types in the schema.') : void 0;\n      possibleTypeMap[abstractType.name] = possibleTypes.reduce(function (map, type) {\n        return map[type.name] = true, map;\n      }, Object.create(null));\n    }\n\n    return Boolean(possibleTypeMap[abstractType.name][possibleType.name]);\n  };\n\n  GraphQLSchema.prototype.getDirectives = function getDirectives() {\n    return this._directives;\n  };\n\n  GraphQLSchema.prototype.getDirective = function getDirective(name) {\n    return find(this.getDirectives(), function (directive) {\n      return directive.name === name;\n    });\n  };\n\n  return GraphQLSchema;\n}();\n\nfunction typeMapReducer(map, type) {\n  if (!type) {\n    return map;\n  }\n  if (isWrappingType(type)) {\n    return typeMapReducer(map, type.ofType);\n  }\n  if (map[type.name]) {\n    !(map[type.name] === type) ? invariant(0, 'Schema must contain unique named types but contains multiple ' + ('types named \"' + type.name + '\".')) : void 0;\n    return map;\n  }\n  map[type.name] = type;\n\n  var reducedMap = map;\n\n  if (isUnionType(type)) {\n    reducedMap = type.getTypes().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (isObjectType(type)) {\n    reducedMap = type.getInterfaces().reduce(typeMapReducer, reducedMap);\n  }\n\n  if (isObjectType(type) || isInterfaceType(type)) {\n    objectValues(type.getFields()).forEach(function (field) {\n      if (field.args) {\n        var fieldArgTypes = field.args.map(function (arg) {\n          return arg.type;\n        });\n        reducedMap = fieldArgTypes.reduce(typeMapReducer, reducedMap);\n      }\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  if (isInputObjectType(type)) {\n    objectValues(type.getFields()).forEach(function (field) {\n      reducedMap = typeMapReducer(reducedMap, field.type);\n    });\n  }\n\n  return reducedMap;\n}\n\nfunction typeMapDirectiveReducer(map, directive) {\n  // Directives are not validated until validateSchema() is called.\n  if (!isDirective(directive)) {\n    return map;\n  }\n  return directive.args.reduce(function (_map, arg) {\n    return typeMapReducer(_map, arg.type);\n  }, map);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/schema.mjs\n// module id = 1765\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport default function invariant(condition, message) {\n  /* istanbul ignore else */\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/invariant.mjs\n// module id = 1766\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Returns true if a value is undefined, or NaN.\n */\nexport default function isInvalid(value) {\n  return value === undefined || value !== value;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/isInvalid.mjs\n// module id = 1767\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { GraphQLNonNull } from './definition'; /**\n                                                * Copyright (c) 2015-present, Facebook, Inc.\n                                                *\n                                                * This source code is licensed under the MIT license found in the\n                                                * LICENSE file in the root directory of this source tree.\n                                                *\n                                                *  strict\n                                                */\n\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport instanceOf from '../jsutils/instanceOf';\nimport invariant from '../jsutils/invariant';\n\nimport { DirectiveLocation } from '../language/directiveLocation';\n\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport var GraphQLDirective = function GraphQLDirective(config) {\n  _classCallCheck(this, GraphQLDirective);\n\n  this.name = config.name;\n  this.description = config.description;\n  this.locations = config.locations;\n  this.astNode = config.astNode;\n  !config.name ? invariant(0, 'Directive must be named.') : void 0;\n  !Array.isArray(config.locations) ? invariant(0, 'Must provide locations for directive.') : void 0;\n\n  var args = config.args;\n  if (!args) {\n    this.args = [];\n  } else {\n    !!Array.isArray(args) ? invariant(0, '@' + config.name + ' args must be an object with argument names as keys.') : void 0;\n    this.args = Object.keys(args).map(function (argName) {\n      var arg = args[argName];\n      return {\n        name: argName,\n        description: arg.description === undefined ? null : arg.description,\n        type: arg.type,\n        defaultValue: arg.defaultValue,\n        astNode: arg.astNode\n      };\n    });\n  }\n};\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport var GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when ' + 'the `if` argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\nexport var GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` ' + 'argument is true.',\n  locations: [DirectiveLocation.FIELD, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n\n/**\n * Constant string used for default reason for a deprecation.\n */\nexport var DEFAULT_DEPRECATION_REASON = 'No longer supported';\n\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\nexport var GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [DirectiveLocation.FIELD_DEFINITION, DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a ' + 'suggestion for how to access supported similar data. Formatted ' + 'in [Markdown](https://daringfireball.net/projects/markdown/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n\n/**\n * The full list of specified directives.\n */\nexport var specifiedDirectives = [GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective];\n\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(function (specifiedDirective) {\n    return specifiedDirective.name === directive.name;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/directives.mjs\n// module id = 1768\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { GraphQLObjectType, GraphQLEnumType, GraphQLList, GraphQLNonNull, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isAbstractType, isNamedType } from './definition';\nimport { GraphQLString, GraphQLBoolean } from './scalars';\nimport { DirectiveLocation } from '../language/directiveLocation';\n\n\nexport var __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  isIntrospection: true,\n  description: 'A GraphQL Schema defines the capabilities of a GraphQL server. It ' + 'exposes all available types and directives on the server, as well as ' + 'the entry points for query, mutation, and subscription operations.',\n  fields: function fields() {\n    return {\n      types: {\n        description: 'A list of all types supported by this server.',\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__Type))),\n        resolve: function resolve(schema) {\n          return objectValues(schema.getTypeMap());\n        }\n      },\n      queryType: {\n        description: 'The type that query operations will be rooted at.',\n        type: GraphQLNonNull(__Type),\n        resolve: function resolve(schema) {\n          return schema.getQueryType();\n        }\n      },\n      mutationType: {\n        description: 'If this server supports mutation, the type that ' + 'mutation operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getMutationType();\n        }\n      },\n      subscriptionType: {\n        description: 'If this server support subscription, the type that ' + 'subscription operations will be rooted at.',\n        type: __Type,\n        resolve: function resolve(schema) {\n          return schema.getSubscriptionType();\n        }\n      },\n      directives: {\n        description: 'A list of all directives supported by this server.',\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__Directive))),\n        resolve: function resolve(schema) {\n          return schema.getDirectives();\n        }\n      }\n    };\n  }\n});\n\nexport var __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  isIntrospection: true,\n  description: 'A Directive provides a way to describe alternate runtime execution and ' + 'type validation behavior in a GraphQL document.' + \"\\n\\nIn some cases, you need to provide options to alter GraphQL's \" + 'execution behavior in ways field arguments will not suffice, such as ' + 'conditionally including or skipping a field. Directives provide this by ' + 'describing additional information to the executor.',\n  fields: function fields() {\n    return {\n      name: { type: GraphQLNonNull(GraphQLString) },\n      description: { type: GraphQLString },\n      locations: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__DirectiveLocation)))\n      },\n      args: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__InputValue))),\n        resolve: function resolve(directive) {\n          return directive.args || [];\n        }\n      },\n      // NOTE: the following three fields are deprecated and are no longer part\n      // of the GraphQL specification.\n      onOperation: {\n        deprecationReason: 'Use `locations`.',\n        type: GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(DirectiveLocation.QUERY) !== -1 || d.locations.indexOf(DirectiveLocation.MUTATION) !== -1 || d.locations.indexOf(DirectiveLocation.SUBSCRIPTION) !== -1;\n        }\n      },\n      onFragment: {\n        deprecationReason: 'Use `locations`.',\n        type: GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(DirectiveLocation.FRAGMENT_SPREAD) !== -1 || d.locations.indexOf(DirectiveLocation.INLINE_FRAGMENT) !== -1 || d.locations.indexOf(DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n        }\n      },\n      onField: {\n        deprecationReason: 'Use `locations`.',\n        type: GraphQLNonNull(GraphQLBoolean),\n        resolve: function resolve(d) {\n          return d.locations.indexOf(DirectiveLocation.FIELD) !== -1;\n        }\n      }\n    };\n  }\n});\n\nexport var __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  isIntrospection: true,\n  description: 'A Directive can be adjacent to many parts of the GraphQL language, a ' + '__DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.'\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.'\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.'\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.'\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.'\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.'\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.'\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.'\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.'\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.'\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.'\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.'\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.'\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.'\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.'\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.'\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.'\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.'\n    }\n  }\n});\n\nexport var __Type = new GraphQLObjectType({\n  name: '__Type',\n  isIntrospection: true,\n  description: 'The fundamental unit of any GraphQL Schema is the type. There are ' + 'many kinds of types in GraphQL as represented by the `__TypeKind` enum.' + '\\n\\nDepending on the kind of a type, certain fields describe ' + 'information about that type. Scalar types provide no information ' + 'beyond a name and description, while Enum types provide their values. ' + 'Object and Interface types provide the fields they describe. Abstract ' + 'types, Union and Interface, provide the Object types possible ' + 'at runtime. List and NonNull types compose other types.',\n  fields: function fields() {\n    return {\n      kind: {\n        type: GraphQLNonNull(__TypeKind),\n        resolve: function resolve(type) {\n          if (isScalarType(type)) {\n            return TypeKind.SCALAR;\n          } else if (isObjectType(type)) {\n            return TypeKind.OBJECT;\n          } else if (isInterfaceType(type)) {\n            return TypeKind.INTERFACE;\n          } else if (isUnionType(type)) {\n            return TypeKind.UNION;\n          } else if (isEnumType(type)) {\n            return TypeKind.ENUM;\n          } else if (isInputObjectType(type)) {\n            return TypeKind.INPUT_OBJECT;\n          } else if (isListType(type)) {\n            return TypeKind.LIST;\n          } else if (isNonNullType(type)) {\n            return TypeKind.NON_NULL;\n          }\n          throw new Error('Unknown kind of type: ' + type);\n        }\n      },\n      name: { type: GraphQLString },\n      description: { type: GraphQLString },\n      fields: {\n        type: GraphQLList(GraphQLNonNull(__Field)),\n        args: {\n          includeDeprecated: { type: GraphQLBoolean, defaultValue: false }\n        },\n        resolve: function resolve(type, _ref) {\n          var includeDeprecated = _ref.includeDeprecated;\n\n          if (isObjectType(type) || isInterfaceType(type)) {\n            var fields = objectValues(type.getFields());\n            if (!includeDeprecated) {\n              fields = fields.filter(function (field) {\n                return !field.deprecationReason;\n              });\n            }\n            return fields;\n          }\n          return null;\n        }\n      },\n      interfaces: {\n        type: GraphQLList(GraphQLNonNull(__Type)),\n        resolve: function resolve(type) {\n          if (isObjectType(type)) {\n            return type.getInterfaces();\n          }\n        }\n      },\n      possibleTypes: {\n        type: GraphQLList(GraphQLNonNull(__Type)),\n        resolve: function resolve(type, args, context, _ref2) {\n          var schema = _ref2.schema;\n\n          if (isAbstractType(type)) {\n            return schema.getPossibleTypes(type);\n          }\n        }\n      },\n      enumValues: {\n        type: GraphQLList(GraphQLNonNull(__EnumValue)),\n        args: {\n          includeDeprecated: { type: GraphQLBoolean, defaultValue: false }\n        },\n        resolve: function resolve(type, _ref3) {\n          var includeDeprecated = _ref3.includeDeprecated;\n\n          if (isEnumType(type)) {\n            var values = type.getValues();\n            if (!includeDeprecated) {\n              values = values.filter(function (value) {\n                return !value.deprecationReason;\n              });\n            }\n            return values;\n          }\n        }\n      },\n      inputFields: {\n        type: GraphQLList(GraphQLNonNull(__InputValue)),\n        resolve: function resolve(type) {\n          if (isInputObjectType(type)) {\n            return objectValues(type.getFields());\n          }\n        }\n      },\n      ofType: { type: __Type }\n    };\n  }\n});\n\nexport var __Field = new GraphQLObjectType({\n  name: '__Field',\n  isIntrospection: true,\n  description: 'Object and Interface types are described by a list of Fields, each of ' + 'which has a name, potentially a list of arguments, and a return type.',\n  fields: function fields() {\n    return {\n      name: { type: GraphQLNonNull(GraphQLString) },\n      description: { type: GraphQLString },\n      args: {\n        type: GraphQLNonNull(GraphQLList(GraphQLNonNull(__InputValue))),\n        resolve: function resolve(field) {\n          return field.args || [];\n        }\n      },\n      type: { type: GraphQLNonNull(__Type) },\n      isDeprecated: { type: GraphQLNonNull(GraphQLBoolean) },\n      deprecationReason: {\n        type: GraphQLString\n      }\n    };\n  }\n});\n\nexport var __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  isIntrospection: true,\n  description: 'Arguments provided to Fields or Directives and the input fields of an ' + 'InputObject are represented as Input Values which describe their type ' + 'and optionally a default value.',\n  fields: function fields() {\n    return {\n      name: { type: GraphQLNonNull(GraphQLString) },\n      description: { type: GraphQLString },\n      type: { type: GraphQLNonNull(__Type) },\n      defaultValue: {\n        type: GraphQLString,\n        description: 'A GraphQL-formatted string representing the default value for this ' + 'input value.',\n        resolve: function resolve(inputVal) {\n          return isInvalid(inputVal.defaultValue) ? null : print(astFromValue(inputVal.defaultValue, inputVal.type));\n        }\n      }\n    };\n  }\n});\n\nexport var __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  isIntrospection: true,\n  description: 'One possible value for a given Enum. Enum values are unique values, not ' + 'a placeholder for a string or numeric value. However an Enum value is ' + 'returned in a JSON response as a string.',\n  fields: function fields() {\n    return {\n      name: { type: GraphQLNonNull(GraphQLString) },\n      description: { type: GraphQLString },\n      isDeprecated: { type: GraphQLNonNull(GraphQLBoolean) },\n      deprecationReason: {\n        type: GraphQLString\n      }\n    };\n  }\n});\n\nexport var TypeKind = {\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  LIST: 'LIST',\n  NON_NULL: 'NON_NULL'\n};\n\nexport var __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  isIntrospection: true,\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.'\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description: 'Indicates this type is an object. ' + '`fields` and `interfaces` are valid fields.'\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description: 'Indicates this type is an interface. ' + '`fields` and `possibleTypes` are valid fields.'\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description: 'Indicates this type is a union. ' + '`possibleTypes` is a valid field.'\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description: 'Indicates this type is an enum. ' + '`enumValues` is a valid field.'\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description: 'Indicates this type is an input object. ' + '`inputFields` is a valid field.'\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. ' + '`ofType` is a valid field.'\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description: 'Indicates this type is a non-null. ' + '`ofType` is a valid field.'\n    }\n  }\n});\n\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport var SchemaMetaFieldDef = {\n  name: '__schema',\n  type: GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref4) {\n    var schema = _ref4.schema;\n    return schema;\n  }\n};\n\nexport var TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [{ name: 'name', type: GraphQLNonNull(GraphQLString) }],\n  resolve: function resolve(source, _ref5, context, _ref6) {\n    var name = _ref5.name;\n    var schema = _ref6.schema;\n    return schema.getType(name);\n  }\n};\n\nexport var TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: function resolve(source, args, context, _ref7) {\n    var parentType = _ref7.parentType;\n    return parentType.name;\n  }\n};\n\nexport var introspectionTypes = [__Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind];\n\nexport function isIntrospectionType(type) {\n  return isNamedType(type) && (\n  // Would prefer to use introspectionTypes.some(), however %checks needs\n  // a simple expression.\n  type.name === __Schema.name || type.name === __Directive.name || type.name === __DirectiveLocation.name || type.name === __Type.name || type.name === __Field.name || type.name === __InputValue.name || type.name === __EnumValue.name || type.name === __TypeKind.name);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/introspection.mjs\n// module id = 1769\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { Kind } from '../language/kinds';\n\nimport { GraphQLList, GraphQLNonNull } from '../type/definition';\n\n/**\n * Given a Schema and an AST node describing a type, return a GraphQLType\n * definition which applies to that type. For example, if provided the parsed\n * AST node for `[User]`, a GraphQLList instance will be returned, containing\n * the type called \"User\" found in the schema. If a type called \"User\" is not\n * found in the schema, then undefined will be returned.\n */\n/* eslint-disable no-redeclare */\n\nexport function typeFromAST(schema, typeNode) {\n  /* eslint-enable no-redeclare */\n  var innerType = void 0;\n  if (typeNode.kind === Kind.LIST_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && GraphQLList(innerType);\n  }\n  if (typeNode.kind === Kind.NON_NULL_TYPE) {\n    innerType = typeFromAST(schema, typeNode.type);\n    return innerType && GraphQLNonNull(innerType);\n  }\n  if (typeNode.kind === Kind.NAMED_TYPE) {\n    return schema.getType(typeNode.name.value);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected type kind: ' + typeNode.kind + '.');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/typeFromAST.mjs\n// module id = 1771\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { printError } from './printError';\nimport { getLocation } from '../language/location';\n\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined;\n\n  // Compute locations in the source for the given nodes/positions.\n  var _source = source;\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n      return list;\n    }, []);\n  }\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations = void 0;\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n      return list;\n    }, []);\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      value: extensions || originalError && originalError.extensions\n    }\n  });\n\n  // Include (non-enumerable) stack trace.\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: { value: GraphQLError },\n  name: { value: 'GraphQLError' },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/GraphQLError.mjs\n// module id = 1772\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLScalarType, isNamedType } from './definition';\nimport { Kind } from '../language/kinds';\n\n// As per the GraphQL Spec, Integers are only treated as valid when a valid\n// 32-bit signed integer, providing the broadest support across platforms.\n//\n// n.b. JavaScript's integers are safe between -(2^53 - 1) and 2^53 - 1 because\n// they are internally represented as IEEE 754 doubles.\nvar MAX_INT = 2147483647;\nvar MIN_INT = -2147483648;\n\nfunction coerceInt(value) {\n  if (value === '') {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: (empty string)');\n  }\n  var num = Number(value);\n  if (num !== num || num > MAX_INT || num < MIN_INT) {\n    throw new TypeError('Int cannot represent non 32-bit signed integer value: ' + String(value));\n  }\n  var int = Math.floor(num);\n  if (int !== num) {\n    throw new TypeError('Int cannot represent non-integer value: ' + String(value));\n  }\n  return int;\n}\n\nexport var GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description: 'The `Int` scalar type represents non-fractional signed whole numeric ' + 'values. Int can represent values between -(2^31) and 2^31 - 1. ',\n  serialize: coerceInt,\n  parseValue: coerceInt,\n  parseLiteral: function parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      var num = parseInt(ast.value, 10);\n      if (num <= MAX_INT && num >= MIN_INT) {\n        return num;\n      }\n    }\n    return undefined;\n  }\n});\n\nfunction coerceFloat(value) {\n  if (value === '') {\n    throw new TypeError('Float cannot represent non numeric value: (empty string)');\n  }\n  var num = Number(value);\n  if (num === num) {\n    return num;\n  }\n  throw new TypeError('Float cannot represent non numeric value: ' + String(value));\n}\n\nexport var GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description: 'The `Float` scalar type represents signed double-precision fractional ' + 'values as specified by ' + '[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point). ',\n  serialize: coerceFloat,\n  parseValue: coerceFloat,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.FLOAT || ast.kind === Kind.INT ? parseFloat(ast.value) : undefined;\n  }\n});\n\nfunction coerceString(value) {\n  if (Array.isArray(value)) {\n    throw new TypeError('String cannot represent an array value: [' + String(value) + ']');\n  }\n  return String(value);\n}\n\nexport var GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description: 'The `String` scalar type represents textual data, represented as UTF-8 ' + 'character sequences. The String type is most often used by GraphQL to ' + 'represent free-form human-readable text.',\n  serialize: coerceString,\n  parseValue: coerceString,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING ? ast.value : undefined;\n  }\n});\n\nexport var GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n  serialize: Boolean,\n  parseValue: Boolean,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.BOOLEAN ? ast.value : undefined;\n  }\n});\n\nexport var GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description: 'The `ID` scalar type represents a unique identifier, often used to ' + 'refetch an object or as key for a cache. The ID type appears in a JSON ' + 'response as a String; however, it is not intended to be human-readable. ' + 'When expected as an input type, any string (such as `\"4\"`) or integer ' + '(such as `4`) input value will be accepted as an ID.',\n  serialize: String,\n  parseValue: String,\n  parseLiteral: function parseLiteral(ast) {\n    return ast.kind === Kind.STRING || ast.kind === Kind.INT ? ast.value : undefined;\n  }\n});\n\nexport var specifiedScalarTypes = [GraphQLString, GraphQLInt, GraphQLFloat, GraphQLBoolean, GraphQLID];\n\nexport function isSpecifiedScalarType(type) {\n  return isNamedType(type) && (\n  // Would prefer to use specifiedScalarTypes.some(), however %checks needs\n  // a simple expression.\n  type.name === GraphQLString.name || type.name === GraphQLInt.name || type.name === GraphQLFloat.name || type.name === GraphQLBoolean.name || type.name === GraphQLID.name);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/scalars.mjs\n// module id = 1773\n// module chunks = 0","\n\n/* eslint-disable no-redeclare */\n// $FlowFixMe workaround for: https://github.com/facebook/flow/issues/2221\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar objectValues = Object.values || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n};\nexport default objectValues;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/objectValues.mjs\n// module id = 1774\n// module chunks = 0","\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = item, map;\n  }, Object.create(null));\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/keyMap.mjs\n// module id = 1775\n// module chunks = 0","\n\n/**\n * A visitor is comprised of visit functions, which are called on each node\n * during the visitor's traversal.\n */\n\n\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name',\n  // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n\n  Directive: ['name', 'arguments'],\n\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n\n  SchemaDefinition: ['directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations']\n};\n\n/**\n * A KeyMap describes each the traversable properties of each kind of node.\n */\n\n\nexport var BREAK = {};\n\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n          for (var k in node) {\n            if (node.hasOwnProperty(k)) {\n              clone[k] = node[k];\n            }\n          }\n          node = clone;\n        }\n        var editOffset = 0;\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n          if (inArray) {\n            editKey -= editOffset;\n          }\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n      if (node === null || node === undefined) {\n        continue;\n      }\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error('Invalid AST Node: ' + JSON.stringify(node));\n      }\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      stack = { inArray: inArray, index: index, keys: keys, edits: edits, prev: stack };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : visitorKeys[node.kind] || [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n\nfunction isNode(maybeNode) {\n  return Boolean(maybeNode && typeof maybeNode.kind === 'string');\n}\n\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */false);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (!skipping[i]) {\n          var fn = getVisitFn(visitors[i], node.kind, /* isLeaving */true);\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter: function enter(node) {\n      typeInfo.enter(node);\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */false);\n      if (fn) {\n        var result = fn.apply(visitor, arguments);\n        if (result !== undefined) {\n          typeInfo.leave(node);\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n        return result;\n      }\n    },\n    leave: function leave(node) {\n      var fn = getVisitFn(visitor, node.kind, /* isLeaving */true);\n      var result = void 0;\n      if (fn) {\n        result = fn.apply(visitor, arguments);\n      }\n      typeInfo.leave(node);\n      return result;\n    }\n  };\n}\n\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n      var specificKindVisitor = specificVisitor[kind];\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/visitor.mjs\n// module id = 1776\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { Source } from './source';\nimport { syntaxError } from '../error';\n\nimport { createLexer, TokenKind, getTokenDesc } from './lexer';\n\n\nimport { Kind } from './kinds';\nimport { DirectiveLocation } from './directiveLocation';\n\n/**\n * Configuration options to control parser behavior\n */\n\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  if (!(sourceObj instanceof Source)) {\n    throw new TypeError('Must provide Source. Received: ' + String(sourceObj));\n  }\n  var lexer = createLexer(sourceObj, options || {});\n  return parseDocument(lexer);\n}\n\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\nexport function parseValue(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  var lexer = createLexer(sourceObj, options || {});\n  expect(lexer, TokenKind.SOF);\n  var value = parseValueLiteral(lexer, false);\n  expect(lexer, TokenKind.EOF);\n  return value;\n}\n\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\nexport function parseType(source, options) {\n  var sourceObj = typeof source === 'string' ? new Source(source) : source;\n  var lexer = createLexer(sourceObj, options || {});\n  expect(lexer, TokenKind.SOF);\n  var type = parseTypeReference(lexer);\n  expect(lexer, TokenKind.EOF);\n  return type;\n}\n\n/**\n * Converts a name lex token into a name parse node.\n */\nfunction parseName(lexer) {\n  var token = expect(lexer, TokenKind.NAME);\n  return {\n    kind: Kind.NAME,\n    value: token.value,\n    loc: loc(lexer, token)\n  };\n}\n\n// Implements the parsing rules in the Document section.\n\n/**\n * Document : Definition+\n */\nfunction parseDocument(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.SOF);\n  var definitions = [];\n  do {\n    definitions.push(parseDefinition(lexer));\n  } while (!skip(lexer, TokenKind.EOF));\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions: definitions,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Definition :\n *   - ExecutableDefinition\n *   - TypeSystemDefinition\n */\nfunction parseDefinition(lexer) {\n  if (peek(lexer, TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n      case 'fragment':\n        return parseExecutableDefinition(lexer);\n      case 'schema':\n      case 'scalar':\n      case 'type':\n      case 'interface':\n      case 'union':\n      case 'enum':\n      case 'input':\n      case 'extend':\n      case 'directive':\n        // Note: The schema definition language is an experimental addition.\n        return parseTypeSystemDefinition(lexer);\n    }\n  } else if (peek(lexer, TokenKind.BRACE_L)) {\n    return parseExecutableDefinition(lexer);\n  } else if (peekDescription(lexer)) {\n    // Note: The schema definition language is an experimental addition.\n    return parseTypeSystemDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n/**\n * ExecutableDefinition :\n *   - OperationDefinition\n *   - FragmentDefinition\n */\nfunction parseExecutableDefinition(lexer) {\n  if (peek(lexer, TokenKind.NAME)) {\n    switch (lexer.token.value) {\n      case 'query':\n      case 'mutation':\n      case 'subscription':\n        return parseOperationDefinition(lexer);\n\n      case 'fragment':\n        return parseFragmentDefinition(lexer);\n    }\n  } else if (peek(lexer, TokenKind.BRACE_L)) {\n    return parseOperationDefinition(lexer);\n  }\n\n  throw unexpected(lexer);\n}\n\n// Implements the parsing rules in the Operations section.\n\n/**\n * OperationDefinition :\n *  - SelectionSet\n *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n */\nfunction parseOperationDefinition(lexer) {\n  var start = lexer.token;\n  if (peek(lexer, TokenKind.BRACE_L)) {\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: 'query',\n      name: undefined,\n      variableDefinitions: [],\n      directives: [],\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  var operation = parseOperationType(lexer);\n  var name = void 0;\n  if (peek(lexer, TokenKind.NAME)) {\n    name = parseName(lexer);\n  }\n  return {\n    kind: Kind.OPERATION_DEFINITION,\n    operation: operation,\n    name: name,\n    variableDefinitions: parseVariableDefinitions(lexer),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationType : one of query mutation subscription\n */\nfunction parseOperationType(lexer) {\n  var operationToken = expect(lexer, TokenKind.NAME);\n  switch (operationToken.value) {\n    case 'query':\n      return 'query';\n    case 'mutation':\n      return 'mutation';\n    case 'subscription':\n      return 'subscription';\n  }\n\n  throw unexpected(lexer, operationToken);\n}\n\n/**\n * VariableDefinitions : ( VariableDefinition+ )\n */\nfunction parseVariableDefinitions(lexer) {\n  return peek(lexer, TokenKind.PAREN_L) ? many(lexer, TokenKind.PAREN_L, parseVariableDefinition, TokenKind.PAREN_R) : [];\n}\n\n/**\n * VariableDefinition : Variable : Type DefaultValue?\n */\nfunction parseVariableDefinition(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.VARIABLE_DEFINITION,\n    variable: parseVariable(lexer),\n    type: (expect(lexer, TokenKind.COLON), parseTypeReference(lexer)),\n    defaultValue: skip(lexer, TokenKind.EQUALS) ? parseValueLiteral(lexer, true) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Variable : $ Name\n */\nfunction parseVariable(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.DOLLAR);\n  return {\n    kind: Kind.VARIABLE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * SelectionSet : { Selection+ }\n */\nfunction parseSelectionSet(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.SELECTION_SET,\n    selections: many(lexer, TokenKind.BRACE_L, parseSelection, TokenKind.BRACE_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Selection :\n *   - Field\n *   - FragmentSpread\n *   - InlineFragment\n */\nfunction parseSelection(lexer) {\n  return peek(lexer, TokenKind.SPREAD) ? parseFragment(lexer) : parseField(lexer);\n}\n\n/**\n * Field : Alias? Name Arguments? Directives? SelectionSet?\n *\n * Alias : Name :\n */\nfunction parseField(lexer) {\n  var start = lexer.token;\n\n  var nameOrAlias = parseName(lexer);\n  var alias = void 0;\n  var name = void 0;\n  if (skip(lexer, TokenKind.COLON)) {\n    alias = nameOrAlias;\n    name = parseName(lexer);\n  } else {\n    name = nameOrAlias;\n  }\n\n  return {\n    kind: Kind.FIELD,\n    alias: alias,\n    name: name,\n    arguments: parseArguments(lexer, false),\n    directives: parseDirectives(lexer, false),\n    selectionSet: peek(lexer, TokenKind.BRACE_L) ? parseSelectionSet(lexer) : undefined,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * Arguments[Const] : ( Argument[?Const]+ )\n */\nfunction parseArguments(lexer, isConst) {\n  var item = isConst ? parseConstArgument : parseArgument;\n  return peek(lexer, TokenKind.PAREN_L) ? many(lexer, TokenKind.PAREN_L, item, TokenKind.PAREN_R) : [];\n}\n\n/**\n * Argument[Const] : Name : Value[?Const]\n */\nfunction parseArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseValueLiteral(lexer, false)),\n    loc: loc(lexer, start)\n  };\n}\n\nfunction parseConstArgument(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.ARGUMENT,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseConstValue(lexer)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Fragments section.\n\n/**\n * Corresponds to both FragmentSpread and InlineFragment in the spec.\n *\n * FragmentSpread : ... FragmentName Directives?\n *\n * InlineFragment : ... TypeCondition? Directives? SelectionSet\n */\nfunction parseFragment(lexer) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.SPREAD);\n  if (peek(lexer, TokenKind.NAME) && lexer.token.value !== 'on') {\n    return {\n      kind: Kind.FRAGMENT_SPREAD,\n      name: parseFragmentName(lexer),\n      directives: parseDirectives(lexer, false),\n      loc: loc(lexer, start)\n    };\n  }\n  var typeCondition = void 0;\n  if (lexer.token.value === 'on') {\n    lexer.advance();\n    typeCondition = parseNamedType(lexer);\n  }\n  return {\n    kind: Kind.INLINE_FRAGMENT,\n    typeCondition: typeCondition,\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentDefinition :\n *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n *\n * TypeCondition : NamedType\n */\nfunction parseFragmentDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'fragment');\n  // Experimental support for defining variables within fragments changes\n  // the grammar of FragmentDefinition:\n  //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n  if (lexer.options.experimentalFragmentVariables) {\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: parseFragmentName(lexer),\n      variableDefinitions: parseVariableDefinitions(lexer),\n      typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n      directives: parseDirectives(lexer, false),\n      selectionSet: parseSelectionSet(lexer),\n      loc: loc(lexer, start)\n    };\n  }\n  return {\n    kind: Kind.FRAGMENT_DEFINITION,\n    name: parseFragmentName(lexer),\n    typeCondition: (expectKeyword(lexer, 'on'), parseNamedType(lexer)),\n    directives: parseDirectives(lexer, false),\n    selectionSet: parseSelectionSet(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * FragmentName : Name but not `on`\n */\nfunction parseFragmentName(lexer) {\n  if (lexer.token.value === 'on') {\n    throw unexpected(lexer);\n  }\n  return parseName(lexer);\n}\n\n// Implements the parsing rules in the Values section.\n\n/**\n * Value[Const] :\n *   - [~Const] Variable\n *   - IntValue\n *   - FloatValue\n *   - StringValue\n *   - BooleanValue\n *   - NullValue\n *   - EnumValue\n *   - ListValue[?Const]\n *   - ObjectValue[?Const]\n *\n * BooleanValue : one of `true` `false`\n *\n * NullValue : `null`\n *\n * EnumValue : Name but not `true`, `false` or `null`\n */\nfunction parseValueLiteral(lexer, isConst) {\n  var token = lexer.token;\n  switch (token.kind) {\n    case TokenKind.BRACKET_L:\n      return parseList(lexer, isConst);\n    case TokenKind.BRACE_L:\n      return parseObject(lexer, isConst);\n    case TokenKind.INT:\n      lexer.advance();\n      return {\n        kind: Kind.INT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.FLOAT:\n      lexer.advance();\n      return {\n        kind: Kind.FLOAT,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.STRING:\n    case TokenKind.BLOCK_STRING:\n      return parseStringLiteral(lexer);\n    case TokenKind.NAME:\n      if (token.value === 'true' || token.value === 'false') {\n        lexer.advance();\n        return {\n          kind: Kind.BOOLEAN,\n          value: token.value === 'true',\n          loc: loc(lexer, token)\n        };\n      } else if (token.value === 'null') {\n        lexer.advance();\n        return {\n          kind: Kind.NULL,\n          loc: loc(lexer, token)\n        };\n      }\n      lexer.advance();\n      return {\n        kind: Kind.ENUM,\n        value: token.value,\n        loc: loc(lexer, token)\n      };\n    case TokenKind.DOLLAR:\n      if (!isConst) {\n        return parseVariable(lexer);\n      }\n      break;\n  }\n  throw unexpected(lexer);\n}\n\nfunction parseStringLiteral(lexer) {\n  var token = lexer.token;\n  lexer.advance();\n  return {\n    kind: Kind.STRING,\n    value: token.value,\n    block: token.kind === TokenKind.BLOCK_STRING,\n    loc: loc(lexer, token)\n  };\n}\n\nexport function parseConstValue(lexer) {\n  return parseValueLiteral(lexer, true);\n}\n\nfunction parseValueValue(lexer) {\n  return parseValueLiteral(lexer, false);\n}\n\n/**\n * ListValue[Const] :\n *   - [ ]\n *   - [ Value[?Const]+ ]\n */\nfunction parseList(lexer, isConst) {\n  var start = lexer.token;\n  var item = isConst ? parseConstValue : parseValueValue;\n  return {\n    kind: Kind.LIST,\n    values: any(lexer, TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectValue[Const] :\n *   - { }\n *   - { ObjectField[?Const]+ }\n */\nfunction parseObject(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.BRACE_L);\n  var fields = [];\n  while (!skip(lexer, TokenKind.BRACE_R)) {\n    fields.push(parseObjectField(lexer, isConst));\n  }\n  return {\n    kind: Kind.OBJECT,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectField[Const] : Name : Value[?Const]\n */\nfunction parseObjectField(lexer, isConst) {\n  var start = lexer.token;\n  return {\n    kind: Kind.OBJECT_FIELD,\n    name: parseName(lexer),\n    value: (expect(lexer, TokenKind.COLON), parseValueLiteral(lexer, isConst)),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Directives section.\n\n/**\n * Directives[Const] : Directive[?Const]+\n */\nfunction parseDirectives(lexer, isConst) {\n  var directives = [];\n  while (peek(lexer, TokenKind.AT)) {\n    directives.push(parseDirective(lexer, isConst));\n  }\n  return directives;\n}\n\n/**\n * Directive[Const] : @ Name Arguments[?Const]?\n */\nfunction parseDirective(lexer, isConst) {\n  var start = lexer.token;\n  expect(lexer, TokenKind.AT);\n  return {\n    kind: Kind.DIRECTIVE,\n    name: parseName(lexer),\n    arguments: parseArguments(lexer, isConst),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Types section.\n\n/**\n * Type :\n *   - NamedType\n *   - ListType\n *   - NonNullType\n */\nexport function parseTypeReference(lexer) {\n  var start = lexer.token;\n  var type = void 0;\n  if (skip(lexer, TokenKind.BRACKET_L)) {\n    type = parseTypeReference(lexer);\n    expect(lexer, TokenKind.BRACKET_R);\n    type = {\n      kind: Kind.LIST_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  } else {\n    type = parseNamedType(lexer);\n  }\n  if (skip(lexer, TokenKind.BANG)) {\n    return {\n      kind: Kind.NON_NULL_TYPE,\n      type: type,\n      loc: loc(lexer, start)\n    };\n  }\n  return type;\n}\n\n/**\n * NamedType : Name\n */\nexport function parseNamedType(lexer) {\n  var start = lexer.token;\n  return {\n    kind: Kind.NAMED_TYPE,\n    name: parseName(lexer),\n    loc: loc(lexer, start)\n  };\n}\n\n// Implements the parsing rules in the Type Definition section.\n\n/**\n * TypeSystemDefinition :\n *   - SchemaDefinition\n *   - TypeDefinition\n *   - TypeExtension\n *   - DirectiveDefinition\n *\n * TypeDefinition :\n *   - ScalarTypeDefinition\n *   - ObjectTypeDefinition\n *   - InterfaceTypeDefinition\n *   - UnionTypeDefinition\n *   - EnumTypeDefinition\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeSystemDefinition(lexer) {\n  // Many definitions begin with a description and require a lookahead.\n  var keywordToken = peekDescription(lexer) ? lexer.lookahead() : lexer.token;\n\n  if (keywordToken.kind === TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'schema':\n        return parseSchemaDefinition(lexer);\n      case 'scalar':\n        return parseScalarTypeDefinition(lexer);\n      case 'type':\n        return parseObjectTypeDefinition(lexer);\n      case 'interface':\n        return parseInterfaceTypeDefinition(lexer);\n      case 'union':\n        return parseUnionTypeDefinition(lexer);\n      case 'enum':\n        return parseEnumTypeDefinition(lexer);\n      case 'input':\n        return parseInputObjectTypeDefinition(lexer);\n      case 'extend':\n        return parseTypeExtension(lexer);\n      case 'directive':\n        return parseDirectiveDefinition(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\nfunction peekDescription(lexer) {\n  return peek(lexer, TokenKind.STRING) || peek(lexer, TokenKind.BLOCK_STRING);\n}\n\n/**\n * Description : StringValue\n */\nfunction parseDescription(lexer) {\n  if (peekDescription(lexer)) {\n    return parseStringLiteral(lexer);\n  }\n}\n\n/**\n * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n */\nfunction parseSchemaDefinition(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'schema');\n  var directives = parseDirectives(lexer, true);\n  var operationTypes = many(lexer, TokenKind.BRACE_L, parseOperationTypeDefinition, TokenKind.BRACE_R);\n  return {\n    kind: Kind.SCHEMA_DEFINITION,\n    directives: directives,\n    operationTypes: operationTypes,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * OperationTypeDefinition : OperationType : NamedType\n */\nfunction parseOperationTypeDefinition(lexer) {\n  var start = lexer.token;\n  var operation = parseOperationType(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseNamedType(lexer);\n  return {\n    kind: Kind.OPERATION_TYPE_DEFINITION,\n    operation: operation,\n    type: type,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n */\nfunction parseScalarTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.SCALAR_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeDefinition :\n *   Description?\n *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n */\nfunction parseObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: Kind.OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ImplementsInterfaces :\n *   - implements `&`? NamedType\n *   - ImplementsInterfaces & NamedType\n */\nfunction parseImplementsInterfaces(lexer) {\n  var types = [];\n  if (lexer.token.value === 'implements') {\n    lexer.advance();\n    // Optional leading ampersand\n    skip(lexer, TokenKind.AMP);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, TokenKind.AMP) ||\n    // Legacy support for the SDL?\n    lexer.options.allowLegacySDLImplementsInterfaces && peek(lexer, TokenKind.NAME));\n  }\n  return types;\n}\n\n/**\n * FieldsDefinition : { FieldDefinition+ }\n */\nfunction parseFieldsDefinition(lexer) {\n  // Legacy support for the SDL?\n  if (lexer.options.allowLegacySDLEmptyFields && peek(lexer, TokenKind.BRACE_L) && lexer.lookahead().kind === TokenKind.BRACE_R) {\n    lexer.advance();\n    lexer.advance();\n    return [];\n  }\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseFieldDefinition, TokenKind.BRACE_R) : [];\n}\n\n/**\n * FieldDefinition :\n *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n */\nfunction parseFieldDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.FIELD_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    type: type,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ArgumentsDefinition : ( InputValueDefinition+ )\n */\nfunction parseArgumentDefs(lexer) {\n  if (!peek(lexer, TokenKind.PAREN_L)) {\n    return [];\n  }\n  return many(lexer, TokenKind.PAREN_L, parseInputValueDef, TokenKind.PAREN_R);\n}\n\n/**\n * InputValueDefinition :\n *   - Description? Name : Type DefaultValue? Directives[Const]?\n */\nfunction parseInputValueDef(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  expect(lexer, TokenKind.COLON);\n  var type = parseTypeReference(lexer);\n  var defaultValue = void 0;\n  if (skip(lexer, TokenKind.EQUALS)) {\n    defaultValue = parseConstValue(lexer);\n  }\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.INPUT_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    type: type,\n    defaultValue: defaultValue,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeDefinition :\n *   - Description? interface Name Directives[Const]? FieldsDefinition?\n */\nfunction parseInterfaceTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  return {\n    kind: Kind.INTERFACE_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeDefinition :\n *   - Description? union Name Directives[Const]? UnionMemberTypes?\n */\nfunction parseUnionTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  return {\n    kind: Kind.UNION_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionMemberTypes :\n *   - = `|`? NamedType\n *   - UnionMemberTypes | NamedType\n */\nfunction parseUnionMemberTypes(lexer) {\n  var types = [];\n  if (skip(lexer, TokenKind.EQUALS)) {\n    // Optional leading pipe\n    skip(lexer, TokenKind.PIPE);\n    do {\n      types.push(parseNamedType(lexer));\n    } while (skip(lexer, TokenKind.PIPE));\n  }\n  return types;\n}\n\n/**\n * EnumTypeDefinition :\n *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n */\nfunction parseEnumTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  return {\n    kind: Kind.ENUM_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumValuesDefinition : { EnumValueDefinition+ }\n */\nfunction parseEnumValuesDefinition(lexer) {\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseEnumValueDefinition, TokenKind.BRACE_R) : [];\n}\n\n/**\n * EnumValueDefinition : Description? EnumValue Directives[Const]?\n *\n * EnumValue : Name\n */\nfunction parseEnumValueDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  return {\n    kind: Kind.ENUM_VALUE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeDefinition :\n *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n */\nfunction parseInputObjectTypeDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  return {\n    kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n    description: description,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputFieldsDefinition : { InputValueDefinition+ }\n */\nfunction parseInputFieldsDefinition(lexer) {\n  return peek(lexer, TokenKind.BRACE_L) ? many(lexer, TokenKind.BRACE_L, parseInputValueDef, TokenKind.BRACE_R) : [];\n}\n\n/**\n * TypeExtension :\n *   - ScalarTypeExtension\n *   - ObjectTypeExtension\n *   - InterfaceTypeExtension\n *   - UnionTypeExtension\n *   - EnumTypeExtension\n *   - InputObjectTypeDefinition\n */\nfunction parseTypeExtension(lexer) {\n  var keywordToken = lexer.lookahead();\n\n  if (keywordToken.kind === TokenKind.NAME) {\n    switch (keywordToken.value) {\n      case 'scalar':\n        return parseScalarTypeExtension(lexer);\n      case 'type':\n        return parseObjectTypeExtension(lexer);\n      case 'interface':\n        return parseInterfaceTypeExtension(lexer);\n      case 'union':\n        return parseUnionTypeExtension(lexer);\n      case 'enum':\n        return parseEnumTypeExtension(lexer);\n      case 'input':\n        return parseInputObjectTypeExtension(lexer);\n    }\n  }\n\n  throw unexpected(lexer, keywordToken);\n}\n\n/**\n * ScalarTypeExtension :\n *   - extend scalar Name Directives[Const]\n */\nfunction parseScalarTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'scalar');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  if (directives.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.SCALAR_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * ObjectTypeExtension :\n *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n *  - extend type Name ImplementsInterfaces? Directives[Const]\n *  - extend type Name ImplementsInterfaces\n */\nfunction parseObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'type');\n  var name = parseName(lexer);\n  var interfaces = parseImplementsInterfaces(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.OBJECT_TYPE_EXTENSION,\n    name: name,\n    interfaces: interfaces,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InterfaceTypeExtension :\n *   - extend interface Name Directives[Const]? FieldsDefinition\n *   - extend interface Name Directives[Const]\n */\nfunction parseInterfaceTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'interface');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.INTERFACE_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * UnionTypeExtension :\n *   - extend union Name Directives[Const]? UnionMemberTypes\n *   - extend union Name Directives[Const]\n */\nfunction parseUnionTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'union');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var types = parseUnionMemberTypes(lexer);\n  if (directives.length === 0 && types.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.UNION_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    types: types,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * EnumTypeExtension :\n *   - extend enum Name Directives[Const]? EnumValuesDefinition\n *   - extend enum Name Directives[Const]\n */\nfunction parseEnumTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'enum');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var values = parseEnumValuesDefinition(lexer);\n  if (directives.length === 0 && values.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.ENUM_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    values: values,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * InputObjectTypeExtension :\n *   - extend input Name Directives[Const]? InputFieldsDefinition\n *   - extend input Name Directives[Const]\n */\nfunction parseInputObjectTypeExtension(lexer) {\n  var start = lexer.token;\n  expectKeyword(lexer, 'extend');\n  expectKeyword(lexer, 'input');\n  var name = parseName(lexer);\n  var directives = parseDirectives(lexer, true);\n  var fields = parseInputFieldsDefinition(lexer);\n  if (directives.length === 0 && fields.length === 0) {\n    throw unexpected(lexer);\n  }\n  return {\n    kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n    name: name,\n    directives: directives,\n    fields: fields,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveDefinition :\n *   - Description? directive @ Name ArgumentsDefinition? on DirectiveLocations\n */\nfunction parseDirectiveDefinition(lexer) {\n  var start = lexer.token;\n  var description = parseDescription(lexer);\n  expectKeyword(lexer, 'directive');\n  expect(lexer, TokenKind.AT);\n  var name = parseName(lexer);\n  var args = parseArgumentDefs(lexer);\n  expectKeyword(lexer, 'on');\n  var locations = parseDirectiveLocations(lexer);\n  return {\n    kind: Kind.DIRECTIVE_DEFINITION,\n    description: description,\n    name: name,\n    arguments: args,\n    locations: locations,\n    loc: loc(lexer, start)\n  };\n}\n\n/**\n * DirectiveLocations :\n *   - `|`? DirectiveLocation\n *   - DirectiveLocations | DirectiveLocation\n */\nfunction parseDirectiveLocations(lexer) {\n  // Optional leading pipe\n  skip(lexer, TokenKind.PIPE);\n  var locations = [];\n  do {\n    locations.push(parseDirectiveLocation(lexer));\n  } while (skip(lexer, TokenKind.PIPE));\n  return locations;\n}\n\n/*\n * DirectiveLocation :\n *   - ExecutableDirectiveLocation\n *   - TypeSystemDirectiveLocation\n *\n * ExecutableDirectiveLocation : one of\n *   `QUERY`\n *   `MUTATION`\n *   `SUBSCRIPTION`\n *   `FIELD`\n *   `FRAGMENT_DEFINITION`\n *   `FRAGMENT_SPREAD`\n *   `INLINE_FRAGMENT`\n *\n * TypeSystemDirectiveLocation : one of\n *   `SCHEMA`\n *   `SCALAR`\n *   `OBJECT`\n *   `FIELD_DEFINITION`\n *   `ARGUMENT_DEFINITION`\n *   `INTERFACE`\n *   `UNION`\n *   `ENUM`\n *   `ENUM_VALUE`\n *   `INPUT_OBJECT`\n *   `INPUT_FIELD_DEFINITION`\n */\nfunction parseDirectiveLocation(lexer) {\n  var start = lexer.token;\n  var name = parseName(lexer);\n  if (DirectiveLocation.hasOwnProperty(name.value)) {\n    return name;\n  }\n  throw unexpected(lexer, start);\n}\n\n// Core parsing utility functions\n\n/**\n * Returns a location object, used to identify the place in\n * the source that created a given parsed object.\n */\nfunction loc(lexer, startToken) {\n  if (!lexer.options.noLocation) {\n    return new Loc(startToken, lexer.lastToken, lexer.source);\n  }\n}\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nLoc.prototype.toJSON = Loc.prototype.inspect = function toJSON() {\n  return { start: this.start, end: this.end };\n};\n\n/**\n * Determines if the next token is of a given kind\n */\nfunction peek(lexer, kind) {\n  return lexer.token.kind === kind;\n}\n\n/**\n * If the next token is of the given kind, return true after advancing\n * the lexer. Otherwise, do not change the parser state and return false.\n */\nfunction skip(lexer, kind) {\n  var match = lexer.token.kind === kind;\n  if (match) {\n    lexer.advance();\n  }\n  return match;\n}\n\n/**\n * If the next token is of the given kind, return that token after advancing\n * the lexer. Otherwise, do not change the parser state and throw an error.\n */\nfunction expect(lexer, kind) {\n  var token = lexer.token;\n  if (token.kind === kind) {\n    lexer.advance();\n    return token;\n  }\n  throw syntaxError(lexer.source, token.start, 'Expected ' + kind + ', found ' + getTokenDesc(token));\n}\n\n/**\n * If the next token is a keyword with the given value, return that token after\n * advancing the lexer. Otherwise, do not change the parser state and return\n * false.\n */\nfunction expectKeyword(lexer, value) {\n  var token = lexer.token;\n  if (token.kind === TokenKind.NAME && token.value === value) {\n    lexer.advance();\n    return token;\n  }\n  throw syntaxError(lexer.source, token.start, 'Expected \"' + value + '\", found ' + getTokenDesc(token));\n}\n\n/**\n * Helper function for creating an error when an unexpected lexed token\n * is encountered.\n */\nfunction unexpected(lexer, atToken) {\n  var token = atToken || lexer.token;\n  return syntaxError(lexer.source, token.start, 'Unexpected ' + getTokenDesc(token));\n}\n\n/**\n * Returns a possibly empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction any(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n/**\n * Returns a non-empty list of parse nodes, determined by\n * the parseFn. This list begins with a lex token of openKind\n * and ends with a lex token of closeKind. Advances the parser\n * to the next lex token after the closing token.\n */\nfunction many(lexer, openKind, parseFn, closeKind) {\n  expect(lexer, openKind);\n  var nodes = [parseFn(lexer)];\n  while (!skip(lexer, closeKind)) {\n    nodes.push(parseFn(lexer));\n  }\n  return nodes;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/parser.mjs\n// module id = 1777\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n\n/**\n * The enum type representing the directive location values.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/directiveLocation.mjs\n// module id = 1778\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport default function find(list, predicate) {\n  for (var i = 0; i < list.length; i++) {\n    if (predicate(list[i])) {\n      return list[i];\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/find.mjs\n// module id = 1780\n// module chunks = 0","/**\n * The current status of a query’s execution in our system.\n */\nexport var NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n//# sourceMappingURL=networkStatus.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/core/networkStatus.js\n// module id = 1781\n// module chunks = 0","/**\n * The current status of a query’s execution in our system.\n */\nexport var NetworkStatus;\n(function (NetworkStatus) {\n    /**\n     * The query has never been run before and the query is now currently running. A query will still\n     * have this network status even if a partial data result was returned from the cache, but a\n     * query was dispatched anyway.\n     */\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    /**\n     * If `setVariables` was called and a query was fired because of that then the network status\n     * will be `setVariables` until the result of that query comes back.\n     */\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    /**\n     * Indicates that `fetchMore` was called on this query and that the query created is currently in\n     * flight.\n     */\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    /**\n     * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n     * and the refetch request is currently in flight.\n     */\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    /**\n     * Indicates that a polling query is currently in flight. So for example if you are polling a\n     * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n     * a poll request has been sent but not resolved.\n     */\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    /**\n     * No request is in flight for this query, and no errors happened. Everything is OK.\n     */\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    /**\n     * No request is in flight for this query, but one or more errors were detected.\n     */\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n//# sourceMappingURL=networkStatus.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/core/networkStatus.js\n// module id = 1782\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/core-js/library/modules/_object-sap.js\n// module id = 1783\n// module chunks = 0 1 2","/**\n * Copyright (c) 2016, Lee Byron\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @ignore\n */\n\n/**\n * [Iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator)\n * is a *protocol* which describes a standard way to produce a sequence of\n * values, typically the values of the Iterable represented by this Iterator.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterator-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterator\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterator|MDN Iteration protocols}\n */\n\n/**\n * [Iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * their iteration behavior, such as what values are looped over in a\n * [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of)\n * loop or `iterall`'s `forEach` function. Many [built-in types](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#Builtin_iterables)\n * implement the Iterable protocol, including `Array` and `Map`.\n *\n * While described by the [ES2015 version of JavaScript](http://www.ecma-international.org/ecma-262/6.0/#sec-iterable-interface)\n * it can be utilized by any version of JavaScript.\n *\n * @external Iterable\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable|MDN Iteration protocols}\n */\n\n// In ES2015 environments, Symbol exists\nvar SYMBOL /*: any */ = typeof Symbol === 'function' ? Symbol : void 0\n\n// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\nvar SYMBOL_ITERATOR = SYMBOL && SYMBOL.iterator\n\n/**\n * A property name to be used as the name of an Iterable's method responsible\n * for producing an Iterator, referred to as `@@iterator`. Typically represents\n * the value `Symbol.iterator` but falls back to the string `\"@@iterator\"` when\n * `Symbol.iterator` is not defined.\n *\n * Use `$$iterator` for defining new Iterables instead of `Symbol.iterator`,\n * but do not use it for accessing existing Iterables, instead use\n * {@link getIterator} or {@link isIterable}.\n *\n * @example\n *\n * var $$iterator = require('iterall').$$iterator\n *\n * function Counter (to) {\n *   this.to = to\n * }\n *\n * Counter.prototype[$$iterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       if (this.num >= this.to) {\n *         return { value: undefined, done: true }\n *       }\n *       return { value: this.num++, done: false }\n *     }\n *   }\n * }\n *\n * var counter = new Counter(3)\n * for (var number of counter) {\n *   console.log(number) // 0 ... 1 ... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$iterator: '@@iterator'; */\nexport var $$iterator = SYMBOL_ITERATOR || '@@iterator'\n\n/**\n * Returns true if the provided object implements the Iterator protocol via\n * either implementing a `Symbol.iterator` or `\"@@iterator\"` method.\n *\n * @example\n *\n * var isIterable = require('iterall').isIterable\n * isIterable([ 1, 2, 3 ]) // true\n * isIterable('ABC') // true\n * isIterable({ length: 1, 0: 'Alpha' }) // false\n * isIterable({ key: 'value' }) // false\n * isIterable(new Map()) // true\n *\n * @param obj\n *   A value which might implement the Iterable protocol.\n * @return {boolean} true if Iterable.\n */\n/*:: declare export function isIterable(obj: any): boolean; */\nexport function isIterable(obj) {\n  return !!getIteratorMethod(obj)\n}\n\n/**\n * Returns true if the provided object implements the Array-like protocol via\n * defining a positive-integer `length` property.\n *\n * @example\n *\n * var isArrayLike = require('iterall').isArrayLike\n * isArrayLike([ 1, 2, 3 ]) // true\n * isArrayLike('ABC') // true\n * isArrayLike({ length: 1, 0: 'Alpha' }) // true\n * isArrayLike({ key: 'value' }) // false\n * isArrayLike(new Map()) // false\n *\n * @param obj\n *   A value which might implement the Array-like protocol.\n * @return {boolean} true if Array-like.\n */\n/*:: declare export function isArrayLike(obj: any): boolean; */\nexport function isArrayLike(obj) {\n  var length = obj != null && obj.length\n  return typeof length === 'number' && length >= 0 && length % 1 === 0\n}\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and is either Iterable or Array-like.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if an\n * object should be iterated-over. It always excludes string literals and\n * includes Arrays (regardless of if it is Iterable). It also includes other\n * Array-like objects such as NodeList, TypedArray, and Buffer.\n *\n * @example\n *\n * var isCollection = require('iterall').isCollection\n * isCollection([ 1, 2, 3 ]) // true\n * isCollection('ABC') // false\n * isCollection({ length: 1, 0: 'Alpha' }) // true\n * isCollection({ key: 'value' }) // false\n * isCollection(new Map()) // true\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n * if (isCollection(obj)) {\n *   forEach(obj, function (value) {\n *     console.log(value)\n *   })\n * }\n *\n * @param obj\n *   An Object value which might implement the Iterable or Array-like protocols.\n * @return {boolean} true if Iterable or Array-like Object.\n */\n/*:: declare export function isCollection(obj: any): boolean; */\nexport function isCollection(obj) {\n  return Object(obj) === obj && (isArrayLike(obj) || isIterable(obj))\n}\n\n/**\n * If the provided object implements the Iterator protocol, its Iterator object\n * is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getIterator = require('iterall').getIterator\n * var iterator = getIterator([ 1, 2, 3 ])\n * iterator.next() // { value: 1, done: false }\n * iterator.next() // { value: 2, done: false }\n * iterator.next() // { value: 3, done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which is the source of an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var getIterator:\n  & (<+TValue>(iterable: Iterable<TValue>) => Iterator<TValue>)\n  & ((iterable: mixed) => void | Iterator<mixed>); */\nexport function getIterator(iterable) {\n  var method = getIteratorMethod(iterable)\n  if (method) {\n    return method.call(iterable)\n  }\n}\n\n/**\n * If the provided object implements the Iterator protocol, the method\n * responsible for producing its Iterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getIteratorMethod = require('iterall').getIteratorMethod\n * var myArray = [ 1, 2, 3 ]\n * var method = getIteratorMethod(myArray)\n * if (method) {\n *   var iterator = method.call(myArray)\n * }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>} iterable\n *   An Iterable object which defines an `@@iterator` method.\n * @return {function(): Iterator<T>} `@@iterator` method.\n */\n/*:: declare export var getIteratorMethod:\n  & (<+TValue>(iterable: Iterable<TValue>) => (() => Iterator<TValue>))\n  & ((iterable: mixed) => (void | (() => Iterator<mixed>))); */\nexport function getIteratorMethod(iterable) {\n  if (iterable != null) {\n    var method =\n      (SYMBOL_ITERATOR && iterable[SYMBOL_ITERATOR]) || iterable['@@iterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getIterator}, this method returns a new Iterator given an\n * Iterable. However it will also create an Iterator for a non-Iterable\n * Array-like collection, such as Array in a non-ES2015 environment.\n *\n * `createIterator` is complimentary to `forEach`, but allows a \"pull\"-based\n * iteration as opposed to `forEach`'s \"push\"-based iteration.\n *\n * `createIterator` produces an Iterator for Array-likes with the same behavior\n * as ArrayIteratorPrototype described in the ECMAScript specification, and\n * does *not* skip over \"holes\".\n *\n * @example\n *\n * var createIterator = require('iterall').createIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createIterator(myArraylike)\n * iterator.next() // { value: 'Alpha', done: false }\n * iterator.next() // { value: 'Bravo', done: false }\n * iterator.next() // { value: 'Charlie', done: false }\n * iterator.next() // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   An Iterable or Array-like object to produce an Iterator.\n * @return {Iterator<T>} new Iterator instance.\n */\n/*:: declare export var createIterator:\n  & (<+TValue>(collection: Iterable<TValue>) => Iterator<TValue>)\n  & ((collection: {length: number}) => Iterator<mixed>)\n  & ((collection: mixed) => (void | Iterator<mixed>)); */\nexport function createIterator(collection) {\n  if (collection != null) {\n    var iterator = getIterator(collection)\n    if (iterator) {\n      return iterator\n    }\n    if (isArrayLike(collection)) {\n      return new ArrayLikeIterator(collection)\n    }\n  }\n}\n\n// When the object provided to `createIterator` is not Iterable but is\n// Array-like, this simple Iterator is created.\nfunction ArrayLikeIterator(obj) {\n  this._o = obj\n  this._i = 0\n}\n\n// Note: all Iterators are themselves Iterable.\nArrayLikeIterator.prototype[$$iterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nArrayLikeIterator.prototype.next = function() {\n  if (this._o === void 0 || this._i >= this._o.length) {\n    this._o = void 0\n    return { value: void 0, done: true }\n  }\n  return { value: this._o[this._i++], done: false }\n}\n\n/**\n * Given an object which either implements the Iterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forEach` where you would expect to use a `for ... of` loop in ES6.\n * However `forEach` adheres to the behavior of [Array#forEach][] described in\n * the ECMAScript specification, skipping over \"holes\" in Array-likes. It will\n * also delegate to a `forEach` method on `collection` if one is defined,\n * ensuring native performance for `Arrays`.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * Note: providing an infinite Iterator to forEach will produce an error.\n *\n * [Array#forEach]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\n *\n * @example\n *\n * var forEach = require('iterall').forEach\n *\n * forEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES6:\n * for (let value of myIterable) {\n *   console.log(value)\n * }\n *\n * // Any JavaScript environment:\n * forEach(myIterable, function (value) {\n *   console.log(value)\n * })\n *\n * @template T the type of each iterated value\n * @param {Iterable<T>|{ length: number }} collection\n *   The Iterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forEach:\n  & (<+TValue, TCollection: Iterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void)\n  & (<TCollection: {length: number}>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => void); */\nexport function forEach(collection, callback, thisArg) {\n  if (collection != null) {\n    if (typeof collection.forEach === 'function') {\n      return collection.forEach(callback, thisArg)\n    }\n    var i = 0\n    var iterator = getIterator(collection)\n    if (iterator) {\n      var step\n      while (!(step = iterator.next()).done) {\n        callback.call(thisArg, step.value, i++, collection)\n        // Infinite Iterators could cause forEach to run forever.\n        // After a very large number of iterations, produce an error.\n        /* istanbul ignore if */\n        if (i > 9999999) {\n          throw new TypeError('Near-infinite iteration.')\n        }\n      }\n    } else if (isArrayLike(collection)) {\n      for (; i < collection.length; i++) {\n        if (collection.hasOwnProperty(i)) {\n          callback.call(thisArg, collection[i], i, collection)\n        }\n      }\n    }\n  }\n}\n\n/////////////////////////////////////////////////////\n//                                                 //\n//                 ASYNC ITERATORS                 //\n//                                                 //\n/////////////////////////////////////////////////////\n\n/**\n * [AsyncIterable](https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface)\n * is a *protocol* which when implemented allows a JavaScript object to define\n * an asynchronous iteration behavior, such as what values are looped over in\n * a [`for-await-of`](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements)\n * loop or `iterall`'s {@link forAwaitEach} function.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterable\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterable-interface|Async Iteration Proposal}\n * @template T The type of each iterated value\n * @property {function (): AsyncIterator<T>} Symbol.asyncIterator\n *   A method which produces an AsyncIterator for this AsyncIterable.\n */\n\n/**\n * [AsyncIterator](https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface)\n * is a *protocol* which describes a standard way to produce and consume an\n * asynchronous sequence of values, typically the values of the\n * {@link AsyncIterable} represented by this {@link AsyncIterator}.\n *\n * AsyncIterator is similar to Observable or Stream. Like an {@link Iterator} it\n * also as a `next()` method, however instead of an IteratorResult,\n * calling this method returns a {@link Promise} for a IteratorResult.\n *\n * While described as a proposed addition to the [ES2017 version of JavaScript](https://tc39.github.io/proposal-async-iteration/)\n * it can be utilized by any version of JavaScript.\n *\n * @external AsyncIterator\n * @see {@link https://tc39.github.io/proposal-async-iteration/#sec-asynciterator-interface|Async Iteration Proposal}\n */\n\n// In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\nvar SYMBOL_ASYNC_ITERATOR = SYMBOL && SYMBOL.asyncIterator\n\n/**\n * A property name to be used as the name of an AsyncIterable's method\n * responsible for producing an Iterator, referred to as `@@asyncIterator`.\n * Typically represents the value `Symbol.asyncIterator` but falls back to the\n * string `\"@@asyncIterator\"` when `Symbol.asyncIterator` is not defined.\n *\n * Use `$$asyncIterator` for defining new AsyncIterables instead of\n * `Symbol.asyncIterator`, but do not use it for accessing existing Iterables,\n * instead use {@link getAsyncIterator} or {@link isAsyncIterable}.\n *\n * @example\n *\n * var $$asyncIterator = require('iterall').$$asyncIterator\n *\n * function Chirper (to) {\n *   this.to = to\n * }\n *\n * Chirper.prototype[$$asyncIterator] = function () {\n *   return {\n *     to: this.to,\n *     num: 0,\n *     next () {\n *       return new Promise(resolve => {\n *         if (this.num >= this.to) {\n *           resolve({ value: undefined, done: true })\n *         } else {\n *           setTimeout(() => {\n *             resolve({ value: this.num++, done: false })\n *           }, 1000)\n *         }\n *       })\n *     }\n *   }\n * }\n *\n * var chirper = new Chirper(3)\n * for await (var number of chirper) {\n *   console.log(number) // 0 ...wait... 1 ...wait... 2\n * }\n *\n * @type {Symbol|string}\n */\n/*:: declare export var $$asyncIterator: '@@asyncIterator'; */\nexport var $$asyncIterator = SYMBOL_ASYNC_ITERATOR || '@@asyncIterator'\n\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * either implementing a `Symbol.asyncIterator` or `\"@@asyncIterator\"` method.\n *\n * @example\n *\n * var isAsyncIterable = require('iterall').isAsyncIterable\n * isAsyncIterable(myStream) // true\n * isAsyncIterable('ABC') // false\n *\n * @param obj\n *   A value which might implement the AsyncIterable protocol.\n * @return {boolean} true if AsyncIterable.\n */\n/*:: declare export function isAsyncIterable(obj: any): boolean; */\nexport function isAsyncIterable(obj) {\n  return !!getAsyncIteratorMethod(obj)\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, its\n * AsyncIterator object is returned. Otherwise returns undefined.\n *\n * @example\n *\n * var getAsyncIterator = require('iterall').getAsyncIterator\n * var asyncIterator = getAsyncIterator(myStream)\n * asyncIterator.next().then(console.log) // { value: 1, done: false }\n * asyncIterator.next().then(console.log) // { value: 2, done: false }\n * asyncIterator.next().then(console.log) // { value: 3, done: false }\n * asyncIterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which is the source of an AsyncIterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var getAsyncIterator:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => AsyncIterator<TValue>)\n  & ((asyncIterable: mixed) => (void | AsyncIterator<mixed>)); */\nexport function getAsyncIterator(asyncIterable) {\n  var method = getAsyncIteratorMethod(asyncIterable)\n  if (method) {\n    return method.call(asyncIterable)\n  }\n}\n\n/**\n * If the provided object implements the AsyncIterator protocol, the method\n * responsible for producing its AsyncIterator object is returned.\n *\n * This is used in rare cases for performance tuning. This method must be called\n * with obj as the contextual this-argument.\n *\n * @example\n *\n * var getAsyncIteratorMethod = require('iterall').getAsyncIteratorMethod\n * var method = getAsyncIteratorMethod(myStream)\n * if (method) {\n *   var asyncIterator = method.call(myStream)\n * }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>} asyncIterable\n *   An AsyncIterable object which defines an `@@asyncIterator` method.\n * @return {function(): AsyncIterator<T>} `@@asyncIterator` method.\n */\n/*:: declare export var getAsyncIteratorMethod:\n  & (<+TValue>(asyncIterable: AsyncIterable<TValue>) => (() => AsyncIterator<TValue>))\n  & ((asyncIterable: mixed) => (void | (() => AsyncIterator<mixed>))); */\nexport function getAsyncIteratorMethod(asyncIterable) {\n  if (asyncIterable != null) {\n    var method =\n      (SYMBOL_ASYNC_ITERATOR && asyncIterable[SYMBOL_ASYNC_ITERATOR]) ||\n      asyncIterable['@@asyncIterator']\n    if (typeof method === 'function') {\n      return method\n    }\n  }\n}\n\n/**\n * Similar to {@link getAsyncIterator}, this method returns a new AsyncIterator\n * given an AsyncIterable. However it will also create an AsyncIterator for a\n * non-async Iterable as well as non-Iterable Array-like collection, such as\n * Array in a pre-ES2015 environment.\n *\n * `createAsyncIterator` is complimentary to `forAwaitEach`, but allows a\n * buffering \"pull\"-based iteration as opposed to `forAwaitEach`'s\n * \"push\"-based iteration.\n *\n * `createAsyncIterator` produces an AsyncIterator for non-async Iterables as\n * described in the ECMAScript proposal [Async-from-Sync Iterator Objects](https://tc39.github.io/proposal-async-iteration/#sec-async-from-sync-iterator-objects).\n *\n * > Note: Creating `AsyncIterator`s requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var createAsyncIterator = require('iterall').createAsyncIterator\n *\n * var myArraylike = { length: 3, 0: 'Alpha', 1: 'Bravo', 2: 'Charlie' }\n * var iterator = createAsyncIterator(myArraylike)\n * iterator.next().then(console.log) // { value: 'Alpha', done: false }\n * iterator.next().then(console.log) // { value: 'Bravo', done: false }\n * iterator.next().then(console.log) // { value: 'Charlie', done: false }\n * iterator.next().then(console.log) // { value: undefined, done: true }\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<T>|{ length: number }} source\n *   An AsyncIterable, Iterable, or Array-like object to produce an Iterator.\n * @return {AsyncIterator<T>} new AsyncIterator instance.\n */\n/*:: declare export var createAsyncIterator:\n  & (<+TValue>(\n      collection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>\n    ) => AsyncIterator<TValue>)\n  & ((collection: {length: number}) => AsyncIterator<mixed>)\n  & ((collection: mixed) => (void | AsyncIterator<mixed>)); */\nexport function createAsyncIterator(source) {\n  if (source != null) {\n    var asyncIterator = getAsyncIterator(source)\n    if (asyncIterator) {\n      return asyncIterator\n    }\n    var iterator = createIterator(source)\n    if (iterator) {\n      return new AsyncFromSyncIterator(iterator)\n    }\n  }\n}\n\n// When the object provided to `createAsyncIterator` is not AsyncIterable but is\n// sync Iterable, this simple wrapper is created.\nfunction AsyncFromSyncIterator(iterator) {\n  this._i = iterator\n}\n\n// Note: all AsyncIterators are themselves AsyncIterable.\nAsyncFromSyncIterator.prototype[$$asyncIterator] = function() {\n  return this\n}\n\n// A simple state-machine determines the IteratorResult returned, yielding\n// each value in the Array-like object in order of their indicies.\nAsyncFromSyncIterator.prototype.next = function() {\n  var step = this._i.next()\n  return Promise.resolve(step.value).then(function(value) {\n    return { value: value, done: step.done }\n  })\n}\n\n/**\n * Given an object which either implements the AsyncIterable protocol or is\n * Array-like, iterate over it, calling the `callback` at each iteration.\n *\n * Use `forAwaitEach` where you would expect to use a [for-await-of](https://tc39.github.io/proposal-async-iteration/#sec-for-in-and-for-of-statements) loop.\n *\n * Similar to [Array#forEach][], the `callback` function accepts three\n * arguments, and is provided with `thisArg` as the calling context.\n *\n * > Note: Using `forAwaitEach` requires the existence of `Promise`.\n * > While `Promise` has been available in modern browsers for a number of\n * > years, legacy browsers (like IE 11) may require a polyfill.\n *\n * @example\n *\n * var forAwaitEach = require('iterall').forAwaitEach\n *\n * forAwaitEach(myIterable, function (value, index, iterable) {\n *   console.log(value, index, iterable === myIterable)\n * })\n *\n * @example\n *\n * // ES2017:\n * for await (let value of myAsyncIterable) {\n *   console.log(await doSomethingAsync(value))\n * }\n * console.log('done')\n *\n * // Any JavaScript environment:\n * forAwaitEach(myAsyncIterable, function (value) {\n *   return doSomethingAsync(value).then(console.log)\n * }).then(function () {\n *   console.log('done')\n * })\n *\n * @template T the type of each iterated value\n * @param {AsyncIterable<T>|Iterable<Promise<T> | T>|{ length: number }} source\n *   The AsyncIterable or array to iterate over.\n * @param {function(T, number, object)} callback\n *   Function to execute for each iteration, taking up to three arguments\n * @param [thisArg]\n *   Optional. Value to use as `this` when executing `callback`.\n */\n/*:: declare export var forAwaitEach:\n  & (<+TValue, TCollection: Iterable<Promise<TValue> | TValue> | AsyncIterable<TValue>>(\n      collection: TCollection,\n      callbackFn: (value: TValue, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>)\n  & (<TCollection: { length: number }>(\n      collection: TCollection,\n      callbackFn: (value: mixed, index: number, collection: TCollection) => any,\n      thisArg?: any\n    ) => Promise<void>); */\nexport function forAwaitEach(source, callback, thisArg) {\n  var asyncIterator = createAsyncIterator(source)\n  if (asyncIterator) {\n    var i = 0\n    return new Promise(function(resolve, reject) {\n      function next() {\n        asyncIterator\n          .next()\n          .then(function(step) {\n            if (!step.done) {\n              Promise.resolve(callback.call(thisArg, step.value, i++, source))\n                .then(next)\n                .catch(reject)\n            } else {\n              resolve()\n            }\n            // Explicitly return null, silencing bluebird-style warnings.\n            return null\n          })\n          .catch(reject)\n        // Explicitly return null, silencing bluebird-style warnings.\n        return null\n      }\n      next()\n    })\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/iterall/index.mjs\n// module id = 1784\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { Kind } from '../language/kinds';\nimport { isObjectType, isInterfaceType, isEnumType, isInputObjectType, isListType, isCompositeType, isInputType, isOutputType, getNullableType, getNamedType } from '../type/definition';\n\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from '../type/introspection';\n\nimport { typeFromAST } from './typeFromAST';\nimport find from '../jsutils/find';\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nexport var TypeInfo = function () {\n  function TypeInfo(schema,\n  // NOTE: this experimental optional second parameter is only needed in order\n  // to support non-spec-compliant codebases. You should never need to use it.\n  getFieldDefFn,\n  // Initial type may be provided in rare cases to facilitate traversals\n  initialType) {\n    _classCallCheck(this, TypeInfo);\n\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef = getFieldDefFn || getFieldDef;\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  TypeInfo.prototype.getType = function getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getParentType = function getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getInputType = function getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getParentInputType = function getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  };\n\n  TypeInfo.prototype.getFieldDef = function getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  };\n\n  TypeInfo.prototype.getDirective = function getDirective() {\n    return this._directive;\n  };\n\n  TypeInfo.prototype.getArgument = function getArgument() {\n    return this._argument;\n  };\n\n  TypeInfo.prototype.getEnumValue = function getEnumValue() {\n    return this._enumValue;\n  };\n\n  // Flow does not yet handle this case.\n\n\n  TypeInfo.prototype.enter = function enter(node /* ASTNode */) {\n    var schema = this._schema;\n    // Note: many of the types below are explicitly typed as \"mixed\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        var namedType = getNamedType(this.getType());\n        this._parentTypeStack.push(isCompositeType(namedType) ? namedType : undefined);\n        break;\n      case Kind.FIELD:\n        var parentType = this.getParentType();\n        var fieldDef = void 0;\n        var fieldType = void 0;\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n        this._fieldDefStack.push(fieldDef);\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n        break;\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n      case Kind.OPERATION_DEFINITION:\n        var type = void 0;\n        if (node.operation === 'query') {\n          type = schema.getQueryType();\n        } else if (node.operation === 'mutation') {\n          type = schema.getMutationType();\n        } else if (node.operation === 'subscription') {\n          type = schema.getSubscriptionType();\n        }\n        this._typeStack.push(isObjectType(type) ? type : undefined);\n        break;\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        var typeConditionAST = node.typeCondition;\n        var outputType = typeConditionAST ? typeFromAST(schema, typeConditionAST) : getNamedType(this.getType());\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n        break;\n      case Kind.VARIABLE_DEFINITION:\n        var inputType = typeFromAST(schema, node.type);\n        this._inputTypeStack.push(isInputType(inputType) ? inputType : undefined);\n        break;\n      case Kind.ARGUMENT:\n        var argDef = void 0;\n        var argType = void 0;\n        var fieldOrDirective = this.getDirective() || this.getFieldDef();\n        if (fieldOrDirective) {\n          argDef = find(fieldOrDirective.args, function (arg) {\n            return arg.name === node.name.value;\n          });\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n        this._argument = argDef;\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n        break;\n      case Kind.LIST:\n        var listType = getNullableType(this.getInputType());\n        var itemType = isListType(listType) ? listType.ofType : listType;\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n        break;\n      case Kind.OBJECT_FIELD:\n        var objectType = getNamedType(this.getInputType());\n        var inputFieldType = void 0;\n        if (isInputObjectType(objectType)) {\n          var inputField = objectType.getFields()[node.name.value];\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n        this._inputTypeStack.push(isInputType(inputFieldType) ? inputFieldType : undefined);\n        break;\n      case Kind.ENUM:\n        var enumType = getNamedType(this.getInputType());\n        var enumValue = void 0;\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n        this._enumValue = enumValue;\n        break;\n    }\n  };\n\n  TypeInfo.prototype.leave = function leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n        break;\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n        this._typeStack.pop();\n        break;\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n        break;\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n        break;\n      case Kind.ARGUMENT:\n        this._argument = null;\n        this._inputTypeStack.pop();\n        break;\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._inputTypeStack.pop();\n        break;\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n    }\n  };\n\n  return TypeInfo;\n}();\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  var name = fieldNode.name.value;\n  if (name === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  }\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/TypeInfo.mjs\n// module id = 1785\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var oLength = options.length;\n  var inputThreshold = input.length / 2;\n  for (var i = 0; i < oLength; i++) {\n    var distance = lexicalDistance(input, options[i]);\n    var threshold = Math.max(inputThreshold, options[i].length / 2, 1);\n    if (distance <= threshold) {\n      optionsByDistance[options[i]] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    return optionsByDistance[a] - optionsByDistance[b];\n  });\n}\n\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\nfunction lexicalDistance(aStr, bStr) {\n  if (aStr === bStr) {\n    return 0;\n  }\n\n  var i = void 0;\n  var j = void 0;\n  var d = [];\n  var a = aStr.toLowerCase();\n  var b = bStr.toLowerCase();\n  var aLength = a.length;\n  var bLength = b.length;\n\n  // Any case change counts as a single edit\n  if (a === b) {\n    return 1;\n  }\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/suggestionList.mjs\n// module id = 1786\n// module chunks = 0","export var FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n//# sourceMappingURL=types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/core/types.js\n// module id = 1793\n// module chunks = 0","export var FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n//# sourceMappingURL=types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/core/types.js\n// module id = 1794\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isNamedType, isInputType, isOutputType } from './definition';\n\nimport { isDirective } from './directives';\n\nimport { isIntrospectionType } from './introspection';\nimport { isSchema } from './schema';\n\nimport find from '../jsutils/find';\nimport invariant from '../jsutils/invariant';\nimport objectValues from '../jsutils/objectValues';\nimport { GraphQLError } from '../error/GraphQLError';\n\nimport { isValidNameError } from '../utilities/assertValidName';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators';\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  !isSchema(schema) ? invariant(0, 'Expected ' + String(schema) + ' to be a GraphQL schema.') : void 0;\n\n  // If this Schema has already been validated, return the previous results.\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  }\n\n  // Validate the schema, producing a list of errors.\n  var context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context);\n\n  // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n  var errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\nexport function assertValidSchema(schema) {\n  var errors = validateSchema(schema);\n  if (errors.length !== 0) {\n    throw new Error(errors.map(function (error) {\n      return error.message;\n    }).join('\\n\\n'));\n  }\n}\n\nvar SchemaValidationContext = function () {\n  function SchemaValidationContext(schema) {\n    _classCallCheck(this, SchemaValidationContext);\n\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  SchemaValidationContext.prototype.reportError = function reportError(message, nodes) {\n    var _nodes = (Array.isArray(nodes) ? nodes : [nodes]).filter(Boolean);\n    this.addError(new GraphQLError(message, _nodes));\n  };\n\n  SchemaValidationContext.prototype.addError = function addError(error) {\n    this._errors.push(error);\n  };\n\n  SchemaValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  return SchemaValidationContext;\n}();\n\nfunction validateRootTypes(context) {\n  var schema = context.schema;\n  var queryType = schema.getQueryType();\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    context.reportError('Query root type must be Object type, it cannot be ' + String(queryType) + '.', getOperationTypeNode(schema, queryType, 'query'));\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && !isObjectType(mutationType)) {\n    context.reportError('Mutation root type must be Object type if provided, it cannot be ' + (String(mutationType) + '.'), getOperationTypeNode(schema, mutationType, 'mutation'));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    context.reportError('Subscription root type must be Object type if provided, it cannot be ' + (String(subscriptionType) + '.'), getOperationTypeNode(schema, subscriptionType, 'subscription'));\n  }\n}\n\nfunction getOperationTypeNode(schema, type, operation) {\n  var astNode = schema.astNode;\n  var operationTypeNode = astNode && astNode.operationTypes.find(function (operationType) {\n    return operationType.operation === operation;\n  });\n  return operationTypeNode ? operationTypeNode.type : type && type.astNode;\n}\n\nfunction validateDirectives(context) {\n  var directives = context.schema.getDirectives();\n  directives.forEach(function (directive) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError('Expected directive but got: ' + String(directive) + '.', directive && directive.astNode);\n      return;\n    }\n\n    // Ensure they are named correctly.\n    validateName(context, directive);\n\n    // TODO: Ensure proper locations.\n\n    // Ensure the arguments are valid.\n    var argNames = Object.create(null);\n    directive.args.forEach(function (arg) {\n      var argName = arg.name;\n\n      // Ensure they are named correctly.\n      validateName(context, arg);\n\n      // Ensure they are unique per directive.\n      if (argNames[argName]) {\n        context.reportError('Argument @' + directive.name + '(' + argName + ':) can only be defined once.', getAllDirectiveArgNodes(directive, argName));\n        return; // continue loop\n      }\n      argNames[argName] = true;\n\n      // Ensure the type is an input type.\n      if (!isInputType(arg.type)) {\n        context.reportError('The type of @' + directive.name + '(' + argName + ':) must be Input Type ' + ('but got: ' + String(arg.type) + '.'), getDirectiveArgTypeNode(directive, argName));\n      }\n    });\n  });\n}\n\nfunction validateName(context, node) {\n  // If a schema explicitly allows some legacy name which is no longer valid,\n  // allow it to be assumed valid.\n  if (context.schema.__allowedLegacyNames && context.schema.__allowedLegacyNames.indexOf(node.name) !== -1) {\n    return;\n  }\n  // Ensure names are valid, however introspection types opt out.\n  var error = isValidNameError(node.name, node.astNode || undefined);\n  if (error) {\n    context.addError(error);\n  }\n}\n\nfunction validateTypes(context) {\n  var typeMap = context.schema.getTypeMap();\n  objectValues(typeMap).forEach(function (type) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError('Expected GraphQL named type but got: ' + String(type) + '.', type && type.astNode);\n      return;\n    }\n\n    // Ensure it is named correctly (excluding introspection types).\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type);\n\n      // Ensure objects implement the interfaces they claim to.\n      validateObjectInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type);\n    }\n  });\n}\n\nfunction validateFields(context, type) {\n  var fields = objectValues(type.getFields());\n\n  // Objects and Interfaces both must define one or more fields.\n  if (fields.length === 0) {\n    context.reportError('Type ' + type.name + ' must define one or more fields.', getAllObjectOrInterfaceNodes(type));\n  }\n\n  fields.forEach(function (field) {\n    // Ensure they are named correctly.\n    validateName(context, field);\n\n    // Ensure they were defined at most once.\n    var fieldNodes = getAllFieldNodes(type, field.name);\n    if (fieldNodes.length > 1) {\n      context.reportError('Field ' + type.name + '.' + field.name + ' can only be defined once.', fieldNodes);\n      return; // continue loop\n    }\n\n    // Ensure the type is an output type\n    if (!isOutputType(field.type)) {\n      context.reportError('The type of ' + type.name + '.' + field.name + ' must be Output Type ' + ('but got: ' + String(field.type) + '.'), getFieldTypeNode(type, field.name));\n    }\n\n    // Ensure the arguments are valid\n    var argNames = Object.create(null);\n    field.args.forEach(function (arg) {\n      var argName = arg.name;\n\n      // Ensure they are named correctly.\n      validateName(context, arg);\n\n      // Ensure they are unique per field.\n      if (argNames[argName]) {\n        context.reportError('Field argument ' + type.name + '.' + field.name + '(' + argName + ':) can only ' + 'be defined once.', getAllFieldArgNodes(type, field.name, argName));\n      }\n      argNames[argName] = true;\n\n      // Ensure the type is an input type\n      if (!isInputType(arg.type)) {\n        context.reportError('The type of ' + type.name + '.' + field.name + '(' + argName + ':) must be Input ' + ('Type but got: ' + String(arg.type) + '.'), getFieldArgTypeNode(type, field.name, argName));\n      }\n    });\n  });\n}\n\nfunction validateObjectInterfaces(context, object) {\n  var implementedTypeNames = Object.create(null);\n  object.getInterfaces().forEach(function (iface) {\n    if (!isInterfaceType(iface)) {\n      context.reportError('Type ' + String(object) + ' must only implement Interface types, ' + ('it cannot implement ' + String(iface) + '.'), getImplementsInterfaceNode(object, iface));\n      return;\n    }\n\n    if (implementedTypeNames[iface.name]) {\n      context.reportError('Type ' + object.name + ' can only implement ' + iface.name + ' once.', getAllImplementsInterfaceNodes(object, iface));\n      return; // continue loop\n    }\n    implementedTypeNames[iface.name] = true;\n    validateObjectImplementsInterface(context, object, iface);\n  });\n}\n\nfunction validateObjectImplementsInterface(context, object, iface) {\n  var objectFieldMap = object.getFields();\n  var ifaceFieldMap = iface.getFields();\n\n  // Assert each interface field is implemented.\n  Object.keys(ifaceFieldMap).forEach(function (fieldName) {\n    var objectField = objectFieldMap[fieldName];\n    var ifaceField = ifaceFieldMap[fieldName];\n\n    // Assert interface field exists on object.\n    if (!objectField) {\n      context.reportError('Interface field ' + iface.name + '.' + fieldName + ' expected but ' + (object.name + ' does not provide it.'), [getFieldNode(iface, fieldName), object.astNode]);\n      // Continue loop over fields.\n      return;\n    }\n\n    // Assert interface field type is satisfied by object field type, by being\n    // a valid subtype. (covariant)\n    if (!isTypeSubTypeOf(context.schema, objectField.type, ifaceField.type)) {\n      context.reportError('Interface field ' + iface.name + '.' + fieldName + ' expects type ' + (String(ifaceField.type) + ' but ' + object.name + '.' + fieldName + ' ') + ('is type ' + String(objectField.type) + '.'), [getFieldTypeNode(iface, fieldName), getFieldTypeNode(object, fieldName)]);\n    }\n\n    // Assert each interface field arg is implemented.\n    ifaceField.args.forEach(function (ifaceArg) {\n      var argName = ifaceArg.name;\n      var objectArg = find(objectField.args, function (arg) {\n        return arg.name === argName;\n      });\n\n      // Assert interface field arg exists on object field.\n      if (!objectArg) {\n        context.reportError('Interface field argument ' + iface.name + '.' + fieldName + '(' + argName + ':) ' + ('expected but ' + object.name + '.' + fieldName + ' does not provide it.'), [getFieldArgNode(iface, fieldName, argName), getFieldNode(object, fieldName)]);\n        // Continue loop over arguments.\n        return;\n      }\n\n      // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n      if (!isEqualType(ifaceArg.type, objectArg.type)) {\n        context.reportError('Interface field argument ' + iface.name + '.' + fieldName + '(' + argName + ':) ' + ('expects type ' + String(ifaceArg.type) + ' but ') + (object.name + '.' + fieldName + '(' + argName + ':) is type ') + (String(objectArg.type) + '.'), [getFieldArgTypeNode(iface, fieldName, argName), getFieldArgTypeNode(object, fieldName, argName)]);\n      }\n\n      // TODO: validate default values?\n    });\n\n    // Assert additional arguments must not be required.\n    objectField.args.forEach(function (objectArg) {\n      var argName = objectArg.name;\n      var ifaceArg = find(ifaceField.args, function (arg) {\n        return arg.name === argName;\n      });\n      if (!ifaceArg && isNonNullType(objectArg.type)) {\n        context.reportError('Object field argument ' + object.name + '.' + fieldName + '(' + argName + ':) ' + ('is of required type ' + String(objectArg.type) + ' but is not also ') + ('provided by the Interface field ' + iface.name + '.' + fieldName + '.'), [getFieldArgTypeNode(object, fieldName, argName), getFieldNode(iface, fieldName)]);\n      }\n    });\n  });\n}\n\nfunction validateUnionMembers(context, union) {\n  var memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError('Union type ' + union.name + ' must define one or more member types.', union.astNode);\n  }\n\n  var includedTypeNames = Object.create(null);\n  memberTypes.forEach(function (memberType) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError('Union type ' + union.name + ' can only include type ' + (memberType.name + ' once.'), getUnionMemberTypeNodes(union, memberType.name));\n      return; // continue loop\n    }\n    includedTypeNames[memberType.name] = true;\n    if (!isObjectType(memberType)) {\n      context.reportError('Union type ' + union.name + ' can only include Object types, ' + ('it cannot include ' + String(memberType) + '.'), getUnionMemberTypeNodes(union, String(memberType)));\n    }\n  });\n}\n\nfunction validateEnumValues(context, enumType) {\n  var enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError('Enum type ' + enumType.name + ' must define one or more values.', enumType.astNode);\n  }\n\n  enumValues.forEach(function (enumValue) {\n    var valueName = enumValue.name;\n\n    // Ensure no duplicates.\n    var allNodes = getEnumValueNodes(enumType, valueName);\n    if (allNodes && allNodes.length > 1) {\n      context.reportError('Enum type ' + enumType.name + ' can include value ' + valueName + ' only once.', allNodes);\n    }\n\n    // Ensure valid name.\n    validateName(context, enumValue);\n    if (valueName === 'true' || valueName === 'false' || valueName === 'null') {\n      context.reportError('Enum type ' + enumType.name + ' cannot include value: ' + valueName + '.', enumValue.astNode);\n    }\n  });\n}\n\nfunction validateInputFields(context, inputObj) {\n  var fields = objectValues(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError('Input Object type ' + inputObj.name + ' must define one or more fields.', inputObj.astNode);\n  }\n\n  // Ensure the arguments are valid\n  fields.forEach(function (field) {\n    // Ensure they are named correctly.\n    validateName(context, field);\n\n    // TODO: Ensure they are unique per field.\n\n    // Ensure the type is an input type\n    if (!isInputType(field.type)) {\n      context.reportError('The type of ' + inputObj.name + '.' + field.name + ' must be Input Type ' + ('but got: ' + String(field.type) + '.'), field.astNode && field.astNode.type);\n    }\n  });\n}\n\nfunction getAllObjectNodes(type) {\n  return type.astNode ? type.extensionASTNodes ? [type.astNode].concat(type.extensionASTNodes) : [type.astNode] : type.extensionASTNodes || [];\n}\n\nfunction getAllObjectOrInterfaceNodes(type) {\n  return type.astNode ? type.extensionASTNodes ? [type.astNode].concat(type.extensionASTNodes) : [type.astNode] : type.extensionASTNodes || [];\n}\n\nfunction getImplementsInterfaceNode(type, iface) {\n  return getAllImplementsInterfaceNodes(type, iface)[0];\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  var implementsNodes = [];\n  var astNodes = getAllObjectNodes(type);\n  for (var i = 0; i < astNodes.length; i++) {\n    var _astNode = astNodes[i];\n    if (_astNode && _astNode.interfaces) {\n      _astNode.interfaces.forEach(function (node) {\n        if (node.name.value === iface.name) {\n          implementsNodes.push(node);\n        }\n      });\n    }\n  }\n  return implementsNodes;\n}\n\nfunction getFieldNode(type, fieldName) {\n  return getAllFieldNodes(type, fieldName)[0];\n}\n\nfunction getAllFieldNodes(type, fieldName) {\n  var fieldNodes = [];\n  var astNodes = getAllObjectOrInterfaceNodes(type);\n  for (var i = 0; i < astNodes.length; i++) {\n    var _astNode2 = astNodes[i];\n    if (_astNode2 && _astNode2.fields) {\n      _astNode2.fields.forEach(function (node) {\n        if (node.name.value === fieldName) {\n          fieldNodes.push(node);\n        }\n      });\n    }\n  }\n  return fieldNodes;\n}\n\nfunction getFieldTypeNode(type, fieldName) {\n  var fieldNode = getFieldNode(type, fieldName);\n  return fieldNode && fieldNode.type;\n}\n\nfunction getFieldArgNode(type, fieldName, argName) {\n  return getAllFieldArgNodes(type, fieldName, argName)[0];\n}\n\nfunction getAllFieldArgNodes(type, fieldName, argName) {\n  var argNodes = [];\n  var fieldNode = getFieldNode(type, fieldName);\n  if (fieldNode && fieldNode.arguments) {\n    fieldNode.arguments.forEach(function (node) {\n      if (node.name.value === argName) {\n        argNodes.push(node);\n      }\n    });\n  }\n  return argNodes;\n}\n\nfunction getFieldArgTypeNode(type, fieldName, argName) {\n  var fieldArgNode = getFieldArgNode(type, fieldName, argName);\n  return fieldArgNode && fieldArgNode.type;\n}\n\nfunction getAllDirectiveArgNodes(directive, argName) {\n  var argNodes = [];\n  var directiveNode = directive.astNode;\n  if (directiveNode && directiveNode.arguments) {\n    directiveNode.arguments.forEach(function (node) {\n      if (node.name.value === argName) {\n        argNodes.push(node);\n      }\n    });\n  }\n  return argNodes;\n}\n\nfunction getDirectiveArgTypeNode(directive, argName) {\n  var argNode = getAllDirectiveArgNodes(directive, argName)[0];\n  return argNode && argNode.type;\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  return union.astNode && union.astNode.types && union.astNode.types.filter(function (type) {\n    return type.name.value === typeName;\n  });\n}\n\nfunction getEnumValueNodes(enumType, valueName) {\n  return enumType.astNode && enumType.astNode.values && enumType.astNode.values.filter(function (value) {\n    return value.name.value === valueName;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/validate.mjs\n// module id = 1795\n// module chunks = 0","\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    return map[keyFn(item)] = valFn(item), map;\n  }, Object.create(null));\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/keyValMap.mjs\n// module id = 1796\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Returns true if a value is null, undefined, or NaN.\n */\nexport default function isNullish(value) {\n  return value === null || value === undefined || value !== value;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/isNullish.mjs\n// module id = 1797\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { isObjectType, isListType, isNonNullType, isAbstractType } from '../type/definition';\n\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  }\n\n  // If either type is non-null, the other must also be non-null.\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // If either type is a list, the other must also be a list.\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  }\n\n  // Otherwise the types are not equal.\n  return false;\n}\n\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  }\n\n  // If superType is non-null, maybeSubType must also be non-null.\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  }\n\n  // If superType type is a list, maybeSubType type must also be a list.\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n    return false;\n  }\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  }\n\n  // If superType type is an abstract type, maybeSubType type may be a currently\n  // possible object type.\n  if (isAbstractType(superType) && isObjectType(maybeSubType) && schema.isPossibleType(superType, maybeSubType)) {\n    return true;\n  }\n\n  // Otherwise, the child type is not a valid subtype of the parent type.\n  return false;\n}\n\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema.getPossibleTypes(typeA).some(function (type) {\n        return schema.isPossibleType(typeB, type);\n      });\n    }\n    // Determine if the latter type is a possible concrete type of the former.\n    return schema.isPossibleType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isPossibleType(typeB, typeA);\n  }\n\n  // Otherwise the types do not overlap.\n  return false;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/typeComparators.mjs\n// module id = 1798\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { forEach, isCollection } from 'iterall';\nimport { GraphQLError, locatedError } from '../error';\nimport invariant from '../jsutils/invariant';\nimport isInvalid from '../jsutils/isInvalid';\nimport isNullish from '../jsutils/isNullish';\nimport isPromise from '../jsutils/isPromise';\nimport memoize3 from '../jsutils/memoize3';\nimport promiseForObject from '../jsutils/promiseForObject';\nimport promiseReduce from '../jsutils/promiseReduce';\n\n\nimport { typeFromAST } from '../utilities/typeFromAST';\nimport { Kind } from '../language/kinds';\nimport { getVariableValues, getArgumentValues, getDirectiveValues } from './values';\nimport { isObjectType, isAbstractType, isLeafType, isListType, isNonNullType } from '../type/definition';\n\nimport { GraphQLSchema } from '../type/schema';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from '../type/introspection';\nimport { GraphQLIncludeDirective, GraphQLSkipDirective } from '../type/directives';\nimport { assertValidSchema } from '../type/validate';\n\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g \"a\"\n * 2) fragment \"spreads\" e.g. \"...c\"\n * 3) inline fragment \"spreads\" e.g. \"...on Type { a }\"\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n\n/**\n * The result of GraphQL execution.\n *\n *   - `errors` is included when any errors occurred as a non-empty array.\n *   - `data` is the result of a successful execution of the query.\n */\n\n\n/**\n * Implements the \"Evaluating requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function execute(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? executeImpl(argsOrSchema.schema, argsOrSchema.document, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : executeImpl(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n\nfunction executeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrect, throw an error.\n  assertValidExecutionArguments(schema, document, variableValues);\n\n  // If a valid context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n  var context = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n  // Return early errors if execution context failed.\n  if (Array.isArray(context)) {\n    return { errors: context };\n  }\n\n  // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  var data = executeOperation(context, context.operation, rootValue);\n  return buildResponse(context, data);\n}\n\n/**\n * Given a completed execution context and data, build the { errors, data }\n * response defined by the \"Response\" section of the GraphQL specification.\n */\nfunction buildResponse(context, data) {\n  if (isPromise(data)) {\n    return data.then(function (resolved) {\n      return buildResponse(context, resolved);\n    });\n  }\n  return context.errors.length === 0 ? { data: data } : { errors: context.errors, data: data };\n}\n\n/**\n * Given a ResponsePath (found in the `path` entry in the information provided\n * as the last argument to a field resolver), return an Array of the path keys.\n */\nexport function responsePathAsArray(path) {\n  var flattened = [];\n  var curr = path;\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\n/**\n * Given a ResponsePath and a key, return a new ResponsePath containing the\n * new key.\n */\nexport function addPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n */\nexport function assertValidExecutionArguments(schema, document, rawVariableValues) {\n  !document ? invariant(0, 'Must provide document') : void 0;\n\n  // If the schema used for execution is invalid, throw an error.\n  assertValidSchema(schema);\n\n  // Variables, if provided, must be an object.\n  !(!rawVariableValues || (typeof rawVariableValues === 'undefined' ? 'undefined' : _typeof(rawVariableValues)) === 'object') ? invariant(0, 'Variables must be provided as an Object where each property is a ' + 'variable value. Perhaps look to see if an unparsed JSON string ' + 'was provided.') : void 0;\n}\n\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n */\nexport function buildExecutionContext(schema, document, rootValue, contextValue, rawVariableValues, operationName, fieldResolver) {\n  var errors = [];\n  var operation = void 0;\n  var hasMultipleAssumedOperations = false;\n  var fragments = Object.create(null);\n  for (var i = 0; i < document.definitions.length; i++) {\n    var definition = document.definitions[i];\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (!operationName && operation) {\n          hasMultipleAssumedOperations = true;\n        } else if (!operationName || definition.name && definition.name.value === operationName) {\n          operation = definition;\n        }\n        break;\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n    }\n  }\n\n  if (!operation) {\n    if (operationName) {\n      errors.push(new GraphQLError('Unknown operation named \"' + operationName + '\".'));\n    } else {\n      errors.push(new GraphQLError('Must provide an operation.'));\n    }\n  } else if (hasMultipleAssumedOperations) {\n    errors.push(new GraphQLError('Must provide operation name if query contains ' + 'multiple operations.'));\n  }\n\n  var variableValues = void 0;\n  if (operation) {\n    var coercedVariableValues = getVariableValues(schema, operation.variableDefinitions || [], rawVariableValues || {});\n\n    if (coercedVariableValues.errors) {\n      errors.push.apply(errors, coercedVariableValues.errors);\n    } else {\n      variableValues = coercedVariableValues.coerced;\n    }\n  }\n\n  if (errors.length !== 0) {\n    return errors;\n  }\n\n  !operation ? invariant(0, 'Has operation if no errors.') : void 0;\n  !variableValues ? invariant(0, 'Has variables if no errors.') : void 0;\n\n  return {\n    schema: schema,\n    fragments: fragments,\n    rootValue: rootValue,\n    contextValue: contextValue,\n    operation: operation,\n    variableValues: variableValues,\n    fieldResolver: fieldResolver || defaultFieldResolver,\n    errors: errors\n  };\n}\n\n/**\n * Implements the \"Evaluating operations\" section of the spec.\n */\nfunction executeOperation(exeContext, operation, rootValue) {\n  var type = getOperationRootType(exeContext.schema, operation);\n  var fields = collectFields(exeContext, type, operation.selectionSet, Object.create(null), Object.create(null));\n\n  var path = undefined;\n\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n  //\n  // Similar to completeValueCatchingError.\n  try {\n    var result = operation.operation === 'mutation' ? executeFieldsSerially(exeContext, type, rootValue, path, fields) : executeFields(exeContext, type, rootValue, path, fields);\n    if (isPromise(result)) {\n      return result.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return result;\n  } catch (error) {\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      var queryType = schema.getQueryType();\n      if (!queryType) {\n        throw new GraphQLError('Schema does not define the required query root type.', [operation]);\n      }\n      return queryType;\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n      if (!mutationType) {\n        throw new GraphQLError('Schema is not configured for mutations.', [operation]);\n      }\n      return mutationType;\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n      if (!subscriptionType) {\n        throw new GraphQLError('Schema is not configured for subscriptions.', [operation]);\n      }\n      return subscriptionType;\n    default:\n      throw new GraphQLError('Can only execute queries, mutations and subscriptions.', [operation]);\n  }\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"write\" mode.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n  return promiseReduce(Object.keys(fields), function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    if (isPromise(result)) {\n      return result.then(function (resolvedResult) {\n        results[responseName] = resolvedResult;\n        return results;\n      });\n    }\n    results[responseName] = result;\n    return results;\n  }, Object.create(null));\n}\n\n/**\n * Implements the \"Evaluating selection sets\" section of the spec\n * for \"read\" mode.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  var containsPromise = false;\n\n  var finalResults = Object.keys(fields).reduce(function (results, responseName) {\n    var fieldNodes = fields[responseName];\n    var fieldPath = addPath(path, responseName);\n    var result = resolveField(exeContext, parentType, sourceValue, fieldNodes, fieldPath);\n    if (result === undefined) {\n      return results;\n    }\n    results[responseName] = result;\n    if (!containsPromise && isPromise(result)) {\n      containsPromise = true;\n    }\n    return results;\n  }, Object.create(null));\n\n  // If there are no promises, we can just return the object\n  if (!containsPromise) {\n    return finalResults;\n  }\n\n  // Otherwise, results is a map from field name to the result\n  // of resolving that field, which is possibly a promise. Return\n  // a promise that will return this same map, but with any\n  // promises replaced with the values they resolved to.\n  return promiseForObject(finalResults);\n}\n\n/**\n * Given a selectionSet, adds all of the fields in that selection to\n * the passed in map of fields, and returns it at the end.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field which\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * Object type returned by that field.\n */\nexport function collectFields(exeContext, runtimeType, selectionSet, fields, visitedFragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case Kind.FIELD:\n        if (!shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        var name = getFieldEntryKey(selection);\n        if (!fields[name]) {\n          fields[name] = [];\n        }\n        fields[name].push(selection);\n        break;\n      case Kind.INLINE_FRAGMENT:\n        if (!shouldIncludeNode(exeContext, selection) || !doesFragmentConditionMatch(exeContext, selection, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, selection.selectionSet, fields, visitedFragmentNames);\n        break;\n      case Kind.FRAGMENT_SPREAD:\n        var fragName = selection.name.value;\n        if (visitedFragmentNames[fragName] || !shouldIncludeNode(exeContext, selection)) {\n          continue;\n        }\n        visitedFragmentNames[fragName] = true;\n        var fragment = exeContext.fragments[fragName];\n        if (!fragment || !doesFragmentConditionMatch(exeContext, fragment, runtimeType)) {\n          continue;\n        }\n        collectFields(exeContext, runtimeType, fragment.selectionSet, fields, visitedFragmentNames);\n        break;\n    }\n  }\n  return fields;\n}\n\n/**\n * Determines if a field should be included based on the @include and @skip\n * directives, where @skip has higher precidence than @include.\n */\nfunction shouldIncludeNode(exeContext, node) {\n  var skip = getDirectiveValues(GraphQLSkipDirective, node, exeContext.variableValues);\n  if (skip && skip.if === true) {\n    return false;\n  }\n\n  var include = getDirectiveValues(GraphQLIncludeDirective, node, exeContext.variableValues);\n  if (include && include.if === false) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(exeContext, fragment, type) {\n  var typeConditionNode = fragment.typeCondition;\n  if (!typeConditionNode) {\n    return true;\n  }\n  var conditionalType = typeFromAST(exeContext.schema, typeConditionNode);\n  if (conditionalType === type) {\n    return true;\n  }\n  if (isAbstractType(conditionalType)) {\n    return exeContext.schema.isPossibleType(conditionalType, type);\n  }\n  return false;\n}\n\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n\n/**\n * Resolves the field on the given source object. In particular, this\n * figures out the value that the field returns by calling its resolve function,\n * then calls completeValue to complete promises, serialize scalars, or execute\n * the sub-selection-set for objects.\n */\nfunction resolveField(exeContext, parentType, source, fieldNodes, path) {\n  var fieldNode = fieldNodes[0];\n  var fieldName = fieldNode.name.value;\n\n  var fieldDef = getFieldDef(exeContext.schema, parentType, fieldName);\n  if (!fieldDef) {\n    return;\n  }\n\n  var resolveFn = fieldDef.resolve || exeContext.fieldResolver;\n\n  var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n\n  // Get the resolve function, regardless of if its result is normal\n  // or abrupt (error).\n  var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info);\n\n  return completeValueCatchingError(exeContext, fieldDef.type, fieldNodes, info, path, result);\n}\n\nexport function buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldNodes[0].name.value,\n    fieldNodes: fieldNodes,\n    returnType: fieldDef.type,\n    parentType: parentType,\n    path: path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues\n  };\n}\n\n// Isolates the \"ReturnOrAbrupt\" behavior to not de-opt the `resolveField`\n// function. Returns the result of resolveFn or the abrupt-return Error object.\nexport function resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, source, info) {\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    var args = getArgumentValues(fieldDef, fieldNodes[0], exeContext.variableValues);\n\n    // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n    var context = exeContext.contextValue;\n\n    var result = resolveFn(source, args, context, info);\n    return isPromise(result) ? result.then(undefined, asErrorInstance) : result;\n  } catch (error) {\n    return asErrorInstance(error);\n  }\n}\n\n// Sometimes a non-error is thrown, wrap it as an Error instance to ensure a\n// consistent Error interface.\nfunction asErrorInstance(error) {\n  return error instanceof Error ? error : new Error(error || undefined);\n}\n\n// This is a small wrapper around completeValue which detects and logs errors\n// in the execution context.\nfunction completeValueCatchingError(exeContext, returnType, fieldNodes, info, path, result) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (isNonNullType(returnType)) {\n    return completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n  try {\n    var completed = completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result);\n    if (isPromise(completed)) {\n      // If `completeValueWithLocatedError` returned a rejected promise, log\n      // the rejection error and resolve to null.\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, function (error) {\n        exeContext.errors.push(error);\n        return Promise.resolve(null);\n      });\n    }\n    return completed;\n  } catch (error) {\n    // If `completeValueWithLocatedError` returned abruptly (threw an error),\n    // log the error and return null.\n    exeContext.errors.push(error);\n    return null;\n  }\n}\n\n// This is a small wrapper around completeValue which annotates errors with\n// location information.\nfunction completeValueWithLocatedError(exeContext, returnType, fieldNodes, info, path, result) {\n  try {\n    var completed = completeValue(exeContext, returnType, fieldNodes, info, path, result);\n    if (isPromise(completed)) {\n      return completed.then(undefined, function (error) {\n        return Promise.reject(locatedError(asErrorInstance(error), fieldNodes, responsePathAsArray(path)));\n      });\n    }\n    return completed;\n  } catch (error) {\n    throw locatedError(asErrorInstance(error), fieldNodes, responsePathAsArray(path));\n  }\n}\n\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Field entries\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by evaluating all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is a Promise, apply-lift over completeValue.\n  if (isPromise(result)) {\n    return result.then(function (resolved) {\n      return completeValue(exeContext, returnType, fieldNodes, info, path, resolved);\n    });\n  }\n\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  }\n\n  // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n  if (isNonNullType(returnType)) {\n    var completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result);\n    if (completed === null) {\n      throw new Error('Cannot return null for non-nullable field ' + info.parentType.name + '.' + info.fieldName + '.');\n    }\n    return completed;\n  }\n\n  // If result value is null-ish (null, undefined, or NaN) then return null.\n  if (isNullish(result)) {\n    return null;\n  }\n\n  // If field type is List, complete each item in the list with the inner type\n  if (isListType(returnType)) {\n    return completeListValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  }\n\n  // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // If field type is Object, execute and complete all sub-selections.\n  if (isObjectType(returnType)) {\n    return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result);\n  }\n\n  // Not reachable. All possible output types have been considered.\n  /* istanbul ignore next */\n  throw new Error('Cannot complete value of unexpected type \"' + String(returnType) + '\".');\n}\n\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result) {\n  !isCollection(result) ? invariant(0, 'Expected Iterable, but did not find one for field ' + info.parentType.name + '.' + info.fieldName + '.') : void 0;\n\n  // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n  var itemType = returnType.ofType;\n  var containsPromise = false;\n  var completedResults = [];\n  forEach(result, function (item, index) {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    var fieldPath = addPath(path, index);\n    var completedItem = completeValueCatchingError(exeContext, itemType, fieldNodes, info, fieldPath, item);\n\n    if (!containsPromise && isPromise(completedItem)) {\n      containsPromise = true;\n    }\n    completedResults.push(completedItem);\n  });\n\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n  !returnType.serialize ? invariant(0, 'Missing serialize method on type') : void 0;\n  var serializedResult = returnType.serialize(result);\n  if (isInvalid(serializedResult)) {\n    throw new Error('Expected a value of type \"' + String(returnType) + '\" but ' + ('received: ' + String(result)));\n  }\n  return serializedResult;\n}\n\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result) {\n  var runtimeType = returnType.resolveType ? returnType.resolveType(result, exeContext.contextValue, info) : defaultResolveTypeFn(result, exeContext.contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then(function (resolvedRuntimeType) {\n      return completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n    });\n  }\n\n  return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result);\n}\n\nfunction ensureValidRuntimeType(runtimeTypeOrName, exeContext, returnType, fieldNodes, info, result) {\n  var runtimeType = typeof runtimeTypeOrName === 'string' ? exeContext.schema.getType(runtimeTypeOrName) : runtimeTypeOrName;\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError('Abstract type ' + returnType.name + ' must resolve to an Object type at ' + ('runtime for field ' + info.parentType.name + '.' + info.fieldName + ' with ') + ('value \"' + String(result) + '\", received \"' + String(runtimeType) + '\". ') + ('Either the ' + returnType.name + ' type should provide a \"resolveType\" ') + 'function or each possible types should provide an ' + '\"isTypeOf\" function.', fieldNodes);\n  }\n\n  if (!exeContext.schema.isPossibleType(returnType, runtimeType)) {\n    throw new GraphQLError('Runtime Object type \"' + runtimeType.name + '\" is not a possible type ' + ('for \"' + returnType.name + '\".'), fieldNodes);\n  }\n\n  return runtimeType;\n}\n\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n  if (returnType.isTypeOf) {\n    var isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then(function (resolvedIsTypeOf) {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n        return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError('Expected value of type \"' + returnType.name + '\" but got: ' + String(result) + '.', fieldNodes);\n}\n\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, info, path, result) {\n  // Collect sub-fields to execute to complete this value.\n  var subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes);\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\n/**\n * A memoized collection of relevant subfields in the context of the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nvar collectSubfields = memoize3(_collectSubfields);\nfunction _collectSubfields(exeContext, returnType, fieldNodes) {\n  var subFieldNodes = Object.create(null);\n  var visitedFragmentNames = Object.create(null);\n  for (var i = 0; i < fieldNodes.length; i++) {\n    var selectionSet = fieldNodes[i].selectionSet;\n    if (selectionSet) {\n      subFieldNodes = collectFields(exeContext, returnType, selectionSet, subFieldNodes, visitedFragmentNames);\n    }\n  }\n  return subFieldNodes;\n}\n\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nfunction defaultResolveTypeFn(value, context, info, abstractType) {\n  // First, look for `__typename`.\n  if (value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.__typename === 'string') {\n    return value.__typename;\n  }\n\n  // Otherwise, test each possible type.\n  var possibleTypes = info.schema.getPossibleTypes(abstractType);\n  var promisedIsTypeOfResults = [];\n\n  for (var i = 0; i < possibleTypes.length; i++) {\n    var type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      var isTypeOfResult = type.isTypeOf(value, context, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then(function (isTypeOfResults) {\n      for (var _i = 0; _i < isTypeOfResults.length; _i++) {\n        if (isTypeOfResults[_i]) {\n          return possibleTypes[_i];\n        }\n      }\n    });\n  }\n}\n\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context.\n */\nexport var defaultFieldResolver = function defaultFieldResolver(source, args, context, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((typeof source === 'undefined' ? 'undefined' : _typeof(source)) === 'object' || typeof source === 'function') {\n    var property = source[info.fieldName];\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, context, info);\n    }\n    return property;\n  }\n};\n\n/**\n * This method looks up the field on the given type defintion.\n * It has special casing for the two introspection fields, __schema\n * and __typename. __typename is special because it can always be\n * queried as a field, even in situations where no other fields\n * are allowed, like on a Union. __schema could get automatically\n * added to the query type, but that would require mutating type\n * definitions, which would cause issues.\n */\nexport function getFieldDef(schema, parentType, fieldName) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return SchemaMetaFieldDef;\n  } else if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n  return parentType.getFields()[fieldName];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/execution/execute.mjs\n// module id = 1799\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport keyMap from '../jsutils/keyMap';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\n\nimport { Kind } from '../language/kinds';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Mixed         |\n * | NullValue            | null          |\n *\n */\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    var variableName = valueNode.name.value;\n    if (!variables || isInvalid(variables[variableName])) {\n      // No valid return value.\n      return;\n    }\n    // Note: we're not doing any checking that this variable is correct. We're\n    // assuming that this query has been validated and the variable usage here\n    // is of the correct type.\n    return variables[variableName];\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    if (valueNode.kind === Kind.LIST) {\n      var coercedValues = [];\n      var itemNodes = valueNode.values;\n      for (var i = 0; i < itemNodes.length; i++) {\n        if (isMissingVariable(itemNodes[i], variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(null);\n        } else {\n          var itemValue = valueFromAST(itemNodes[i], itemType, variables);\n          if (isInvalid(itemValue)) {\n            return; // Invalid: intentionally return no value.\n          }\n          coercedValues.push(itemValue);\n        }\n      }\n      return coercedValues;\n    }\n    var coercedValue = valueFromAST(valueNode, itemType, variables);\n    if (isInvalid(coercedValue)) {\n      return; // Invalid: intentionally return no value.\n    }\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n    var coercedObj = Object.create(null);\n    var fieldNodes = keyMap(valueNode.fields, function (field) {\n      return field.name.value;\n    });\n    var fields = objectValues(type.getFields());\n    for (var _i = 0; _i < fields.length; _i++) {\n      var field = fields[_i];\n      var fieldNode = fieldNodes[field.name];\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (!isInvalid(field.defaultValue)) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n        continue;\n      }\n      var fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n      if (isInvalid(fieldValue)) {\n        return; // Invalid: intentionally return no value.\n      }\n      coercedObj[field.name] = fieldValue;\n    }\n    return coercedObj;\n  }\n\n  if (isEnumType(type)) {\n    if (valueNode.kind !== Kind.ENUM) {\n      return; // Invalid: intentionally return no value.\n    }\n    var enumValue = type.getValue(valueNode.value);\n    if (!enumValue) {\n      return; // Invalid: intentionally return no value.\n    }\n    return enumValue.value;\n  }\n\n  if (isScalarType(type)) {\n    // Scalars fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    var result = void 0;\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n    if (isInvalid(result)) {\n      return; // Invalid: intentionally return no value.\n    }\n    return result;\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\n// Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\nfunction isMissingVariable(valueNode, variables) {\n  return valueNode.kind === Kind.VARIABLE && (!variables || isInvalid(variables[valueNode.name.value]));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/valueFromAST.mjs\n// module id = 1800\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { isEqual, tryFunctionOrLogError, maybeDeepFreeze, } from 'apollo-utilities';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { FetchType } from './types';\nexport var hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var scheduler = _a.scheduler, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        // active state\n        _this.isCurrentlyPolling = false;\n        _this.isTornDown = false;\n        // query information\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = scheduler.queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        // related classes\n        _this.scheduler = scheduler;\n        _this.queryManager = scheduler.queryManager;\n        // interal data stores\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    /**\n     * Return the result of the query from the local cache as well as some fetching status\n     * `loading` and `networkStatus` allow to know if a request is in flight\n     * `partial` lets you know if the result from the local cache is complete or partial\n     * @return {result: Object, loading: boolean, networkStatus: number, partial: boolean}\n     */\n    ObservableQuery.prototype.currentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError ? {} : this.lastResult ? this.lastResult.data : {},\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: {},\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === NetworkStatus.loading;\n        // We need to be careful about the loading state we show to the user, to try\n        // and be vaguely in line with what the user would have seen from .subscribe()\n        // but to still provide useful information synchronously when the query\n        // will not end up hitting the server.\n        // See more: https://github.com/apollostack/apollo-client/issues/707\n        // Basically: is there a query in flight right now (modolo the next tick)?\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        // if there is nothing in the query store, it means this query hasn't fired yet or it has been cleaned up. Therefore the\n        // network status is dependent on queryLoading.\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n        }\n        var result = {\n            data: data,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            var stale = false;\n            this.lastResult = __assign({}, result, { stale: stale });\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    // Returns the last result that observer.next was called with. This is not the same as\n    // currentResult! If you're not sure which you need, then you probably need currentResult.\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        // early return if trying to read from cache during refetch\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!isEqual(this.variables, variables)) {\n            // update observable variables\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            // Update the existing options with new variables\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        // Override fetchPolicy for this call only\n        // only network-only and no-cache are safe to use\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n            .then(function (result) { return maybeDeepFreeze(result); });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        // early return if no update Query\n        if (!fetchMoreOptions.updateQuery) {\n            throw new Error('updateQuery option is required. This function defines how to update the query data with the new results.');\n        }\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                // fetch a new query\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                // fetch the same query with a possibly new variables\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, FetchType.normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (data) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: data,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    // Note: if the query is not active (there are no subscribers), the promise\n    // will return null immediately.\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        // If fetchPolicy went from cache-only to something else, or from something else to network-only\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. If you want to force new results, use `refetch`.\n     *\n     * Note: if the variables have not changed, the promise will return the old\n     * results immediately, and the `next` callback will *not* fire.\n     *\n     * Note: if the query is not active (there are no subscribers), the promise\n     * will return null immediately.\n     *\n     * @param variables: The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     *\n     * @param tryFetch: Try and fetch new results even if the variables haven't\n     * changed (we may still just hit the store, but if there's nothing in there\n     * this will refetch)\n     *\n     * @param fetchResults: Option to ignore fetching results when updating variables\n     *\n     */\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        // since setVariables restarts the subscription, we reset the tornDown status\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (isEqual(newVariables, this.variables) && !tryFetch) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            // See comment above\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            // Use the same options as before, but with new variables\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return maybeDeepFreeze(result); });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.options.pollInterval = undefined;\n            this.isCurrentlyPolling = false;\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        if (this.options.fetchPolicy === 'cache-first' ||\n            this.options.fetchPolicy === 'cache-only') {\n            throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n        }\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.options.pollInterval = pollInterval;\n        this.isCurrentlyPolling = true;\n        this.scheduler.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        // Zen Observable has its own error function, in order to log correctly\n        // we need to declare a custom error if nothing is passed\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        // Deliver initial result\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        // setup the query if it hasn't been done before\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            if (this.options.fetchPolicy === 'cache-first' ||\n                this.options.fetchPolicy === 'cache-only') {\n                throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n            }\n            this.isCurrentlyPolling = true;\n            this.scheduler.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        // stop all active GraphQL subscriptions\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\n//# sourceMappingURL=ObservableQuery.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/core/ObservableQuery.js\n// module id = 1801\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport stringify from 'fast-json-stable-stringify';\nexport function isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nexport function isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw new Error(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nexport function getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        // We can't use `JSON.stringify` here since it's non-deterministic,\n        // and can lead to different store key names being created even though\n        // the `args` object used during creation has the same properties/values.\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function isField(selection) {\n    return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nexport function isIdValue(idObject) {\n    return idObject && idObject.type === 'id';\n}\nexport function toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nexport function isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw new Error(\"Variable nodes are not supported by valueFromNode\");\n}\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n//# sourceMappingURL=storeUtils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/storeUtils.js\n// module id = 1802\n// module chunks = 0","export function getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    // default environment\n    return 'development';\n}\nexport function isEnv(env) {\n    return getEnv() === env;\n}\nexport function isProduction() {\n    return isEnv('production') === true;\n}\nexport function isDevelopment() {\n    return isEnv('development') === true;\n}\nexport function isTest() {\n    return isEnv('test') === true;\n}\n//# sourceMappingURL=environment.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/environment.js\n// module id = 1803\n// module chunks = 0","import { Observable } from './zenObservable';\nexport * from './zenObservable';\nexport default Observable;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/zen-observable-ts/lib/index.js\n// module id = 1804\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var message = '';\n    // If we have GraphQL errors present, add that to the error message.\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    // strip newline from the end of the message\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=ApolloError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/errors/ApolloError.js\n// module id = 1805\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { isEqual, tryFunctionOrLogError, maybeDeepFreeze, } from 'apollo-utilities';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { FetchType } from './types';\nexport var hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = /** @class */ (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var scheduler = _a.scheduler, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        // active state\n        _this.isCurrentlyPolling = false;\n        _this.isTornDown = false;\n        // query information\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = scheduler.queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        // related classes\n        _this.scheduler = scheduler;\n        _this.queryManager = scheduler.queryManager;\n        // interal data stores\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    // Stop the query within the QueryManager if we can before\n                    // this function returns.\n                    //\n                    // We do this in order to prevent observers piling up within\n                    // the QueryManager. Notice that we only fully unsubscribe\n                    // from the subscription in a setTimeout(..., 0)  call. This call can\n                    // actually be handled by the browser at a much later time. If queries\n                    // are fired in the meantime, observers that should have been removed\n                    // from the QueryManager will continue to fire, causing an unnecessary\n                    // performance hit.\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    /**\n     * Return the result of the query from the local cache as well as some fetching status\n     * `loading` and `networkStatus` allow to know if a request is in flight\n     * `partial` lets you know if the result from the local cache is complete or partial\n     * @return {result: Object, loading: boolean, networkStatus: number, partial: boolean}\n     */\n    ObservableQuery.prototype.currentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError ? {} : this.lastResult ? this.lastResult.data : {},\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: {},\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === NetworkStatus.loading;\n        // We need to be careful about the loading state we show to the user, to try\n        // and be vaguely in line with what the user would have seen from .subscribe()\n        // but to still provide useful information synchronously when the query\n        // will not end up hitting the server.\n        // See more: https://github.com/apollostack/apollo-client/issues/707\n        // Basically: is there a query in flight right now (modolo the next tick)?\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        // if there is nothing in the query store, it means this query hasn't fired yet or it has been cleaned up. Therefore the\n        // network status is dependent on queryLoading.\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n        }\n        var result = {\n            data: data,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            var stale = false;\n            this.lastResult = __assign({}, result, { stale: stale });\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    // Returns the last result that observer.next was called with. This is not the same as\n    // currentResult! If you're not sure which you need, then you probably need currentResult.\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        // early return if trying to read from cache during refetch\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!isEqual(this.variables, variables)) {\n            // update observable variables\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            // Update the existing options with new variables\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        // Override fetchPolicy for this call only\n        // only network-only and no-cache are safe to use\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n            .then(function (result) { return maybeDeepFreeze(result); });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        // early return if no update Query\n        if (!fetchMoreOptions.updateQuery) {\n            throw new Error('updateQuery option is required. This function defines how to update the query data with the new results.');\n        }\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                // fetch a new query\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                // fetch the same query with a possibly new variables\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, FetchType.normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    // XXX the subscription variables are separate from the query variables.\n    // if you want to update subscription variables, right now you have to do that separately,\n    // and you can only do it by stopping the subscription and then subscribing again with new variables.\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (data) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: data,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    // Note: if the query is not active (there are no subscribers), the promise\n    // will return null immediately.\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        // If fetchPolicy went from cache-only to something else, or from something else to network-only\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    /**\n     * Update the variables of this observable query, and fetch the new results\n     * if they've changed. If you want to force new results, use `refetch`.\n     *\n     * Note: if the variables have not changed, the promise will return the old\n     * results immediately, and the `next` callback will *not* fire.\n     *\n     * Note: if the query is not active (there are no subscribers), the promise\n     * will return null immediately.\n     *\n     * @param variables: The new set of variables. If there are missing variables,\n     * the previous values of those variables will be used.\n     *\n     * @param tryFetch: Try and fetch new results even if the variables haven't\n     * changed (we may still just hit the store, but if there's nothing in there\n     * this will refetch)\n     *\n     * @param fetchResults: Option to ignore fetching results when updating variables\n     *\n     */\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        // since setVariables restarts the subscription, we reset the tornDown status\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (isEqual(newVariables, this.variables) && !tryFetch) {\n            // If we have no observers, then we don't actually want to make a network\n            // request. As soon as someone observes the query, the request will kick\n            // off. For now, we just store any changes. (See #1077)\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            // See comment above\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            // Use the same options as before, but with new variables\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return maybeDeepFreeze(result); });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.options.pollInterval = undefined;\n            this.isCurrentlyPolling = false;\n        }\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        if (this.options.fetchPolicy === 'cache-first' ||\n            this.options.fetchPolicy === 'cache-only') {\n            throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n        }\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        this.options.pollInterval = pollInterval;\n        this.isCurrentlyPolling = true;\n        this.scheduler.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        // Zen Observable has its own error function, in order to log correctly\n        // we need to declare a custom error if nothing is passed\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        // Deliver initial result\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        // setup the query if it hasn't been done before\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            if (this.options.fetchPolicy === 'cache-first' ||\n                this.options.fetchPolicy === 'cache-only') {\n                throw new Error('Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n            }\n            this.isCurrentlyPolling = true;\n            this.scheduler.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        if (this.isCurrentlyPolling) {\n            this.scheduler.stopPollingQuery(this.queryId);\n            this.isCurrentlyPolling = false;\n        }\n        // stop all active GraphQL subscriptions\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(Observable));\nexport { ObservableQuery };\n//# sourceMappingURL=ObservableQuery.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/core/ObservableQuery.js\n// module id = 1806\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nvar generateErrorMessage = function (err) {\n    var message = '';\n    // If we have GraphQL errors present, add that to the error message.\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    // strip newline from the end of the message\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = /** @class */ (function (_super) {\n    __extends(ApolloError, _super);\n    // Constructs an instance of ApolloError given a GraphQLError\n    // or a network error. Note that one of these has to be a valid\n    // value or the constructed error will be meaningless.\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        // We're not using `Object.setPrototypeOf` here as it isn't fully\n        // supported on Android (see issue #3236).\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=ApolloError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/errors/ApolloError.js\n// module id = 1807\n// module chunks = 0","var ObjectCache = /** @class */ (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = undefined;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nexport { ObjectCache };\nexport function defaultNormalizedCacheFactory(seed) {\n    return new ObjectCache(seed);\n}\n//# sourceMappingURL=objectCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/objectCache.js\n// module id = 1808\n// module chunks = 0","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql-tag/src/index.js\n// module id = 1809\n// module chunks = 0","\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match = void 0;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line: line, column: column };\n}\n\n/**\n * Represents a location in a Source.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/location.mjs\n// module id = 1810\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { syntaxError } from '../error';\nimport blockStringValue from './blockStringValue';\n\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n  return token;\n}\n\n/**\n * The return type of createLexer.\n */\n\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n\n/**\n * The enum type representing the token kinds values.\n */\n\n\n/**\n * A helper function to describe a token as a string for debugging\n */\nexport function getTokenDesc(token) {\n  var value = token.value;\n  return value ? token.kind + ' \"' + value + '\"' : token.kind;\n}\n\nvar charCodeAt = String.prototype.charCodeAt;\nvar slice = String.prototype.slice;\n\n/**\n * Helper function for constructing the Token object.\n */\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n}\n\n// Print a simplified form when appearing in JSON/util.inspect.\nTok.prototype.toJSON = Tok.prototype.inspect = function toJSON() {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n};\n\nfunction printCharCode(code) {\n  return (\n    // NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    '\"\\\\u' + ('00' + code.toString(16).toUpperCase()).slice(-4) + '\"'\n  );\n}\n\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace and comments until it finds the next lexable\n * token, then lexes punctuators immediately or calls the appropriate helper\n * function for more complicated tokens.\n */\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = charCodeAt.call(body, pos);\n\n  // SourceCharacter\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    throw syntaxError(source, pos, 'Cannot contain the invalid character ' + printCharCode(code) + '.');\n  }\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n    case 46:\n      if (charCodeAt.call(body, pos + 1) === 46 && charCodeAt.call(body, pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n      break;\n    // :\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n    case 34:\n      if (charCodeAt.call(body, pos + 1) === 34 && charCodeAt.call(body, pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev);\n      }\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n\n/**\n * Report a message that an unexpected character was encountered.\n */\nfunction unexpectedCharacterMessage(code) {\n  if (code === 39) {\n    // '\n    return \"Unexpected single quote character ('), did you mean to use \" + 'a double quote (\")?';\n  }\n\n  return 'Cannot parse the unexpected character ' + printCharCode(code) + '.';\n}\n\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * or commented character, then returns the position of that character for\n * lexing.\n */\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n  while (position < bodyLength) {\n    var code = charCodeAt.call(body, position);\n    // tab | space | comma | BOM\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (charCodeAt.call(body, position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n  return position;\n}\n\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code = void 0;\n  var position = start;\n\n  do {\n    code = charCodeAt.call(body, ++position);\n  } while (code !== null && (\n  // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, slice.call(body, start + 1, position));\n}\n\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = charCodeAt.call(body, ++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = charCodeAt.call(body, ++position);\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, 'Invalid number, unexpected digit after 0: ' + printCharCode(code) + '.');\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    position = readDigits(source, position, code);\n    code = charCodeAt.call(body, position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n\n    code = charCodeAt.call(body, ++position);\n    if (code === 43 || code === 45) {\n      // + -\n      code = charCodeAt.call(body, ++position);\n    }\n    position = readDigits(source, position, code);\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n/**\n * Returns the new position in the source after reading digits.\n */\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = charCodeAt.call(body, ++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n    return position;\n  }\n  throw syntaxError(source, position, 'Invalid number, expected digit but got: ' + printCharCode(code) + '.');\n}\n\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null &&\n  // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    ++position;\n    if (code === 92) {\n      // \\\n      value += slice.call(body, chunkStart, position - 1);\n      code = charCodeAt.call(body, position);\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n        case 47:\n          value += '/';\n          break;\n        case 92:\n          value += '\\\\';\n          break;\n        case 98:\n          value += '\\b';\n          break;\n        case 102:\n          value += '\\f';\n          break;\n        case 110:\n          value += '\\n';\n          break;\n        case 114:\n          value += '\\r';\n          break;\n        case 116:\n          value += '\\t';\n          break;\n        case 117:\n          // u\n          var charCode = uniCharCode(charCodeAt.call(body, position + 1), charCodeAt.call(body, position + 2), charCodeAt.call(body, position + 3), charCodeAt.call(body, position + 4));\n          if (charCode < 0) {\n            throw syntaxError(source, position, 'Invalid character escape sequence: ' + ('\\\\u' + body.slice(position + 1, position + 5) + '.'));\n          }\n          value += String.fromCharCode(charCode);\n          position += 4;\n          break;\n        default:\n          throw syntaxError(source, position, 'Invalid character escape sequence: \\\\' + String.fromCharCode(code) + '.');\n      }\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\nfunction readBlockString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && (code = charCodeAt.call(body, position)) !== null) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34) {\n      rawValue += slice.call(body, chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, blockStringValue(rawValue));\n    }\n\n    // SourceCharacter\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, 'Invalid character within String: ' + printCharCode(code) + '.');\n    }\n\n    // Escape Triple-Quote (\\\"\"\")\n    if (code === 92 && charCodeAt.call(body, position + 1) === 34 && charCodeAt.call(body, position + 2) === 34 && charCodeAt.call(body, position + 3) === 34) {\n      rawValue += slice.call(body, chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n\n/**\n * Converts four hexidecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n  while (position !== bodyLength && (code = charCodeAt.call(body, position)) !== null && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, slice.call(body, start, position));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/lexer.mjs\n// module id = 1811\n// module chunks = 0","\n\nexport default process && process.env.NODE_ENV !== 'production' ? // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n  if (value) {\n    var valueClass = value.constructor;\n    var className = constructor.name;\n    if (valueClass && valueClass.name === className) {\n      throw new Error('Cannot use ' + className + ' \"' + value + '\" from another module or realm.\\n\\nEnsure that there is only one instance of \"graphql\" in the node_modules\\ndirectory. If different versions of \"graphql\" are the dependencies of other\\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \"graphql\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.');\n    }\n  }\n  return false;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n}; /**\n    * Copyright (c) 2015-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    *  strict\n    */\n\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/instanceOf.mjs\n// module id = 1812\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { forEach, isCollection } from 'iterall';\n\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\n\nimport { Kind } from '../language/kinds';\n\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\nimport { GraphQLID } from '../type/scalars';\n\n/**\n * Produces a GraphQL Value AST given a JavaScript value.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Mixed         | Enum Value           |\n * | null          | NullValue            |\n *\n */\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    var astValue = astFromValue(value, type.ofType);\n    if (astValue && astValue.kind === Kind.NULL) {\n      return null;\n    }\n    return astValue;\n  }\n\n  // only explicit null, not undefined, NaN\n  if (value === null) {\n    return { kind: Kind.NULL };\n  }\n\n  // undefined, NaN\n  if (isInvalid(value)) {\n    return null;\n  }\n\n  // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    if (isCollection(value)) {\n      var valuesNodes = [];\n      forEach(value, function (item) {\n        var itemNode = astFromValue(item, itemType);\n        if (itemNode) {\n          valuesNodes.push(itemNode);\n        }\n      });\n      return { kind: Kind.LIST, values: valuesNodes };\n    }\n    return astFromValue(value, itemType);\n  }\n\n  // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n  if (isInputObjectType(type)) {\n    if (value === null || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return null;\n    }\n    var fields = objectValues(type.getFields());\n    var fieldNodes = [];\n    fields.forEach(function (field) {\n      var fieldValue = astFromValue(value[field.name], field.type);\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: { kind: Kind.NAME, value: field.name },\n          value: fieldValue\n        });\n      }\n    });\n    return { kind: Kind.OBJECT, fields: fieldNodes };\n  }\n\n  if (isScalarType(type) || isEnumType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    var serialized = type.serialize(value);\n    if (isNullish(serialized)) {\n      return null;\n    }\n\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof serialized === 'boolean') {\n      return { kind: Kind.BOOLEAN, value: serialized };\n    }\n\n    // JavaScript numbers can be Int or Float values.\n    if (typeof serialized === 'number') {\n      var stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum) ? { kind: Kind.INT, value: stringNum } : { kind: Kind.FLOAT, value: stringNum };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return { kind: Kind.ENUM, value: serialized };\n      }\n\n      // ID types can use Int literals.\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return { kind: Kind.INT, value: serialized };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized\n      };\n    }\n\n    throw new TypeError('Cannot convert value to AST: ' + String(serialized));\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nvar integerStringRegExp = /^-?(0|[1-9][0-9]*)$/;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/astFromValue.mjs\n// module id = 1813\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport orList from './orList';\n\n/**\n * Given [ A, B, C ] return '\"A\", \"B\", or \"C\"'.\n */\nexport default function quotedOrList(items) {\n  return orList(items.map(function (item) {\n    return '\"' + item + '\"';\n  }));\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/quotedOrList.mjs\n// module id = 1814\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nvar MAX_LENGTH = 5;\n\n/**\n * Given [ A, B, C ] return 'A, B, or C'.\n */\nexport default function orList(items) {\n  var selected = items.slice(0, MAX_LENGTH);\n  return selected.reduce(function (list, quoted, index) {\n    return list + (selected.length > 2 ? ', ' : ' ') + (index === selected.length - 1 ? 'or ' : '') + quoted;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/orList.mjs\n// module id = 1815\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { print } from '../../language/printer';\n\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType, getNullableType, getNamedType } from '../../type/definition';\n\nimport isInvalid from '../../jsutils/isInvalid';\nimport keyMap from '../../jsutils/keyMap';\nimport orList from '../../jsutils/orList';\nimport suggestionList from '../../jsutils/suggestionList';\n\nexport function badValueMessage(typeName, valueName, message) {\n  return 'Expected type ' + typeName + ', found ' + valueName + (message ? '; ' + message : '.');\n}\n\nexport function requiredFieldMessage(typeName, fieldName, fieldTypeName) {\n  return 'Field ' + typeName + '.' + fieldName + ' of required type ' + (fieldTypeName + ' was not provided.');\n}\n\nexport function unknownFieldMessage(typeName, fieldName, message) {\n  return 'Field \"' + fieldName + '\" is not defined by type ' + typeName + (message ? '; ' + message : '.');\n}\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n */\nexport function ValuesOfCorrectType(context) {\n  return {\n    NullValue: function NullValue(node) {\n      var type = context.getInputType();\n      if (isNonNullType(type)) {\n        context.reportError(new GraphQLError(badValueMessage(String(type), print(node)), node));\n      }\n    },\n    ListValue: function ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      var type = getNullableType(context.getParentInputType());\n      if (!isListType(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n    ObjectValue: function ObjectValue(node) {\n      var type = getNamedType(context.getInputType());\n      if (!isInputObjectType(type)) {\n        isValidScalar(context, node);\n        return false; // Don't traverse further.\n      }\n      // Ensure every required field exists.\n      var inputFields = type.getFields();\n      var fieldNodeMap = keyMap(node.fields, function (field) {\n        return field.name.value;\n      });\n      Object.keys(inputFields).forEach(function (fieldName) {\n        var fieldType = inputFields[fieldName].type;\n        var fieldNode = fieldNodeMap[fieldName];\n        if (!fieldNode && isNonNullType(fieldType)) {\n          context.reportError(new GraphQLError(requiredFieldMessage(type.name, fieldName, String(fieldType)), node));\n        }\n      });\n    },\n    ObjectField: function ObjectField(node) {\n      var parentType = getNamedType(context.getParentInputType());\n      var fieldType = context.getInputType();\n      if (!fieldType && isInputObjectType(parentType)) {\n        var suggestions = suggestionList(node.name.value, Object.keys(parentType.getFields()));\n        var didYouMean = suggestions.length !== 0 ? 'Did you mean ' + orList(suggestions) + '?' : undefined;\n        context.reportError(new GraphQLError(unknownFieldMessage(parentType.name, node.name.value, didYouMean), node));\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var type = getNamedType(context.getInputType());\n      if (!isEnumType(type)) {\n        isValidScalar(context, node);\n      } else if (!type.getValue(node.value)) {\n        context.reportError(new GraphQLError(badValueMessage(type.name, print(node), enumTypeSuggestion(type, node)), node));\n      }\n    },\n\n    IntValue: function IntValue(node) {\n      return isValidScalar(context, node);\n    },\n    FloatValue: function FloatValue(node) {\n      return isValidScalar(context, node);\n    },\n    StringValue: function StringValue(node) {\n      return isValidScalar(context, node);\n    },\n    BooleanValue: function BooleanValue(node) {\n      return isValidScalar(context, node);\n    }\n  };\n}\n\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\nfunction isValidScalar(context, node) {\n  // Report any error at the full type expected by the location.\n  var locationType = context.getInputType();\n  if (!locationType) {\n    return;\n  }\n\n  var type = getNamedType(locationType);\n\n  if (!isScalarType(type)) {\n    context.reportError(new GraphQLError(badValueMessage(String(locationType), print(node), enumTypeSuggestion(type, node)), node));\n    return;\n  }\n\n  // Scalars determine if a literal value is valid via parseLiteral() which\n  // may throw or return an invalid value to indicate failure.\n  try {\n    var parseResult = type.parseLiteral(node, undefined /* variables */);\n    if (isInvalid(parseResult)) {\n      context.reportError(new GraphQLError(badValueMessage(String(locationType), print(node)), node));\n    }\n  } catch (error) {\n    // Ensure a reference to the original error is maintained.\n    context.reportError(new GraphQLError(badValueMessage(String(locationType), print(node), error.message), node, undefined, undefined, undefined, error));\n  }\n}\n\nfunction enumTypeSuggestion(type, node) {\n  if (isEnumType(type)) {\n    var suggestions = suggestionList(print(node), type.getValues().map(function (value) {\n      return value.name;\n    }));\n    if (suggestions.length !== 0) {\n      return 'Did you mean the enum value ' + orList(suggestions) + '?';\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/ValuesOfCorrectType.mjs\n// module id = 1816\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { GraphQLError } from '../error'; /**\n                                          * Copyright (c) 2015-present, Facebook, Inc.\n                                          *\n                                          * This source code is licensed under the MIT license found in the\n                                          * LICENSE file in the root directory of this source tree.\n                                          *\n                                          *  strict\n                                          */\n\nimport { visit, visitWithTypeInfo } from '../language/visitor';\nimport { Kind } from '../language/kinds';\n\nimport { GraphQLSchema } from '../type/schema';\n\nimport { TypeInfo } from '../utilities/TypeInfo';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nvar ValidationContext = function () {\n  function ValidationContext(schema, ast, typeInfo) {\n    _classCallCheck(this, ValidationContext);\n\n    this._schema = schema;\n    this._ast = ast;\n    this._typeInfo = typeInfo;\n    this._errors = [];\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  ValidationContext.prototype.reportError = function reportError(error) {\n    this._errors.push(error);\n  };\n\n  ValidationContext.prototype.getErrors = function getErrors() {\n    return this._errors;\n  };\n\n  ValidationContext.prototype.getSchema = function getSchema() {\n    return this._schema;\n  };\n\n  ValidationContext.prototype.getDocument = function getDocument() {\n    return this._ast;\n  };\n\n  ValidationContext.prototype.getFragment = function getFragment(name) {\n    var fragments = this._fragments;\n    if (!fragments) {\n      this._fragments = fragments = this.getDocument().definitions.reduce(function (frags, statement) {\n        if (statement.kind === Kind.FRAGMENT_DEFINITION) {\n          frags[statement.name.value] = statement;\n        }\n        return frags;\n      }, Object.create(null));\n    }\n    return fragments[name];\n  };\n\n  ValidationContext.prototype.getFragmentSpreads = function getFragmentSpreads(node) {\n    var spreads = this._fragmentSpreads.get(node);\n    if (!spreads) {\n      spreads = [];\n      var setsToVisit = [node];\n      while (setsToVisit.length !== 0) {\n        var set = setsToVisit.pop();\n        for (var i = 0; i < set.selections.length; i++) {\n          var selection = set.selections[i];\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n      this._fragmentSpreads.set(node, spreads);\n    }\n    return spreads;\n  };\n\n  ValidationContext.prototype.getRecursivelyReferencedFragments = function getRecursivelyReferencedFragments(operation) {\n    var fragments = this._recursivelyReferencedFragments.get(operation);\n    if (!fragments) {\n      fragments = [];\n      var collectedNames = Object.create(null);\n      var nodesToVisit = [operation.selectionSet];\n      while (nodesToVisit.length !== 0) {\n        var _node = nodesToVisit.pop();\n        var spreads = this.getFragmentSpreads(_node);\n        for (var i = 0; i < spreads.length; i++) {\n          var fragName = spreads[i].name.value;\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            var fragment = this.getFragment(fragName);\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n    return fragments;\n  };\n\n  ValidationContext.prototype.getVariableUsages = function getVariableUsages(node) {\n    var usages = this._variableUsages.get(node);\n    if (!usages) {\n      var newUsages = [];\n      var typeInfo = new TypeInfo(this._schema);\n      visit(node, visitWithTypeInfo(typeInfo, {\n        VariableDefinition: function VariableDefinition() {\n          return false;\n        },\n        Variable: function Variable(variable) {\n          newUsages.push({ node: variable, type: typeInfo.getInputType() });\n        }\n      }));\n      usages = newUsages;\n      this._variableUsages.set(node, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getRecursiveVariableUsages = function getRecursiveVariableUsages(operation) {\n    var usages = this._recursiveVariableUsages.get(operation);\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n      var fragments = this.getRecursivelyReferencedFragments(operation);\n      for (var i = 0; i < fragments.length; i++) {\n        Array.prototype.push.apply(usages, this.getVariableUsages(fragments[i]));\n      }\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n    return usages;\n  };\n\n  ValidationContext.prototype.getType = function getType() {\n    return this._typeInfo.getType();\n  };\n\n  ValidationContext.prototype.getParentType = function getParentType() {\n    return this._typeInfo.getParentType();\n  };\n\n  ValidationContext.prototype.getInputType = function getInputType() {\n    return this._typeInfo.getInputType();\n  };\n\n  ValidationContext.prototype.getParentInputType = function getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  };\n\n  ValidationContext.prototype.getFieldDef = function getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  };\n\n  ValidationContext.prototype.getDirective = function getDirective() {\n    return this._typeInfo.getDirective();\n  };\n\n  ValidationContext.prototype.getArgument = function getArgument() {\n    return this._typeInfo.getArgument();\n  };\n\n  return ValidationContext;\n}();\n\nexport default ValidationContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/ValidationContext.mjs\n// module id = 1817\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLError } from '../error';\nimport find from '../jsutils/find';\nimport isInvalid from '../jsutils/isInvalid';\nimport keyMap from '../jsutils/keyMap';\nimport { coerceValue } from '../utilities/coerceValue';\nimport { typeFromAST } from '../utilities/typeFromAST';\nimport { valueFromAST } from '../utilities/valueFromAST';\nimport { Kind } from '../language/kinds';\nimport { print } from '../language/printer';\nimport { isInputType, isNonNullType } from '../type/definition';\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs) {\n  var errors = [];\n  var coercedValues = {};\n  for (var i = 0; i < varDefNodes.length; i++) {\n    var varDefNode = varDefNodes[i];\n    var varName = varDefNode.variable.name.value;\n    var varType = typeFromAST(schema, varDefNode.type);\n    if (!isInputType(varType)) {\n      errors.push(new GraphQLError('Variable \"$' + varName + '\" expected value of type ' + ('\"' + print(varDefNode.type) + '\" which cannot be used as an input type.'), [varDefNode.type]));\n    } else {\n      var value = inputs[varName];\n      if (isInvalid(value)) {\n        if (isNonNullType(varType)) {\n          errors.push(new GraphQLError('Variable \"$' + varName + '\" of required type ' + ('\"' + String(varType) + '\" was not provided.'), [varDefNode]));\n        } else if (varDefNode.defaultValue) {\n          coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n        }\n      } else {\n        var _coerced = coerceValue(value, varType, varDefNode);\n        var coercionErrors = _coerced.errors;\n        if (coercionErrors) {\n          (function () {\n            var messagePrelude = 'Variable \"$' + varName + '\" got invalid value ' + JSON.stringify(value) + '; ';\n            coercionErrors.forEach(function (error) {\n              error.message = messagePrelude + error.message;\n            });\n            errors.push.apply(errors, coercionErrors);\n          })();\n        } else {\n          coercedValues[varName] = _coerced.value;\n        }\n      }\n    }\n  }\n  return errors.length === 0 ? { errors: undefined, coerced: coercedValues } : { errors: errors, coerced: undefined };\n}\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getArgumentValues(def, node, variableValues) {\n  var coercedValues = {};\n  var argDefs = def.args;\n  var argNodes = node.arguments;\n  if (!argDefs || !argNodes) {\n    return coercedValues;\n  }\n  var argNodeMap = keyMap(argNodes, function (arg) {\n    return arg.name.value;\n  });\n  for (var i = 0; i < argDefs.length; i++) {\n    var argDef = argDefs[i];\n    var name = argDef.name;\n    var argType = argDef.type;\n    var argumentNode = argNodeMap[name];\n    var defaultValue = argDef.defaultValue;\n    if (!argumentNode) {\n      if (!isInvalid(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError('Argument \"' + name + '\" of required type ' + ('\"' + String(argType) + '\" was not provided.'), [node]);\n      }\n    } else if (argumentNode.value.kind === Kind.VARIABLE) {\n      var variableName = argumentNode.value.name.value;\n      if (variableValues && Object.prototype.hasOwnProperty.call(variableValues, variableName) && !isInvalid(variableValues[variableName])) {\n        // Note: this does not check that this variable value is correct.\n        // This assumes that this query has been validated and the variable\n        // usage here is of the correct type.\n        coercedValues[name] = variableValues[variableName];\n      } else if (!isInvalid(defaultValue)) {\n        coercedValues[name] = defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError('Argument \"' + name + '\" of required type \"' + String(argType) + '\" was ' + ('provided the variable \"$' + variableName + '\" which was not provided ') + 'a runtime value.', [argumentNode.value]);\n      }\n    } else {\n      var valueNode = argumentNode.value;\n      var coercedValue = valueFromAST(valueNode, argType, variableValues);\n      if (isInvalid(coercedValue)) {\n        // Note: ValuesOfCorrectType validation should catch this before\n        // execution. This is a runtime check to ensure execution does not\n        // continue with an invalid argument value.\n        throw new GraphQLError('Argument \"' + name + '\" has invalid value ' + print(valueNode) + '.', [argumentNode.value]);\n      }\n      coercedValues[name] = coercedValue;\n    }\n  }\n  return coercedValues;\n}\n\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var directiveNode = node.directives && find(node.directives, function (directive) {\n    return directive.name.value === directiveDef.name;\n  });\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/execution/values.mjs\n// module id = 1818\n// module chunks = 0","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { forEach, isCollection } from 'iterall';\nimport isInvalid from '../jsutils/isInvalid';\nimport isNullish from '../jsutils/isNullish';\nimport orList from '../jsutils/orList';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error';\n\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (isNullish(value)) {\n      return ofErrors([coercionError('Expected non-nullable type ' + String(type) + ' not to be null', blameNode, path)]);\n    }\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (isNullish(value)) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError('Expected type ' + type.name, blameNode, path)]);\n      }\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? 'did you mean ' + orList(suggestions) + '?' : undefined;\n    return ofErrors([coercionError('Expected type ' + type.name, blameNode, path, didYouMean)]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n    if (isCollection(value)) {\n      var _errors = void 0;\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n        if (coercedItem.errors) {\n          _errors = add(_errors, coercedItem.errors);\n        } else if (!_errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return _errors ? ofErrors(_errors) : ofValue(coercedValue);\n    }\n    // Lists accept a non-list value as a list of one.\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n      return ofErrors([coercionError('Expected type ' + type.name + ' to be an object', blameNode, path)]);\n    }\n    var _errors2 = void 0;\n    var _coercedValue = {};\n    var fields = type.getFields();\n\n    // Ensure every defined field is valid.\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors2 = add(_errors2, coercionError('Field ' + printPath(atPath(path, fieldName)) + ' of required ' + ('type ' + String(field.type) + ' was not provided'), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n          if (coercedField.errors) {\n            _errors2 = add(_errors2, coercedField.errors);\n          } else if (!_errors2) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    }\n\n    // Ensure every provided field is defined.\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = suggestionList(_fieldName, Object.keys(fields));\n          var _didYouMean = _suggestions.length !== 0 ? 'did you mean ' + orList(_suggestions) + '?' : undefined;\n          _errors2 = add(_errors2, coercionError('Field \"' + _fieldName + '\" is not defined by type ' + type.name, blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors2 ? ofErrors(_errors2) : ofValue(_coercedValue);\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unexpected type: ' + type + '.');\n}\n\nfunction ofValue(value) {\n  return { errors: undefined, value: value };\n}\n\nfunction ofErrors(errors) {\n  return { errors: errors, value: undefined };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return { prev: prev, key: key };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path);\n  // Return a GraphQLError instance\n  return new GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n}\n\n// Build a string describing the path into the value where the error was found\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/coerceValue.mjs\n// module id = 1819\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = require('graphql');\n\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\nvar getFinalType = function getFinalType(type) {\n    if (type.kind === _graphql.TypeKind.NON_NULL || type.kind === _graphql.TypeKind.LIST) {\n        return getFinalType(type.ofType);\n    }\n\n    return type;\n};\n\nexports.default = getFinalType;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/getFinalType.js\n// module id = 1820\n// module chunks = 0","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/lodash/merge.js\n// module id = 1858\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ALL_TYPES = exports.MUTATION_TYPES = exports.QUERY_TYPES = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _operationNames;\n\nvar _merge2 = require('lodash/merge');\n\nvar _merge3 = _interopRequireDefault(_merge2);\n\nvar _get = require('lodash/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _pluralize = require('pluralize');\n\nvar _pluralize2 = _interopRequireDefault(_pluralize);\n\nvar _reactAdmin = require('react-admin');\n\nvar _buildApolloClient = require('./buildApolloClient');\n\nvar _buildApolloClient2 = _interopRequireDefault(_buildApolloClient);\n\nvar _constants = require('./constants');\n\nvar _introspection = require('./introspection');\n\nvar _introspection2 = _interopRequireDefault(_introspection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QUERY_TYPES = exports.QUERY_TYPES = _constants.QUERY_TYPES;\nvar MUTATION_TYPES = exports.MUTATION_TYPES = _constants.MUTATION_TYPES;\nvar ALL_TYPES = exports.ALL_TYPES = _constants.ALL_TYPES;\n\nvar defaultOptions = {\n    resolveIntrospection: _introspection2.default,\n    introspection: {\n        operationNames: (_operationNames = {}, (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_LIST, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_ONE, function (resource) {\n            return '' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_MANY, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.GET_MANY_REFERENCE, function (resource) {\n            return 'all' + (0, _pluralize2.default)(resource.name);\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.CREATE, function (resource) {\n            return 'create' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.UPDATE, function (resource) {\n            return 'update' + resource.name;\n        }), (0, _defineProperty3.default)(_operationNames, _reactAdmin.DELETE, function (resource) {\n            return 'delete' + resource.name;\n        }), _operationNames),\n        exclude: undefined,\n        include: undefined\n    }\n};\n\nvar getOptions = function getOptions(options, aorFetchType, resource) {\n    if (typeof options === 'function') {\n        return options(resource, aorFetchType);\n    }\n\n    return options;\n};\n\nexports.default = function () {\n    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(options) {\n        var _merge, clientObject, clientOptions, introspection, resolveIntrospection, buildQueryFactory, _merge$override, override, otherOptions, client, introspectionResults, buildQuery, raDataProvider;\n\n        return _regenerator2.default.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        _merge = (0, _merge3.default)({}, defaultOptions, options), clientObject = _merge.client, clientOptions = _merge.clientOptions, introspection = _merge.introspection, resolveIntrospection = _merge.resolveIntrospection, buildQueryFactory = _merge.buildQuery, _merge$override = _merge.override, override = _merge$override === undefined ? {} : _merge$override, otherOptions = (0, _objectWithoutProperties3.default)(_merge, ['client', 'clientOptions', 'introspection', 'resolveIntrospection', 'buildQuery', 'override']);\n                        client = clientObject || (0, _buildApolloClient2.default)(clientOptions);\n                        introspectionResults = void 0;\n\n                        if (!introspection) {\n                            _context.next = 7;\n                            break;\n                        }\n\n                        _context.next = 6;\n                        return resolveIntrospection(client, introspection);\n\n                    case 6:\n                        introspectionResults = _context.sent;\n\n                    case 7:\n                        buildQuery = buildQueryFactory(introspectionResults, otherOptions);\n\n                        raDataProvider = function raDataProvider(aorFetchType, resource, params) {\n                            var overridedbuildQuery = (0, _get2.default)(override, resource + '.' + aorFetchType);\n\n                            var _ref2 = overridedbuildQuery ? (0, _extends3.default)({}, buildQuery(aorFetchType, resource, params), overridedbuildQuery(params)) : buildQuery(aorFetchType, resource, params),\n                                parseResponse = _ref2.parseResponse,\n                                query = (0, _objectWithoutProperties3.default)(_ref2, ['parseResponse']);\n\n                            if (QUERY_TYPES.includes(aorFetchType)) {\n                                var _apolloQuery = (0, _extends3.default)({}, query, {\n                                    fetchPolicy: 'network-only'\n                                }, getOptions(otherOptions.query, aorFetchType, resource));\n\n                                return client.query(_apolloQuery).then(parseResponse);\n                            }\n\n                            var apolloQuery = (0, _extends3.default)({\n                                mutation: query.query,\n                                variables: query.variables\n                            }, getOptions(otherOptions.mutation, aorFetchType, resource));\n\n                            return client.mutate(apolloQuery).then(parseResponse);\n                        };\n\n                        raDataProvider.observeRequest = function (aorFetchType, resource, params) {\n                            var _buildQuery = buildQuery(aorFetchType, resource, params),\n                                parseResponse = _buildQuery.parseResponse,\n                                query = (0, _objectWithoutProperties3.default)(_buildQuery, ['parseResponse']);\n\n                            var apolloQuery = (0, _extends3.default)({}, query, getOptions(otherOptions.watchQuery, aorFetchType, resource));\n\n                            return client.watchQuery(apolloQuery).then(parseResponse);\n                        };\n\n                        raDataProvider.saga = function () {};\n\n                        return _context.abrupt('return', raDataProvider);\n\n                    case 12:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n\n    return function (_x) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/lib/index.js\n// module id = 1859\n// module chunks = 0","import { assign } from './util/assign';\nimport { valueToObjectRepresentation } from './storeUtils';\nexport function getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    if (!mutationDef) {\n        throw new Error('Must contain a mutation definition.');\n    }\n    return mutationDef;\n}\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw new Error(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    if (operations.length > 1) {\n        throw new Error(\"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    }\n}\nexport function getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nexport function getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    if (!def) {\n        throw new Error(\"GraphQL document is missing an operation\");\n    }\n    return def;\n}\nexport function getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nexport function getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    if (!queryDef || queryDef.operation !== 'query') {\n        throw new Error('Must contain a query definition.');\n    }\n    return queryDef;\n}\nexport function getFragmentDefinition(doc) {\n    if (doc.kind !== 'Document') {\n        throw new Error(\"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    }\n    if (doc.definitions.length > 1) {\n        throw new Error('Fragment must have exactly one definition.');\n    }\n    var fragmentDef = doc.definitions[0];\n    if (fragmentDef.kind !== 'FragmentDefinition') {\n        throw new Error('Must be a fragment definition.');\n    }\n    return fragmentDef;\n}\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            // we do this because we want to allow multiple fragment definitions\n            // to precede an operation definition.\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw new Error('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nexport function getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, [{}].concat(defaultValues));\n    }\n    return {};\n}\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n//# sourceMappingURL=getFromAST.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/getFromAST.js\n// module id = 1860\n// module chunks = 0","export function assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n//# sourceMappingURL=assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/assign.js\n// module id = 1861\n// module chunks = 0","/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep(value) {\n    // If the value is an array, create a new array where every item has been cloned.\n    if (Array.isArray(value)) {\n        return value.map(function (item) { return cloneDeep(item); });\n    }\n    // If the value is an object, go through all of the object’s properties and add them to a new\n    // object.\n    if (value !== null && typeof value === 'object') {\n        var nextValue = {};\n        for (var key in value) {\n            if (value.hasOwnProperty(key)) {\n                nextValue[key] = cloneDeep(value[key]);\n            }\n        }\n        return nextValue;\n    }\n    // Otherwise this is some primitive value and it is therefore immutable so we can just return it\n    // directly.\n    return value;\n}\n//# sourceMappingURL=cloneDeep.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/cloneDeep.js\n// module id = 1862\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\nimport $$observable from 'symbol-observable';\n// rxjs interopt\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(LinkObservable));\nexport { Observable };\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/util/Observable.js\n// module id = 1863\n// module chunks = 0","import zenObservable from 'zen-observable';\nexport var Observable = zenObservable;\n//# sourceMappingURL=zenObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/zen-observable-ts/lib/zenObservable.js\n// module id = 1864\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { getOperationName } from 'apollo-utilities';\nimport Observable from 'zen-observable-ts';\nimport { print } from 'graphql/language/printer';\nexport function validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw new Error(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = /** @class */ (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nexport { LinkError };\nexport function isTerminating(link) {\n    return link.request.length <= 1;\n}\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    console.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n// backwards compat\nexport var makePromise = toPromise;\nexport function fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nexport function fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nexport function transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    // best guess at an operation name\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nexport function createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nexport function getKey(operation) {\n    // XXX we're assuming here that variables will be serialized in the same order.\n    // that might not always be true\n    return print(operation.query) + \"|\" + JSON.stringify(operation.variables) + \"|\" + operation.operationName;\n}\n//# sourceMappingURL=linkUtils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-link/lib/linkUtils.js\n// module id = 1865\n// module chunks = 0","export { print as printAST } from 'graphql/language/printer';\nexport { ObservableQuery, } from './core/ObservableQuery';\nexport { NetworkStatus } from './core/networkStatus';\nexport * from './core/types';\nexport { ApolloError } from './errors/ApolloError';\nimport ApolloClient from './ApolloClient';\n// export the client as both default and named\nexport { ApolloClient };\nexport default ApolloClient;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/index.js\n// module id = 1867\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\nimport $$observable from 'symbol-observable';\n// rxjs interopt\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(LinkObservable));\nexport { Observable };\n//# sourceMappingURL=Observable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/util/Observable.js\n// module id = 1868\n// module chunks = 0","import { isTest, warnOnceInDevelopment } from 'apollo-utilities';\nvar haveWarned = false;\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nvar HeuristicFragmentMatcher = /** @class */ (function () {\n    function HeuristicFragmentMatcher() {\n        // do nothing\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true; // we don't need to initialize this fragment matcher.\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        if (!obj && idValue.id === 'ROOT_QUERY') {\n            return true;\n        }\n        if (!obj) {\n            return false;\n        }\n        if (!obj.__typename) {\n            if (!haveWarned) {\n                console.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                console.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                console.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n                /* istanbul ignore if */\n                if (!isTest()) {\n                    // When running tests, we want to print the warning every time\n                    haveWarned = true;\n                }\n            }\n            context.returnPartialData = true;\n            return true;\n        }\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        // XXX here we reach an issue - we don't know if this fragment should match or not. It's either:\n        // 1. A fragment on a non-matching concrete type or interface or union\n        // 2. A fragment on a matching interface or union\n        // If it's 1, we don't want to return anything, if it's 2 we want to match. We can't tell the\n        // difference, so we warn the user, but still try to match it (backcompat).\n        warnOnceInDevelopment(\"You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types.\\n     Apollo Client will not be able to able to accurately map fragments.\" +\n            \"To make this error go away, use the IntrospectionFragmentMatcher as described in the docs: \" +\n            \"https://www.apollographql.com/docs/react/recipes/fragment-matching.html\", 'error');\n        context.returnPartialData = true;\n        return true;\n    };\n    return HeuristicFragmentMatcher;\n}());\nexport { HeuristicFragmentMatcher };\nvar IntrospectionFragmentMatcher = /** @class */ (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        if (!this.isReady) {\n            // this should basically never happen in proper use.\n            throw new Error('FragmentMatcher.match() was called before FragmentMatcher.init()');\n        }\n        var obj = context.store.get(idValue.id);\n        if (!obj) {\n            return false;\n        }\n        if (!obj.__typename) {\n            throw new Error(\"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        }\n        if (obj.__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (implementingTypes && implementingTypes.indexOf(obj.__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\nexport { IntrospectionFragmentMatcher };\n//# sourceMappingURL=fragmentMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/fragmentMatcher.js\n// module id = 1870\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { print } from 'graphql/language/printer';\nimport { assign, createFragmentMap, getDefaultValues, getFragmentDefinitions, getOperationDefinition, isField, isIdValue, isInlineFragment, isProduction, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, getQueryDefinition, toIdValue, } from 'apollo-utilities';\nimport { defaultNormalizedCacheFactory, ObjectCache } from './objectCache';\nvar WriteError = /** @class */ (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nexport { WriteError };\nexport function enhanceErrorWithDocument(error, document) {\n    // XXX A bit hacky maybe ...\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + print(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\n/**\n * Writes the result of a query to the store.\n *\n * @param result The result object returned for the query document.\n *\n * @param query The query document whose result we are writing to the store.\n *\n * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n *\n * @param variables A map from the name of a variable to its value. These variables can be\n * referenced by the query document.\n *\n * @param dataIdFromObject A function that returns an object identifier given a particular result\n * object. See the store documentation for details and an example of this function.\n *\n * @param fragmentMap A map from the name of a fragment to its fragment definition. These fragments\n * can be referenced within the query document.\n *\n * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n */\nexport function writeQueryToStore(_a) {\n    var result = _a.result, query = _a.query, _b = _a.storeFactory, storeFactory = _b === void 0 ? defaultNormalizedCacheFactory : _b, _c = _a.store, store = _c === void 0 ? storeFactory() : _c, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, _d = _a.fragmentMap, fragmentMap = _d === void 0 ? {} : _d, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    var queryDefinition = getQueryDefinition(query);\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n    try {\n        return writeSelectionSetToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            selectionSet: queryDefinition.selectionSet,\n            context: {\n                store: store,\n                storeFactory: storeFactory,\n                processedData: {},\n                variables: variables,\n                dataIdFromObject: dataIdFromObject,\n                fragmentMap: fragmentMap,\n                fragmentMatcherFunction: fragmentMatcherFunction,\n            },\n        });\n    }\n    catch (e) {\n        throw enhanceErrorWithDocument(e, query);\n    }\n}\nexport function writeResultToStore(_a) {\n    var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.storeFactory, storeFactory = _b === void 0 ? defaultNormalizedCacheFactory : _b, _c = _a.store, store = _c === void 0 ? storeFactory() : _c, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    var operationDefinition = getOperationDefinition(document);\n    var selectionSet = operationDefinition.selectionSet;\n    var fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n    variables = assign({}, getDefaultValues(operationDefinition), variables);\n    try {\n        return writeSelectionSetToStore({\n            result: result,\n            dataId: dataId,\n            selectionSet: selectionSet,\n            context: {\n                store: store,\n                storeFactory: storeFactory,\n                processedData: {},\n                variables: variables,\n                dataIdFromObject: dataIdFromObject,\n                fragmentMap: fragmentMap,\n                fragmentMatcherFunction: fragmentMatcherFunction,\n            },\n        });\n    }\n    catch (e) {\n        throw enhanceErrorWithDocument(e, document);\n    }\n}\nexport function writeSelectionSetToStore(_a) {\n    var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n    var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n    selectionSet.selections.forEach(function (selection) {\n        var included = shouldInclude(selection, variables);\n        if (isField(selection)) {\n            var resultFieldKey = resultKeyNameFromField(selection);\n            var value = result[resultFieldKey];\n            if (included) {\n                if (typeof value !== 'undefined') {\n                    writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    // if this is a defered field we don't need to throw / warn\n                    var isDefered = selection.directives &&\n                        selection.directives.length &&\n                        selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                    if (!isDefered && context.fragmentMatcherFunction) {\n                        // XXX We'd like to throw an error, but for backwards compatibility's sake\n                        // we just print a warning for the time being.\n                        //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n                        if (!isProduction()) {\n                            console.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            // This is not a field, so it must be a fragment, either inline or named\n            var fragment = void 0;\n            if (isInlineFragment(selection)) {\n                fragment = selection;\n            }\n            else {\n                // Named fragment\n                fragment = (fragmentMap || {})[selection.name.value];\n                if (!fragment) {\n                    throw new Error(\"No fragment named \" + selection.name.value + \".\");\n                }\n            }\n            var matches = true;\n            if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n                // Right now we have to pretend that we're passing in an idValue and that there's a store\n                // on the context.\n                var idValue = toIdValue({ id: 'self', typename: undefined });\n                var fakeContext = {\n                    // NOTE: fakeContext always uses ObjectCache\n                    // since this is only to ensure the return value of 'matches'\n                    store: new ObjectCache({ self: result }),\n                    returnPartialData: false,\n                    hasMissingField: false,\n                    cacheRedirects: {},\n                };\n                matches = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                if (!isProduction() && fakeContext.returnPartialData) {\n                    console.error('WARNING: heuristic fragment matching going on!');\n                }\n            }\n            if (included && matches) {\n                writeSelectionSetToStore({\n                    result: result,\n                    selectionSet: fragment.selectionSet,\n                    dataId: dataId,\n                    context: context,\n                });\n            }\n        }\n    });\n    return store;\n}\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) && isGeneratedId(value.id) && isIdValue(realValue)) {\n            mergeWithGenerated(value.id, realValue.id, cache);\n        }\n        cache.delete(generatedKey);\n        cache.set(realKey, __assign({}, generated, real));\n    });\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\nfunction writeFieldToStore(_a) {\n    var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n    var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n    var storeValue;\n    var storeObject;\n    var storeFieldName = storeKeyNameFromField(field, variables);\n    // specifies if we need to merge existing keys in the store\n    var shouldMerge = false;\n    // If we merge, this will be the generatedKey\n    var generatedKey = '';\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n        storeValue =\n            value != null && typeof value === 'object'\n                ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n                    // an id.\n                    { type: 'json', json: value }\n                : // Otherwise, just store the scalar directly in the store.\n                    value;\n    }\n    else if (Array.isArray(value)) {\n        var generatedId = dataId + \".\" + storeFieldName;\n        storeValue = processArrayValue(value, generatedId, field.selectionSet, context);\n    }\n    else {\n        // It's an object\n        var valueDataId = dataId + \".\" + storeFieldName;\n        var generated = true;\n        // We only prepend the '$' if the valueDataId isn't already a generated\n        // id.\n        if (!isGeneratedId(valueDataId)) {\n            valueDataId = '$' + valueDataId;\n        }\n        if (dataIdFromObject) {\n            var semanticId = dataIdFromObject(value);\n            // We throw an error if the first character of the id is '$. This is\n            // because we use that character to designate an Apollo-generated id\n            // and we use the distinction between user-desiginated and application-provided\n            // ids when managing overwrites.\n            if (semanticId && isGeneratedId(semanticId)) {\n                throw new Error('IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n            }\n            if (semanticId) {\n                valueDataId = semanticId;\n                generated = false;\n            }\n        }\n        if (!isDataProcessed(valueDataId, field, context.processedData)) {\n            writeSelectionSetToStore({\n                dataId: valueDataId,\n                result: value,\n                selectionSet: field.selectionSet,\n                context: context,\n            });\n        }\n        // We take the id and escape it (i.e. wrap it with an enclosing object).\n        // This allows us to distinguish IDs from normal scalars.\n        var typename = value.__typename;\n        storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n        // check if there was a generated id at the location where we're\n        // about to place this new id. If there was, we have to merge the\n        // data from that id with the data we're about to write in the store.\n        storeObject = store.get(dataId);\n        var escapedId = storeObject && storeObject[storeFieldName];\n        if (escapedId !== storeValue && isIdValue(escapedId)) {\n            var hadTypename = escapedId.typename !== undefined;\n            var hasTypename = typename !== undefined;\n            var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n            // If there is already a real id in the store and the current id we\n            // are dealing with is generated, we throw an error.\n            // One exception we allow is when the typename has changed, which occurs\n            // when schema defines a union, both with and without an ID in the same place.\n            // checks if we \"lost\" the read id\n            if (generated && !escapedId.generated && !typenameChanged) {\n                throw new Error(\"Store error: the application attempted to write an object with no provided id\" +\n                    (\" but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet\") +\n                    \" that was trying to be written is:\\n\" +\n                    print(field));\n            }\n            // checks if we \"lost\" the typename\n            if (hadTypename && !hasTypename) {\n                throw new Error(\"Store error: the application attempted to write an object with no provided typename\" +\n                    (\" but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet\") +\n                    \" that was trying to be written is:\\n\" +\n                    print(field));\n            }\n            if (escapedId.generated) {\n                generatedKey = escapedId.id;\n                // We should only merge if it's an object of the same type,\n                // otherwise we should delete the generated object\n                if (typenameChanged) {\n                    // Only delete the generated object when the old object was\n                    // inlined, and the new object is not. This is indicated by\n                    // the old id being generated, and the new id being real.\n                    if (!generated) {\n                        store.delete(generatedKey);\n                    }\n                }\n                else {\n                    shouldMerge = true;\n                }\n            }\n        }\n    }\n    var newStoreObj = __assign({}, store.get(dataId), (_b = {}, _b[storeFieldName] = storeValue, _b));\n    if (shouldMerge) {\n        mergeWithGenerated(generatedKey, storeValue.id, store);\n    }\n    storeObject = store.get(dataId);\n    if (!storeObject || storeValue !== storeObject[storeFieldName]) {\n        store.set(dataId, newStoreObj);\n    }\n    var _b;\n}\nfunction processArrayValue(value, generatedId, selectionSet, context) {\n    return value.map(function (item, index) {\n        if (item === null) {\n            return null;\n        }\n        var itemDataId = generatedId + \".\" + index;\n        if (Array.isArray(item)) {\n            return processArrayValue(item, itemDataId, selectionSet, context);\n        }\n        var generated = true;\n        if (context.dataIdFromObject) {\n            var semanticId = context.dataIdFromObject(item);\n            if (semanticId) {\n                itemDataId = semanticId;\n                generated = false;\n            }\n        }\n        if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n            writeSelectionSetToStore({\n                dataId: itemDataId,\n                result: item,\n                selectionSet: selectionSet,\n                context: context,\n            });\n        }\n        return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n    });\n}\n//# sourceMappingURL=writeToStore.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/writeToStore.js\n// module id = 1871\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport graphqlAnywhere from 'graphql-anywhere';\nimport { assign, isEqual, getDefaultValues, getQueryDefinition, isJsonValue, isIdValue, toIdValue, getStoreKeyName, } from 'apollo-utilities';\n/**\n * The key which the cache id for a given value is stored in the result object. This key is private\n * and should not be used by Apollo client users.\n *\n * Uses a symbol if available in the environment.\n *\n * @private\n */\nexport var ID_KEY = typeof Symbol !== 'undefined' ? Symbol('id') : '@@id';\n/**\n * Resolves the result of a query solely from the store (i.e. never hits the server).\n *\n * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n * store.\n *\n * @param {DocumentNode} query The query document to resolve from the data available in the store.\n *\n * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n * be referenced by the query document.\n *\n * @param {any} previousResult The previous result returned by this function for the same query.\n * If nothing in the store changed since that previous result then values from the previous result\n * will be returned to preserve referential equality.\n */\nexport function readQueryFromStore(options) {\n    var optsPatch = { returnPartialData: false };\n    return diffQueryAgainstStore(__assign({}, options, optsPatch)).result;\n}\nvar readStoreResolver = function (fieldName, idValue, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    assertIdValue(idValue);\n    var objId = idValue.id;\n    var obj = context.store.get(objId);\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        // We happen to know here that getStoreKeyName returns its first\n        // argument unmodified if there are no args or directives, so we can\n        // avoid calling the function at all in that case, as a small but\n        // important optimization to this frequently executed code.\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (obj) {\n        fieldValue = obj[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            (obj.__typename || objId === 'ROOT_QUERY')) {\n            var typename = obj.__typename || 'Query';\n            // Look for the type in the custom resolver map\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                // Look for the field in the custom resolver map\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(obj, args, {\n                        getCacheKey: function (storeObj) {\n                            return toIdValue({\n                                id: context.dataIdFromObject(storeObj),\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        if (!context.returnPartialData) {\n            throw new Error(\"Can't find field \" + storeKeyName + \" on object (\" + objId + \") \" + JSON.stringify(obj, null, 2) + \".\");\n        }\n        context.hasMissingField = true;\n        return fieldValue;\n    }\n    // if this is an object scalar, it must be a json blob and we have to unescape it\n    if (isJsonValue(fieldValue)) {\n        // If the JSON blob is the same now as in the previous result, return the previous result to\n        // maintain referential equality.\n        //\n        // `isEqual` will first perform a referential equality check (with `===`) in case the JSON\n        // value has not changed in the store, and then a deep equality check if that fails in case a\n        // new JSON object was returned by the API but that object may still be the same.\n        if (idValue.previousResult &&\n            isEqual(idValue.previousResult[resultKey], fieldValue.json)) {\n            return idValue.previousResult[resultKey];\n        }\n        return fieldValue.json;\n    }\n    // If we had a previous result, try adding that previous result value for this field to our field\n    // value. This will create a new value without mutating the old one.\n    if (idValue.previousResult) {\n        fieldValue = addPreviousResultToIdValues(fieldValue, idValue.previousResult[resultKey]);\n    }\n    return fieldValue;\n};\n/**\n * Given a store and a query, return as much of the result as possible and\n * identify if any data was missing from the store.\n * @param  {DocumentNode} query A parsed GraphQL query document\n * @param  {Store} store The Apollo Client store object\n * @param  {any} previousResult The previous result returned by this function for the same query\n * @return {result: Object, complete: [boolean]}\n */\nexport function diffQueryAgainstStore(_a) {\n    var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n    // Throw the right validation error by trying to find a query in the document\n    var queryDefinition = getQueryDefinition(query);\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n    var context = {\n        // Global settings\n        store: store,\n        returnPartialData: returnPartialData,\n        dataIdFromObject: (config && config.dataIdFromObject) || null,\n        cacheRedirects: (config && config.cacheRedirects) || {},\n        // Flag set during execution\n        hasMissingField: false,\n    };\n    var rootIdValue = {\n        type: 'id',\n        id: rootId,\n        previousResult: previousResult,\n    };\n    var result = graphqlAnywhere(readStoreResolver, query, rootIdValue, context, variables, {\n        fragmentMatcher: fragmentMatcherFunction,\n        resultMapper: resultMapper,\n    });\n    return {\n        result: result,\n        complete: !context.hasMissingField,\n    };\n}\nexport function assertIdValue(idValue) {\n    if (!isIdValue(idValue)) {\n        throw new Error(\"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n    }\n}\n/**\n * Adds a previous result value to id values in a nested array. For a single id value and a single\n * previous result then the previous value is added directly.\n *\n * For arrays we put all of the ids from the previous result array in a map and add them to id\n * values with the same id.\n *\n * This function does not mutate. Instead it returns new instances of modified values.\n *\n * @private\n */\nfunction addPreviousResultToIdValues(value, previousResult) {\n    // If the value is an `IdValue`, add the previous result to it whether or not that\n    // `previousResult` is undefined.\n    //\n    // If the value is an array, recurse over each item trying to add the `previousResult` for that\n    // item.\n    if (isIdValue(value)) {\n        return __assign({}, value, { previousResult: previousResult });\n    }\n    else if (Array.isArray(value)) {\n        var idToPreviousResult_1 = new Map();\n        // If the previous result was an array, we want to build up our map of ids to previous results\n        // using the private `ID_KEY` property that is added in `resultMapper`.\n        if (Array.isArray(previousResult)) {\n            previousResult.forEach(function (item) {\n                // item can be null\n                if (item && item[ID_KEY]) {\n                    idToPreviousResult_1.set(item[ID_KEY], item);\n                    // idToPreviousResult[item[ID_KEY]] = item;\n                }\n            });\n        }\n        // For every value we want to add the previous result.\n        return value.map(function (item, i) {\n            // By default the previous result for this item will be in the same array position as this\n            // item.\n            var itemPreviousResult = previousResult && previousResult[i];\n            // If the item is an id value, we should check to see if there is a previous result for this\n            // specific id. If there is, that will be the value for `itemPreviousResult`.\n            if (isIdValue(item)) {\n                itemPreviousResult =\n                    idToPreviousResult_1.get(item.id) || itemPreviousResult;\n            }\n            return addPreviousResultToIdValues(item, itemPreviousResult);\n        });\n    }\n    // Return the value, nothing changed.\n    return value;\n}\n/**\n * Maps a result from `graphql-anywhere` to a final result value.\n *\n * If the result and the previous result from the `idValue` pass a shallow equality test, we just\n * return the `previousResult` to maintain referential equality.\n *\n * We also add a private id property to the result that we can use later on.\n *\n * @private\n */\nfunction resultMapper(resultFields, idValue) {\n    // If we had a previous result, we may be able to return that and preserve referential equality\n    if (idValue.previousResult) {\n        var currentResultKeys_1 = Object.keys(resultFields);\n        var sameAsPreviousResult = \n        // Confirm that we have the same keys in both the current result and the previous result.\n        Object.keys(idValue.previousResult).every(function (key) { return currentResultKeys_1.indexOf(key) > -1; }) &&\n            // Perform a shallow comparison of the result fields with the previous result. If all of\n            // the shallow fields are referentially equal to the fields of the previous result we can\n            // just return the previous result.\n            //\n            // While we do a shallow comparison of objects, but we do a deep comparison of arrays.\n            currentResultKeys_1.every(function (key) {\n                return areNestedArrayItemsStrictlyEqual(resultFields[key], idValue.previousResult[key]);\n            });\n        if (sameAsPreviousResult) {\n            return idValue.previousResult;\n        }\n    }\n    Object.defineProperty(resultFields, ID_KEY, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: idValue.id,\n    });\n    return resultFields;\n}\n/**\n * Compare all the items to see if they are all referentially equal in two arrays no matter how\n * deeply nested the arrays are.\n *\n * @private\n */\nfunction areNestedArrayItemsStrictlyEqual(a, b) {\n    // If `a` and `b` are referentially equal, return true.\n    if (a === b) {\n        return true;\n    }\n    // If either `a` or `b` are not an array or not of the same length return false. `a` and `b` are\n    // known to not be equal here, we checked above.\n    if (!Array.isArray(a) || !Array.isArray(b) || a.length !== b.length) {\n        return false;\n    }\n    // Otherwise let us compare all of the array items (which are potentially nested arrays!) to see\n    // if they are equal.\n    return a.every(function (item, i) { return areNestedArrayItemsStrictlyEqual(item, b[i]); });\n}\n//# sourceMappingURL=readFromStore.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/readFromStore.js\n// module id = 1872\n// module chunks = 0","import { getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, getDirectiveInfoFromField, isField, isInlineFragment, resultKeyNameFromField, argumentsObjectFromField, } from 'apollo-utilities';\n/* Based on graphql function from graphql-js:\n *\n * graphql(\n *   schema: GraphQLSchema,\n *   requestString: string,\n *   rootValue?: ?any,\n *   contextValue?: ?any,\n *   variableValues?: ?{[key: string]: any},\n *   operationName?: ?string\n * ): Promise<GraphQLResult>\n *\n * The default export as of graphql-anywhere is sync as of 4.0,\n * but below is an exported alternative that is async.\n * In the 5.0 version, this will be the only export again\n * and it will be async\n *\n */\nexport function graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n    if (execOptions === void 0) { execOptions = {}; }\n    var mainDefinition = getMainDefinition(document);\n    var fragments = getFragmentDefinitions(document);\n    var fragmentMap = createFragmentMap(fragments);\n    var resultMapper = execOptions.resultMapper;\n    // Default matcher always matches all fragments\n    var fragmentMatcher = execOptions.fragmentMatcher || (function () { return true; });\n    var execContext = {\n        fragmentMap: fragmentMap,\n        contextValue: contextValue,\n        variableValues: variableValues,\n        resultMapper: resultMapper,\n        resolver: resolver,\n        fragmentMatcher: fragmentMatcher,\n    };\n    return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n    var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n    var result = {};\n    selectionSet.selections.forEach(function (selection) {\n        if (!shouldInclude(selection, variables)) {\n            // Skip this entirely\n            return;\n        }\n        if (isField(selection)) {\n            var fieldResult = executeField(selection, rootValue, execContext);\n            var resultFieldKey = resultKeyNameFromField(selection);\n            if (fieldResult !== undefined) {\n                if (result[resultFieldKey] === undefined) {\n                    result[resultFieldKey] = fieldResult;\n                }\n                else {\n                    merge(result[resultFieldKey], fieldResult);\n                }\n            }\n        }\n        else {\n            var fragment = void 0;\n            if (isInlineFragment(selection)) {\n                fragment = selection;\n            }\n            else {\n                // This is a named fragment\n                fragment = fragmentMap[selection.name.value];\n                if (!fragment) {\n                    throw new Error(\"No fragment named \" + selection.name.value);\n                }\n            }\n            var typeCondition = fragment.typeCondition.name.value;\n            if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n                var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);\n                merge(result, fragmentResult);\n            }\n        }\n    });\n    if (execContext.resultMapper) {\n        return execContext.resultMapper(result, rootValue);\n    }\n    return result;\n}\nfunction executeField(field, rootValue, execContext) {\n    var variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n    var fieldName = field.name.value;\n    var args = argumentsObjectFromField(field, variables);\n    var info = {\n        isLeaf: !field.selectionSet,\n        resultKey: resultKeyNameFromField(field),\n        directives: getDirectiveInfoFromField(field, variables),\n    };\n    var result = resolver(fieldName, rootValue, args, contextValue, info);\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n        return result;\n    }\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n    }\n    if (Array.isArray(result)) {\n        return executeSubSelectedArray(field, result, execContext);\n    }\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return executeSelectionSet(field.selectionSet, result, execContext);\n}\nfunction executeSubSelectedArray(field, result, execContext) {\n    return result.map(function (item) {\n        // null value in array\n        if (item === null) {\n            return null;\n        }\n        // This is a nested array, recurse\n        if (Array.isArray(item)) {\n            return executeSubSelectedArray(field, item, execContext);\n        }\n        // This is an object, run the selection set on it\n        return executeSelectionSet(field.selectionSet, item, execContext);\n    });\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nexport function merge(dest, src) {\n    if (src !== null && typeof src === 'object') {\n        Object.keys(src).forEach(function (key) {\n            var srcVal = src[key];\n            if (!hasOwn.call(dest, key)) {\n                dest[key] = srcVal;\n            }\n            else {\n                merge(dest[key], srcVal);\n            }\n        });\n    }\n}\n//# sourceMappingURL=graphql.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/graphql.js\n// module id = 1873\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar RecordingCache = /** @class */ (function () {\n    function RecordingCache(data) {\n        if (data === void 0) { data = {}; }\n        this.data = data;\n        this.recordedData = {};\n    }\n    RecordingCache.prototype.record = function (transaction) {\n        transaction(this);\n        var recordedData = this.recordedData;\n        this.recordedData = {};\n        return recordedData;\n    };\n    RecordingCache.prototype.toObject = function () {\n        return __assign({}, this.data, this.recordedData);\n    };\n    RecordingCache.prototype.get = function (dataId) {\n        if (this.recordedData.hasOwnProperty(dataId)) {\n            // recording always takes precedence:\n            return this.recordedData[dataId];\n        }\n        return this.data[dataId];\n    };\n    RecordingCache.prototype.set = function (dataId, value) {\n        if (this.get(dataId) !== value) {\n            this.recordedData[dataId] = value;\n        }\n    };\n    RecordingCache.prototype.delete = function (dataId) {\n        this.recordedData[dataId] = undefined;\n    };\n    RecordingCache.prototype.clear = function () {\n        var _this = this;\n        Object.keys(this.data).forEach(function (dataId) { return _this.delete(dataId); });\n        this.recordedData = {};\n    };\n    RecordingCache.prototype.replace = function (newData) {\n        this.clear();\n        this.recordedData = __assign({}, newData);\n    };\n    return RecordingCache;\n}());\nexport { RecordingCache };\nexport function record(startingState, transaction) {\n    var recordingCache = new RecordingCache(startingState);\n    return recordingCache.record(transaction);\n}\n//# sourceMappingURL=recordingCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/recordingCache.js\n// module id = 1874\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  _classCallCheck(this, Source);\n\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || { line: 1, column: 1 };\n  !(this.locationOffset.line > 0) ? invariant(0, 'line in locationOffset is 1-indexed and must be positive') : void 0;\n  !(this.locationOffset.column > 0) ? invariant(0, 'column in locationOffset is 1-indexed and must be positive') : void 0;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/source.mjs\n// module id = 1875\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { getLocation } from '../language/location';\n\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nexport function printError(error) {\n  var printedLocations = [];\n  if (error.nodes) {\n    error.nodes.forEach(function (node) {\n      if (node.loc) {\n        printedLocations.push(highlightSourceAtLocation(node.loc.source, getLocation(node.loc.source, node.loc.start)));\n      }\n    });\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    error.locations.forEach(function (location) {\n      printedLocations.push(highlightSourceAtLocation(source, location));\n    });\n  }\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\nfunction highlightSourceAtLocation(source, location) {\n  var line = location.line;\n  var lineOffset = source.locationOffset.line - 1;\n  var columnOffset = getColumnOffset(source, location);\n  var contextLine = line + lineOffset;\n  var contextColumn = location.column + columnOffset;\n  var prevLineNum = (contextLine - 1).toString();\n  var lineNum = contextLine.toString();\n  var nextLineNum = (contextLine + 1).toString();\n  var padLen = nextLineNum.length;\n  var lines = source.body.split(/\\r\\n|[\\n\\r]/g);\n  lines[0] = whitespace(source.locationOffset.column - 1) + lines[0];\n  var outputLines = [source.name + ' (' + contextLine + ':' + contextColumn + ')', line >= 2 && lpad(padLen, prevLineNum) + ': ' + lines[line - 2], lpad(padLen, lineNum) + ': ' + lines[line - 1], whitespace(2 + padLen + contextColumn - 1) + '^', line < lines.length && lpad(padLen, nextLineNum) + ': ' + lines[line]];\n  return outputLines.filter(Boolean).join('\\n');\n}\n\nfunction getColumnOffset(source, location) {\n  return location.line === 1 ? source.locationOffset.column - 1 : 0;\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/printError.mjs\n// module id = 1876\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLError } from './GraphQLError';\n\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nexport function locatedError(originalError, nodes, path) {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  // $FlowFixMe(>=0.68.0)\n  if (originalError && Array.isArray(originalError.path)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError && originalError.message, originalError && originalError.nodes || nodes, originalError && originalError.source, originalError && originalError.positions, path, originalError);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/locatedError.mjs\n// module id = 1877\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * Coffeescript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n */\nexport default function blockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n\n  // Remove common indentation from all lines but first.\n  var commonIndent = null;\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n    if (indent < line.length && (commonIndent === null || indent < commonIndent)) {\n      commonIndent = indent;\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  if (commonIndent) {\n    for (var _i = 1; _i < lines.length; _i++) {\n      lines[_i] = lines[_i].slice(commonIndent);\n    }\n  }\n\n  // Remove leading and trailing blank lines.\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  }\n\n  // Return a string of the lines joined with U+000A.\n  return lines.join('\\n');\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/blockStringValue.mjs\n// module id = 1878\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ALL_TYPES = exports.MUTATION_TYPES = exports.QUERY_TYPES = undefined;\n\nvar _reactAdmin = require('react-admin');\n\nvar QUERY_TYPES = exports.QUERY_TYPES = [_reactAdmin.GET_LIST, _reactAdmin.GET_MANY, _reactAdmin.GET_MANY_REFERENCE, _reactAdmin.GET_ONE];\nvar MUTATION_TYPES = exports.MUTATION_TYPES = [_reactAdmin.CREATE, _reactAdmin.UPDATE, _reactAdmin.DELETE, _reactAdmin.UPDATE_MANY, _reactAdmin.DELETE_MANY];\nvar ALL_TYPES = exports.ALL_TYPES = QUERY_TYPES.concat(MUTATION_TYPES);\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/lib/constants.js\n// module id = 1879\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperties = require(\"../core-js/object/define-properties\");\n\nvar _defineProperties2 = _interopRequireDefault(_defineProperties);\n\nvar _freeze = require(\"../core-js/object/freeze\");\n\nvar _freeze2 = _interopRequireDefault(_freeze);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (strings, raw) {\n  return (0, _freeze2.default)((0, _defineProperties2.default)(strings, {\n    raw: {\n      value: (0, _freeze2.default)(raw)\n    }\n  }));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/babel-runtime/helpers/taggedTemplateLiteral.js\n// module id = 1880\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport keyValMap from '../jsutils/keyValMap';\nimport isInvalid from '../jsutils/isInvalid';\n\nimport { Kind } from '../language/kinds';\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n    case Kind.VARIABLE:\n      var variableName = valueNode.name.value;\n      return variables && !isInvalid(variables[variableName]) ? variables[variableName] : undefined;\n  }\n  /* istanbul ignore next */\n  throw new Error('Unexpected value kind: ' + valueNode.kind);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/valueFromASTUntyped.mjs\n// module id = 1881\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLError } from '../error/GraphQLError';\n\nimport invariant from '../jsutils/invariant';\n\nvar NAME_RX = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * Upholds the spec rules about naming.\n */\nexport function assertValidName(name) {\n  var error = isValidNameError(name);\n  if (error) {\n    throw error;\n  }\n  return name;\n}\n\n/**\n * Returns an Error if a name is invalid.\n */\nexport function isValidNameError(name, node) {\n  !(typeof name === 'string') ? invariant(0, 'Expected string') : void 0;\n  if (name.length > 1 && name[0] === '_' && name[1] === '_') {\n    return new GraphQLError('Name \"' + name + '\" must not begin with \"__\", which is reserved by ' + 'GraphQL introspection.', node);\n  }\n  if (!NAME_RX.test(name)) {\n    return new GraphQLError('Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"' + name + '\" does not.', node);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/assertValidName.mjs\n// module id = 1882\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\nimport { GraphQLError } from '../error';\nimport { visit, visitInParallel, visitWithTypeInfo } from '../language/visitor';\n\nimport { GraphQLSchema } from '../type/schema';\nimport { assertValidSchema } from '../type/validate';\nimport { TypeInfo } from '../utilities/TypeInfo';\nimport { specifiedRules } from './specifiedRules';\nimport ValidationContext from './ValidationContext';\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nexport function validate(schema, ast, rules, typeInfo) {\n  !ast ? invariant(0, 'Must provide document') : void 0;\n  // If the schema used for validation is invalid, throw an error.\n  assertValidSchema(schema);\n  return visitUsingRules(schema, typeInfo || new TypeInfo(schema), ast, rules || specifiedRules);\n}\n\n/**\n * This uses a specialized visitor which runs multiple visitors in parallel,\n * while maintaining the visitor skip and break API.\n *\n * @internal\n */\nfunction visitUsingRules(schema, typeInfo, documentAST, rules) {\n  var context = new ValidationContext(schema, documentAST, typeInfo);\n  var visitors = rules.map(function (rule) {\n    return rule(context);\n  });\n  // Visit the whole document with each instance of all provided rules.\n  visit(documentAST, visitWithTypeInfo(typeInfo, visitInParallel(visitors)));\n  return context.getErrors();\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/validate.mjs\n// module id = 1883\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitions } from './rules/ExecutableDefinitions';\n\n// Spec Section: \"Operation Name Uniqueness\"\nimport { UniqueOperationNames } from './rules/UniqueOperationNames';\n\n// Spec Section: \"Lone Anonymous Operation\"\nimport { LoneAnonymousOperation } from './rules/LoneAnonymousOperation';\n\n// Spec Section: \"Subscriptions with Single Root Field\"\nimport { SingleFieldSubscriptions } from './rules/SingleFieldSubscriptions';\n\n// Spec Section: \"Fragment Spread Type Existence\"\nimport { KnownTypeNames } from './rules/KnownTypeNames';\n\n// Spec Section: \"Fragments on Composite Types\"\nimport { FragmentsOnCompositeTypes } from './rules/FragmentsOnCompositeTypes';\n\n// Spec Section: \"Variables are Input Types\"\nimport { VariablesAreInputTypes } from './rules/VariablesAreInputTypes';\n\n// Spec Section: \"Leaf Field Selections\"\nimport { ScalarLeafs } from './rules/ScalarLeafs';\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\nimport { FieldsOnCorrectType } from './rules/FieldsOnCorrectType';\n\n// Spec Section: \"Fragment Name Uniqueness\"\nimport { UniqueFragmentNames } from './rules/UniqueFragmentNames';\n\n// Spec Section: \"Fragment spread target defined\"\nimport { KnownFragmentNames } from './rules/KnownFragmentNames';\n\n// Spec Section: \"Fragments must be used\"\nimport { NoUnusedFragments } from './rules/NoUnusedFragments';\n\n// Spec Section: \"Fragment spread is possible\"\nimport { PossibleFragmentSpreads } from './rules/PossibleFragmentSpreads';\n\n// Spec Section: \"Fragments must not form cycles\"\nimport { NoFragmentCycles } from './rules/NoFragmentCycles';\n\n// Spec Section: \"Variable Uniqueness\"\nimport { UniqueVariableNames } from './rules/UniqueVariableNames';\n\n// Spec Section: \"All Variable Used Defined\"\nimport { NoUndefinedVariables } from './rules/NoUndefinedVariables';\n\n// Spec Section: \"All Variables Used\"\nimport { NoUnusedVariables } from './rules/NoUnusedVariables';\n\n// Spec Section: \"Directives Are Defined\"\nimport { KnownDirectives } from './rules/KnownDirectives';\n\n// Spec Section: \"Directives Are Unique Per Location\"\nimport { UniqueDirectivesPerLocation } from './rules/UniqueDirectivesPerLocation';\n\n// Spec Section: \"Argument Names\"\nimport { KnownArgumentNames } from './rules/KnownArgumentNames';\n\n// Spec Section: \"Argument Uniqueness\"\nimport { UniqueArgumentNames } from './rules/UniqueArgumentNames';\n\n// Spec Section: \"Value Type Correctness\"\nimport { ValuesOfCorrectType } from './rules/ValuesOfCorrectType';\n\n// Spec Section: \"Argument Optionality\"\nimport { ProvidedNonNullArguments } from './rules/ProvidedNonNullArguments';\n\n// Spec Section: \"Variables Default Value Is Allowed\"\nimport { VariablesDefaultValueAllowed } from './rules/VariablesDefaultValueAllowed';\n\n// Spec Section: \"All Variable Usages Are Allowed\"\nimport { VariablesInAllowedPosition } from './rules/VariablesInAllowedPosition';\n\n// Spec Section: \"Field Selection Merging\"\nimport { OverlappingFieldsCanBeMerged } from './rules/OverlappingFieldsCanBeMerged';\n\n// Spec Section: \"Input Object Field Uniqueness\"\nimport { UniqueInputFieldNames } from './rules/UniqueInputFieldNames';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport var specifiedRules = [ExecutableDefinitions, UniqueOperationNames, LoneAnonymousOperation, SingleFieldSubscriptions, KnownTypeNames, FragmentsOnCompositeTypes, VariablesAreInputTypes, ScalarLeafs, FieldsOnCorrectType, UniqueFragmentNames, KnownFragmentNames, NoUnusedFragments, PossibleFragmentSpreads, NoFragmentCycles, UniqueVariableNames, NoUndefinedVariables, NoUnusedVariables, KnownDirectives, UniqueDirectivesPerLocation, KnownArgumentNames, UniqueArgumentNames, ValuesOfCorrectType, ProvidedNonNullArguments, VariablesDefaultValueAllowed, VariablesInAllowedPosition, OverlappingFieldsCanBeMerged, UniqueInputFieldNames];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/specifiedRules.mjs\n// module id = 1884\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function duplicateOperationNameMessage(operationName) {\n  return 'There can be only one operation named \"' + operationName + '\".';\n}\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n      return false;\n    },\n\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueOperationNames.mjs\n// module id = 1885\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { Kind } from '../../language/kinds';\n\n\nexport function anonOperationNotAloneMessage() {\n  return 'This anonymous operation must be the only defined operation.';\n}\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nexport function LoneAnonymousOperation(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError(anonOperationNotAloneMessage(), [node]));\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/LoneAnonymousOperation.mjs\n// module id = 1886\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function singleFieldOnlyMessage(name) {\n  return (name ? 'Subscription \"' + name + '\" ' : 'Anonymous Subscription ') + 'must select only one top level field.';\n}\n\n/**\n * Subscriptions must only include one field.\n *\n * A GraphQL subscription is valid only if it contains a single root field.\n */\nexport function SingleFieldSubscriptions(context) {\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        if (node.selectionSet.selections.length !== 1) {\n          context.reportError(new GraphQLError(singleFieldOnlyMessage(node.name && node.name.value), node.selectionSet.selections.slice(1)));\n        }\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/SingleFieldSubscriptions.mjs\n// module id = 1887\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport suggestionList from '../../jsutils/suggestionList';\nimport quotedOrList from '../../jsutils/quotedOrList';\n\n\nexport function unknownTypeMessage(typeName, suggestedTypes) {\n  var message = 'Unknown type \"' + typeName + '\".';\n  if (suggestedTypes.length) {\n    message += ' Did you mean ' + quotedOrList(suggestedTypes) + '?';\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nexport function KnownTypeNames(context) {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: function ObjectTypeDefinition() {\n      return false;\n    },\n    InterfaceTypeDefinition: function InterfaceTypeDefinition() {\n      return false;\n    },\n    UnionTypeDefinition: function UnionTypeDefinition() {\n      return false;\n    },\n    InputObjectTypeDefinition: function InputObjectTypeDefinition() {\n      return false;\n    },\n    NamedType: function NamedType(node) {\n      var schema = context.getSchema();\n      var typeName = node.name.value;\n      var type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(new GraphQLError(unknownTypeMessage(typeName, suggestionList(typeName, Object.keys(schema.getTypeMap()))), [node]));\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/KnownTypeNames.mjs\n// module id = 1888\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { print } from '../../language/printer';\n\nimport { isCompositeType } from '../../type/definition';\n\nimport { typeFromAST } from '../../utilities/typeFromAST';\n\nexport function inlineFragmentOnNonCompositeErrorMessage(type) {\n  return 'Fragment cannot condition on non composite type \"' + String(type) + '\".';\n}\n\nexport function fragmentOnNonCompositeErrorMessage(fragName, type) {\n  return 'Fragment \"' + fragName + '\" cannot condition on non composite ' + ('type \"' + String(type) + '\".');\n}\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n */\nexport function FragmentsOnCompositeTypes(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n      if (typeCondition) {\n        var type = typeFromAST(context.getSchema(), typeCondition);\n        if (type && !isCompositeType(type)) {\n          context.reportError(new GraphQLError(inlineFragmentOnNonCompositeErrorMessage(print(typeCondition)), [typeCondition]));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.typeCondition);\n      if (type && !isCompositeType(type)) {\n        context.reportError(new GraphQLError(fragmentOnNonCompositeErrorMessage(node.name.value, print(node.typeCondition)), [node.typeCondition]));\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/FragmentsOnCompositeTypes.mjs\n// module id = 1889\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { print } from '../../language/printer';\n\nimport { isInputType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\n\nexport function nonInputTypeOnVarMessage(variableName, typeName) {\n  return 'Variable \"$' + variableName + '\" cannot be non-input type \"' + typeName + '\".';\n}\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nexport function VariablesAreInputTypes(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var type = typeFromAST(context.getSchema(), node.type);\n\n      // If the variable type is not an input type, return an error.\n      if (type && !isInputType(type)) {\n        var variableName = node.variable.name.value;\n        context.reportError(new GraphQLError(nonInputTypeOnVarMessage(variableName, print(node.type)), [node.type]));\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/VariablesAreInputTypes.mjs\n// module id = 1890\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { getNamedType, isLeafType } from '../../type/definition';\n\n\nexport function noSubselectionAllowedMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" must not have a selection since ' + ('type \"' + String(type) + '\" has no subfields.');\n}\n\nexport function requiredSubselectionMessage(fieldName, type) {\n  return 'Field \"' + fieldName + '\" of type \"' + String(type) + '\" must have a ' + ('selection of subfields. Did you mean \"' + fieldName + ' { ... }\"?');\n}\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafs(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getType();\n      var selectionSet = node.selectionSet;\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            context.reportError(new GraphQLError(noSubselectionAllowedMessage(node.name.value, type), [selectionSet]));\n          }\n        } else if (!selectionSet) {\n          context.reportError(new GraphQLError(requiredSubselectionMessage(node.name.value, type), [node]));\n        }\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/ScalarLeafs.mjs\n// module id = 1891\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport suggestionList from '../../jsutils/suggestionList';\nimport quotedOrList from '../../jsutils/quotedOrList';\n\nimport { isObjectType, isInterfaceType, isAbstractType } from '../../type/definition';\n\nexport function undefinedFieldMessage(fieldName, type, suggestedTypeNames, suggestedFieldNames) {\n  var message = 'Cannot query field \"' + fieldName + '\" on type \"' + type + '\".';\n  if (suggestedTypeNames.length !== 0) {\n    var suggestions = quotedOrList(suggestedTypeNames);\n    message += ' Did you mean to use an inline fragment on ' + suggestions + '?';\n  } else if (suggestedFieldNames.length !== 0) {\n    message += ' Did you mean ' + quotedOrList(suggestedFieldNames) + '?';\n  }\n  return message;\n}\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n */\nexport function FieldsOnCorrectType(context) {\n  return {\n    Field: function Field(node) {\n      var type = context.getParentType();\n      if (type) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          var schema = context.getSchema();\n          var fieldName = node.name.value;\n          // First determine if there are any suggested types to condition on.\n          var suggestedTypeNames = getSuggestedTypeNames(schema, type, fieldName);\n          // If there are no suggested types, then perhaps this was a typo?\n          var suggestedFieldNames = suggestedTypeNames.length !== 0 ? [] : getSuggestedFieldNames(schema, type, fieldName);\n\n          // Report an error, including helpful suggestions.\n          context.reportError(new GraphQLError(undefinedFieldMessage(fieldName, type.name, suggestedTypeNames, suggestedFieldNames), [node]));\n        }\n      }\n    }\n  };\n}\n\n/**\n * Go through all of the implementations of type, as well as the interfaces\n * that they implement. If any of those types include the provided field,\n * suggest them, sorted by how often the type is referenced,  starting\n * with Interfaces.\n */\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (isAbstractType(type)) {\n    var suggestedObjectTypes = [];\n    var interfaceUsageCount = Object.create(null);\n    schema.getPossibleTypes(type).forEach(function (possibleType) {\n      if (!possibleType.getFields()[fieldName]) {\n        return;\n      }\n      // This object type defines this field.\n      suggestedObjectTypes.push(possibleType.name);\n      possibleType.getInterfaces().forEach(function (possibleInterface) {\n        if (!possibleInterface.getFields()[fieldName]) {\n          return;\n        }\n        // This interface type defines this field.\n        interfaceUsageCount[possibleInterface.name] = (interfaceUsageCount[possibleInterface.name] || 0) + 1;\n      });\n    });\n\n    // Suggest interface types based on how common they are.\n    var suggestedInterfaceTypes = Object.keys(interfaceUsageCount).sort(function (a, b) {\n      return interfaceUsageCount[b] - interfaceUsageCount[a];\n    });\n\n    // Suggest both interface and object types.\n    return suggestedInterfaceTypes.concat(suggestedObjectTypes);\n  }\n\n  // Otherwise, must be an Object type, which does not have possible fields.\n  return [];\n}\n\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\nfunction getSuggestedFieldNames(schema, type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    var possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  }\n  // Otherwise, must be a Union type, which does not define fields.\n  return [];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/FieldsOnCorrectType.mjs\n// module id = 1892\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function duplicateFragmentNameMessage(fragName) {\n  return 'There can be only one fragment named \"' + fragName + '\".';\n}\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n */\nexport function UniqueFragmentNames(context) {\n  var knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var fragmentName = node.name.value;\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(duplicateFragmentNameMessage(fragmentName), [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueFragmentNames.mjs\n// module id = 1893\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function unknownFragmentMessage(fragName) {\n  return 'Unknown fragment \"' + fragName + '\".';\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nexport function KnownFragmentNames(context) {\n  return {\n    FragmentSpread: function FragmentSpread(node) {\n      var fragmentName = node.name.value;\n      var fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new GraphQLError(unknownFragmentMessage(fragmentName), [node.name]));\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/KnownFragmentNames.mjs\n// module id = 1894\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function unusedFragMessage(fragName) {\n  return 'Fragment \"' + fragName + '\" is never used.';\n}\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n */\nexport function NoUnusedFragments(context) {\n  var operationDefs = [];\n  var fragmentDefs = [];\n\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave: function leave() {\n        var fragmentNameUsed = Object.create(null);\n        operationDefs.forEach(function (operation) {\n          context.getRecursivelyReferencedFragments(operation).forEach(function (fragment) {\n            fragmentNameUsed[fragment.name.value] = true;\n          });\n        });\n\n        fragmentDefs.forEach(function (fragmentDef) {\n          var fragName = fragmentDef.name.value;\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(new GraphQLError(unusedFragMessage(fragName), [fragmentDef]));\n          }\n        });\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/NoUnusedFragments.mjs\n// module id = 1895\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { doTypesOverlap } from '../../utilities/typeComparators';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport { isCompositeType } from '../../type/definition';\n\n\nexport function typeIncompatibleSpreadMessage(fragName, parentType, fragType) {\n  return 'Fragment \"' + fragName + '\" cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\nexport function typeIncompatibleAnonSpreadMessage(parentType, fragType) {\n  return 'Fragment cannot be spread here as objects of ' + ('type \"' + String(parentType) + '\" can never be of type \"' + String(fragType) + '\".');\n}\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreads(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var fragType = context.getType();\n      var parentType = context.getParentType();\n      if (isCompositeType(fragType) && isCompositeType(parentType) && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        context.reportError(new GraphQLError(typeIncompatibleAnonSpreadMessage(parentType, fragType), [node]));\n      }\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var fragName = node.name.value;\n      var fragType = getFragmentType(context, fragName);\n      var parentType = context.getParentType();\n      if (fragType && parentType && !doTypesOverlap(context.getSchema(), fragType, parentType)) {\n        context.reportError(new GraphQLError(typeIncompatibleSpreadMessage(fragName, parentType, fragType), [node]));\n      }\n    }\n  };\n}\n\nfunction getFragmentType(context, name) {\n  var frag = context.getFragment(name);\n  if (frag) {\n    var type = typeFromAST(context.getSchema(), frag.typeCondition);\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/PossibleFragmentSpreads.mjs\n// module id = 1896\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function cycleErrorMessage(fragName, spreadNames) {\n  var via = spreadNames.length ? ' via ' + spreadNames.join(', ') : '';\n  return 'Cannot spread fragment \"' + fragName + '\" within itself' + via + '.';\n}\n\nexport function NoFragmentCycles(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  var visitedFrags = Object.create(null);\n\n  // Array of AST nodes used to produce meaningful errors\n  var spreadPath = [];\n\n  // Position in the spread path\n  var spreadPathIndexByName = Object.create(null);\n\n  return {\n    OperationDefinition: function OperationDefinition() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      if (!visitedFrags[node.name.value]) {\n        detectCycleRecursive(node);\n      }\n      return false;\n    }\n  };\n\n  // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n  function detectCycleRecursive(fragment) {\n    var fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n\n    var spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (var i = 0; i < spreadNodes.length; i++) {\n      var spreadNode = spreadNodes[i];\n      var spreadName = spreadNode.name.value;\n      var cycleIndex = spreadPathIndexByName[spreadName];\n\n      if (cycleIndex === undefined) {\n        spreadPath.push(spreadNode);\n        if (!visitedFrags[spreadName]) {\n          var spreadFragment = context.getFragment(spreadName);\n          if (spreadFragment) {\n            detectCycleRecursive(spreadFragment);\n          }\n        }\n        spreadPath.pop();\n      } else {\n        var cyclePath = spreadPath.slice(cycleIndex);\n        context.reportError(new GraphQLError(cycleErrorMessage(spreadName, cyclePath.map(function (s) {\n          return s.name.value;\n        })), cyclePath.concat(spreadNode)));\n      }\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/NoFragmentCycles.mjs\n// module id = 1897\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLError } from '../../error';\n\n\nexport function duplicateVariableMessage(variableName) {\n  return 'There can be only one variable named \"' + variableName + '\".';\n}\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNames(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(duplicateVariableMessage(variableName), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueVariableNames.mjs\n// module id = 1898\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function undefinedVarMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is not defined by operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is not defined.';\n}\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\nexport function NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          var varName = node.name.value;\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(new GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/NoUndefinedVariables.mjs\n// module id = 1899\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function unusedVariableMessage(varName, opName) {\n  return opName ? 'Variable \"$' + varName + '\" is never used in operation \"' + opName + '\".' : 'Variable \"$' + varName + '\" is never used.';\n}\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n */\nexport function NoUnusedVariables(context) {\n  var variableDefs = [];\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        var opName = operation.name ? operation.name.value : null;\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node;\n\n          variableNameUsed[node.name.value] = true;\n        });\n\n        variableDefs.forEach(function (variableDef) {\n          var variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(unusedVariableMessage(variableName, opName), [variableDef]));\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/NoUnusedVariables.mjs\n// module id = 1900\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport find from '../../jsutils/find';\nimport { Kind } from '../../language/kinds';\nimport { DirectiveLocation } from '../../language/directiveLocation';\n\n\nexport function unknownDirectiveMessage(directiveName) {\n  return 'Unknown directive \"' + directiveName + '\".';\n}\n\nexport function misplacedDirectiveMessage(directiveName, location) {\n  return 'Directive \"' + directiveName + '\" may not be used on ' + location + '.';\n}\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n */\nexport function KnownDirectives(context) {\n  return {\n    Directive: function Directive(node, key, parent, path, ancestors) {\n      var directiveDef = find(context.getSchema().getDirectives(), function (def) {\n        return def.name === node.name.value;\n      });\n      if (!directiveDef) {\n        context.reportError(new GraphQLError(unknownDirectiveMessage(node.name.value), [node]));\n        return;\n      }\n      var candidateLocation = getDirectiveLocationForASTPath(ancestors);\n      if (candidateLocation && directiveDef.locations.indexOf(candidateLocation) === -1) {\n        context.reportError(new GraphQLError(misplacedDirectiveMessage(node.name.value, candidateLocation), [node]));\n      }\n    }\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  var appliedTo = ancestors[ancestors.length - 1];\n  if (!Array.isArray(appliedTo)) {\n    switch (appliedTo.kind) {\n      case Kind.OPERATION_DEFINITION:\n        switch (appliedTo.operation) {\n          case 'query':\n            return DirectiveLocation.QUERY;\n          case 'mutation':\n            return DirectiveLocation.MUTATION;\n          case 'subscription':\n            return DirectiveLocation.SUBSCRIPTION;\n        }\n        break;\n      case Kind.FIELD:\n        return DirectiveLocation.FIELD;\n      case Kind.FRAGMENT_SPREAD:\n        return DirectiveLocation.FRAGMENT_SPREAD;\n      case Kind.INLINE_FRAGMENT:\n        return DirectiveLocation.INLINE_FRAGMENT;\n      case Kind.FRAGMENT_DEFINITION:\n        return DirectiveLocation.FRAGMENT_DEFINITION;\n      case Kind.SCHEMA_DEFINITION:\n        return DirectiveLocation.SCHEMA;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_EXTENSION:\n        return DirectiveLocation.SCALAR;\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.OBJECT;\n      case Kind.FIELD_DEFINITION:\n        return DirectiveLocation.FIELD_DEFINITION;\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        return DirectiveLocation.INTERFACE;\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_EXTENSION:\n        return DirectiveLocation.UNION;\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_EXTENSION:\n        return DirectiveLocation.ENUM;\n      case Kind.ENUM_VALUE_DEFINITION:\n        return DirectiveLocation.ENUM_VALUE;\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        return DirectiveLocation.INPUT_OBJECT;\n      case Kind.INPUT_VALUE_DEFINITION:\n        var parentNode = ancestors[ancestors.length - 3];\n        return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION ? DirectiveLocation.INPUT_FIELD_DEFINITION : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/KnownDirectives.mjs\n// module id = 1901\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function duplicateDirectiveMessage(directiveName) {\n  return 'The directive \"' + directiveName + '\" can only be used once at ' + 'this location.';\n}\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all directives at a given location\n * are uniquely named.\n */\nexport function UniqueDirectivesPerLocation(context) {\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter: function enter(node) {\n      // Flow can't refine that node.directives will only contain directives,\n      var directives = node.directives;\n      if (directives) {\n        var knownDirectives = Object.create(null);\n        directives.forEach(function (directive) {\n          var directiveName = directive.name.value;\n          if (knownDirectives[directiveName]) {\n            context.reportError(new GraphQLError(duplicateDirectiveMessage(directiveName), [knownDirectives[directiveName], directive]));\n          } else {\n            knownDirectives[directiveName] = directive;\n          }\n        });\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueDirectivesPerLocation.mjs\n// module id = 1902\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport suggestionList from '../../jsutils/suggestionList';\nimport quotedOrList from '../../jsutils/quotedOrList';\nimport { Kind } from '../../language/kinds';\n\nexport function unknownArgMessage(argName, fieldName, typeName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on field \"' + fieldName + '\" of ' + ('type \"' + typeName + '\".');\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + quotedOrList(suggestedArgs) + '?';\n  }\n  return message;\n}\n\nexport function unknownDirectiveArgMessage(argName, directiveName, suggestedArgs) {\n  var message = 'Unknown argument \"' + argName + '\" on directive \"@' + directiveName + '\".';\n  if (suggestedArgs.length) {\n    message += ' Did you mean ' + quotedOrList(suggestedArgs) + '?';\n  }\n  return message;\n}\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n */\nexport function KnownArgumentNames(context) {\n  return {\n    Argument: function Argument(node, key, parent, path, ancestors) {\n      var argDef = context.getArgument();\n      if (!argDef) {\n        var argumentOf = ancestors[ancestors.length - 1];\n        if (argumentOf.kind === Kind.FIELD) {\n          var fieldDef = context.getFieldDef();\n          var parentType = context.getParentType();\n          if (fieldDef && parentType) {\n            context.reportError(new GraphQLError(unknownArgMessage(node.name.value, fieldDef.name, parentType.name, suggestionList(node.name.value, fieldDef.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        } else if (argumentOf.kind === Kind.DIRECTIVE) {\n          var directive = context.getDirective();\n          if (directive) {\n            context.reportError(new GraphQLError(unknownDirectiveArgMessage(node.name.value, directive.name, suggestionList(node.name.value, directive.args.map(function (arg) {\n              return arg.name;\n            }))), [node]));\n          }\n        }\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/KnownArgumentNames.mjs\n// module id = 1903\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function duplicateArgMessage(argName) {\n  return 'There can be only one argument named \"' + argName + '\".';\n}\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n */\nexport function UniqueArgumentNames(context) {\n  var knownArgNames = Object.create(null);\n  return {\n    Field: function Field() {\n      knownArgNames = Object.create(null);\n    },\n    Directive: function Directive() {\n      knownArgNames = Object.create(null);\n    },\n    Argument: function Argument(node) {\n      var argName = node.name.value;\n      if (knownArgNames[argName]) {\n        context.reportError(new GraphQLError(duplicateArgMessage(argName), [knownArgNames[argName], node.name]));\n      } else {\n        knownArgNames[argName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueArgumentNames.mjs\n// module id = 1904\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport keyMap from '../../jsutils/keyMap';\nimport { isNonNullType } from '../../type/definition';\n\n\nexport function missingFieldArgMessage(fieldName, argName, type) {\n  return 'Field \"' + fieldName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\nexport function missingDirectiveArgMessage(directiveName, argName, type) {\n  return 'Directive \"@' + directiveName + '\" argument \"' + argName + '\" of type ' + ('\"' + String(type) + '\" is required but not provided.');\n}\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null) field arguments\n * have been provided.\n */\nexport function ProvidedNonNullArguments(context) {\n  return {\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var fieldDef = context.getFieldDef();\n        if (!fieldDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        fieldDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && isNonNullType(argDef.type)) {\n            context.reportError(new GraphQLError(missingFieldArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    },\n\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave: function leave(node) {\n        var directiveDef = context.getDirective();\n        if (!directiveDef) {\n          return false;\n        }\n        var argNodes = node.arguments || [];\n\n        var argNodeMap = keyMap(argNodes, function (arg) {\n          return arg.name.value;\n        });\n        directiveDef.args.forEach(function (argDef) {\n          var argNode = argNodeMap[argDef.name];\n          if (!argNode && isNonNullType(argDef.type)) {\n            context.reportError(new GraphQLError(missingDirectiveArgMessage(node.name.value, argDef.name, argDef.type), [node]));\n          }\n        });\n      }\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/ProvidedNonNullArguments.mjs\n// module id = 1905\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { isNonNullType } from '../../type/definition';\n\n\nexport function defaultForRequiredVarMessage(varName, type, guessType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(type) + '\" is required and ' + 'will not use the default value. ' + ('Perhaps you meant to use type \"' + String(guessType) + '\".');\n}\n\n/**\n * Variable's default value is allowed\n *\n * A GraphQL document is only valid if all variable default values are allowed\n * due to a variable not being required.\n */\nexport function VariablesDefaultValueAllowed(context) {\n  return {\n    VariableDefinition: function VariableDefinition(node) {\n      var name = node.variable.name.value;\n      var defaultValue = node.defaultValue;\n      var type = context.getInputType();\n      if (isNonNullType(type) && defaultValue) {\n        context.reportError(new GraphQLError(defaultForRequiredVarMessage(name, type, type.ofType), [defaultValue]));\n      }\n      return false; // Do not traverse further.\n    },\n\n    SelectionSet: function SelectionSet() {\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/VariablesDefaultValueAllowed.mjs\n// module id = 1906\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { GraphQLNonNull, isNonNullType } from '../../type/definition';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators';\nimport { typeFromAST } from '../../utilities/typeFromAST';\n\n\nexport function badVarPosMessage(varName, varType, expectedType) {\n  return 'Variable \"$' + varName + '\" of type \"' + String(varType) + '\" used in ' + ('position expecting type \"' + String(expectedType) + '\".');\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\nexport function VariablesInAllowedPosition(context) {\n  var varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        varDefMap = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(function (_ref) {\n          var node = _ref.node,\n              type = _ref.type;\n\n          var varName = node.name.value;\n          var varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            var schema = context.getSchema();\n            var varType = typeFromAST(schema, varDef.type);\n            if (varType && !isTypeSubTypeOf(schema, effectiveType(varType, varDef), type)) {\n              context.reportError(new GraphQLError(badVarPosMessage(varName, varType, type), [varDef, node]));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || isNonNullType(varType) ? varType : GraphQLNonNull(varType);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/VariablesInAllowedPosition.mjs\n// module id = 1907\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport find from '../../jsutils/find';\n\nimport { Kind } from '../../language/kinds';\nimport { print } from '../../language/printer';\n\nimport { getNamedType, isNonNullType, isLeafType, isObjectType, isListType, isInterfaceType } from '../../type/definition';\n\nimport { typeFromAST } from '../../utilities/typeFromAST';\n\nexport function fieldsConflictMessage(responseName, reason) {\n  return 'Fields \"' + responseName + '\" conflict because ' + reasonMessage(reason) + '. Use different aliases on the fields to fetch both if this was ' + 'intentional.';\n}\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason.map(function (_ref) {\n      var responseName = _ref[0],\n          subreason = _ref[1];\n      return 'subfields \"' + responseName + '\" conflict because ' + reasonMessage(subreason);\n    }).join(' and ');\n  }\n  return reason;\n}\n\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n */\nexport function OverlappingFieldsCanBeMerged(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  var comparedFragmentPairs = new PairSet();\n\n  // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n  var cachedFieldsAndFragmentNames = new Map();\n\n  return {\n    SelectionSet: function SelectionSet(selectionSet) {\n      var conflicts = findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, context.getParentType(), selectionSet);\n      conflicts.forEach(function (_ref2) {\n        var _ref2$ = _ref2[0],\n            responseName = _ref2$[0],\n            reason = _ref2$[1],\n            fields1 = _ref2[1],\n            fields2 = _ref2[2];\n        return context.reportError(new GraphQLError(fieldsConflictMessage(responseName, reason), fields1.concat(fields2)));\n      });\n    }\n  };\n}\n// Field name and reason.\n\n// Reason is a string, or a nested list of conflicts.\n\n// Tuple defining a field node in a context.\n\n// Map of array of those.\n\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentType, selectionSet) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet),\n      fieldMap = _getFieldsAndFragment[0],\n      fragmentNames = _getFieldsAndFragment[1];\n\n  // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n\n  collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap);\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    var comparedFragments = Object.create(null);\n    for (var i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, false, fieldMap, fragmentNames[i]);\n      // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n      for (var j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, fragmentNames[i], fragmentNames[j]);\n      }\n    }\n  }\n  return conflicts;\n}\n\n// Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\nfunction collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentName) {\n  // Memoize so a fragment is not compared for conflicts more than once.\n  if (comparedFragments[fragmentName]) {\n    return;\n  }\n  comparedFragments[fragmentName] = true;\n\n  var fragment = context.getFragment(fragmentName);\n  if (!fragment) {\n    return;\n  }\n\n  var _getReferencedFieldsA = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment),\n      fieldMap2 = _getReferencedFieldsA[0],\n      fragmentNames2 = _getReferencedFieldsA[1];\n\n  // Do not compare a fragment's fieldMap to itself.\n\n\n  if (fieldMap === fieldMap2) {\n    return;\n  }\n\n  // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fieldMap2);\n\n  // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n  for (var i = 0; i < fragmentNames2.length; i++) {\n    collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap, fragmentNames2[i]);\n  }\n}\n\n// Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\nfunction collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentName2) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  }\n\n  // Memoize so two fragments are not compared for conflicts more than once.\n  if (comparedFragmentPairs.has(fragmentName1, fragmentName2, areMutuallyExclusive)) {\n    return;\n  }\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n\n  var fragment1 = context.getFragment(fragmentName1);\n  var fragment2 = context.getFragment(fragmentName2);\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  var _getReferencedFieldsA2 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment1),\n      fieldMap1 = _getReferencedFieldsA2[0],\n      fragmentNames1 = _getReferencedFieldsA2[1];\n\n  var _getReferencedFieldsA3 = getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment2),\n      fieldMap2 = _getReferencedFieldsA3[0],\n      fragmentNames2 = _getReferencedFieldsA3[1];\n\n  // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n  for (var j = 0; j < fragmentNames2.length; j++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentName1, fragmentNames2[j]);\n  }\n\n  // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n  for (var i = 0; i < fragmentNames1.length; i++) {\n    collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[i], fragmentName2);\n  }\n}\n\n// Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\nfunction findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, parentType1, selectionSet1, parentType2, selectionSet2) {\n  var conflicts = [];\n\n  var _getFieldsAndFragment2 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType1, selectionSet1),\n      fieldMap1 = _getFieldsAndFragment2[0],\n      fragmentNames1 = _getFieldsAndFragment2[1];\n\n  var _getFieldsAndFragment3 = getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType2, selectionSet2),\n      fieldMap2 = _getFieldsAndFragment3[0],\n      fragmentNames2 = _getFieldsAndFragment3[1];\n\n  // (H) First, collect all conflicts between these two collections of field.\n\n\n  collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fieldMap2);\n\n  // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n  if (fragmentNames2.length !== 0) {\n    var comparedFragments = Object.create(null);\n    for (var j = 0; j < fragmentNames2.length; j++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap1, fragmentNames2[j]);\n    }\n  }\n\n  // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n  if (fragmentNames1.length !== 0) {\n    var _comparedFragments = Object.create(null);\n    for (var i = 0; i < fragmentNames1.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(context, conflicts, cachedFieldsAndFragmentNames, _comparedFragments, comparedFragmentPairs, areMutuallyExclusive, fieldMap2, fragmentNames1[i]);\n    }\n  }\n\n  // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n  for (var _i = 0; _i < fragmentNames1.length; _i++) {\n    for (var _j = 0; _j < fragmentNames2.length; _j++) {\n      collectConflictsBetweenFragments(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, fragmentNames1[_i], fragmentNames2[_j]);\n    }\n  }\n  return conflicts;\n}\n\n// Collect all Conflicts \"within\" one collection of fields.\nfunction collectConflictsWithin(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, fieldMap) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  Object.keys(fieldMap).forEach(function (responseName) {\n    var fields = fieldMap[responseName];\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (var i = 0; i < fields.length; i++) {\n        for (var j = i + 1; j < fields.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, false, // within one collection is never mutually exclusive\n          responseName, fields[i], fields[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\nfunction collectConflictsBetween(context, conflicts, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, fieldMap1, fieldMap2) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  Object.keys(fieldMap1).forEach(function (responseName) {\n    var fields2 = fieldMap2[responseName];\n    if (fields2) {\n      var fields1 = fieldMap1[responseName];\n      for (var i = 0; i < fields1.length; i++) {\n        for (var j = 0; j < fields2.length; j++) {\n          var conflict = findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, fields1[i], fields2[j]);\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  });\n}\n\n// Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\nfunction findConflict(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, parentFieldsAreMutuallyExclusive, responseName, field1, field2) {\n  var parentType1 = field1[0],\n      node1 = field1[1],\n      def1 = field1[2];\n  var parentType2 = field2[0],\n      node2 = field2[1],\n      def2 = field2[2];\n\n  // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  var areMutuallyExclusive = parentFieldsAreMutuallyExclusive || parentType1 !== parentType2 && isObjectType(parentType1) && isObjectType(parentType2);\n\n  // The return type for each field.\n  var type1 = def1 && def1.type;\n  var type2 = def2 && def2.type;\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    var name1 = node1.name.value;\n    var name2 = node2.name.value;\n    if (name1 !== name2) {\n      return [[responseName, name1 + ' and ' + name2 + ' are different fields'], [node1], [node2]];\n    }\n\n    // Two field calls must have the same arguments.\n    if (!sameArguments(node1.arguments || [], node2.arguments || [])) {\n      return [[responseName, 'they have differing arguments'], [node1], [node2]];\n    }\n  }\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [[responseName, 'they return conflicting types ' + String(type1) + ' and ' + String(type2)], [node1], [node2]];\n  }\n\n  // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n  var selectionSet1 = node1.selectionSet;\n  var selectionSet2 = node2.selectionSet;\n  if (selectionSet1 && selectionSet2) {\n    var conflicts = findConflictsBetweenSubSelectionSets(context, cachedFieldsAndFragmentNames, comparedFragmentPairs, areMutuallyExclusive, getNamedType(type1), selectionSet1, getNamedType(type2), selectionSet2);\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(arguments1, arguments2) {\n  if (arguments1.length !== arguments2.length) {\n    return false;\n  }\n  return arguments1.every(function (argument1) {\n    var argument2 = find(arguments2, function (argument) {\n      return argument.name.value === argument1.name.value;\n    });\n    if (!argument2) {\n      return false;\n    }\n    return sameValue(argument1.value, argument2.value);\n  });\n}\n\nfunction sameValue(value1, value2) {\n  return !value1 && !value2 || print(value1) === print(value2);\n}\n\n// Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (isListType(type2)) {\n    return true;\n  }\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2) ? doTypesConflict(type1.ofType, type2.ofType) : true;\n  }\n  if (isNonNullType(type2)) {\n    return true;\n  }\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n  return false;\n}\n\n// Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\nfunction getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, parentType, selectionSet) {\n  var cached = cachedFieldsAndFragmentNames.get(selectionSet);\n  if (!cached) {\n    var nodeAndDefs = Object.create(null);\n    var fragmentNames = Object.create(null);\n    _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames);\n    cached = [nodeAndDefs, Object.keys(fragmentNames)];\n    cachedFieldsAndFragmentNames.set(selectionSet, cached);\n  }\n  return cached;\n}\n\n// Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\nfunction getReferencedFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragment) {\n  // Short-circuit building a type from the node if possible.\n  var cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n  if (cached) {\n    return cached;\n  }\n\n  var fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(context, cachedFieldsAndFragmentNames, fragmentType, fragment.selectionSet);\n}\n\nfunction _collectFieldsAndFragmentNames(context, parentType, selectionSet, nodeAndDefs, fragmentNames) {\n  for (var i = 0; i < selectionSet.selections.length; i++) {\n    var selection = selectionSet.selections[i];\n    switch (selection.kind) {\n      case Kind.FIELD:\n        var fieldName = selection.name.value;\n        var fieldDef = void 0;\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n        var responseName = selection.alias ? selection.alias.value : fieldName;\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n      case Kind.INLINE_FRAGMENT:\n        var typeCondition = selection.typeCondition;\n        var inlineFragmentType = typeCondition ? typeFromAST(context.getSchema(), typeCondition) : parentType;\n        _collectFieldsAndFragmentNames(context, inlineFragmentType, selection.selectionSet, nodeAndDefs, fragmentNames);\n        break;\n    }\n  }\n}\n\n// Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [[responseName, conflicts.map(function (_ref3) {\n      var reason = _ref3[0];\n      return reason;\n    })], conflicts.reduce(function (allFields, _ref4) {\n      var fields1 = _ref4[1];\n      return allFields.concat(fields1);\n    }, [node1]), conflicts.reduce(function (allFields, _ref5) {\n      var fields2 = _ref5[2];\n      return allFields.concat(fields2);\n    }, [node2])];\n  }\n}\n\n/**\n * A way to keep track of pairs of things when the ordering of the pair does\n * not matter. We do this by maintaining a sort of double adjacency sets.\n */\n\nvar PairSet = function () {\n  function PairSet() {\n    _classCallCheck(this, PairSet);\n\n    this._data = Object.create(null);\n  }\n\n  PairSet.prototype.has = function has(a, b, areMutuallyExclusive) {\n    var first = this._data[a];\n    var result = first && first[b];\n    if (result === undefined) {\n      return false;\n    }\n    // areMutuallyExclusive being false is a superset of being true,\n    // hence if we want to know if this PairSet \"has\" these two with no\n    // exclusivity, we have to ensure it was added as such.\n    if (areMutuallyExclusive === false) {\n      return result === false;\n    }\n    return true;\n  };\n\n  PairSet.prototype.add = function add(a, b, areMutuallyExclusive) {\n    _pairSetAdd(this._data, a, b, areMutuallyExclusive);\n    _pairSetAdd(this._data, b, a, areMutuallyExclusive);\n  };\n\n  return PairSet;\n}();\n\nfunction _pairSetAdd(data, a, b, areMutuallyExclusive) {\n  var map = data[a];\n  if (!map) {\n    map = Object.create(null);\n    data[a] = map;\n  }\n  map[b] = areMutuallyExclusive;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/OverlappingFieldsCanBeMerged.mjs\n// module id = 1908\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nexport function duplicateInputFieldMessage(fieldName) {\n  return 'There can be only one input field named \"' + fieldName + '\".';\n}\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n */\nexport function UniqueInputFieldNames(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(duplicateInputFieldMessage(fieldName), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/UniqueInputFieldNames.mjs\n// module id = 1909\n// module chunks = 0","\n\n// eslint-disable-next-line no-redeclare\nexport default function isPromise(value) {\n  return Boolean(value && typeof value.then === 'function');\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/isPromise.mjs\n// module id = 1910\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport function getIntrospectionQuery(options) {\n  var descriptions = !(options && options.descriptions === false);\n  return '\\n    query IntrospectionQuery {\\n      __schema {\\n        queryType { name }\\n        mutationType { name }\\n        subscriptionType { name }\\n        types {\\n          ...FullType\\n        }\\n        directives {\\n          name\\n          ' + (descriptions ? 'description' : '') + '\\n          locations\\n          args {\\n            ...InputValue\\n          }\\n        }\\n      }\\n    }\\n\\n    fragment FullType on __Type {\\n      kind\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      fields(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        args {\\n          ...InputValue\\n        }\\n        type {\\n          ...TypeRef\\n        }\\n        isDeprecated\\n        deprecationReason\\n      }\\n      inputFields {\\n        ...InputValue\\n      }\\n      interfaces {\\n        ...TypeRef\\n      }\\n      enumValues(includeDeprecated: true) {\\n        name\\n        ' + (descriptions ? 'description' : '') + '\\n        isDeprecated\\n        deprecationReason\\n      }\\n      possibleTypes {\\n        ...TypeRef\\n      }\\n    }\\n\\n    fragment InputValue on __InputValue {\\n      name\\n      ' + (descriptions ? 'description' : '') + '\\n      type { ...TypeRef }\\n      defaultValue\\n    }\\n\\n    fragment TypeRef on __Type {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n                ofType {\\n                  kind\\n                  name\\n                  ofType {\\n                    kind\\n                    name\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  ';\n}\n\nexport var introspectionQuery = getIntrospectionQuery();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/introspectionQuery.mjs\n// module id = 1911\n// module chunks = 0","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport keyMap from '../jsutils/keyMap';\nimport keyValMap from '../jsutils/keyValMap';\n\nimport { valueFromAST } from './valueFromAST';\nimport blockStringValue from '../language/blockStringValue';\nimport { TokenKind } from '../language/lexer';\nimport { parse } from '../language/parser';\n\nimport { getDirectiveValues } from '../execution/values';\nimport { Kind } from '../language/kinds';\n\nimport { assertNullableType, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull } from '../type/definition';\n\nimport { GraphQLDirective, GraphQLSkipDirective, GraphQLIncludeDirective, GraphQLDeprecatedDirective } from '../type/directives';\n\nimport { introspectionTypes } from '../type/introspection';\n\nimport { specifiedScalarTypes } from '../type/scalars';\n\nimport { GraphQLSchema } from '../type/schema';\n\n\nfunction buildWrappedType(innerType, inputTypeNode) {\n  if (inputTypeNode.kind === Kind.LIST_TYPE) {\n    return GraphQLList(buildWrappedType(innerType, inputTypeNode.type));\n  }\n  if (inputTypeNode.kind === Kind.NON_NULL_TYPE) {\n    var wrappedType = buildWrappedType(innerType, inputTypeNode.type);\n    return GraphQLNonNull(assertNullableType(wrappedType));\n  }\n  return innerType;\n}\n\nfunction getNamedTypeNode(typeNode) {\n  var namedType = typeNode;\n  while (namedType.kind === Kind.LIST_TYPE || namedType.kind === Kind.NON_NULL_TYPE) {\n    namedType = namedType.type;\n  }\n  return namedType;\n}\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query\n * and Mutation.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function buildASTSchema(ast, options) {\n  if (!ast || ast.kind !== Kind.DOCUMENT) {\n    throw new Error('Must provide a document ast.');\n  }\n\n  var schemaDef = void 0;\n\n  var typeDefs = [];\n  var nodeMap = Object.create(null);\n  var directiveDefs = [];\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var d = ast.definitions[i];\n    switch (d.kind) {\n      case Kind.SCHEMA_DEFINITION:\n        if (schemaDef) {\n          throw new Error('Must provide only one schema definition.');\n        }\n        schemaDef = d;\n        break;\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        var typeName = d.name.value;\n        if (nodeMap[typeName]) {\n          throw new Error('Type \"' + typeName + '\" was defined more than once.');\n        }\n        typeDefs.push(d);\n        nodeMap[typeName] = d;\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        directiveDefs.push(d);\n        break;\n    }\n  }\n\n  var operationTypes = schemaDef ? getOperationTypes(schemaDef) : {\n    query: nodeMap.Query,\n    mutation: nodeMap.Mutation,\n    subscription: nodeMap.Subscription\n  };\n\n  var definitionBuilder = new ASTDefinitionBuilder(nodeMap, options, function (typeRef) {\n    throw new Error('Type \"' + typeRef.name.value + '\" not found in document.');\n  });\n\n  var types = definitionBuilder.buildTypes(typeDefs);\n  var directives = directiveDefs.map(function (def) {\n    return definitionBuilder.buildDirective(def);\n  });\n\n  // If specified directives were not explicitly declared, add them.\n  if (!directives.some(function (directive) {\n    return directive.name === 'skip';\n  })) {\n    directives.push(GraphQLSkipDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'include';\n  })) {\n    directives.push(GraphQLIncludeDirective);\n  }\n\n  if (!directives.some(function (directive) {\n    return directive.name === 'deprecated';\n  })) {\n    directives.push(GraphQLDeprecatedDirective);\n  }\n\n  // Note: While this could make early assertions to get the correctly\n  // typed values below, that would throw immediately while type system\n  // validation with validateSchema() will produce more actionable results.\n  return new GraphQLSchema({\n    query: operationTypes.query ? definitionBuilder.buildType(operationTypes.query) : null,\n    mutation: operationTypes.mutation ? definitionBuilder.buildType(operationTypes.mutation) : null,\n    subscription: operationTypes.subscription ? definitionBuilder.buildType(operationTypes.subscription) : null,\n    types: types,\n    directives: directives,\n    astNode: schemaDef,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  });\n\n  function getOperationTypes(schema) {\n    var opTypes = {};\n    schema.operationTypes.forEach(function (operationType) {\n      var typeName = operationType.type.name.value;\n      var operation = operationType.operation;\n      if (opTypes[operation]) {\n        throw new Error('Must provide only one ' + operation + ' type in schema.');\n      }\n      if (!nodeMap[typeName]) {\n        throw new Error('Specified ' + operation + ' type \"' + typeName + '\" not found in document.');\n      }\n      opTypes[operation] = operationType.type;\n    });\n    return opTypes;\n  }\n}\n\nexport var ASTDefinitionBuilder = function () {\n  function ASTDefinitionBuilder(typeDefinitionsMap, options, resolveType) {\n    _classCallCheck(this, ASTDefinitionBuilder);\n\n    this._typeDefinitionsMap = typeDefinitionsMap;\n    this._options = options;\n    this._resolveType = resolveType;\n    // Initialize to the GraphQL built in scalars and introspection types.\n    this._cache = keyMap(specifiedScalarTypes.concat(introspectionTypes), function (type) {\n      return type.name;\n    });\n  }\n\n  ASTDefinitionBuilder.prototype.buildTypes = function buildTypes(nodes) {\n    var _this = this;\n\n    return nodes.map(function (node) {\n      return _this.buildType(node);\n    });\n  };\n\n  ASTDefinitionBuilder.prototype.buildType = function buildType(node) {\n    var typeName = node.name.value;\n    if (!this._cache[typeName]) {\n      if (node.kind === Kind.NAMED_TYPE) {\n        var defNode = this._typeDefinitionsMap[typeName];\n        this._cache[typeName] = defNode ? this._makeSchemaDef(defNode) : this._resolveType(node);\n      } else {\n        this._cache[typeName] = this._makeSchemaDef(node);\n      }\n    }\n    return this._cache[typeName];\n  };\n\n  ASTDefinitionBuilder.prototype._buildWrappedType = function _buildWrappedType(typeNode) {\n    var typeDef = this.buildType(getNamedTypeNode(typeNode));\n    return buildWrappedType(typeDef, typeNode);\n  };\n\n  ASTDefinitionBuilder.prototype.buildDirective = function buildDirective(directiveNode) {\n    return new GraphQLDirective({\n      name: directiveNode.name.value,\n      description: getDescription(directiveNode, this._options),\n      locations: directiveNode.locations.map(function (node) {\n        return node.value;\n      }),\n      args: directiveNode.arguments && this._makeInputValues(directiveNode.arguments),\n      astNode: directiveNode\n    });\n  };\n\n  ASTDefinitionBuilder.prototype.buildField = function buildField(field) {\n    return {\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      type: this._buildWrappedType(field.type),\n      description: getDescription(field, this._options),\n      args: field.arguments && this._makeInputValues(field.arguments),\n      deprecationReason: getDeprecationReason(field),\n      astNode: field\n    };\n  };\n\n  ASTDefinitionBuilder.prototype._makeSchemaDef = function _makeSchemaDef(def) {\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n        return this._makeTypeDef(def);\n      case Kind.INTERFACE_TYPE_DEFINITION:\n        return this._makeInterfaceDef(def);\n      case Kind.ENUM_TYPE_DEFINITION:\n        return this._makeEnumDef(def);\n      case Kind.UNION_TYPE_DEFINITION:\n        return this._makeUnionDef(def);\n      case Kind.SCALAR_TYPE_DEFINITION:\n        return this._makeScalarDef(def);\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        return this._makeInputObjectDef(def);\n      default:\n        throw new Error('Type kind \"' + def.kind + '\" not supported.');\n    }\n  };\n\n  ASTDefinitionBuilder.prototype._makeTypeDef = function _makeTypeDef(def) {\n    var _this2 = this;\n\n    var typeName = def.name.value;\n    var interfaces = def.interfaces;\n    return new GraphQLObjectType({\n      name: typeName,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return _this2._makeFieldDefMap(def);\n      },\n      // Note: While this could make early assertions to get the correctly\n      // typed values, that would throw immediately while type system\n      // validation with validateSchema() will produce more actionable results.\n      interfaces: interfaces ? function () {\n        return _this2.buildTypes(interfaces);\n      } : [],\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeFieldDefMap = function _makeFieldDefMap(def) {\n    var _this3 = this;\n\n    return def.fields ? keyValMap(def.fields, function (field) {\n      return field.name.value;\n    }, function (field) {\n      return _this3.buildField(field);\n    }) : {};\n  };\n\n  ASTDefinitionBuilder.prototype._makeInputValues = function _makeInputValues(values) {\n    var _this4 = this;\n\n    return keyValMap(values, function (value) {\n      return value.name.value;\n    }, function (value) {\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      var type = _this4._buildWrappedType(value.type);\n      return {\n        type: type,\n        description: getDescription(value, _this4._options),\n        defaultValue: valueFromAST(value.defaultValue, type),\n        astNode: value\n      };\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeInterfaceDef = function _makeInterfaceDef(def) {\n    var _this5 = this;\n\n    return new GraphQLInterfaceType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return _this5._makeFieldDefMap(def);\n      },\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeEnumDef = function _makeEnumDef(def) {\n    var _this6 = this;\n\n    return new GraphQLEnumType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      values: def.values ? keyValMap(def.values, function (enumValue) {\n        return enumValue.name.value;\n      }, function (enumValue) {\n        return {\n          description: getDescription(enumValue, _this6._options),\n          deprecationReason: getDeprecationReason(enumValue),\n          astNode: enumValue\n        };\n      }) : {},\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeUnionDef = function _makeUnionDef(def) {\n    return new GraphQLUnionType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      // Note: While this could make assertions to get the correctly typed\n      // values below, that would throw immediately while type system\n      // validation with validateSchema() will produce more actionable results.\n      types: def.types ? this.buildTypes(def.types) : [],\n      astNode: def\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeScalarDef = function _makeScalarDef(def) {\n    return new GraphQLScalarType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      astNode: def,\n      serialize: function serialize(value) {\n        return value;\n      }\n    });\n  };\n\n  ASTDefinitionBuilder.prototype._makeInputObjectDef = function _makeInputObjectDef(def) {\n    var _this7 = this;\n\n    return new GraphQLInputObjectType({\n      name: def.name.value,\n      description: getDescription(def, this._options),\n      fields: function fields() {\n        return def.fields ? _this7._makeInputValues(def.fields) : {};\n      },\n      astNode: def\n    });\n  };\n\n  return ASTDefinitionBuilder;\n}();\n\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\nfunction getDeprecationReason(node) {\n  var deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node);\n  return deprecated && deprecated.reason;\n}\n\n/**\n * Given an ast node, returns its string description.\n *\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function getDescription(node, options) {\n  if (node.description) {\n    return node.description.value;\n  }\n  if (options && options.commentDescriptions) {\n    var rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n      return blockStringValue('\\n' + rawValue);\n    }\n  }\n}\n\nfunction getLeadingCommentBlock(node) {\n  var loc = node.loc;\n  if (!loc) {\n    return;\n  }\n  var comments = [];\n  var token = loc.startToken.prev;\n  while (token && token.kind === TokenKind.COMMENT && token.next && token.prev && token.line + 1 === token.next.line && token.line !== token.prev.line) {\n    var value = String(token.value);\n    comments.push(value);\n    token = token.prev;\n  }\n  return comments.reverse().join('\\n');\n}\n\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\nexport function buildSchema(source, options) {\n  return buildASTSchema(parse(source, options), options);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/buildASTSchema.mjs\n// module id = 1912\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = require('graphql');\n\nvar isList = function isList(type) {\n    if (type.kind === _graphql.TypeKind.NON_NULL) {\n        return isList(type.ofType);\n    }\n\n    return type.kind === _graphql.TypeKind.LIST;\n};\n\nexports.default = isList;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/isList.js\n// module id = 1913\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _merge = require('lodash/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _raDataGraphql = require('ra-data-graphql');\n\nvar _raDataGraphql2 = _interopRequireDefault(_raDataGraphql);\n\nvar _reactAdmin = require('react-admin');\n\nvar _buildQuery = require('./buildQuery');\n\nvar _buildQuery2 = _interopRequireDefault(_buildQuery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n    buildQuery: _buildQuery2.default\n};\n\nexports.default = function (options) {\n    return (0, _raDataGraphql2.default)((0, _merge2.default)({}, defaultOptions, options)).then(function (defaultDataProvider) {\n        return function (fetchType, resource, params) {\n            // This provider does not support multiple deletions so instead we send multiple DELETE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === _reactAdmin.DELETE_MANY) {\n                var ids = params.ids,\n                    otherParams = (0, _objectWithoutProperties3.default)(params, ['ids']);\n\n                return Promise.all(params.ids.map(function (id) {\n                    return defaultDataProvider(_reactAdmin.DELETE, resource, (0, _extends3.default)({\n                        id: id\n                    }, otherParams));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _ref) {\n                        var data = _ref.data;\n                        return [].concat((0, _toConsumableArray3.default)(acc), [data.id]);\n                    }, []);\n\n                    return { data: data };\n                });\n            }\n            // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n            // This can be optimized using the apollo-link-batch-http link\n            if (fetchType === _reactAdmin.UPDATE_MANY) {\n                var _ids = params.ids,\n                    _otherParams = (0, _objectWithoutProperties3.default)(params, ['ids']);\n\n                return Promise.all(params.ids.map(function (id) {\n                    return defaultDataProvider(_reactAdmin.UPDATE, resource, (0, _extends3.default)({\n                        id: id\n                    }, _otherParams));\n                })).then(function (results) {\n                    var data = results.reduce(function (acc, _ref2) {\n                        var data = _ref2.data;\n                        return [].concat((0, _toConsumableArray3.default)(acc), [data.id]);\n                    }, []);\n\n                    return { data: data };\n                });\n            }\n\n            return defaultDataProvider(fetchType, resource, params);\n        };\n    });\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/index.js\n// module id = 1915\n// module chunks = 0","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word\n   * @param  {number}  count\n   * @param  {boolean} inclusive\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(analy|ba|diagno|parenthe|progno|synop|the|empha|cri)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'alcohol',\n    'ammo',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'manga',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transporation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/pluralize/pluralize.js\n// module id = 1916\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _apolloClient = require('apollo-client');\n\nvar _apolloClientPreset = require('apollo-client-preset');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (options) {\n    if (!options) {\n        return new _apolloClient.ApolloClient();\n    }\n\n    var cache = options.cache,\n        link = options.link,\n        uri = options.uri,\n        otherOptions = (0, _objectWithoutProperties3.default)(options, ['cache', 'link', 'uri']);\n\n    var finalLink = link;\n    var finalCache = cache;\n\n    if (!link && uri) {\n        finalLink = new _apolloClientPreset.HttpLink({ uri: uri });\n    }\n\n    if (!cache) {\n        finalCache = new _apolloClientPreset.InMemoryCache().restore({});\n    }\n\n    return new _apolloClient.ApolloClient((0, _extends3.default)({\n        link: finalLink,\n        cache: finalCache\n    }, otherOptions));\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/lib/buildApolloClient.js\n// module id = 1917\n// module chunks = 0","export { print as printAST } from 'graphql/language/printer';\nexport { ObservableQuery, } from './core/ObservableQuery';\nexport { NetworkStatus } from './core/networkStatus';\nexport * from './core/types';\nexport { ApolloError } from './errors/ApolloError';\nimport ApolloClient from './ApolloClient';\n// export the client as both default and named\nexport { ApolloClient };\nexport default ApolloClient;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/index.js\n// module id = 1918\n// module chunks = 0","import { argumentsObjectFromField } from './storeUtils';\nexport function getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nexport function shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    if (!selection.directives) {\n        return true;\n    }\n    var res = true;\n    selection.directives.forEach(function (directive) {\n        // TODO should move this validation to GraphQL validation once that's implemented.\n        if (directive.name.value !== 'skip' && directive.name.value !== 'include') {\n            // Just don't worry about directives we don't understand\n            return;\n        }\n        //evaluate the \"if\" argument and skip (i.e. return undefined) if it evaluates to true.\n        var directiveArguments = directive.arguments || [];\n        var directiveName = directive.name.value;\n        if (directiveArguments.length !== 1) {\n            throw new Error(\"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        }\n        var ifArgument = directiveArguments[0];\n        if (!ifArgument.name || ifArgument.name.value !== 'if') {\n            throw new Error(\"Invalid argument for the @\" + directiveName + \" directive.\");\n        }\n        var ifValue = directiveArguments[0].value;\n        var evaledValue = false;\n        if (!ifValue || ifValue.kind !== 'BooleanValue') {\n            // means it has to be a variable value if this is a valid @skip or @include directive\n            if (ifValue.kind !== 'Variable') {\n                throw new Error(\"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n            }\n            else {\n                evaledValue = variables[ifValue.name.value];\n                if (evaledValue === undefined) {\n                    throw new Error(\"Invalid variable referenced in @\" + directiveName + \" directive.\");\n                }\n            }\n        }\n        else {\n            evaledValue = ifValue.value;\n        }\n        if (directiveName === 'skip') {\n            evaledValue = !evaledValue;\n        }\n        if (!evaledValue) {\n            res = false;\n        }\n    });\n    return res;\n}\nexport function flattenSelections(selection) {\n    if (!selection.selectionSet ||\n        !(selection.selectionSet.selections.length > 0))\n        return [selection];\n    return [selection].concat(selection.selectionSet.selections\n        .map(function (selectionNode) {\n        return [selectionNode].concat(flattenSelections(selectionNode));\n    })\n        .reduce(function (selections, selected) { return selections.concat(selected); }, []));\n}\nexport function getDirectiveNames(doc) {\n    // operation => [names of directives];\n    var directiveNames = doc.definitions\n        .filter(function (definition) {\n        return definition.selectionSet && definition.selectionSet.selections;\n    })\n        // operation => [[Selection]]\n        .map(function (x) { return flattenSelections(x); })\n        // [[Selection]] => [Selection]\n        .reduce(function (selections, selected) { return selections.concat(selected); }, [])\n        // [Selection] => [Selection with Directives]\n        .filter(function (selection) {\n        return selection.directives && selection.directives.length > 0;\n    })\n        // [Selection with Directives] => [[Directives]]\n        .map(function (selection) { return selection.directives; })\n        // [[Directives]] => [Directives]\n        .reduce(function (directives, directive) { return directives.concat(directive); }, [])\n        // [Directives] => [Name]\n        .map(function (directive) { return directive.name.value; });\n    return directiveNames;\n}\nexport function hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\n//# sourceMappingURL=directives.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/directives.js\n// module id = 1919\n// module chunks = 0","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/fast-json-stable-stringify/index.js\n// module id = 1920\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more then one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    // Build an array of all our fragment definitions that will be used for\n    // validations. We also do some validations on the other definitions in the\n    // document while building this list.\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        // Throw an error if we encounter an operation definition because we will\n        // define our own operation definition later on.\n        if (definition.kind === 'OperationDefinition') {\n            throw new Error(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        // Add our definition to the fragments array if it is a fragment\n        // definition.\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    // If the user did not give us a fragment name then let us try to get a\n    // name from a single fragment in the definition.\n    if (typeof actualFragmentName === 'undefined') {\n        if (fragments.length !== 1) {\n            throw new Error(\"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        }\n        actualFragmentName = fragments[0].name.value;\n    }\n    // Generate a query document with an operation that simply spreads the\n    // fragment inside of it.\n    var query = __assign({}, document, { definitions: [\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ].concat(document.definitions) });\n    return query;\n}\n//# sourceMappingURL=fragments.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/fragments.js\n// module id = 1921\n// module chunks = 0","import { cloneDeep } from './util/cloneDeep';\nimport { checkDocument, getOperationDefinitionOrDie, getFragmentDefinitions, createFragmentMap, } from './getFromAST';\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isNotEmpty(op, fragments) {\n    // keep selections that are still valid\n    return (op.selectionSet.selections.filter(function (selectionSet) {\n        // anything that doesn't match the compound filter is okay\n        return !(selectionSet &&\n            // look into fragments to verify they should stay\n            selectionSet.kind === 'FragmentSpread' &&\n            // see if the fragment in the map is valid (recursively)\n            !isNotEmpty(fragments[selectionSet.name.value], fragments));\n    }).length > 0);\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            if (dir.name && dir.name === directive.name.value)\n                return true;\n            if (dir.test && dir.test(directive))\n                return true;\n            return false;\n        });\n    };\n}\nfunction addTypenameToSelectionSet(selectionSet, isRoot) {\n    if (isRoot === void 0) { isRoot = false; }\n    if (selectionSet.selections) {\n        if (!isRoot) {\n            var alreadyHasThisField = selectionSet.selections.some(function (selection) {\n                return (selection.kind === 'Field' &&\n                    selection.name.value === '__typename');\n            });\n            if (!alreadyHasThisField) {\n                selectionSet.selections.push(TYPENAME_FIELD);\n            }\n        }\n        selectionSet.selections.forEach(function (selection) {\n            // Must not add __typename if we're inside an introspection query\n            if (selection.kind === 'Field') {\n                if (selection.name.value.lastIndexOf('__', 0) !== 0 &&\n                    selection.selectionSet) {\n                    addTypenameToSelectionSet(selection.selectionSet);\n                }\n            }\n            else if (selection.kind === 'InlineFragment') {\n                if (selection.selectionSet) {\n                    addTypenameToSelectionSet(selection.selectionSet);\n                }\n            }\n        });\n    }\n}\nfunction removeDirectivesFromSelectionSet(directives, selectionSet) {\n    if (!selectionSet.selections)\n        return selectionSet;\n    // if any of the directives are set to remove this selectionSet, remove it\n    var agressiveRemove = directives.some(function (dir) { return dir.remove; });\n    selectionSet.selections = selectionSet.selections\n        .map(function (selection) {\n        if (selection.kind !== 'Field' ||\n            !selection ||\n            !selection.directives)\n            return selection;\n        var directiveMatcher = getDirectiveMatcher(directives);\n        var remove;\n        selection.directives = selection.directives.filter(function (directive) {\n            var shouldKeep = !directiveMatcher(directive);\n            if (!remove && !shouldKeep && agressiveRemove)\n                remove = true;\n            return shouldKeep;\n        });\n        return remove ? null : selection;\n    })\n        .filter(function (x) { return !!x; });\n    selectionSet.selections.forEach(function (selection) {\n        if ((selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n            selection.selectionSet) {\n            removeDirectivesFromSelectionSet(directives, selection.selectionSet);\n        }\n    });\n    return selectionSet;\n}\nexport function removeDirectivesFromDocument(directives, doc) {\n    var docClone = cloneDeep(doc);\n    docClone.definitions.forEach(function (definition) {\n        removeDirectivesFromSelectionSet(directives, definition.selectionSet);\n    });\n    var operation = getOperationDefinitionOrDie(docClone);\n    var fragments = createFragmentMap(getFragmentDefinitions(docClone));\n    return isNotEmpty(operation, fragments) ? docClone : null;\n}\nexport function addTypenameToDocument(doc) {\n    checkDocument(doc);\n    var docClone = cloneDeep(doc);\n    docClone.definitions.forEach(function (definition) {\n        var isRoot = definition.kind === 'OperationDefinition';\n        addTypenameToSelectionSet(definition.selectionSet, isRoot);\n    });\n    return docClone;\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                console.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n    checkDocument(doc);\n    return removeDirectivesFromDocument([connectionRemoveConfig], doc);\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!(selectionSet && selectionSet.selections)) {\n        return false;\n    }\n    var matchedSelections = selectionSet.selections.filter(function (selection) {\n        return hasDirectivesInSelection(directives, selection, nestedCheck);\n    });\n    return matchedSelections.length > 0;\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (selection.kind !== 'Field' || !selection) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    var directiveMatcher = getDirectiveMatcher(directives);\n    var matchedDirectives = selection.directives.filter(directiveMatcher);\n    return (matchedDirectives.length > 0 ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromSelectionSet(directives, selectionSet) {\n    selectionSet.selections = selectionSet.selections\n        .filter(function (selection) {\n        return hasDirectivesInSelection(directives, selection, true);\n    })\n        .map(function (selection) {\n        if (hasDirectivesInSelection(directives, selection, false)) {\n            return selection;\n        }\n        if ((selection.kind === 'Field' || selection.kind === 'InlineFragment') &&\n            selection.selectionSet) {\n            selection.selectionSet = getDirectivesFromSelectionSet(directives, selection.selectionSet);\n        }\n        return selection;\n    });\n    return selectionSet;\n}\nexport function getDirectivesFromDocument(directives, doc, includeAllFragments) {\n    if (includeAllFragments === void 0) { includeAllFragments = false; }\n    checkDocument(doc);\n    var docClone = cloneDeep(doc);\n    docClone.definitions = docClone.definitions.map(function (definition) {\n        if ((definition.kind === 'OperationDefinition' ||\n            (definition.kind === 'FragmentDefinition' && !includeAllFragments)) &&\n            definition.selectionSet) {\n            definition.selectionSet = getDirectivesFromSelectionSet(directives, definition.selectionSet);\n        }\n        return definition;\n    });\n    var operation = getOperationDefinitionOrDie(docClone);\n    var fragments = createFragmentMap(getFragmentDefinitions(docClone));\n    return isNotEmpty(operation, fragments) ? docClone : null;\n}\n//# sourceMappingURL=transform.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/transform.js\n// module id = 1922\n// module chunks = 0","export function tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nexport function graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n//# sourceMappingURL=errorHandling.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/errorHandling.js\n// module id = 1923\n// module chunks = 0","/**\n * Performs a deep equality check on two JavaScript values.\n */\nexport function isEqual(a, b) {\n    // If the two values are strictly equal, we are good.\n    if (a === b) {\n        return true;\n    }\n    // Dates are equivalent if their time values are equal.\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n    // If a and b are both objects, we will compare their properties. This will compare arrays as\n    // well.\n    if (a != null &&\n        typeof a === 'object' &&\n        b != null &&\n        typeof b === 'object') {\n        // Compare all of the keys in `a`. If one of the keys has a different value, or that key does\n        // not exist in `b` return false immediately.\n        for (var key in a) {\n            if (Object.prototype.hasOwnProperty.call(a, key)) {\n                if (!Object.prototype.hasOwnProperty.call(b, key)) {\n                    return false;\n                }\n                if (!isEqual(a[key], b[key])) {\n                    return false;\n                }\n            }\n        }\n        // Look through all the keys in `b`. If `b` has a key that `a` does not, return false.\n        for (var key in b) {\n            if (!Object.prototype.hasOwnProperty.call(a, key)) {\n                return false;\n            }\n        }\n        // If we made it this far the objects are equal!\n        return true;\n    }\n    // Otherwise the values are not equal.\n    return false;\n}\n//# sourceMappingURL=isEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/isEqual.js\n// module id = 1924\n// module chunks = 0","import { isDevelopment, isTest } from './environment';\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nexport function maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n        // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=maybeDeepFreeze.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/maybeDeepFreeze.js\n// module id = 1925\n// module chunks = 0","import { isProduction, isTest } from './environment';\nvar haveWarned = Object.create({});\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (isProduction()) {\n        return;\n    }\n    if (!haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        switch (type) {\n            case 'error':\n                console.error(msg);\n                break;\n            default:\n                console.warn(msg);\n        }\n    }\n}\n//# sourceMappingURL=warnOnce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-utilities/lib/util/warnOnce.js\n// module id = 1926\n// module chunks = 0","import Observable from 'zen-observable-ts';\nimport { validateOperation, isTerminating, LinkError, transformOperation, createOperation, } from './linkUtils';\nvar passthrough = function (op, forward) { return (forward ? forward(op) : Observable.of()); };\nvar toLink = function (handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n};\nexport var empty = function () {\n    return new ApolloLink(function (op, forward) { return Observable.of(); });\n};\nexport var from = function (links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n};\nexport var split = function (test, left, right) {\n    if (right === void 0) { right = new ApolloLink(passthrough); }\n    var leftLink = toLink(left);\n    var rightLink = toLink(right);\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n};\n// join two Links together\nexport var concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        console.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = /** @class */ (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        if (right === void 0) { right = new ApolloLink(passthrough); }\n        return this.concat(split(test, left, right));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw new Error('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nexport { ApolloLink };\nexport function execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n//# sourceMappingURL=link.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-link/lib/link.js\n// module id = 1928\n// module chunks = 0","module.exports = require('./lib/Observable.js').Observable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/zen-observable/index.js\n// module id = 1929\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// === Symbol Support ===\n\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\n// === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n\n  if (value == null) return undefined;\n\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n  if (ctor !== undefined) {\n    ctor = ctor[getSymbol('species')];\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n  if (!queue) {\n    return;\n  }\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({ type: type, value: value });\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{ type: type, value: value }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = function () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: 'unsubscribe',\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = function () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: 'next',\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: 'error',\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: 'complete',\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: 'closed',\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = exports.Observable = function () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: 'subscribe',\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: 'forEach',\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: 'map',\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'reduce',\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: 'concat',\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscription = void 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (sources.length === 0) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources.shift()));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n\n        return function () {\n          if (subscription) {\n            subscription = undefined;\n            subscription.unsubscribe();\n          }\n        };\n      });\n    }\n  }, {\n    key: 'flatMap',\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n\n      var C = getSpecies(this);\n\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: getSymbol('observable'),\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: 'from',\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n\n      if (x == null) throw new TypeError(x + ' is not an object');\n\n      var method = getMethod(x, getSymbol('observable'));\n      if (method) {\n        var observable = method.call(x);\n\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n\n        if (isObservable(observable) && observable.constructor === C) return observable;\n\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, getSymbol('iterator'));\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var item = _step.value;\n\n                  observer.next(item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: 'of',\n    value: function of() {\n      for (var _len2 = arguments.length, items = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: getSymbol('species'),\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: getSymbol('observable'),\n      hostReportError: hostReportError\n    },\n    configurabe: true\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/zen-observable/lib/Observable.js\n// module id = 1930\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ApolloLink, execute, } from 'apollo-link';\nimport { isProduction, removeConnectionDirectiveFromDocument, } from 'apollo-utilities';\nimport { QueryManager } from './core/QueryManager';\nimport { DataStore } from './data/store';\nimport { version } from './version';\nvar hasSuggestedDevtools = false;\nvar supportedDirectives = new ApolloLink(function (operation, forward) {\n    operation.query = removeConnectionDirectiveFromDocument(operation.query);\n    return forward(operation);\n});\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ApolloClient}.\n     *\n     * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n     *\n     * @param cache The initial cache to use in the data store.\n     *\n     * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n     *\n     * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n     * server side render.\n     *\n     * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n     * with identical parameters (query, variables, operationName) is already in flight.\n     *\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        // remove apollo-client supported directives\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        // Attach the client instance to window to let us be found by chrome devtools, but only in\n        // development mode\n        var defaultConnectToDevTools = !isProduction() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && !isProduction()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                // First check if devtools is not installed\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    // Only for Chrome\n                    if (window.navigator &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        // tslint:disable-next-line\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n    }\n    /**\n     * This watches the results of the query according to the options specified and\n     * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n     * receive updated results through a GraphQL observer.\n     * <p /><p />\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     * <p /><p />\n     * For example, suppose you call watchQuery on a GraphQL query that fetches an person's\n     * first name and last name and this person has a particular object identifer, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and his/her first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     * <p /><p />\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     *\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a {@link Promise} which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options An object of type {@link QueryOptions} that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        // XXX Overwriting options is probably not the best way to do this long\n        // term...\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * {@link Promise} which is either resolved with the resulting data or rejected with an\n     * error.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * {@link Observable} which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        this.initQueryManager();\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     */\n    ApolloClient.prototype.readQuery = function (options) {\n        return this.initProxy().readQuery(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.readFragment = function (options) {\n        return this.initProxy().readFragment(options);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Sugar for writeQuery & writeFragment\n     * This method will construct a query from the data object passed in.\n     * If no id is supplied, writeData will write the data to the root.\n     * If an id is supplied, writeData will write a fragment to the object\n     * specified by the id in the store.\n     *\n     * Since you aren't passing in a query to check the shape of the data,\n     * you must pass in an object that conforms to the shape of valid GraphQL data.\n     */\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    /**\n     * This initializes the query manager that tracks queries and the cache\n     */\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (this.queryManager)\n            return;\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: this.queryDeduplication,\n            ssrMode: this.ssrMode,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    /**\n     * Allows callbacks to be registered that are executed with the store is reset.\n     * onResetStore returns an unsubscribe function for removing your registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    /**\n     * Initializes a data proxy for this client instance if one does not already\n     * exist and returns either a previously initialized proxy instance or the\n     * newly initialized instance.\n     */\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\nexport default ApolloClient;\n//# sourceMappingURL=ApolloClient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/ApolloClient.js\n// module id = 1931\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { execute, ApolloLink } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { DedupLink as Deduplicator } from 'apollo-link-dedup';\nimport { assign, getDefaultValues, getMutationDefinition, getOperationDefinition, getOperationName, getQueryDefinition, isProduction, maybeDeepFreeze, hasDirectives, } from 'apollo-utilities';\nimport { QueryScheduler } from '../scheduler/scheduler';\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observable } from '../util/Observable';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore } from '../data/queries';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { FetchType } from './types';\nimport { graphQLResultHasError } from 'apollo-utilities';\nvar defaultQueryInfo = {\n    listeners: [],\n    invalidated: false,\n    document: null,\n    newData: null,\n    lastRequestId: null,\n    observableQuery: null,\n    subscriptions: [],\n};\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        // let's not start at zero to avoid pain with bad checks\n        this.idCounter = 1;\n        // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n        // subscriptions as well\n        this.queries = new Map();\n        // A map going from a requestId to a promise that has not yet been resolved. We use this to keep\n        // track of queries that are inflight and reject them in case some\n        // destabalizing action occurs (e.g. reset of the Apollo store).\n        this.fetchQueryPromises = new Map();\n        // A map going from the name of a query to an observer issued for it by watchQuery. This is\n        // generally used to refetches for refetchQueries and to update mutation results through\n        // updateQueries.\n        this.queryIdsByName = {};\n        this.link = link;\n        this.deduplicator = ApolloLink.from([new Deduplicator(), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.scheduler = new QueryScheduler({ queryManager: this, ssrMode: ssrMode });\n    }\n    QueryManager.prototype.mutate = function (_a) {\n        var _this = this;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, updateWithProxyFn = _a.update, _c = _a.errorPolicy, errorPolicy = _c === void 0 ? 'none' : _c, fetchPolicy = _a.fetchPolicy, _d = _a.context, context = _d === void 0 ? {} : _d;\n        if (!mutation) {\n            throw new Error('mutation option is required. You must specify your GraphQL document in the mutation option.');\n        }\n        if (fetchPolicy && fetchPolicy !== 'no-cache') {\n            throw new Error(\"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n        }\n        var mutationId = this.generateQueryId();\n        var cache = this.dataStore.getCache();\n        (mutation = cache.transformDocument(mutation)),\n            (variables = assign({}, getDefaultValues(getMutationDefinition(mutation)), variables));\n        var mutationString = print(mutation);\n        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n        // Create a map of update queries by id to the query instead of by name.\n        var generateUpdateQueriesInfo = function () {\n            var ret = {};\n            if (updateQueriesByName) {\n                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                        ret[queryId] = {\n                            updater: updateQueriesByName[queryName],\n                            query: _this.queryStore.get(queryId),\n                        };\n                    });\n                });\n            }\n            return ret;\n        };\n        this.mutationStore.initMutation(mutationId, mutationString, variables);\n        this.dataStore.markMutationInit({\n            mutationId: mutationId,\n            document: mutation,\n            variables: variables || {},\n            updateQueries: generateUpdateQueriesInfo(),\n            update: updateWithProxyFn,\n            optimisticResponse: optimisticResponse,\n        });\n        this.broadcastQueries();\n        return new Promise(function (resolve, reject) {\n            var storeResult;\n            var error;\n            var operation = _this.buildOperationForLink(mutation, variables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n            execute(_this.link, operation).subscribe({\n                next: function (result) {\n                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                        error = new ApolloError({\n                            graphQLErrors: result.errors,\n                        });\n                        return;\n                    }\n                    _this.mutationStore.markMutationResult(mutationId);\n                    if (fetchPolicy !== 'no-cache') {\n                        _this.dataStore.markMutationResult({\n                            mutationId: mutationId,\n                            result: result,\n                            document: mutation,\n                            variables: variables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                        });\n                    }\n                    storeResult = result;\n                },\n                error: function (err) {\n                    _this.mutationStore.markMutationError(mutationId, err);\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    reject(new ApolloError({\n                        networkError: err,\n                    }));\n                },\n                complete: function () {\n                    if (error) {\n                        _this.mutationStore.markMutationError(mutationId, error);\n                    }\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    // allow for conditional refetches\n                    // XXX do we want to make this the only API one day?\n                    if (typeof refetchQueries === 'function') {\n                        refetchQueries = refetchQueries(storeResult);\n                    }\n                    if (refetchQueries) {\n                        refetchQueries.forEach(function (refetchQuery) {\n                            if (typeof refetchQuery === 'string') {\n                                _this.refetchQueryByName(refetchQuery);\n                                return;\n                            }\n                            _this.query({\n                                query: refetchQuery.query,\n                                variables: refetchQuery.variables,\n                                fetchPolicy: 'network-only',\n                            });\n                        });\n                    }\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    if (errorPolicy === 'ignore' &&\n                        storeResult &&\n                        graphQLResultHasError(storeResult)) {\n                        delete storeResult.errors;\n                    }\n                    resolve(storeResult);\n                },\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, \n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId) {\n        var _this = this;\n        var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;\n        var cache = this.dataStore.getCache();\n        var query = cache.transformDocument(options.query);\n        var storeResult;\n        var needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        // If this is not a force fetch, we want to diff the query against the\n        // store before we fetch it from the network interface.\n        // TODO we hit the cache even if the policy is network-first. This could be unnecessary if the network is up.\n        if (fetchType !== FetchType.refetch &&\n            fetchPolicy !== 'network-only' &&\n            fetchPolicy !== 'no-cache') {\n            var _d = this.dataStore.getCache().diff({\n                query: query,\n                variables: variables,\n                returnPartialData: true,\n                optimistic: false,\n            }), complete = _d.complete, result = _d.result;\n            // If we're in here, only fetch if we have missing fields\n            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n            storeResult = result;\n        }\n        var shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n        // we need to check to see if this is an operation that uses the @live directive\n        if (hasDirectives(['live'], query))\n            shouldFetch = true;\n        var requestId = this.generateRequestId();\n        // set up a watcher to listen to cache updates\n        var cancel = this.updateQueryWatch(queryId, query, options);\n        // Initialize query in store with unique requestId\n        this.setQuery(queryId, function () { return ({\n            document: query,\n            lastRequestId: requestId,\n            invalidated: true,\n            cancel: cancel,\n        }); });\n        this.invalidate(true, fetchMoreForQueryId);\n        this.queryStore.initQuery({\n            queryId: queryId,\n            document: query,\n            storePreviousVariables: shouldFetch,\n            variables: variables,\n            isPoll: fetchType === FetchType.poll,\n            isRefetch: fetchType === FetchType.refetch,\n            metadata: metadata,\n            fetchMoreForQueryId: fetchMoreForQueryId,\n        });\n        this.broadcastQueries();\n        // If there is no part of the query we need to fetch from the server (or,\n        // fetchPolicy is cache-only), we just write the store result as the final result.\n        var shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n        if (shouldDispatchClientResult) {\n            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n            this.broadcastQueries();\n        }\n        if (shouldFetch) {\n            var networkResult = this.fetchRequest({\n                requestId: requestId,\n                queryId: queryId,\n                document: query,\n                options: options,\n                fetchMoreForQueryId: fetchMoreForQueryId,\n            }).catch(function (error) {\n                // This is for the benefit of `refetch` promises, which currently don't get their errors\n                // through the store like watchQuery observers do\n                if (isApolloError(error)) {\n                    throw error;\n                }\n                else {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    _this.removeFetchQueryPromise(requestId);\n                    throw new ApolloError({ networkError: error });\n                }\n            });\n            // we don't return the promise for cache-and-network since it is already\n            // returned below from the cache\n            if (fetchPolicy !== 'cache-and-network') {\n                return networkResult;\n            }\n            else {\n                // however we need to catch the error so it isn't unhandled in case of\n                // network error\n                networkResult.catch(function () { });\n            }\n        }\n        // If we have no query to send to the server, we should return the result\n        // found within the store.\n        return Promise.resolve({ data: storeResult });\n    };\n    // Returns a query listener that will update the given observer based on the\n    // results (or lack thereof) for a particular query.\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData) {\n            // we're going to take a look at the data, so the query is no longer invalidated\n            _this.invalidate(false, queryId);\n            // The query store value can be undefined in the event of a store\n            // reset.\n            if (!queryStoreValue)\n                return;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            // don't watch the store for queries on standby\n            if (fetchPolicy === 'standby')\n                return;\n            var errorPolicy = observableQuery\n                ? observableQuery.options.errorPolicy\n                : options.errorPolicy;\n            var lastResult = observableQuery\n                ? observableQuery.getLastResult()\n                : null;\n            var lastError = observableQuery ? observableQuery.getLastError() : null;\n            var shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            // if this caused by a cache broadcast but the query is still in flight\n            // don't notify the observer\n            // if (\n            //   isCacheBroadcast &&\n            //   isNetworkRequestInFlight(queryStoreValue.networkStatus)\n            // ) {\n            //   shouldNotifyIfLoading = false;\n            // }\n            var networkStatusChanged = Boolean(lastResult &&\n                queryStoreValue.networkStatus !== lastResult.networkStatus);\n            var errorStatusChanged = errorPolicy &&\n                (lastError && lastError.graphQLErrors) !==\n                    queryStoreValue.graphQLErrors &&\n                errorPolicy !== 'none';\n            if (!isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                shouldNotifyIfLoading) {\n                // If we have either a GraphQL error or a network error, we create\n                // an error and tell the observer about it.\n                if (((!errorPolicy || errorPolicy === 'none') &&\n                    queryStoreValue.graphQLErrors &&\n                    queryStoreValue.graphQLErrors.length > 0) ||\n                    queryStoreValue.networkError) {\n                    var apolloError_1 = new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    });\n                    previouslyHadError = true;\n                    if (observer.error) {\n                        try {\n                            observer.error(apolloError_1);\n                        }\n                        catch (e) {\n                            // Throw error outside this control flow to avoid breaking Apollo's state\n                            setTimeout(function () {\n                                throw e;\n                            }, 0);\n                        }\n                    }\n                    else {\n                        // Throw error outside this control flow to avoid breaking Apollo's state\n                        setTimeout(function () {\n                            throw apolloError_1;\n                        }, 0);\n                        if (!isProduction()) {\n                            /* tslint:disable-next-line */\n                            console.info('An unhandled error was thrown because no error handler is registered ' +\n                                'for the query ' +\n                                print(queryStoreValue.document));\n                        }\n                    }\n                    return;\n                }\n                try {\n                    var data = void 0;\n                    var isMissing = void 0;\n                    if (newData) {\n                        // clear out the latest new data, since we're now using it\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                        data = newData.result;\n                        isMissing = !newData.complete || false;\n                    }\n                    else {\n                        if (lastResult && lastResult.data && !errorStatusChanged) {\n                            data = lastResult.data;\n                            isMissing = false;\n                        }\n                        else {\n                            var document_1 = _this.getQuery(queryId).document;\n                            var readResult = _this.dataStore.getCache().diff({\n                                query: document_1,\n                                variables: queryStoreValue.previousVariables ||\n                                    queryStoreValue.variables,\n                                optimistic: true,\n                            });\n                            data = readResult.result;\n                            isMissing = !readResult.complete;\n                        }\n                    }\n                    var resultFromStore = void 0;\n                    // If there is some data missing and the user has told us that they\n                    // do not tolerate partial data then we want to return the previous\n                    // result and mark it as stale.\n                    if (isMissing && fetchPolicy !== 'cache-only') {\n                        resultFromStore = {\n                            data: lastResult && lastResult.data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: true,\n                        };\n                    }\n                    else {\n                        resultFromStore = {\n                            data: data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: false,\n                        };\n                    }\n                    // if the query wants updates on errors we need to add it to the result\n                    if (errorPolicy === 'all' &&\n                        queryStoreValue.graphQLErrors &&\n                        queryStoreValue.graphQLErrors.length > 0) {\n                        resultFromStore.errors = queryStoreValue.graphQLErrors;\n                    }\n                    if (observer.next) {\n                        var isDifferentResult = !(lastResult &&\n                            resultFromStore &&\n                            lastResult.networkStatus === resultFromStore.networkStatus &&\n                            lastResult.stale === resultFromStore.stale &&\n                            // We can do a strict equality check here because we include a `previousResult`\n                            // with `readQueryFromStore`. So if the results are the same they will be\n                            // referentially equal.\n                            lastResult.data === resultFromStore.data);\n                        if (isDifferentResult || previouslyHadError) {\n                            try {\n                                observer.next(maybeDeepFreeze(resultFromStore));\n                            }\n                            catch (e) {\n                                // Throw error outside this control flow to avoid breaking Apollo's state\n                                setTimeout(function () {\n                                    throw e;\n                                }, 0);\n                            }\n                        }\n                    }\n                    previouslyHadError = false;\n                }\n                catch (error) {\n                    previouslyHadError = true;\n                    if (observer.error)\n                        observer.error(new ApolloError({ networkError: error }));\n                    return;\n                }\n            }\n        };\n    };\n    // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n    // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n    // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n    // but we don't want to keep track observables issued for the query method since those aren't\n    // supposed to be refetched in the event of a store reset. Once we unify error handling for\n    // network errors and non-network errors, the shouldSubscribe option will go away.\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        if (options.fetchPolicy === 'standby') {\n            throw new Error('client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        }\n        // get errors synchronously\n        var queryDefinition = getQueryDefinition(options.query);\n        // assign variable default values if supplied\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = getDefaultValues(queryDefinition);\n            options.variables = assign({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            scheduler: this.scheduler,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        if (!options.query) {\n            throw new Error('query option is required. You must specify your GraphQL document ' +\n                'in the query option.');\n        }\n        if (options.query.kind !== 'Document') {\n            throw new Error('You must wrap the query string in a \"gql\" tag.');\n        }\n        if (options.returnPartialData) {\n            throw new Error('returnPartialData option only supported on watchQuery.');\n        }\n        if (options.pollInterval) {\n            throw new Error('pollInterval option only supported on watchQuery.');\n        }\n        var requestId = this.idCounter;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            return _this.watchQuery(options, false)\n                .result()\n                .then(function (result) {\n                _this.removeFetchQueryPromise(requestId);\n                resolve(result);\n            })\n                .catch(function (error) {\n                _this.removeFetchQueryPromise(requestId);\n                reject(error);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidate: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    // Adds a promise to this.fetchQueryPromises for a given request ID.\n    QueryManager.prototype.addFetchQueryPromise = function (requestId, resolve, reject) {\n        this.fetchQueryPromises.set(requestId.toString(), {\n            resolve: resolve,\n            reject: reject,\n        });\n    };\n    // Removes the promise in this.fetchQueryPromises for a particular request ID.\n    QueryManager.prototype.removeFetchQueryPromise = function (requestId) {\n        this.fetchQueryPromises.delete(requestId.toString());\n    };\n    // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        // Insert the ObservableQuery into this.observableQueriesByName if the query has a name\n        var queryDef = getQueryDefinition(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            // XXX we may we want to warn the user about query name conflicts in the future\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = getQueryDefinition(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        // Before we have sent the reset action to the store,\n        // we can no longer rely on the results returned by in-flight\n        // requests since these may depend on values that previously existed\n        // in the data portion of the store. So, we cancel the promises and observers\n        // that we have issued so far and not yet resolved (in the case of\n        // queries).\n        this.fetchQueryPromises.forEach(function (_a) {\n            var reject = _a.reject;\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        // begin removing data from the store\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        // Similarly, we have to have to refetch each of the queries currently being\n        // observed. We refetch instead of error'ing on these since the assumption is that\n        // resetting the store doesn't eliminate the need for the queries currently being\n        // watched. If there is an existing query in flight when the store is reset,\n        // the promise for it will be rejected and its results will not be written to the\n        // store.\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n            // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = assign({}, getDefaultValues(getOperationDefinition(query)), options.variables);\n        var sub;\n        var observers = [];\n        return new Observable(function (observer) {\n            observers.push(observer);\n            // If this is the first observer, actually initiate the network subscription\n            if (observers.length === 1) {\n                var handler = {\n                    next: function (result) {\n                        _this.dataStore.markSubscriptionResult(result, transformedDoc, variables);\n                        _this.broadcastQueries();\n                        // It's slightly awkward that the data for subscriptions doesn't come from the store.\n                        observers.forEach(function (obs) {\n                            // XXX I'd prefer a different way to handle errors for subscriptions\n                            if (obs.next)\n                                obs.next(result);\n                        });\n                    },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error)\n                                obs.error(error);\n                        });\n                    },\n                };\n                // TODO: Should subscriptions also accept a `context` option to pass\n                // through to links?\n                var operation = _this.buildOperationForLink(transformedDoc, variables);\n                sub = execute(_this.link, operation).subscribe(handler);\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                // If we removed the last observer, tear down the network subscription\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryInStore(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        // teardown all links\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        // XXX test this\n        if (newData) {\n            return maybeDeepFreeze({ data: newData.result, partial: false });\n        }\n        else {\n            try {\n                // the query is brand new, so we read from the store to see if anything is there\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                });\n                return maybeDeepFreeze({ data: data, partial: false });\n            }\n            catch (e) {\n                return maybeDeepFreeze({ data: {}, partial: true });\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            if (!foundObserveableQuery) {\n                throw new Error(\"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            }\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                // it's possible for the listener to be undefined if the query is being stopped\n                // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData);\n            });\n        });\n    };\n    // Takes a request id, query id, a query document and information associated with the query\n    // and send it to the network interface. Returns\n    // a promise for the result associated with that request.\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var operation = this.buildOperationForLink(document, variables, __assign({}, context, { \n            // TODO: Should this be included for all entry points via\n            // buildOperationForLink?\n            forceFetch: !this.queryDeduplication }));\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            var subscription = execute(_this.deduplicator, operation).subscribe({\n                next: function (result) {\n                    // default the lastRequestId to 1\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        if (fetchPolicy !== 'no-cache') {\n                            try {\n                                _this.dataStore.markQueryResult(result, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                            }\n                            catch (e) {\n                                reject(e);\n                                return;\n                            }\n                        }\n                        else {\n                            _this.setQuery(queryId, function () { return ({\n                                newData: { result: result.data, complete: true },\n                            }); });\n                        }\n                        _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    if (result.errors && errorPolicy === 'none') {\n                        reject(new ApolloError({\n                            graphQLErrors: result.errors,\n                        }));\n                        return;\n                    }\n                    else if (errorPolicy === 'all') {\n                        errorsFromStore = result.errors;\n                    }\n                    if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                        // We don't write fetchMore results to the store because this would overwrite\n                        // the original result in case an @connection directive is used.\n                        resultFromStore = result.data;\n                    }\n                    else {\n                        try {\n                            // ensure result is combined with data already in store\n                            resultFromStore = _this.dataStore.getCache().read({\n                                variables: variables,\n                                query: document,\n                                optimistic: false,\n                            });\n                            // this will throw an error if there are missing fields in\n                            // the results which can happen with errors from the server.\n                            // tslint:disable-next-line\n                        }\n                        catch (e) { }\n                    }\n                },\n                error: function (error) {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        });\n    };\n    // Refetches a query given that query's name. Refetches\n    // all ObservableQuery instances associated with the query name.\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        // early return if the query named does not exist (not yet fetched)\n        // this used to warn but it may be inteneded behavoir to try and refetch\n        // un called queries because they could be on different routes\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return this.queries.get(queryId) || __assign({}, defaultQueryInfo);\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: getOperationName(document) || undefined,\n            context: __assign({}, extraContext, { cache: cache, \n                // getting an entry's cache key is useful for cacheResolvers & state-link\n                getCacheKey: function (obj) {\n                    if (cache.config) {\n                        // on the link, we just want the id string, not the full id value from toIdValue\n                        return cache.config.dataIdFromObject(obj);\n                    }\n                    else {\n                        throw new Error('To use context.getCacheKey, you need to use a cache that has a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                    }\n                } }),\n        };\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/core/QueryManager.js\n// module id = 1932\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ApolloLink, Observable, } from 'apollo-link';\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nvar DedupLink = /** @class */ (function (_super) {\n    __extends(DedupLink, _super);\n    function DedupLink() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.inFlightRequestObservables = new Map();\n        _this.subscribers = new Map();\n        return _this;\n    }\n    DedupLink.prototype.request = function (operation, forward) {\n        var _this = this;\n        // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n        if (operation.getContext().forceFetch) {\n            return forward(operation);\n        }\n        var key = operation.toKey();\n        var cleanup = function (key) {\n            _this.inFlightRequestObservables.delete(key);\n            var prev = _this.subscribers.get(key);\n            return prev;\n        };\n        if (!this.inFlightRequestObservables.get(key)) {\n            // this is a new request, i.e. we haven't deduplicated it yet\n            // call the next link\n            var singleObserver_1 = forward(operation);\n            var subscription_1;\n            var sharedObserver = new Observable(function (observer) {\n                // this will still be called by each subscriber regardless of\n                // deduplication status\n                var prev = _this.subscribers.get(key);\n                if (!prev)\n                    prev = { next: [], error: [], complete: [] };\n                _this.subscribers.set(key, {\n                    next: prev.next.concat([observer.next.bind(observer)]),\n                    error: prev.error.concat([observer.error.bind(observer)]),\n                    complete: prev.complete.concat([observer.complete.bind(observer)]),\n                });\n                if (!subscription_1) {\n                    subscription_1 = singleObserver_1.subscribe({\n                        next: function (result) {\n                            var prev = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (prev) {\n                                prev.next.forEach(function (next) { return next(result); });\n                                prev.complete.forEach(function (complete) { return complete(); });\n                            }\n                        },\n                        error: function (error) {\n                            var prev = cleanup(key);\n                            _this.subscribers.delete(key);\n                            if (prev)\n                                prev.error.forEach(function (err) { return err(error); });\n                        },\n                    });\n                }\n                return function () {\n                    if (subscription_1)\n                        subscription_1.unsubscribe();\n                    _this.inFlightRequestObservables.delete(key);\n                };\n            });\n            this.inFlightRequestObservables.set(key, sharedObserver);\n        }\n        // return shared Observable\n        return this.inFlightRequestObservables.get(key);\n    };\n    return DedupLink;\n}(ApolloLink));\nexport { DedupLink };\n//# sourceMappingURL=dedupLink.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-link-dedup/lib/dedupLink.js\n// module id = 1933\n// module chunks = 0","// The QueryScheduler is supposed to be a mechanism that schedules polling queries such that\n// they are clustered into the time slots of the QueryBatcher and are batched together. It\n// also makes sure that for a given polling query, if one instance of the query is inflight,\n// another instance will not be fired until the query returns or times out. We do this because\n// another query fires while one is already in flight, the data will stay in the \"loading\" state\n// even after the first query has returned.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { FetchType } from '../core/types';\nimport { ObservableQuery } from '../core/ObservableQuery';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryScheduler = /** @class */ (function () {\n    function QueryScheduler(_a) {\n        var queryManager = _a.queryManager, ssrMode = _a.ssrMode;\n        // Map going from queryIds to query options that are in flight.\n        this.inFlightQueries = {};\n        // Map going from query ids to the query options associated with those queries. Contains all of\n        // the queries, both in flight and not in flight.\n        this.registeredQueries = {};\n        // Map going from polling interval with to the query ids that fire on that interval.\n        // These query ids are associated with a set of options in the this.registeredQueries.\n        this.intervalQueries = {};\n        // Map going from polling interval widths to polling timers.\n        this.pollingTimers = {};\n        this.ssrMode = false;\n        this.queryManager = queryManager;\n        this.ssrMode = ssrMode || false;\n    }\n    QueryScheduler.prototype.checkInFlight = function (queryId) {\n        var query = this.queryManager.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryScheduler.prototype.fetchQuery = function (queryId, options, fetchType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.queryManager\n                .fetchQuery(queryId, options, fetchType)\n                .then(function (result) {\n                resolve(result);\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    QueryScheduler.prototype.startPollingQuery = function (options, queryId, listener) {\n        if (!options.pollInterval) {\n            throw new Error('Attempted to start a polling query without a polling interval.');\n        }\n        // Do not poll in SSR mode\n        if (this.ssrMode)\n            return queryId;\n        this.registeredQueries[queryId] = options;\n        if (listener) {\n            this.queryManager.addQueryListener(queryId, listener);\n        }\n        this.addQueryOnInterval(queryId, options);\n        return queryId;\n    };\n    QueryScheduler.prototype.stopPollingQuery = function (queryId) {\n        // Remove the query options from one of the registered queries.\n        // The polling function will then take care of not firing it anymore.\n        delete this.registeredQueries[queryId];\n    };\n    // Fires the all of the queries on a particular interval. Called on a setInterval.\n    QueryScheduler.prototype.fetchQueriesOnInterval = function (interval) {\n        var _this = this;\n        // XXX this \"filter\" here is nasty, because it does two things at the same time.\n        // 1. remove queries that have stopped polling\n        // 2. call fetchQueries for queries that are polling and not in flight.\n        // TODO: refactor this to make it cleaner\n        this.intervalQueries[interval] = this.intervalQueries[interval].filter(function (queryId) {\n            // If queryOptions can't be found from registeredQueries or if it has a\n            // different interval, it means that this queryId is no longer registered\n            // and should be removed from the list of queries firing on this interval.\n            //\n            // We don't remove queries from intervalQueries immediately in\n            // stopPollingQuery so that we can keep the timer consistent when queries\n            // are removed and replaced, and to avoid quadratic behavior when stopping\n            // many queries.\n            if (!(_this.registeredQueries.hasOwnProperty(queryId) &&\n                _this.registeredQueries[queryId].pollInterval === interval)) {\n                return false;\n            }\n            // Don't fire this instance of the polling query is one of the instances is already in\n            // flight.\n            if (_this.checkInFlight(queryId)) {\n                return true;\n            }\n            var queryOptions = _this.registeredQueries[queryId];\n            var pollingOptions = __assign({}, queryOptions);\n            pollingOptions.fetchPolicy = 'network-only';\n            // don't let unhandled rejections happen\n            _this.fetchQuery(queryId, pollingOptions, FetchType.poll).catch(function () { });\n            return true;\n        });\n        if (this.intervalQueries[interval].length === 0) {\n            clearInterval(this.pollingTimers[interval]);\n            delete this.intervalQueries[interval];\n        }\n    };\n    // Adds a query on a particular interval to this.intervalQueries and then fires\n    // that query with all the other queries executing on that interval. Note that the query id\n    // and query options must have been added to this.registeredQueries before this function is called.\n    QueryScheduler.prototype.addQueryOnInterval = function (queryId, queryOptions) {\n        var _this = this;\n        var interval = queryOptions.pollInterval;\n        if (!interval) {\n            throw new Error(\"A poll interval is required to start polling query with id '\" + queryId + \"'.\");\n        }\n        // If there are other queries on this interval, this query will just fire with those\n        // and we don't need to create a new timer.\n        if (this.intervalQueries.hasOwnProperty(interval.toString()) &&\n            this.intervalQueries[interval].length > 0) {\n            this.intervalQueries[interval].push(queryId);\n        }\n        else {\n            this.intervalQueries[interval] = [queryId];\n            // set up the timer for the function that will handle this interval\n            this.pollingTimers[interval] = setInterval(function () {\n                _this.fetchQueriesOnInterval(interval);\n            }, interval);\n        }\n    };\n    // Used only for unit testing.\n    QueryScheduler.prototype.registerPollingQuery = function (queryOptions) {\n        if (!queryOptions.pollInterval) {\n            throw new Error('Attempted to register a non-polling query with the scheduler.');\n        }\n        return new ObservableQuery({\n            scheduler: this,\n            options: queryOptions,\n        });\n    };\n    return QueryScheduler;\n}());\nexport { QueryScheduler };\n//# sourceMappingURL=scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/scheduler/scheduler.js\n// module id = 1934\n// module chunks = 0","var MutationStore = /** @class */ (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutationString, variables) {\n        this.store[mutationId] = {\n            mutationString: mutationString,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\nexport { MutationStore };\n//# sourceMappingURL=mutations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/data/mutations.js\n// module id = 1935\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { print } from 'graphql/language/printer';\nimport { isEqual } from 'apollo-utilities';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryStore = /** @class */ (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            print(previousQuery.document) !== print(query.document)) {\n            // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n            // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n            // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n            throw new Error('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading\n        // if the previous query was still loading, we don't want to remember it at all.\n        ) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        // TODO break this out into a separate function\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n            // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n        // the store. We probably want a refetch action instead, because I suspect that if you refetch\n        // before the initial fetch is done, you'll get an error.\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        // If the action had a `moreForQueryId` property then we need to set the\n        // network status on that query as well to `fetchMore`.\n        //\n        // We have a complement to this if statement in the query result and query\n        // error action branch, but importantly *not* in the client result branch.\n        // This is because the implementation of `fetchMore` *always* sets\n        // `fetchPolicy` to `network-only` so we would never have a client result.\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? NetworkStatus.ready\n            : NetworkStatus.loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        // keep only the queries with query ids that are associated with observables\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            // XXX set loading to true so listeners don't trigger unless they want results with partial data\n            res[key] = __assign({}, _this.store[key], { networkStatus: NetworkStatus.loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\nexport { QueryStore };\n//# sourceMappingURL=queries.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/data/queries.js\n// module id = 1936\n// module chunks = 0","import { getOperationName, tryFunctionOrLogError, graphQLResultHasError, } from 'apollo-utilities';\nvar DataStore = /** @class */ (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        // the subscription interface should handle not sending us results we no longer subscribe to.\n        // XXX I don't think we ever send in an object with errors, but we might in the future...\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        // Incorporate the result from this mutation into the store\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    // Read the current query result from the store.\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    // Run our reducer using the current query result and the mutation result.\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    // Write the modified result back into the store if we got a new result.\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            // If the mutation has some writes associated with it then we need to\n            // apply those writes to the store by running this reducer again with a\n            // write action.\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\nexport { DataStore };\n//# sourceMappingURL=store.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/data/store.js\n// module id = 1937\n// module chunks = 0","exports.version = \"2.2.8\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/node_modules/apollo-client/version.js\n// module id = 1938\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"apollo-client\"));\n__export(require(\"apollo-link\"));\nvar apollo_link_http_1 = require(\"apollo-link-http\");\nexports.HttpLink = apollo_link_http_1.HttpLink;\n__export(require(\"apollo-cache-inmemory\"));\nvar apollo_cache_inmemory_1 = require(\"apollo-cache-inmemory\");\nexports.InMemoryCache = apollo_cache_inmemory_1.InMemoryCache;\nvar graphql_tag_1 = require(\"graphql-tag\");\nexports.gql = graphql_tag_1.default;\nvar apollo_client_1 = require(\"apollo-client\");\nvar DefaultClient = (function (_super) {\n    __extends(DefaultClient, _super);\n    function DefaultClient(config) {\n        if (config === void 0) { config = {}; }\n        var _this = this;\n        if (!config.cache)\n            config.cache = new apollo_cache_inmemory_1.InMemoryCache();\n        if (!config.link)\n            config.link = new apollo_link_http_1.HttpLink({ uri: '/graphql' });\n        _this = _super.call(this, config) || this;\n        return _this;\n    }\n    return DefaultClient;\n}(apollo_client_1.default));\nexports.default = DefaultClient;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/lib/index.js\n// module id = 1939\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ApolloLink, execute, } from 'apollo-link';\nimport { isProduction, removeConnectionDirectiveFromDocument, } from 'apollo-utilities';\nimport { QueryManager } from './core/QueryManager';\nimport { DataStore } from './data/store';\nimport { version } from './version';\nvar hasSuggestedDevtools = false;\nvar supportedDirectives = new ApolloLink(function (operation, forward) {\n    operation.query = removeConnectionDirectiveFromDocument(operation.query);\n    return forward(operation);\n});\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nvar ApolloClient = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ApolloClient}.\n     *\n     * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n     *\n     * @param cache The initial cache to use in the data store.\n     *\n     * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n     *\n     * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n     * server side render.\n     *\n     * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n     * with identical parameters (query, variables, operationName) is already in flight.\n     *\n     */\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        var link = options.link, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions;\n        if (!link || !cache) {\n            throw new Error(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        // remove apollo-client supported directives\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        // Attach the client instance to window to let us be found by chrome devtools, but only in\n        // development mode\n        var defaultConnectToDevTools = !isProduction() &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        /**\n         * Suggest installing the devtools for developers who don't have them\n         */\n        if (!hasSuggestedDevtools && !isProduction()) {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                // First check if devtools is not installed\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    // Only for Chrome\n                    if (window.navigator &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        // tslint:disable-next-line\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n    }\n    /**\n     * This watches the results of the query according to the options specified and\n     * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n     * receive updated results through a GraphQL observer.\n     * <p /><p />\n     * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n     * it uses Apollo's store in order to reactively deliver updates to your query results.\n     * <p /><p />\n     * For example, suppose you call watchQuery on a GraphQL query that fetches an person's\n     * first name and last name and this person has a particular object identifer, provided by\n     * dataIdFromObject. Later, a different query fetches that same person's\n     * first and last name and his/her first name has now changed. Then, any observers associated\n     * with the results of the first query will be updated with a new result object.\n     * <p /><p />\n     * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n     * a description of store reactivity.\n     *\n     */\n    ApolloClient.prototype.watchQuery = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        // XXX Overwriting options is probably not the best way to do this long term...\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    /**\n     * This resolves a single query according to the options specified and\n     * returns a {@link Promise} which is either resolved with the resulting data\n     * or rejected with an error.\n     *\n     * @param options An object of type {@link QueryOptions} that allows us to\n     * describe how this query should be treated e.g. whether it should hit the\n     * server at all or just resolve from the cache, etc.\n     */\n    ApolloClient.prototype.query = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        if (options.fetchPolicy === 'cache-and-network') {\n            throw new Error('cache-and-network fetchPolicy can only be used with watchQuery');\n        }\n        // XXX Overwriting options is probably not the best way to do this long\n        // term...\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    /**\n     * This resolves a single mutation according to the options specified and returns a\n     * {@link Promise} which is either resolved with the resulting data or rejected with an\n     * error.\n     *\n     * It takes options as an object with the following keys and values:\n     */\n    ApolloClient.prototype.mutate = function (options) {\n        this.initQueryManager();\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    /**\n     * This subscribes to a graphql subscription according to the options specified and returns an\n     * {@link Observable} which either emits received data or an error.\n     */\n    ApolloClient.prototype.subscribe = function (options) {\n        this.initQueryManager();\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL query without making a network request. This method will start at\n     * the root query. To start at a specific id returned by `dataIdFromObject`\n     * use `readFragment`.\n     */\n    ApolloClient.prototype.readQuery = function (options) {\n        return this.initProxy().readQuery(options);\n    };\n    /**\n     * Tries to read some data from the store in the shape of the provided\n     * GraphQL fragment without making a network request. This method will read a\n     * GraphQL fragment from any arbitrary id that is currently cached, unlike\n     * `readQuery` which will only read from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are reading. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.readFragment = function (options) {\n        return this.initProxy().readFragment(options);\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL query directly to\n     * the store. This method will start at the root query. To start at a a\n     * specific id returned by `dataIdFromObject` then use `writeFragment`.\n     */\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Writes some data in the shape of the provided GraphQL fragment directly to\n     * the store. This method will write to a GraphQL fragment from any arbitrary\n     * id that is currently cached, unlike `writeQuery` which will only write\n     * from the root query.\n     *\n     * You must pass in a GraphQL document with a single fragment or a document\n     * with multiple fragments that represent what you are writing. If you pass\n     * in a document with multiple fragments then you must also specify a\n     * `fragmentName`.\n     */\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    /**\n     * Sugar for writeQuery & writeFragment\n     * This method will construct a query from the data object passed in.\n     * If no id is supplied, writeData will write the data to the root.\n     * If an id is supplied, writeData will write a fragment to the object\n     * specified by the id in the store.\n     *\n     * Since you aren't passing in a query to check the shape of the data,\n     * you must pass in an object that conforms to the shape of valid GraphQL data.\n     */\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    /**\n     * This initializes the query manager that tracks queries and the cache\n     */\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (this.queryManager)\n            return;\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: this.queryDeduplication,\n            ssrMode: this.ssrMode,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    };\n    /**\n     * Resets your entire store by clearing out your cache and then re-executing\n     * all of your active queries. This makes it so that you may guarantee that\n     * there is no data left in your store from a time before you called this\n     * method.\n     *\n     * `resetStore()` is useful when your user just logged out. You’ve removed the\n     * user session, and you now want to make sure that any references to data you\n     * might have fetched while the user session was active is gone.\n     *\n     * It is important to remember that `resetStore()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     */\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    /**\n     * Allows callbacks to be registered that are executed with the store is reset.\n     * onResetStore returns an unsubscribe function for removing your registered callbacks.\n     */\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    /**\n     * Refetches all of your active queries.\n     *\n     * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n     *\n     * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n     * queries. This means that any components that might be mounted will execute\n     * their queries again using your network interface. If you do not want to\n     * re-execute any queries then you should make sure to stop watching any\n     * active queries.\n     * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n     */\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    /**\n     * Exposes the cache's complete state, in a serializable format for later restoration.\n     */\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    /**\n     * Replaces existing state in the cache (if any) with the values expressed by\n     * `serializedState`.\n     *\n     * Called when hydrating a cache (server side rendering, or offline storage),\n     * and also (potentially) during hot reloads.\n     */\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    /**\n     * Initializes a data proxy for this client instance if one does not already\n     * exist and returns either a previously initialized proxy instance or the\n     * newly initialized instance.\n     */\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\nexport default ApolloClient;\n//# sourceMappingURL=ApolloClient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/ApolloClient.js\n// module id = 1940\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { execute, ApolloLink } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { DedupLink as Deduplicator } from 'apollo-link-dedup';\nimport { assign, getDefaultValues, getMutationDefinition, getOperationDefinition, getOperationName, getQueryDefinition, isProduction, maybeDeepFreeze, hasDirectives, } from 'apollo-utilities';\nimport { QueryScheduler } from '../scheduler/scheduler';\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observable } from '../util/Observable';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore } from '../data/queries';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { FetchType } from './types';\nimport { graphQLResultHasError } from 'apollo-utilities';\nvar defaultQueryInfo = {\n    listeners: [],\n    invalidated: false,\n    document: null,\n    newData: null,\n    lastRequestId: null,\n    observableQuery: null,\n    subscriptions: [],\n};\nvar QueryManager = /** @class */ (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        // let's not start at zero to avoid pain with bad checks\n        this.idCounter = 1;\n        // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n        // subscriptions as well\n        this.queries = new Map();\n        // A map going from a requestId to a promise that has not yet been resolved. We use this to keep\n        // track of queries that are inflight and reject them in case some\n        // destabalizing action occurs (e.g. reset of the Apollo store).\n        this.fetchQueryPromises = new Map();\n        // A map going from the name of a query to an observer issued for it by watchQuery. This is\n        // generally used to refetches for refetchQueries and to update mutation results through\n        // updateQueries.\n        this.queryIdsByName = {};\n        this.link = link;\n        this.deduplicator = ApolloLink.from([new Deduplicator(), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.scheduler = new QueryScheduler({ queryManager: this, ssrMode: ssrMode });\n    }\n    QueryManager.prototype.mutate = function (_a) {\n        var _this = this;\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, updateWithProxyFn = _a.update, _c = _a.errorPolicy, errorPolicy = _c === void 0 ? 'none' : _c, fetchPolicy = _a.fetchPolicy, _d = _a.context, context = _d === void 0 ? {} : _d;\n        if (!mutation) {\n            throw new Error('mutation option is required. You must specify your GraphQL document in the mutation option.');\n        }\n        if (fetchPolicy && fetchPolicy !== 'no-cache') {\n            throw new Error(\"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n        }\n        var mutationId = this.generateQueryId();\n        var cache = this.dataStore.getCache();\n        (mutation = cache.transformDocument(mutation)),\n            (variables = assign({}, getDefaultValues(getMutationDefinition(mutation)), variables));\n        var mutationString = print(mutation);\n        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n        // Create a map of update queries by id to the query instead of by name.\n        var generateUpdateQueriesInfo = function () {\n            var ret = {};\n            if (updateQueriesByName) {\n                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                        ret[queryId] = {\n                            updater: updateQueriesByName[queryName],\n                            query: _this.queryStore.get(queryId),\n                        };\n                    });\n                });\n            }\n            return ret;\n        };\n        this.mutationStore.initMutation(mutationId, mutationString, variables);\n        this.dataStore.markMutationInit({\n            mutationId: mutationId,\n            document: mutation,\n            variables: variables || {},\n            updateQueries: generateUpdateQueriesInfo(),\n            update: updateWithProxyFn,\n            optimisticResponse: optimisticResponse,\n        });\n        this.broadcastQueries();\n        return new Promise(function (resolve, reject) {\n            var storeResult;\n            var error;\n            var operation = _this.buildOperationForLink(mutation, variables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n            execute(_this.link, operation).subscribe({\n                next: function (result) {\n                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                        error = new ApolloError({\n                            graphQLErrors: result.errors,\n                        });\n                        return;\n                    }\n                    _this.mutationStore.markMutationResult(mutationId);\n                    if (fetchPolicy !== 'no-cache') {\n                        _this.dataStore.markMutationResult({\n                            mutationId: mutationId,\n                            result: result,\n                            document: mutation,\n                            variables: variables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                        });\n                    }\n                    storeResult = result;\n                },\n                error: function (err) {\n                    _this.mutationStore.markMutationError(mutationId, err);\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    reject(new ApolloError({\n                        networkError: err,\n                    }));\n                },\n                complete: function () {\n                    if (error) {\n                        _this.mutationStore.markMutationError(mutationId, error);\n                    }\n                    _this.dataStore.markMutationComplete({\n                        mutationId: mutationId,\n                        optimisticResponse: optimisticResponse,\n                    });\n                    _this.broadcastQueries();\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    // allow for conditional refetches\n                    // XXX do we want to make this the only API one day?\n                    if (typeof refetchQueries === 'function') {\n                        refetchQueries = refetchQueries(storeResult);\n                    }\n                    if (refetchQueries) {\n                        refetchQueries.forEach(function (refetchQuery) {\n                            if (typeof refetchQuery === 'string') {\n                                _this.refetchQueryByName(refetchQuery);\n                                return;\n                            }\n                            _this.query({\n                                query: refetchQuery.query,\n                                variables: refetchQuery.variables,\n                                fetchPolicy: 'network-only',\n                            });\n                        });\n                    }\n                    _this.setQuery(mutationId, function () { return ({ document: undefined }); });\n                    if (errorPolicy === 'ignore' &&\n                        storeResult &&\n                        graphQLResultHasError(storeResult)) {\n                        delete storeResult.errors;\n                    }\n                    resolve(storeResult);\n                },\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, \n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId) {\n        var _this = this;\n        var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;\n        var cache = this.dataStore.getCache();\n        var query = cache.transformDocument(options.query);\n        var storeResult;\n        var needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        // If this is not a force fetch, we want to diff the query against the\n        // store before we fetch it from the network interface.\n        // TODO we hit the cache even if the policy is network-first. This could be unnecessary if the network is up.\n        if (fetchType !== FetchType.refetch &&\n            fetchPolicy !== 'network-only' &&\n            fetchPolicy !== 'no-cache') {\n            var _d = this.dataStore.getCache().diff({\n                query: query,\n                variables: variables,\n                returnPartialData: true,\n                optimistic: false,\n            }), complete = _d.complete, result = _d.result;\n            // If we're in here, only fetch if we have missing fields\n            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n            storeResult = result;\n        }\n        var shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n        // we need to check to see if this is an operation that uses the @live directive\n        if (hasDirectives(['live'], query))\n            shouldFetch = true;\n        var requestId = this.generateRequestId();\n        // set up a watcher to listen to cache updates\n        var cancel = this.updateQueryWatch(queryId, query, options);\n        // Initialize query in store with unique requestId\n        this.setQuery(queryId, function () { return ({\n            document: query,\n            lastRequestId: requestId,\n            invalidated: true,\n            cancel: cancel,\n        }); });\n        this.invalidate(true, fetchMoreForQueryId);\n        this.queryStore.initQuery({\n            queryId: queryId,\n            document: query,\n            storePreviousVariables: shouldFetch,\n            variables: variables,\n            isPoll: fetchType === FetchType.poll,\n            isRefetch: fetchType === FetchType.refetch,\n            metadata: metadata,\n            fetchMoreForQueryId: fetchMoreForQueryId,\n        });\n        this.broadcastQueries();\n        // If there is no part of the query we need to fetch from the server (or,\n        // fetchPolicy is cache-only), we just write the store result as the final result.\n        var shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n        if (shouldDispatchClientResult) {\n            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n            this.invalidate(true, queryId, fetchMoreForQueryId);\n            this.broadcastQueries();\n        }\n        if (shouldFetch) {\n            var networkResult = this.fetchRequest({\n                requestId: requestId,\n                queryId: queryId,\n                document: query,\n                options: options,\n                fetchMoreForQueryId: fetchMoreForQueryId,\n            }).catch(function (error) {\n                // This is for the benefit of `refetch` promises, which currently don't get their errors\n                // through the store like watchQuery observers do\n                if (isApolloError(error)) {\n                    throw error;\n                }\n                else {\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    _this.removeFetchQueryPromise(requestId);\n                    throw new ApolloError({ networkError: error });\n                }\n            });\n            // we don't return the promise for cache-and-network since it is already\n            // returned below from the cache\n            if (fetchPolicy !== 'cache-and-network') {\n                return networkResult;\n            }\n            else {\n                // however we need to catch the error so it isn't unhandled in case of\n                // network error\n                networkResult.catch(function () { });\n            }\n        }\n        // If we have no query to send to the server, we should return the result\n        // found within the store.\n        return Promise.resolve({ data: storeResult });\n    };\n    // Returns a query listener that will update the given observer based on the\n    // results (or lack thereof) for a particular query.\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData) {\n            // we're going to take a look at the data, so the query is no longer invalidated\n            _this.invalidate(false, queryId);\n            // The query store value can be undefined in the event of a store\n            // reset.\n            if (!queryStoreValue)\n                return;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            // don't watch the store for queries on standby\n            if (fetchPolicy === 'standby')\n                return;\n            var errorPolicy = observableQuery\n                ? observableQuery.options.errorPolicy\n                : options.errorPolicy;\n            var lastResult = observableQuery\n                ? observableQuery.getLastResult()\n                : null;\n            var lastError = observableQuery ? observableQuery.getLastError() : null;\n            var shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            // if this caused by a cache broadcast but the query is still in flight\n            // don't notify the observer\n            // if (\n            //   isCacheBroadcast &&\n            //   isNetworkRequestInFlight(queryStoreValue.networkStatus)\n            // ) {\n            //   shouldNotifyIfLoading = false;\n            // }\n            var networkStatusChanged = Boolean(lastResult &&\n                queryStoreValue.networkStatus !== lastResult.networkStatus);\n            var errorStatusChanged = errorPolicy &&\n                (lastError && lastError.graphQLErrors) !==\n                    queryStoreValue.graphQLErrors &&\n                errorPolicy !== 'none';\n            if (!isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                shouldNotifyIfLoading) {\n                // If we have either a GraphQL error or a network error, we create\n                // an error and tell the observer about it.\n                if (((!errorPolicy || errorPolicy === 'none') &&\n                    queryStoreValue.graphQLErrors &&\n                    queryStoreValue.graphQLErrors.length > 0) ||\n                    queryStoreValue.networkError) {\n                    var apolloError_1 = new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    });\n                    previouslyHadError = true;\n                    if (observer.error) {\n                        try {\n                            observer.error(apolloError_1);\n                        }\n                        catch (e) {\n                            // Throw error outside this control flow to avoid breaking Apollo's state\n                            setTimeout(function () {\n                                throw e;\n                            }, 0);\n                        }\n                    }\n                    else {\n                        // Throw error outside this control flow to avoid breaking Apollo's state\n                        setTimeout(function () {\n                            throw apolloError_1;\n                        }, 0);\n                        if (!isProduction()) {\n                            /* tslint:disable-next-line */\n                            console.info('An unhandled error was thrown because no error handler is registered ' +\n                                'for the query ' +\n                                print(queryStoreValue.document));\n                        }\n                    }\n                    return;\n                }\n                try {\n                    var data = void 0;\n                    var isMissing = void 0;\n                    if (newData) {\n                        // clear out the latest new data, since we're now using it\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                        data = newData.result;\n                        isMissing = !newData.complete || false;\n                    }\n                    else {\n                        if (lastResult && lastResult.data && !errorStatusChanged) {\n                            data = lastResult.data;\n                            isMissing = false;\n                        }\n                        else {\n                            var document_1 = _this.getQuery(queryId).document;\n                            var readResult = _this.dataStore.getCache().diff({\n                                query: document_1,\n                                variables: queryStoreValue.previousVariables ||\n                                    queryStoreValue.variables,\n                                optimistic: true,\n                            });\n                            data = readResult.result;\n                            isMissing = !readResult.complete;\n                        }\n                    }\n                    var resultFromStore = void 0;\n                    // If there is some data missing and the user has told us that they\n                    // do not tolerate partial data then we want to return the previous\n                    // result and mark it as stale.\n                    if (isMissing && fetchPolicy !== 'cache-only') {\n                        resultFromStore = {\n                            data: lastResult && lastResult.data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: true,\n                        };\n                    }\n                    else {\n                        resultFromStore = {\n                            data: data,\n                            loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                            networkStatus: queryStoreValue.networkStatus,\n                            stale: false,\n                        };\n                    }\n                    // if the query wants updates on errors we need to add it to the result\n                    if (errorPolicy === 'all' &&\n                        queryStoreValue.graphQLErrors &&\n                        queryStoreValue.graphQLErrors.length > 0) {\n                        resultFromStore.errors = queryStoreValue.graphQLErrors;\n                    }\n                    if (observer.next) {\n                        var isDifferentResult = !(lastResult &&\n                            resultFromStore &&\n                            lastResult.networkStatus === resultFromStore.networkStatus &&\n                            lastResult.stale === resultFromStore.stale &&\n                            // We can do a strict equality check here because we include a `previousResult`\n                            // with `readQueryFromStore`. So if the results are the same they will be\n                            // referentially equal.\n                            lastResult.data === resultFromStore.data);\n                        if (isDifferentResult || previouslyHadError) {\n                            try {\n                                observer.next(maybeDeepFreeze(resultFromStore));\n                            }\n                            catch (e) {\n                                // Throw error outside this control flow to avoid breaking Apollo's state\n                                setTimeout(function () {\n                                    throw e;\n                                }, 0);\n                            }\n                        }\n                    }\n                    previouslyHadError = false;\n                }\n                catch (error) {\n                    previouslyHadError = true;\n                    if (observer.error)\n                        observer.error(new ApolloError({ networkError: error }));\n                    return;\n                }\n            }\n        };\n    };\n    // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n    // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n    // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n    // but we don't want to keep track observables issued for the query method since those aren't\n    // supposed to be refetched in the event of a store reset. Once we unify error handling for\n    // network errors and non-network errors, the shouldSubscribe option will go away.\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        if (options.fetchPolicy === 'standby') {\n            throw new Error('client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        }\n        // get errors synchronously\n        var queryDefinition = getQueryDefinition(options.query);\n        // assign variable default values if supplied\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = getDefaultValues(queryDefinition);\n            options.variables = assign({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            scheduler: this.scheduler,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        if (!options.query) {\n            throw new Error('query option is required. You must specify your GraphQL document ' +\n                'in the query option.');\n        }\n        if (options.query.kind !== 'Document') {\n            throw new Error('You must wrap the query string in a \"gql\" tag.');\n        }\n        if (options.returnPartialData) {\n            throw new Error('returnPartialData option only supported on watchQuery.');\n        }\n        if (options.pollInterval) {\n            throw new Error('pollInterval option only supported on watchQuery.');\n        }\n        var requestId = this.idCounter;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            return _this.watchQuery(options, false)\n                .result()\n                .then(function (result) {\n                _this.removeFetchQueryPromise(requestId);\n                resolve(result);\n            })\n                .catch(function (error) {\n                _this.removeFetchQueryPromise(requestId);\n                reject(error);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidate: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    // Adds a promise to this.fetchQueryPromises for a given request ID.\n    QueryManager.prototype.addFetchQueryPromise = function (requestId, resolve, reject) {\n        this.fetchQueryPromises.set(requestId.toString(), {\n            resolve: resolve,\n            reject: reject,\n        });\n    };\n    // Removes the promise in this.fetchQueryPromises for a particular request ID.\n    QueryManager.prototype.removeFetchQueryPromise = function (requestId) {\n        this.fetchQueryPromises.delete(requestId.toString());\n    };\n    // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        // Insert the ObservableQuery into this.observableQueriesByName if the query has a name\n        var queryDef = getQueryDefinition(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            // XXX we may we want to warn the user about query name conflicts in the future\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = getQueryDefinition(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        // Before we have sent the reset action to the store,\n        // we can no longer rely on the results returned by in-flight\n        // requests since these may depend on values that previously existed\n        // in the data portion of the store. So, we cancel the promises and observers\n        // that we have issued so far and not yet resolved (in the case of\n        // queries).\n        this.fetchQueryPromises.forEach(function (_a) {\n            var reject = _a.reject;\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        // begin removing data from the store\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        // Similarly, we have to have to refetch each of the queries currently being\n        // observed. We refetch instead of error'ing on these since the assumption is that\n        // resetting the store doesn't eliminate the need for the queries currently being\n        // watched. If there is an existing query in flight when the store is reset,\n        // the promise for it will be rejected and its results will not be written to the\n        // store.\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n            // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = assign({}, getDefaultValues(getOperationDefinition(query)), options.variables);\n        var sub;\n        var observers = [];\n        return new Observable(function (observer) {\n            observers.push(observer);\n            // If this is the first observer, actually initiate the network subscription\n            if (observers.length === 1) {\n                var handler = {\n                    next: function (result) {\n                        _this.dataStore.markSubscriptionResult(result, transformedDoc, variables);\n                        _this.broadcastQueries();\n                        // It's slightly awkward that the data for subscriptions doesn't come from the store.\n                        observers.forEach(function (obs) {\n                            // XXX I'd prefer a different way to handle errors for subscriptions\n                            if (obs.next)\n                                obs.next(result);\n                        });\n                    },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error)\n                                obs.error(error);\n                        });\n                    },\n                };\n                // TODO: Should subscriptions also accept a `context` option to pass\n                // through to links?\n                var operation = _this.buildOperationForLink(transformedDoc, variables);\n                sub = execute(_this.link, operation).subscribe(handler);\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                // If we removed the last observer, tear down the network subscription\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryInStore(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        // teardown all links\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        // XXX test this\n        if (newData) {\n            return maybeDeepFreeze({ data: newData.result, partial: false });\n        }\n        else {\n            try {\n                // the query is brand new, so we read from the store to see if anything is there\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                });\n                return maybeDeepFreeze({ data: data, partial: false });\n            }\n            catch (e) {\n                return maybeDeepFreeze({ data: {}, partial: true });\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            if (!foundObserveableQuery) {\n                throw new Error(\"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            }\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                // it's possible for the listener to be undefined if the query is being stopped\n                // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData);\n            });\n        });\n    };\n    // Takes a request id, query id, a query document and information associated with the query\n    // and send it to the network interface. Returns\n    // a promise for the result associated with that request.\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var operation = this.buildOperationForLink(document, variables, __assign({}, context, { \n            // TODO: Should this be included for all entry points via\n            // buildOperationForLink?\n            forceFetch: !this.queryDeduplication }));\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            _this.addFetchQueryPromise(requestId, resolve, reject);\n            var subscription = execute(_this.deduplicator, operation).subscribe({\n                next: function (result) {\n                    // default the lastRequestId to 1\n                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                    if (requestId >= (lastRequestId || 1)) {\n                        if (fetchPolicy !== 'no-cache') {\n                            try {\n                                _this.dataStore.markQueryResult(result, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                            }\n                            catch (e) {\n                                reject(e);\n                                return;\n                            }\n                        }\n                        else {\n                            _this.setQuery(queryId, function () { return ({\n                                newData: { result: result.data, complete: true },\n                            }); });\n                        }\n                        _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                        _this.broadcastQueries();\n                    }\n                    if (result.errors && errorPolicy === 'none') {\n                        reject(new ApolloError({\n                            graphQLErrors: result.errors,\n                        }));\n                        return;\n                    }\n                    else if (errorPolicy === 'all') {\n                        errorsFromStore = result.errors;\n                    }\n                    if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                        // We don't write fetchMore results to the store because this would overwrite\n                        // the original result in case an @connection directive is used.\n                        resultFromStore = result.data;\n                    }\n                    else {\n                        try {\n                            // ensure result is combined with data already in store\n                            resultFromStore = _this.dataStore.getCache().read({\n                                variables: variables,\n                                query: document,\n                                optimistic: false,\n                            });\n                            // this will throw an error if there are missing fields in\n                            // the results which can happen with errors from the server.\n                            // tslint:disable-next-line\n                        }\n                        catch (e) { }\n                    }\n                },\n                error: function (error) {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    _this.removeFetchQueryPromise(requestId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        });\n    };\n    // Refetches a query given that query's name. Refetches\n    // all ObservableQuery instances associated with the query name.\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        // early return if the query named does not exist (not yet fetched)\n        // this used to warn but it may be inteneded behavoir to try and refetch\n        // un called queries because they could be on different routes\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return this.queries.get(queryId) || __assign({}, defaultQueryInfo);\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: getOperationName(document) || undefined,\n            context: __assign({}, extraContext, { cache: cache, \n                // getting an entry's cache key is useful for cacheResolvers & state-link\n                getCacheKey: function (obj) {\n                    if (cache.config) {\n                        // on the link, we just want the id string, not the full id value from toIdValue\n                        return cache.config.dataIdFromObject(obj);\n                    }\n                    else {\n                        throw new Error('To use context.getCacheKey, you need to use a cache that has a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                    }\n                } }),\n        };\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\n//# sourceMappingURL=QueryManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/core/QueryManager.js\n// module id = 1941\n// module chunks = 0","// The QueryScheduler is supposed to be a mechanism that schedules polling queries such that\n// they are clustered into the time slots of the QueryBatcher and are batched together. It\n// also makes sure that for a given polling query, if one instance of the query is inflight,\n// another instance will not be fired until the query returns or times out. We do this because\n// another query fires while one is already in flight, the data will stay in the \"loading\" state\n// even after the first query has returned.\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { FetchType } from '../core/types';\nimport { ObservableQuery } from '../core/ObservableQuery';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryScheduler = /** @class */ (function () {\n    function QueryScheduler(_a) {\n        var queryManager = _a.queryManager, ssrMode = _a.ssrMode;\n        // Map going from queryIds to query options that are in flight.\n        this.inFlightQueries = {};\n        // Map going from query ids to the query options associated with those queries. Contains all of\n        // the queries, both in flight and not in flight.\n        this.registeredQueries = {};\n        // Map going from polling interval with to the query ids that fire on that interval.\n        // These query ids are associated with a set of options in the this.registeredQueries.\n        this.intervalQueries = {};\n        // Map going from polling interval widths to polling timers.\n        this.pollingTimers = {};\n        this.ssrMode = false;\n        this.queryManager = queryManager;\n        this.ssrMode = ssrMode || false;\n    }\n    QueryScheduler.prototype.checkInFlight = function (queryId) {\n        var query = this.queryManager.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryScheduler.prototype.fetchQuery = function (queryId, options, fetchType) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.queryManager\n                .fetchQuery(queryId, options, fetchType)\n                .then(function (result) {\n                resolve(result);\n            })\n                .catch(function (error) {\n                reject(error);\n            });\n        });\n    };\n    QueryScheduler.prototype.startPollingQuery = function (options, queryId, listener) {\n        if (!options.pollInterval) {\n            throw new Error('Attempted to start a polling query without a polling interval.');\n        }\n        // Do not poll in SSR mode\n        if (this.ssrMode)\n            return queryId;\n        this.registeredQueries[queryId] = options;\n        if (listener) {\n            this.queryManager.addQueryListener(queryId, listener);\n        }\n        this.addQueryOnInterval(queryId, options);\n        return queryId;\n    };\n    QueryScheduler.prototype.stopPollingQuery = function (queryId) {\n        // Remove the query options from one of the registered queries.\n        // The polling function will then take care of not firing it anymore.\n        delete this.registeredQueries[queryId];\n    };\n    // Fires the all of the queries on a particular interval. Called on a setInterval.\n    QueryScheduler.prototype.fetchQueriesOnInterval = function (interval) {\n        var _this = this;\n        // XXX this \"filter\" here is nasty, because it does two things at the same time.\n        // 1. remove queries that have stopped polling\n        // 2. call fetchQueries for queries that are polling and not in flight.\n        // TODO: refactor this to make it cleaner\n        this.intervalQueries[interval] = this.intervalQueries[interval].filter(function (queryId) {\n            // If queryOptions can't be found from registeredQueries or if it has a\n            // different interval, it means that this queryId is no longer registered\n            // and should be removed from the list of queries firing on this interval.\n            //\n            // We don't remove queries from intervalQueries immediately in\n            // stopPollingQuery so that we can keep the timer consistent when queries\n            // are removed and replaced, and to avoid quadratic behavior when stopping\n            // many queries.\n            if (!(_this.registeredQueries.hasOwnProperty(queryId) &&\n                _this.registeredQueries[queryId].pollInterval === interval)) {\n                return false;\n            }\n            // Don't fire this instance of the polling query is one of the instances is already in\n            // flight.\n            if (_this.checkInFlight(queryId)) {\n                return true;\n            }\n            var queryOptions = _this.registeredQueries[queryId];\n            var pollingOptions = __assign({}, queryOptions);\n            pollingOptions.fetchPolicy = 'network-only';\n            // don't let unhandled rejections happen\n            _this.fetchQuery(queryId, pollingOptions, FetchType.poll).catch(function () { });\n            return true;\n        });\n        if (this.intervalQueries[interval].length === 0) {\n            clearInterval(this.pollingTimers[interval]);\n            delete this.intervalQueries[interval];\n        }\n    };\n    // Adds a query on a particular interval to this.intervalQueries and then fires\n    // that query with all the other queries executing on that interval. Note that the query id\n    // and query options must have been added to this.registeredQueries before this function is called.\n    QueryScheduler.prototype.addQueryOnInterval = function (queryId, queryOptions) {\n        var _this = this;\n        var interval = queryOptions.pollInterval;\n        if (!interval) {\n            throw new Error(\"A poll interval is required to start polling query with id '\" + queryId + \"'.\");\n        }\n        // If there are other queries on this interval, this query will just fire with those\n        // and we don't need to create a new timer.\n        if (this.intervalQueries.hasOwnProperty(interval.toString()) &&\n            this.intervalQueries[interval].length > 0) {\n            this.intervalQueries[interval].push(queryId);\n        }\n        else {\n            this.intervalQueries[interval] = [queryId];\n            // set up the timer for the function that will handle this interval\n            this.pollingTimers[interval] = setInterval(function () {\n                _this.fetchQueriesOnInterval(interval);\n            }, interval);\n        }\n    };\n    // Used only for unit testing.\n    QueryScheduler.prototype.registerPollingQuery = function (queryOptions) {\n        if (!queryOptions.pollInterval) {\n            throw new Error('Attempted to register a non-polling query with the scheduler.');\n        }\n        return new ObservableQuery({\n            scheduler: this,\n            options: queryOptions,\n        });\n    };\n    return QueryScheduler;\n}());\nexport { QueryScheduler };\n//# sourceMappingURL=scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/scheduler/scheduler.js\n// module id = 1942\n// module chunks = 0","var MutationStore = /** @class */ (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutationString, variables) {\n        this.store[mutationId] = {\n            mutationString: mutationString,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\nexport { MutationStore };\n//# sourceMappingURL=mutations.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/data/mutations.js\n// module id = 1943\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { print } from 'graphql/language/printer';\nimport { isEqual } from 'apollo-utilities';\nimport { NetworkStatus } from '../core/networkStatus';\nvar QueryStore = /** @class */ (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            print(previousQuery.document) !== print(query.document)) {\n            // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n            // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n            // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n            throw new Error('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading\n        // if the previous query was still loading, we don't want to remember it at all.\n        ) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        // TODO break this out into a separate function\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n            // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n        // the store. We probably want a refetch action instead, because I suspect that if you refetch\n        // before the initial fetch is done, you'll get an error.\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        // If the action had a `moreForQueryId` property then we need to set the\n        // network status on that query as well to `fetchMore`.\n        //\n        // We have a complement to this if statement in the query result and query\n        // error action branch, but importantly *not* in the client result branch.\n        // This is because the implementation of `fetchMore` *always* sets\n        // `fetchPolicy` to `network-only` so we would never have a client result.\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        // If we have a `fetchMoreForQueryId` then we need to update the network\n        // status for that query. See the branch for query initialization for more\n        // explanation about this process.\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? NetworkStatus.ready\n            : NetworkStatus.loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        // keep only the queries with query ids that are associated with observables\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            // XXX set loading to true so listeners don't trigger unless they want results with partial data\n            res[key] = __assign({}, _this.store[key], { networkStatus: NetworkStatus.loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\nexport { QueryStore };\n//# sourceMappingURL=queries.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/data/queries.js\n// module id = 1944\n// module chunks = 0","import { getOperationName, tryFunctionOrLogError, graphQLResultHasError, } from 'apollo-utilities';\nvar DataStore = /** @class */ (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        // the subscription interface should handle not sending us results we no longer subscribe to.\n        // XXX I don't think we ever send in an object with errors, but we might in the future...\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        // Incorporate the result from this mutation into the store\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    // Read the current query result from the store.\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    // Run our reducer using the current query result and the mutation result.\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    // Write the modified result back into the store if we got a new result.\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            // If the mutation has some writes associated with it then we need to\n            // apply those writes to the store by running this reducer again with a\n            // write action.\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\nexport { DataStore };\n//# sourceMappingURL=store.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/data/store.js\n// module id = 1945\n// module chunks = 0","exports.version = \"2.3.5\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-client-preset/node_modules/apollo-client/version.js\n// module id = 1946\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { ApolloLink, Observable, fromError } from 'apollo-link';\nimport { serializeFetchParameter, selectURI, parseAndCheckHttpResponse, checkFetcher, selectHttpOptionsAndBody, createSignalIfSupported, fallbackHttpConfig, } from 'apollo-link-http-common';\nexport var createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, \n    // use default global fetch is nothing passed in\n    fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    // dev warnings to ensure fetch is present\n    checkFetcher(fetcher);\n    //fetcher is set here rather than the destructuring to ensure fetch is\n    //declared before referencing it. Reference in the destructuring would cause\n    //a ReferenceError\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: context.headers,\n        };\n        //uses fallback, link, and then context to build options\n        var _a = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _a.options, body = _a.body;\n        var controller;\n        if (!options.signal) {\n            var _b = createSignalIfSupported(), _controller = _b.controller, signal = _b.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        // If requested, set method to GET if there are no mutations.\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _c = rewriteURIForGET(chosenURI, body), newURI = _c.newURI, parseError = _c.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(parseAndCheckHttpResponse(operation))\n                .then(function (result) {\n                // we have data and can send it to back up the link chain\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                // fetch was cancelled so its already been cleaned up in the unsubscribe\n                if (err.name === 'AbortError')\n                    return;\n                // if it is a network error, BUT there is graphql result info\n                // fire the next observer before calling error\n                // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n                // to pass to UI\n                // this should only happen if we *also* have data as part of the response key per\n                // the spec\n                if (err.result && err.result.errors && err.result.data) {\n                    // if we dont' call next, the UI can only show networkError because AC didn't\n                    // get andy graphqlErrors\n                    // this is graphql execution result info (i.e errors and possibly data)\n                    // this is because there is no formal spec how errors should translate to\n                    // http status codes. So an auth error (401) could have both data\n                    // from a public field, errors from a private field, and a status of 401\n                    // {\n                    //  user { // this will have errors\n                    //    firstName\n                    //  }\n                    //  products { // this is public so will have data\n                    //    cost\n                    //  }\n                    // }\n                    //\n                    // the result of above *could* look like this:\n                    // {\n                    //   data: { products: [{ cost: \"$10\" }] },\n                    //   errors: [{\n                    //      message: 'your session has timed out',\n                    //      path: []\n                    //   }]\n                    // }\n                    // status code of above would be a 401\n                    // in the UI you want to show data where you can, errors as data where you can\n                    // and use correct http status codes\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                // XXX support canceling this request\n                // https://developers.google.com/web/updates/2017/09/abortable-fetch\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI, body) {\n    // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n    // the extra level of JSON serialization!\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    // Reconstruct the URI with added query params.\n    // XXX This assumes that the URI is well-formed and that it doesn't\n    //     already contain any of these query params. We could instead use the\n    //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n    //     don't support URLSearchParams. Note that some browsers (and\n    //     versions of whatwg-url) support URL but not URLSearchParams!\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = /** @class */ (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(ApolloLink));\nexport { HttpLink };\n//# sourceMappingURL=httpLink.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-link-http/lib/httpLink.js\n// module id = 1948\n// module chunks = 0","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { print } from 'graphql/language/printer';\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    // headers are case insensitive (https://stackoverflow.com/a/5259004)\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\n//TODO: when conditional types come in ts 2.8, operations should be a generic type that extends Operation | Array<Operation>\nexport var parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            //Network error\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        //TODO should really error per response in a Batch based on properties\n        //    - could be done in a validation link\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            //Data error\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw new Error(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nexport var createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nexport var selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    /*\n     * use the rest of the configs to populate the options\n     * configs later in the list will overwrite earlier fields\n     */\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    //The body depends on the http options\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    // not sending the query (i.e persisted queries)\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nexport var serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = new Error(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\n//selects \"/graphql\" by default\nexport var selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-link-http-common/lib/index.js\n// module id = 1949\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nimport { ApolloCache } from 'apollo-cache';\nimport { getFragmentQueryDocument, addTypenameToDocument, } from 'apollo-utilities';\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport { writeResultToStore } from './writeToStore';\nimport { readQueryFromStore, diffQueryAgainstStore } from './readFromStore';\nimport { defaultNormalizedCacheFactory } from './objectCache';\nimport { record } from './recordingCache';\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    storeFactory: defaultNormalizedCacheFactory,\n};\nexport function defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar InMemoryCache = /** @class */ (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.optimistic = [];\n        _this.watches = [];\n        _this.typenameDocumentCache = new WeakMap();\n        // Set this while in a transaction to prevent broadcasts...\n        // don't forget to turn it back on!\n        _this.silenceBroadcast = false;\n        _this.config = __assign({}, defaultConfig, config);\n        // backwards compat\n        if (_this.config.customResolvers) {\n            console.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            console.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = _this.config.addTypename;\n        _this.data = _this.config.storeFactory();\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        if (optimistic && this.optimistic.length > 0) {\n            var patches = this.optimistic.map(function (opt) { return opt.data; });\n            return Object.assign.apply(Object, [{}, this.data.toObject()].concat(patches));\n        }\n        return this.data.toObject();\n    };\n    InMemoryCache.prototype.read = function (query) {\n        if (query.rootId && this.data.get(query.rootId) === undefined) {\n            return null;\n        }\n        return readQueryFromStore({\n            store: this.config.storeFactory(this.extract(query.optimistic)),\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            rootId: query.rootId,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            previousResult: query.previousResult,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.write = function (write) {\n        writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        return diffQueryAgainstStore({\n            store: this.config.storeFactory(this.extract(query.optimistic)),\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.push(watch);\n        return function () {\n            _this.watches = _this.watches.filter(function (c) { return c !== watch; });\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw new Error(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (id) {\n        var _this = this;\n        // Throw away optimistic changes of that particular mutation\n        var toPerform = this.optimistic.filter(function (item) { return item.id !== id; });\n        this.optimistic = [];\n        // Re-run all of our optimistic data actions on top of one another.\n        toPerform.forEach(function (change) {\n            _this.recordOptimisticTransaction(change.transaction, change.id);\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction) {\n        // TODO: does this need to be different, or is this okay for an in-memory cache?\n        var alreadySilenced = this.silenceBroadcast;\n        this.silenceBroadcast = true;\n        transaction(this);\n        if (!alreadySilenced) {\n            // Don't un-silence since this is a nested transaction\n            // (for example, a transaction inside an optimistic record)\n            this.silenceBroadcast = false;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        var _this = this;\n        this.silenceBroadcast = true;\n        var patch = record(this.extract(true), function (recordingCache) {\n            // swapping data instance on 'this' is currently necessary\n            // because of the current architecture\n            var dataCache = _this.data;\n            _this.data = recordingCache;\n            _this.performTransaction(transaction);\n            _this.data = dataCache;\n        });\n        this.optimistic.push({\n            id: id,\n            transaction: transaction,\n            data: patch,\n        });\n        this.silenceBroadcast = false;\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                this.typenameDocumentCache.set(document, (result = addTypenameToDocument(document)));\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    InMemoryCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            query: this.transformDocument(getFragmentQueryDocument(options.fragment, options.fragmentName)),\n            variables: options.variables,\n        });\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        // Skip this when silenced (like inside a transaction)\n        if (this.silenceBroadcast)\n            return;\n        // right now, we invalidate all queries whenever anything changes\n        this.watches.forEach(function (c) {\n            var newData = _this.diff({\n                query: c.query,\n                variables: c.variables,\n                // TODO: previousResult isn't in the types - this will only work\n                // with ObservableQuery which is in a different package\n                previousResult: c.previousResult && c.previousResult(),\n                optimistic: c.optimistic,\n            });\n            c.callback(newData);\n        });\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n//# sourceMappingURL=inMemoryCache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/lib/inMemoryCache.js\n// module id = 1950\n// module chunks = 0","import { getFragmentQueryDocument } from 'apollo-utilities';\nimport { justTypenameQuery, queryFromPojo, fragmentFromPojo } from './utils';\nvar ApolloCache = /** @class */ (function () {\n    function ApolloCache() {\n    }\n    // optional API\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    // experimental\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    // DataProxy API\n    /**\n     *\n     * @param options\n     * @param optimistic\n     */\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            // Since we can't use fragments without having a typename in the store,\n            // we need to make sure we have one.\n            // To avoid overwriting an existing typename, we need to read it out first\n            // and generate a fake one if none exists.\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n                // Do nothing, since an error just means no typename exists\n            }\n            // tslint:disable-next-line\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            // Add a type here to satisfy the inmemory cache\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\nexport { ApolloCache };\n//# sourceMappingURL=cache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache/lib/cache.js\n// module id = 1952\n// module chunks = 0","export function queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nexport function fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        // No selection set here\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        // GraphQL queries don't include arrays\n        return selectionSetFromObj(obj[0]);\n    }\n    // Now we know it's an object\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n        };\n        // Recurse\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        if (nestedSelSet) {\n            field.selectionSet = nestedSelSet;\n        }\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nexport var justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache/lib/utils.js\n// module id = 1953\n// module chunks = 0","export var Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n//# sourceMappingURL=Cache.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache/lib/types/Cache.js\n// module id = 1955\n// module chunks = 0","export { filter, check, propType } from './utilities';\nimport { graphql } from './graphql';\nexport default graphql;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/index.js\n// module id = 1956\n// module chunks = 0","import { graphql } from './graphql';\nexport function filter(doc, data) {\n    var resolver = function (fieldName, root, args, context, info) {\n        return root[info.resultKey];\n    };\n    return graphql(resolver, doc, data);\n}\n// TODO: we should probably make check call propType and then throw,\n// rather than the other way round, to avoid constructing stack traces\n// for things like oneOf uses in React. At this stage I doubt many people\n// are using this like that, but in the future, who knows?\nexport function check(doc, data) {\n    var resolver = function (fieldName, root, args, context, info) {\n        if (!{}.hasOwnProperty.call(root, info.resultKey)) {\n            throw new Error(info.resultKey + \" missing on \" + root);\n        }\n        return root[info.resultKey];\n    };\n    graphql(resolver, doc, data, {}, {}, {\n        fragmentMatcher: function () { return false; },\n    });\n}\n// Lifted/adapted from\n//   https://github.com/facebook/react/blob/master/src/isomorphic/classic/types/ReactPropTypes.js\nvar ANONYMOUS = '<<anonymous>>';\nfunction PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n}\n// Make `instanceof Error` still work for returned errors.\nPropTypeError.prototype = Error.prototype;\nvar reactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context',\n};\nfunction createChainableTypeChecker(validate) {\n    function checkType(isRequired, props, propName, componentName, location, propFullName) {\n        componentName = componentName || ANONYMOUS;\n        propFullName = propFullName || propName;\n        if (props[propName] == null) {\n            var locationName = reactPropTypeLocationNames[location];\n            if (isRequired) {\n                if (props[propName] === null) {\n                    return new PropTypeError(\"The \" + locationName + \" `\" + propFullName + \"` is marked as required \" +\n                        (\"in `\" + componentName + \"`, but its value is `null`.\"));\n                }\n                return new PropTypeError(\"The \" + locationName + \" `\" + propFullName + \"` is marked as required in \" +\n                    (\"`\" + componentName + \"`, but its value is `undefined`.\"));\n            }\n            return null;\n        }\n        else {\n            return validate(props, propName, componentName, location, propFullName);\n        }\n    }\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n}\nexport function propType(doc) {\n    return createChainableTypeChecker(function (props, propName) {\n        var prop = props[propName];\n        try {\n            if (!prop.loading) {\n                check(doc, prop);\n            }\n            return null;\n        }\n        catch (e) {\n            // Need a much better error.\n            // Also we aren't checking for extra fields\n            return e;\n        }\n    });\n}\n//# sourceMappingURL=utilities.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/apollo-cache-inmemory/node_modules/graphql-anywhere/lib/utilities.js\n// module id = 1957\n// module chunks = 0","\nimport { GraphQLError } from './GraphQLError';\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError('Syntax Error: ' + description, undefined, source, [position]);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/syntaxError.mjs\n// module id = 1958\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\n\n\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n */\nexport function formatError(error) {\n  !error ? invariant(0, 'Received null or undefined error.') : void 0;\n  return _extends({}, error.extensions, {\n    message: error.message || 'An unknown error occurred.',\n    locations: error.locations,\n    path: error.path\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/error/formatError.mjs\n// module id = 1959\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.filterTypesByIncludeExclude = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends3 = require('babel-runtime/helpers/extends');\n\nvar _extends4 = _interopRequireDefault(_extends3);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');\n\nvar _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _templateObject = (0, _taggedTemplateLiteral3.default)(['\\n                      ', '\\n                  '], ['\\n                      ', '\\n                  ']);\n\nvar _graphql = require('graphql');\n\nvar _graphqlTag = require('graphql-tag');\n\nvar _graphqlTag2 = _interopRequireDefault(_graphqlTag);\n\nvar _reactAdmin = require('react-admin');\n\nvar _constants = require('./constants');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar filterTypesByIncludeExclude = exports.filterTypesByIncludeExclude = function filterTypesByIncludeExclude(_ref) {\n    var include = _ref.include,\n        exclude = _ref.exclude;\n\n    if (Array.isArray(include)) {\n        return function (type) {\n            return include.includes(type.name);\n        };\n    }\n\n    if (typeof include === 'function') {\n        return function (type) {\n            return include(type);\n        };\n    }\n\n    if (Array.isArray(exclude)) {\n        return function (type) {\n            return !exclude.includes(type.name);\n        };\n    }\n\n    if (typeof exclude === 'function') {\n        return function (type) {\n            return !exclude(type);\n        };\n    }\n\n    return function () {\n        return true;\n    };\n};\n\n/**\n * @param {ApolloClient} client The Apollo client\n * @param {Object} options The introspection options\n */\n\nexports.default = function () {\n    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(client, options) {\n        var schema, queries, types, isResource, buildResource, potentialResources, filteredResources, resources;\n        return _regenerator2.default.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        if (!options.schema) {\n                            _context.next = 4;\n                            break;\n                        }\n\n                        _context.t0 = options.schema;\n                        _context.next = 7;\n                        break;\n\n                    case 4:\n                        _context.next = 6;\n                        return client.query({\n                            query: (0, _graphqlTag2.default)(_templateObject, _graphql.introspectionQuery)\n                        }).then(function (_ref3) {\n                            var __schema = _ref3.data.__schema;\n                            return __schema;\n                        });\n\n                    case 6:\n                        _context.t0 = _context.sent;\n\n                    case 7:\n                        schema = _context.t0;\n                        queries = schema.types.reduce(function (acc, type) {\n                            if (type.name !== 'Query' && type.name !== 'Mutation') return acc;\n\n                            return [].concat((0, _toConsumableArray3.default)(acc), (0, _toConsumableArray3.default)(type.fields));\n                        }, []);\n                        types = schema.types.filter(function (type) {\n                            return type.name !== 'Query' && type.name !== 'Mutation';\n                        });\n\n                        isResource = function isResource(type) {\n                            return queries.some(function (query) {\n                                return query.name === options.operationNames[_reactAdmin.GET_LIST](type);\n                            }) && queries.some(function (query) {\n                                return query.name === options.operationNames[_reactAdmin.GET_ONE](type);\n                            });\n                        };\n\n                        buildResource = function buildResource(type) {\n                            return _constants.ALL_TYPES.reduce(function (acc, aorFetchType) {\n                                return (0, _extends4.default)({}, acc, (0, _defineProperty3.default)({}, aorFetchType, queries.find(function (query) {\n                                    return options.operationNames[aorFetchType] && query.name == options.operationNames[aorFetchType](type);\n                                })));\n                            }, { type: type });\n                        };\n\n                        potentialResources = types.filter(isResource);\n                        filteredResources = potentialResources.filter(filterTypesByIncludeExclude(options));\n                        resources = filteredResources.map(buildResource);\n                        return _context.abrupt('return', {\n                            types: types,\n                            queries: queries,\n                            resources: resources\n                        });\n\n                    case 16:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n\n    return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n    };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql/lib/introspection.js\n// module id = 1960\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-properties\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/babel-runtime/core-js/object/define-properties.js\n// module id = 1961\n// module chunks = 0","require('../../modules/es6.object.define-properties');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperties(T, D) {\n  return $Object.defineProperties(T, D);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/core-js/library/fn/object/define-properties.js\n// module id = 1962\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/core-js/library/modules/es6.object.define-properties.js\n// module id = 1963\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/babel-runtime/core-js/object/freeze.js\n// module id = 1964\n// module chunks = 0","require('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/core-js/library/fn/object/freeze.js\n// module id = 1965\n// module chunks = 0","// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/core-js/library/modules/es6.object.freeze.js\n// module id = 1966\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { validateSchema } from './type/validate';\nimport { parse } from './language/parser';\nimport { validate } from './validation/validate';\nimport { execute } from './execution/execute';\n\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n */\n\n/* eslint-disable no-redeclare */\n\nexport function graphql(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  var _arguments = arguments;\n\n  /* eslint-enable no-redeclare */\n  // Always return a Promise for a consistent API.\n  return new Promise(function (resolve) {\n    return resolve(\n    // Extract arguments from object args if provided.\n    _arguments.length === 1 ? graphqlImpl(argsOrSchema.schema, argsOrSchema.source, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : graphqlImpl(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver));\n  });\n}\n\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function graphqlSync(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Extract arguments from object args if provided.\n  var result = arguments.length === 1 ? graphqlImpl(argsOrSchema.schema, argsOrSchema.source, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver) : graphqlImpl(argsOrSchema, source, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n  // Assert that the execution was synchronous.\n  if (result.then) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(schema, source, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // Validate Schema\n  var schemaValidationErrors = validateSchema(schema);\n  if (schemaValidationErrors.length > 0) {\n    return { errors: schemaValidationErrors };\n  }\n\n  // Parse\n  var document = void 0;\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return { errors: [syntaxError] };\n  }\n\n  // Validate\n  var validationErrors = validate(schema, document);\n  if (validationErrors.length > 0) {\n    return { errors: validationErrors };\n  }\n\n  // Execute\n  return execute(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/graphql.mjs\n// module id = 1967\n// module chunks = 0","\nimport { GraphQLError } from '../../error'; /**\n                                             * Copyright (c) 2015-present, Facebook, Inc.\n                                             *\n                                             * This source code is licensed under the MIT license found in the\n                                             * LICENSE file in the root directory of this source tree.\n                                             *\n                                             *  strict\n                                             */\n\nimport { Kind } from '../../language/kinds';\n\n\nexport function nonExecutableDefinitionMessage(defName) {\n  return 'The ' + defName + ' definition is not executable.';\n}\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n */\nexport function ExecutableDefinitions(context) {\n  return {\n    Document: function Document(node) {\n      node.definitions.forEach(function (definition) {\n        if (definition.kind !== Kind.OPERATION_DEFINITION && definition.kind !== Kind.FRAGMENT_DEFINITION) {\n          context.reportError(new GraphQLError(nonExecutableDefinitionMessage(definition.kind === Kind.SCHEMA_DEFINITION ? 'schema' : definition.name.value), [definition]));\n        }\n      });\n      return false;\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/rules/ExecutableDefinitions.mjs\n// module id = 1968\n// module chunks = 0","/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Memoizes the provided three-argument function.\n */\nexport default function memoize3(fn) {\n  var cache0 = void 0;\n  function memoized(a1, a2, a3) {\n    if (!cache0) {\n      cache0 = new WeakMap();\n    }\n    var cache1 = cache0.get(a1);\n    var cache2 = void 0;\n    if (cache1) {\n      cache2 = cache1.get(a2);\n      if (cache2) {\n        var cachedValue = cache2.get(a3);\n        if (cachedValue !== undefined) {\n          return cachedValue;\n        }\n      }\n    } else {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n    if (!cache2) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n    var newValue = fn.apply(this, arguments);\n    cache2.set(a3, newValue);\n    return newValue;\n  }\n  return memoized;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/memoize3.mjs\n// module id = 1969\n// module chunks = 0","\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport default function promiseForObject(object) {\n  var keys = Object.keys(object);\n  var valuesAndPromises = keys.map(function (name) {\n    return object[name];\n  });\n  return Promise.all(valuesAndPromises).then(function (values) {\n    return values.reduce(function (resolvedObject, value, i) {\n      resolvedObject[keys[i]] = value;\n      return resolvedObject;\n    }, Object.create(null));\n  });\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/promiseForObject.mjs\n// module id = 1970\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport isPromise from './isPromise';\n\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport default function promiseReduce(values, callback, initialValue) {\n  return values.reduce(function (previous, value) {\n    return isPromise(previous) ? previous.then(function (resolved) {\n      return callback(resolved, value);\n    }) : callback(previous, value);\n  }, initialValue);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/jsutils/promiseReduce.mjs\n// module id = 1971\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport {\n// Predicate\nisSchema,\n// GraphQL Schema definition\nGraphQLSchema } from './schema';\n\nexport {\n// Predicates\nisType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isListType, isNonNullType, isInputType, isOutputType, isLeafType, isCompositeType, isAbstractType, isWrappingType, isNullableType, isNamedType,\n// Assertions\nassertType, assertScalarType, assertObjectType, assertInterfaceType, assertUnionType, assertEnumType, assertInputObjectType, assertListType, assertNonNullType, assertInputType, assertOutputType, assertLeafType, assertCompositeType, assertAbstractType, assertWrappingType, assertNullableType, assertNamedType,\n// Un-modifiers\ngetNullableType, getNamedType,\n// Definitions\nGraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType,\n// Type Wrappers\nGraphQLList, GraphQLNonNull } from './definition';\n\nexport {\n// Predicate\nisDirective,\n// Directives Definition\nGraphQLDirective,\n// Built-in Directives defined by the Spec\nisSpecifiedDirective, specifiedDirectives, GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective,\n// Constant Deprecation Reason\nDEFAULT_DEPRECATION_REASON } from './directives';\n\n// Common built-in scalar instances.\nexport { isSpecifiedScalarType, specifiedScalarTypes, GraphQLInt, GraphQLFloat, GraphQLString, GraphQLBoolean, GraphQLID } from './scalars';\n\nexport {\n// \"Enum\" of Type Kinds\nTypeKind,\n// GraphQL Types for introspection.\nisIntrospectionType, introspectionTypes, __Schema, __Directive, __DirectiveLocation, __Type, __Field, __InputValue, __EnumValue, __TypeKind,\n// Meta-field definitions.\nSchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef } from './introspection';\n\nexport { validateSchema, assertValidSchema } from './validate';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/type/index.mjs\n// module id = 1972\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport { getLocation } from './location';\n\nexport { Kind } from './kinds';\n\nexport { createLexer, TokenKind } from './lexer';\nexport { parse, parseValue, parseType } from './parser';\nexport { print } from './printer';\nexport { Source } from './source';\nexport { visit, visitInParallel, visitWithTypeInfo, getVisitFn, BREAK } from './visitor';\n\n\nexport { DirectiveLocation } from './directiveLocation';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/language/index.mjs\n// module id = 1973\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport { execute, defaultFieldResolver, responsePathAsArray } from './execute';\nexport { getDirectiveValues } from './values';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/execution/index.mjs\n// module id = 1974\n// module chunks = 0","/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport { subscribe, createSourceEventStream } from './subscribe';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/subscription/index.mjs\n// module id = 1975\n// module chunks = 0","/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { isAsyncIterable } from 'iterall';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { locatedError } from '../error/locatedError';\nimport { addPath, assertValidExecutionArguments, buildExecutionContext, buildResolveInfo, collectFields, execute, getFieldDef, getOperationRootType, resolveFieldValueOrError, responsePathAsArray } from '../execution/execute';\nimport { GraphQLSchema } from '../type/schema';\nimport mapAsyncIterator from './mapAsyncIterator';\n\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (client error). The promise will be rejected if a\n * server error occurs.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\n/* eslint-disable no-redeclare */\n\nexport function subscribe(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  /* eslint-enable no-redeclare */\n  // Extract arguments from object args if provided.\n  return arguments.length === 1 ? subscribeImpl(argsOrSchema.schema, argsOrSchema.document, argsOrSchema.rootValue, argsOrSchema.contextValue, argsOrSchema.variableValues, argsOrSchema.operationName, argsOrSchema.fieldResolver, argsOrSchema.subscribeFieldResolver) : subscribeImpl(argsOrSchema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver);\n}\n\n/**\n * This function checks if the error is a GraphQLError. If it is, report it as\n * an ExecutionResult, containing only errors and no data. Otherwise treat the\n * error as a system-class error and re-throw it.\n */\nfunction reportGraphQLError(error) {\n  if (error instanceof GraphQLError) {\n    return { errors: [error] };\n  }\n  throw error;\n}\n\nfunction subscribeImpl(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver, subscribeFieldResolver) {\n  var sourcePromise = createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, subscribeFieldResolver);\n\n  // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n  var mapSourceToResponse = function mapSourceToResponse(payload) {\n    return execute(schema, document, payload, contextValue, variableValues, operationName, fieldResolver);\n  };\n\n  // Resolve the Source Stream, then map every source value to a\n  // ExecutionResult value as described above.\n  return sourcePromise.then(function (resultOrStream) {\n    return (\n      // Note: Flow can't refine isAsyncIterable, so explicit casts are used.\n      isAsyncIterable(resultOrStream) ? mapAsyncIterator(resultOrStream, mapSourceToResponse, reportGraphQLError) : resultOrStream\n    );\n  }, reportGraphQLError);\n}\n\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise<AsyncIterable>.\n *\n * If the client-provided invalid arguments, the source stream could not be\n * created, or the resolver did not return an AsyncIterable, this function will\n * will throw an error, which should be caught and handled by the caller.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\nexport function createSourceEventStream(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  assertValidExecutionArguments(schema, document, variableValues);\n\n  try {\n    // If a valid context cannot be created due to incorrect arguments,\n    // this will throw an error.\n    var exeContext = buildExecutionContext(schema, document, rootValue, contextValue, variableValues, operationName, fieldResolver);\n\n    // Return early errors if execution context failed.\n    if (Array.isArray(exeContext)) {\n      return Promise.resolve({ errors: exeContext });\n    }\n\n    var type = getOperationRootType(schema, exeContext.operation);\n    var fields = collectFields(exeContext, type, exeContext.operation.selectionSet, Object.create(null), Object.create(null));\n    var responseNames = Object.keys(fields);\n    var responseName = responseNames[0];\n    var fieldNodes = fields[responseName];\n    var fieldNode = fieldNodes[0];\n    var fieldName = fieldNode.name.value;\n    var fieldDef = getFieldDef(schema, type, fieldName);\n\n    if (!fieldDef) {\n      throw new GraphQLError('The subscription field \"' + fieldName + '\" is not defined.', fieldNodes);\n    }\n\n    // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n    var resolveFn = fieldDef.subscribe || exeContext.fieldResolver;\n\n    var path = addPath(undefined, responseName);\n\n    var info = buildResolveInfo(exeContext, fieldDef, fieldNodes, type, path);\n\n    // resolveFieldValueOrError implements the \"ResolveFieldEventStream\"\n    // algorithm from GraphQL specification. It differs from\n    // \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    var result = resolveFieldValueOrError(exeContext, fieldDef, fieldNodes, resolveFn, rootValue, info);\n\n    // Coerce to Promise for easier error handling and consistent return type.\n    return Promise.resolve(result).then(function (eventStream) {\n      // If eventStream is an Error, rethrow a located error.\n      if (eventStream instanceof Error) {\n        throw locatedError(eventStream, fieldNodes, responsePathAsArray(path));\n      }\n\n      // Assert field returned an event stream, otherwise yield an error.\n      if (isAsyncIterable(eventStream)) {\n        // Note: isAsyncIterable above ensures this will be correct.\n        return eventStream;\n      }\n      throw new Error('Subscription field must return Async Iterable. Received: ' + String(eventStream));\n    });\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/subscription/subscribe.mjs\n// module id = 1976\n// module chunks = 0","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { $$asyncIterator, getAsyncIterator } from 'iterall';\n\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = getAsyncIterator(iterable);\n  var $return = void 0;\n  var abruptClose = void 0;\n  // $FlowFixMe(>=0.68.0)\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject = void 0;\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({ value: undefined, done: true });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, $$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return { value: value, done: false };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/subscription/mapAsyncIterator.mjs\n// module id = 1977\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nexport { validate } from './validate';\n\n// https://github.com/tc39/proposal-export-default-from\nimport ValidationContext from './ValidationContext';\nexport { ValidationContext };\n\nexport { specifiedRules } from './specifiedRules';\n\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\nexport { FieldsOnCorrectType as FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectType';\n\n// Spec Section: \"Fragments on Composite Types\"\nexport { FragmentsOnCompositeTypes as FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypes';\n\n// Spec Section: \"Argument Names\"\nexport { KnownArgumentNames as KnownArgumentNamesRule } from './rules/KnownArgumentNames';\n\n// Spec Section: \"Directives Are Defined\"\nexport { KnownDirectives as KnownDirectivesRule } from './rules/KnownDirectives';\n\n// Spec Section: \"Fragment spread target defined\"\nexport { KnownFragmentNames as KnownFragmentNamesRule } from './rules/KnownFragmentNames';\n\n// Spec Section: \"Fragment Spread Type Existence\"\nexport { KnownTypeNames as KnownTypeNamesRule } from './rules/KnownTypeNames';\n\n// Spec Section: \"Lone Anonymous Operation\"\nexport { LoneAnonymousOperation as LoneAnonymousOperationRule } from './rules/LoneAnonymousOperation';\n\n// Spec Section: \"Fragments must not form cycles\"\nexport { NoFragmentCycles as NoFragmentCyclesRule } from './rules/NoFragmentCycles';\n\n// Spec Section: \"All Variable Used Defined\"\nexport { NoUndefinedVariables as NoUndefinedVariablesRule } from './rules/NoUndefinedVariables';\n\n// Spec Section: \"Fragments must be used\"\nexport { NoUnusedFragments as NoUnusedFragmentsRule } from './rules/NoUnusedFragments';\n\n// Spec Section: \"All Variables Used\"\nexport { NoUnusedVariables as NoUnusedVariablesRule } from './rules/NoUnusedVariables';\n\n// Spec Section: \"Field Selection Merging\"\nexport { OverlappingFieldsCanBeMerged as OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMerged';\n\n// Spec Section: \"Fragment spread is possible\"\nexport { PossibleFragmentSpreads as PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreads';\n\n// Spec Section: \"Argument Optionality\"\nexport { ProvidedNonNullArguments as ProvidedNonNullArgumentsRule } from './rules/ProvidedNonNullArguments';\n\n// Spec Section: \"Leaf Field Selections\"\nexport { ScalarLeafs as ScalarLeafsRule } from './rules/ScalarLeafs';\n\n// Spec Section: \"Subscriptions with Single Root Field\"\nexport { SingleFieldSubscriptions as SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptions';\n\n// Spec Section: \"Argument Uniqueness\"\nexport { UniqueArgumentNames as UniqueArgumentNamesRule } from './rules/UniqueArgumentNames';\n\n// Spec Section: \"Directives Are Unique Per Location\"\nexport { UniqueDirectivesPerLocation as UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocation';\n\n// Spec Section: \"Fragment Name Uniqueness\"\nexport { UniqueFragmentNames as UniqueFragmentNamesRule } from './rules/UniqueFragmentNames';\n\n// Spec Section: \"Input Object Field Uniqueness\"\nexport { UniqueInputFieldNames as UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNames';\n\n// Spec Section: \"Operation Name Uniqueness\"\nexport { UniqueOperationNames as UniqueOperationNamesRule } from './rules/UniqueOperationNames';\n\n// Spec Section: \"Variable Uniqueness\"\nexport { UniqueVariableNames as UniqueVariableNamesRule } from './rules/UniqueVariableNames';\n\n// Spec Section: \"Values Type Correctness\"\nexport { ValuesOfCorrectType as ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectType';\n\n// Spec Section: \"Variables are Input Types\"\nexport { VariablesAreInputTypes as VariablesAreInputTypesRule } from './rules/VariablesAreInputTypes';\n\n// Spec Section: \"Variables Default Value Is Allowed\"\nexport { VariablesDefaultValueAllowed as VariablesDefaultValueAllowedRule } from './rules/VariablesDefaultValueAllowed';\n\n// Spec Section: \"All Variable Usages Are Allowed\"\nexport { VariablesInAllowedPosition as VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPosition';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/validation/index.mjs\n// module id = 1978\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n// The GraphQL query recommended for a full schema introspection.\nexport { getIntrospectionQuery,\n// Deprecated, use getIntrospectionQuery()\nintrospectionQuery } from './introspectionQuery';\n\n\n// Gets the target Operation from a Document\nexport { getOperationAST } from './getOperationAST';\n\n// Convert a GraphQLSchema to an IntrospectionQuery\nexport { introspectionFromSchema } from './introspectionFromSchema';\n\n// Build a GraphQLSchema from an introspection result.\nexport { buildClientSchema } from './buildClientSchema';\n\n// Build a GraphQLSchema from GraphQL Schema language.\nexport { buildASTSchema, buildSchema, getDescription } from './buildASTSchema';\n\n\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema } from './extendSchema';\n\n// Sort a GraphQLSchema.\nexport { lexicographicSortSchema } from './lexicographicSortSchema';\n\n// Print a GraphQLSchema to GraphQL Schema language.\nexport { printSchema, printType, printIntrospectionSchema } from './schemaPrinter';\n\n// Create a GraphQLType from a GraphQL language AST.\nexport { typeFromAST } from './typeFromAST';\n\n// Create a JavaScript value from a GraphQL language AST with a type.\nexport { valueFromAST } from './valueFromAST';\n\n// Create a JavaScript value from a GraphQL language AST without a type.\nexport { valueFromASTUntyped } from './valueFromASTUntyped';\n\n// Create a GraphQL language AST from a JavaScript value.\nexport { astFromValue } from './astFromValue';\n\n// A helper to use within recursive-descent visitors which need to be aware of\n// the GraphQL type system.\nexport { TypeInfo } from './TypeInfo';\n\n// Coerces a JavaScript value to a GraphQL type, or produces errors.\nexport { coerceValue } from './coerceValue';\n\n// @deprecated use coerceValue\nexport { isValidJSValue } from './isValidJSValue';\n\n// Determine if AST values adhere to a GraphQL type.\nexport { isValidLiteralValue } from './isValidLiteralValue';\n\n// Concatenates multiple AST together.\nexport { concatAST } from './concatAST';\n\n// Separates an AST into an AST per Operation.\nexport { separateOperations } from './separateOperations';\n\n// Comparators for types\nexport { isEqualType, isTypeSubTypeOf, doTypesOverlap } from './typeComparators';\n\n// Asserts that a string is a valid GraphQL name\nexport { assertValidName, isValidNameError } from './assertValidName';\n\n// Compares two GraphQLSchemas and detects breaking changes.\nexport { BreakingChangeType, DangerousChangeType, findBreakingChanges, findDangerousChanges } from './findBreakingChanges';\n\n\n// Report all deprecated usage within a GraphQL document.\nexport { findDeprecatedUsages } from './findDeprecatedUsages';\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/index.mjs\n// module id = 1979\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { Kind } from '../language/kinds';\n\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nexport function getOperationAST(documentAST, operationName) {\n  var operation = null;\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var definition = documentAST.definitions[i];\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      if (!operationName) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n        operation = definition;\n      } else if (definition.name && definition.name.value === operationName) {\n        return definition;\n      }\n    }\n  }\n  return operation;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/getOperationAST.mjs\n// module id = 1980\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\nimport { getIntrospectionQuery } from './introspectionQuery';\nimport { GraphQLSchema } from '../type/schema';\nimport { execute } from '../execution/execute';\nimport { parse } from '../language/parser';\n\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nexport function introspectionFromSchema(schema, options) {\n  var queryAST = parse(getIntrospectionQuery(options));\n  var result = execute(schema, queryAST);\n  !(!result.then && !result.errors && result.data) ? invariant(0) : void 0;\n  return result.data;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/introspectionFromSchema.mjs\n// module id = 1981\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\nimport keyMap from '../jsutils/keyMap';\nimport keyValMap from '../jsutils/keyValMap';\nimport { valueFromAST } from './valueFromAST';\nimport { parseValue } from '../language/parser';\nimport { GraphQLSchema } from '../type/schema';\n\nimport { DirectiveLocation } from '../language/directiveLocation';\n\nimport { isInputType, isOutputType, GraphQLScalarType, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, assertNullableType, assertObjectType, assertInterfaceType } from '../type/definition';\n\nimport { GraphQLDirective } from '../type/directives';\n\nimport { introspectionTypes, TypeKind } from '../type/introspection';\n\nimport { specifiedScalarTypes } from '../type/scalars';\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nexport function buildClientSchema(introspection, options) {\n  // Get the schema from the introspection result.\n  var schemaIntrospection = introspection.__schema;\n\n  // Converts the list of types into a keyMap based on the type names.\n  var typeIntrospectionMap = keyMap(schemaIntrospection.types, function (type) {\n    return type.name;\n  });\n\n  // A cache to use to store the actual GraphQLType definition objects by name.\n  // Initialize to the GraphQL built in scalars. All functions below are inline\n  // so that this type def cache is within the scope of the closure.\n  var typeDefCache = keyMap(specifiedScalarTypes.concat(introspectionTypes), function (type) {\n    return type.name;\n  });\n\n  // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      var itemRef = typeRef.ofType;\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      return GraphQLList(getType(itemRef));\n    }\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      var nullableRef = typeRef.ofType;\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n      var nullableType = getType(nullableRef);\n      return GraphQLNonNull(assertNullableType(nullableType));\n    }\n    if (!typeRef.name) {\n      throw new Error('Unknown type reference: ' + JSON.stringify(typeRef));\n    }\n    return getNamedType(typeRef.name);\n  }\n\n  function getNamedType(typeName) {\n    if (typeDefCache[typeName]) {\n      return typeDefCache[typeName];\n    }\n    var typeIntrospection = typeIntrospectionMap[typeName];\n    if (!typeIntrospection) {\n      throw new Error('Invalid or incomplete schema, unknown type: ' + typeName + '. Ensure ' + 'that a full introspection query is used in order to build a ' + 'client schema.');\n    }\n    var typeDef = buildType(typeIntrospection);\n    typeDefCache[typeName] = typeDef;\n    return typeDef;\n  }\n\n  function getInputType(typeRef) {\n    var type = getType(typeRef);\n    !isInputType(type) ? invariant(0, 'Introspection must provide input type for arguments.') : void 0;\n    return type;\n  }\n\n  function getOutputType(typeRef) {\n    var type = getType(typeRef);\n    !isOutputType(type) ? invariant(0, 'Introspection must provide output type for fields.') : void 0;\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    var type = getType(typeRef);\n    return assertObjectType(type);\n  }\n\n  function getInterfaceType(typeRef) {\n    var type = getType(typeRef);\n    return assertInterfaceType(type);\n  }\n\n  // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n  function buildType(type) {\n    if (type && type.name && type.kind) {\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n    throw new Error('Invalid or incomplete introspection result. Ensure that a full ' + 'introspection query is used in order to build a client schema:' + JSON.stringify(type));\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      serialize: function serialize(value) {\n        return value;\n      }\n    });\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    if (!objectIntrospection.interfaces) {\n      throw new Error('Introspection result missing interfaces: ' + JSON.stringify(objectIntrospection));\n    }\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: objectIntrospection.interfaces.map(getInterfaceType),\n      fields: function fields() {\n        return buildFieldDefMap(objectIntrospection);\n      }\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      fields: function fields() {\n        return buildFieldDefMap(interfaceIntrospection);\n      }\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      throw new Error('Introspection result missing possibleTypes: ' + JSON.stringify(unionIntrospection));\n    }\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: unionIntrospection.possibleTypes.map(getObjectType)\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      throw new Error('Introspection result missing enumValues: ' + JSON.stringify(enumIntrospection));\n    }\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(enumIntrospection.enumValues, function (valueIntrospection) {\n        return valueIntrospection.name;\n      }, function (valueIntrospection) {\n        return {\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason\n        };\n      })\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      throw new Error('Introspection result missing inputFields: ' + JSON.stringify(inputObjectIntrospection));\n    }\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: function fields() {\n        return buildInputValueDefMap(inputObjectIntrospection.inputFields);\n      }\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error('Introspection result missing fields: ' + JSON.stringify(typeIntrospection));\n    }\n    return keyValMap(typeIntrospection.fields, function (fieldIntrospection) {\n      return fieldIntrospection.name;\n    }, function (fieldIntrospection) {\n      if (!fieldIntrospection.args) {\n        throw new Error('Introspection result missing field args: ' + JSON.stringify(fieldIntrospection));\n      }\n      return {\n        description: fieldIntrospection.description,\n        deprecationReason: fieldIntrospection.deprecationReason,\n        type: getOutputType(fieldIntrospection.type),\n        args: buildInputValueDefMap(fieldIntrospection.args)\n      };\n    });\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(inputValueIntrospections, function (inputValue) {\n      return inputValue.name;\n    }, buildInputValue);\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    var type = getInputType(inputValueIntrospection.type);\n    var defaultValue = inputValueIntrospection.defaultValue ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type) : undefined;\n    return {\n      name: inputValueIntrospection.name,\n      description: inputValueIntrospection.description,\n      type: type,\n      defaultValue: defaultValue\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    // Support deprecated `on****` fields for building `locations`, as this\n    // is used by GraphiQL which may need to support outdated servers.\n    var locations = directiveIntrospection.locations ? directiveIntrospection.locations.slice() : [].concat(!directiveIntrospection.onField ? [] : [DirectiveLocation.FIELD], !directiveIntrospection.onOperation ? [] : [DirectiveLocation.QUERY, DirectiveLocation.MUTATION, DirectiveLocation.SUBSCRIPTION], !directiveIntrospection.onFragment ? [] : [DirectiveLocation.FRAGMENT_DEFINITION, DirectiveLocation.FRAGMENT_SPREAD, DirectiveLocation.INLINE_FRAGMENT]);\n    if (!directiveIntrospection.args) {\n      throw new Error('Introspection result missing directive args: ' + JSON.stringify(directiveIntrospection));\n    }\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      locations: locations,\n      args: buildInputValueDefMap(directiveIntrospection.args)\n    });\n  }\n\n  // Iterate through all types, getting the type definition for each, ensuring\n  // that any type not directly referenced by a field will get created.\n  var types = schemaIntrospection.types.map(function (typeIntrospection) {\n    return getNamedType(typeIntrospection.name);\n  });\n\n  // Get the root Query, Mutation, and Subscription types.\n  var queryType = schemaIntrospection.queryType ? getObjectType(schemaIntrospection.queryType) : null;\n\n  var mutationType = schemaIntrospection.mutationType ? getObjectType(schemaIntrospection.mutationType) : null;\n\n  var subscriptionType = schemaIntrospection.subscriptionType ? getObjectType(schemaIntrospection.subscriptionType) : null;\n\n  // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n  var directives = schemaIntrospection.directives ? schemaIntrospection.directives.map(buildDirective) : [];\n\n  // Then produce and return a Schema with these types.\n  return new GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: directives,\n    assumeValid: options && options.assumeValid,\n    allowedLegacyNames: options && options.allowedLegacyNames\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/buildClientSchema.mjs\n// module id = 1982\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport invariant from '../jsutils/invariant';\nimport keyMap from '../jsutils/keyMap';\nimport objectValues from '../jsutils/objectValues';\nimport { ASTDefinitionBuilder } from './buildASTSchema';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isSchema, GraphQLSchema } from '../type/schema';\nimport { isIntrospectionType } from '../type/introspection';\n\nimport { isObjectType, isInterfaceType, isUnionType, isListType, isNonNullType, GraphQLList, GraphQLNonNull, GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType } from '../type/definition';\n\nimport { GraphQLDirective } from '../type/directives';\n\nimport { Kind } from '../language/kinds';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n *\n * Accepts options as a third argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function extendSchema(schema, documentAST, options) {\n  !isSchema(schema) ? invariant(0, 'Must provide valid GraphQLSchema') : void 0;\n\n  !(documentAST && documentAST.kind === Kind.DOCUMENT) ? invariant(0, 'Must provide valid Document AST') : void 0;\n\n  // Collect the type definitions and extensions found in the document.\n  var typeDefinitionMap = Object.create(null);\n  var typeExtensionsMap = Object.create(null);\n\n  // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n  var directiveDefinitions = [];\n\n  for (var i = 0; i < documentAST.definitions.length; i++) {\n    var def = documentAST.definitions[i];\n    switch (def.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION:\n      case Kind.INTERFACE_TYPE_DEFINITION:\n      case Kind.ENUM_TYPE_DEFINITION:\n      case Kind.UNION_TYPE_DEFINITION:\n      case Kind.SCALAR_TYPE_DEFINITION:\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n        // Sanity check that none of the defined types conflict with the\n        // schema's existing types.\n        var typeName = def.name.value;\n        if (schema.getType(typeName)) {\n          throw new GraphQLError('Type \"' + typeName + '\" already exists in the schema. It cannot also ' + 'be defined in this type definition.', [def]);\n        }\n        typeDefinitionMap[typeName] = def;\n        break;\n      case Kind.OBJECT_TYPE_EXTENSION:\n      case Kind.INTERFACE_TYPE_EXTENSION:\n        // Sanity check that this type extension exists within the\n        // schema's existing types.\n        var extendedTypeName = def.name.value;\n        var existingType = schema.getType(extendedTypeName);\n        if (!existingType) {\n          throw new GraphQLError('Cannot extend type \"' + extendedTypeName + '\" because it does not ' + 'exist in the existing schema.', [def]);\n        }\n        checkExtensionNode(existingType, def);\n\n        var existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n        typeExtensionsMap[extendedTypeName] = existingTypeExtensions ? existingTypeExtensions.concat([def]) : [def];\n        break;\n      case Kind.DIRECTIVE_DEFINITION:\n        var directiveName = def.name.value;\n        var existingDirective = schema.getDirective(directiveName);\n        if (existingDirective) {\n          throw new GraphQLError('Directive \"' + directiveName + '\" already exists in the schema. It ' + 'cannot be redefined.', [def]);\n        }\n        directiveDefinitions.push(def);\n        break;\n      case Kind.SCALAR_TYPE_EXTENSION:\n      case Kind.UNION_TYPE_EXTENSION:\n      case Kind.ENUM_TYPE_EXTENSION:\n      case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n        throw new Error('The ' + def.kind + ' kind is not yet supported by extendSchema().');\n    }\n  }\n\n  // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n  if (Object.keys(typeExtensionsMap).length === 0 && Object.keys(typeDefinitionMap).length === 0 && directiveDefinitions.length === 0) {\n    return schema;\n  }\n\n  var astBuilder = new ASTDefinitionBuilder(typeDefinitionMap, options, function (typeRef) {\n    var typeName = typeRef.name.value;\n    var existingType = schema.getType(typeName);\n    if (existingType) {\n      return getExtendedType(existingType);\n    }\n\n    throw new GraphQLError('Unknown type: \"' + typeName + '\". Ensure that this type exists ' + 'either in the original schema, or is added in a type definition.', [typeRef]);\n  });\n\n  var extendTypeCache = Object.create(null);\n\n  // Get the root Query, Mutation, and Subscription object types.\n  var existingQueryType = schema.getQueryType();\n  var queryType = existingQueryType ? getExtendedType(existingQueryType) : null;\n\n  var existingMutationType = schema.getMutationType();\n  var mutationType = existingMutationType ? getExtendedType(existingMutationType) : null;\n\n  var existingSubscriptionType = schema.getSubscriptionType();\n  var subscriptionType = existingSubscriptionType ? getExtendedType(existingSubscriptionType) : null;\n\n  var types = [].concat(objectValues(schema.getTypeMap()).map(function (type) {\n    return getExtendedType(type);\n  }), astBuilder.buildTypes(objectValues(typeDefinitionMap)));\n\n  // Support both original legacy names and extended legacy names.\n  var schemaAllowedLegacyNames = schema.__allowedLegacyNames;\n  var extendAllowedLegacyNames = options && options.allowedLegacyNames;\n  var allowedLegacyNames = schemaAllowedLegacyNames && extendAllowedLegacyNames ? schemaAllowedLegacyNames.concat(extendAllowedLegacyNames) : schemaAllowedLegacyNames || extendAllowedLegacyNames;\n\n  // Then produce and return a Schema with these types.\n  return new GraphQLSchema({\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: types,\n    directives: getMergedDirectives(),\n    astNode: schema.astNode,\n    allowedLegacyNames: allowedLegacyNames\n  });\n\n  // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function getMergedDirectives() {\n    var existingDirectives = schema.getDirectives();\n    !existingDirectives ? invariant(0, 'schema must have default directives') : void 0;\n\n    return existingDirectives.concat(directiveDefinitions.map(function (node) {\n      return astBuilder.buildDirective(node);\n    }));\n  }\n\n  function getExtendedType(type) {\n    if (!extendTypeCache[type.name]) {\n      extendTypeCache[type.name] = extendType(type);\n    }\n    return extendTypeCache[type.name];\n  }\n\n  // To be called at most once per type. Only getExtendedType should call this.\n  function extendType(type) {\n    if (isIntrospectionType(type)) {\n      // Introspection types are not extended.\n      return type;\n    }\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n    // This type is not yet extendable.\n    return type;\n  }\n\n  function extendObjectType(type) {\n    var name = type.name;\n    var extensionASTNodes = typeExtensionsMap[name] ? type.extensionASTNodes ? type.extensionASTNodes.concat(typeExtensionsMap[name]) : typeExtensionsMap[name] : type.extensionASTNodes;\n    return new GraphQLObjectType({\n      name: name,\n      description: type.description,\n      interfaces: function interfaces() {\n        return extendImplementedInterfaces(type);\n      },\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      isTypeOf: type.isTypeOf\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var name = type.name;\n    var extensionASTNodes = typeExtensionsMap[name] ? type.extensionASTNodes ? type.extensionASTNodes.concat(typeExtensionsMap[name]) : typeExtensionsMap[name] : type.extensionASTNodes;\n    return new GraphQLInterfaceType({\n      name: type.name,\n      description: type.description,\n      fields: function fields() {\n        return extendFieldMap(type);\n      },\n      astNode: type.astNode,\n      extensionASTNodes: extensionASTNodes,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendUnionType(type) {\n    return new GraphQLUnionType({\n      name: type.name,\n      description: type.description,\n      types: type.getTypes().map(getExtendedType),\n      astNode: type.astNode,\n      resolveType: type.resolveType\n    });\n  }\n\n  function extendImplementedInterfaces(type) {\n    var interfaces = type.getInterfaces().map(getExtendedType);\n\n    // If there are any extensions to the interfaces, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.interfaces.forEach(function (namedType) {\n          // Note: While this could make early assertions to get the correctly\n          // typed values, that would throw immediately while type system\n          // validation with validateSchema() will produce more actionable results.\n          interfaces.push(astBuilder.buildType(namedType));\n        });\n      });\n    }\n\n    return interfaces;\n  }\n\n  function extendFieldMap(type) {\n    var newFieldMap = Object.create(null);\n    var oldFieldMap = type.getFields();\n    Object.keys(oldFieldMap).forEach(function (fieldName) {\n      var field = oldFieldMap[fieldName];\n      newFieldMap[fieldName] = {\n        description: field.description,\n        deprecationReason: field.deprecationReason,\n        type: extendFieldType(field.type),\n        args: keyMap(field.args, function (arg) {\n          return arg.name;\n        }),\n        astNode: field.astNode,\n        resolve: field.resolve\n      };\n    });\n\n    // If there are any extensions to the fields, apply those here.\n    var extensions = typeExtensionsMap[type.name];\n    if (extensions) {\n      extensions.forEach(function (extension) {\n        extension.fields.forEach(function (field) {\n          var fieldName = field.name.value;\n          if (oldFieldMap[fieldName]) {\n            throw new GraphQLError('Field \"' + type.name + '.' + fieldName + '\" already exists in the ' + 'schema. It cannot also be defined in this type extension.', [field]);\n          }\n          newFieldMap[fieldName] = astBuilder.buildField(field);\n        });\n      });\n    }\n\n    return newFieldMap;\n  }\n\n  function extendFieldType(typeDef) {\n    if (isListType(typeDef)) {\n      return GraphQLList(extendFieldType(typeDef.ofType));\n    }\n    if (isNonNullType(typeDef)) {\n      return GraphQLNonNull(extendFieldType(typeDef.ofType));\n    }\n    return getExtendedType(typeDef);\n  }\n}\n\nfunction checkExtensionNode(type, node) {\n  switch (node.kind) {\n    case Kind.OBJECT_TYPE_EXTENSION:\n      if (!isObjectType(type)) {\n        throw new GraphQLError('Cannot extend non-object type \"' + type.name + '\".', [node]);\n      }\n      break;\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      if (!isInterfaceType(type)) {\n        throw new GraphQLError('Cannot extend non-interface type \"' + type.name + '\".', [node]);\n      }\n      break;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/extendSchema.mjs\n// module id = 1983\n// module chunks = 0","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport keyValMap from '../jsutils/keyValMap'; /**\n                                               * Copyright (c) 2015-present, Facebook, Inc.\n                                               *\n                                               * This source code is licensed under the MIT license found in the\n                                               * LICENSE file in the root directory of this source tree.\n                                               *\n                                               *  strict\n                                               */\n\nimport objectValues from '../jsutils/objectValues';\nimport { GraphQLSchema } from '../type/schema';\nimport { GraphQLDirective } from '../type/directives';\n\nimport { GraphQLObjectType, GraphQLInterfaceType, GraphQLUnionType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, isListType, isNonNullType, isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { isSpecifiedScalarType } from '../type/scalars';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Sort GraphQLSchema.\n */\nexport function lexicographicSortSchema(schema) {\n  var cache = Object.create(null);\n\n  var sortMaybeType = function sortMaybeType(maybeType) {\n    return maybeType && sortNamedType(maybeType);\n  };\n  return new GraphQLSchema({\n    types: sortTypes(objectValues(schema.getTypeMap())),\n    directives: sortByName(schema.getDirectives()).map(sortDirective),\n    query: sortMaybeType(schema.getQueryType()),\n    mutation: sortMaybeType(schema.getMutationType()),\n    subscription: sortMaybeType(schema.getSubscriptionType()),\n    astNode: schema.astNode\n  });\n\n  function sortDirective(directive) {\n    return new GraphQLDirective({\n      name: directive.name,\n      description: directive.description,\n      locations: sortBy(directive.locations, function (x) {\n        return x;\n      }),\n      args: sortArgs(directive.args),\n      astNode: directive.astNode\n    });\n  }\n\n  function sortArgs(args) {\n    return keyValMap(sortByName(args), function (arg) {\n      return arg.name;\n    }, function (arg) {\n      return _extends({}, arg, {\n        type: sortType(arg.type)\n      });\n    });\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return {\n        type: sortType(field.type),\n        args: sortArgs(field.args),\n        resolve: field.resolve,\n        subscribe: field.subscribe,\n        deprecationReason: field.deprecationReason,\n        description: field.description,\n        astNode: field.astNode\n      };\n    });\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, function (field) {\n      return {\n        type: sortType(field.type),\n        defaultValue: field.defaultValue,\n        description: field.description,\n        astNode: field.astNode\n      };\n    });\n  }\n\n  function sortType(type) {\n    if (isListType(type)) {\n      return new GraphQLList(sortType(type.ofType));\n    } else if (isNonNullType(type)) {\n      return new GraphQLNonNull(sortType(type.ofType));\n    }\n    return sortNamedType(type);\n  }\n\n  function sortTypes(arr) {\n    return sortByName(arr).map(sortNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isSpecifiedScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    }\n\n    var sortedType = cache[type.name];\n    if (!sortedType) {\n      sortedType = sortNamedTypeImpl(type);\n      cache[type.name] = sortedType;\n    }\n    return sortedType;\n  }\n\n  function sortNamedTypeImpl(type) {\n    if (isScalarType(type)) {\n      return type;\n    } else if (isObjectType(type)) {\n      return new GraphQLObjectType({\n        name: type.name,\n        interfaces: function interfaces() {\n          return sortTypes(type.getInterfaces());\n        },\n        fields: function fields() {\n          return sortFields(type.getFields());\n        },\n        isTypeOf: type.isTypeOf,\n        description: type.description,\n        astNode: type.astNode,\n        extensionASTNodes: type.extensionASTNodes\n      });\n    } else if (isInterfaceType(type)) {\n      return new GraphQLInterfaceType({\n        name: type.name,\n        fields: function fields() {\n          return sortFields(type.getFields());\n        },\n        resolveType: type.resolveType,\n        description: type.description,\n        astNode: type.astNode,\n        extensionASTNodes: type.extensionASTNodes\n      });\n    } else if (isUnionType(type)) {\n      return new GraphQLUnionType({\n        name: type.name,\n        types: function types() {\n          return sortTypes(type.getTypes());\n        },\n        resolveType: type.resolveType,\n        description: type.description,\n        astNode: type.astNode\n      });\n    } else if (isEnumType(type)) {\n      return new GraphQLEnumType({\n        name: type.name,\n        values: keyValMap(sortByName(type.getValues()), function (val) {\n          return val.name;\n        }, function (val) {\n          return {\n            value: val.value,\n            deprecationReason: val.deprecationReason,\n            description: val.description,\n            astNode: val.astNode\n          };\n        }),\n        description: type.description,\n        astNode: type.astNode\n      });\n    } else if (isInputObjectType(type)) {\n      return new GraphQLInputObjectType({\n        name: type.name,\n        fields: function fields() {\n          return sortInputFields(type.getFields());\n        },\n        description: type.description,\n        astNode: type.astNode\n      });\n    }\n    throw new Error('Unknown type: \"' + type + '\"');\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  var sortedMap = Object.create(null);\n  var sortedKeys = sortBy(Object.keys(map), function (x) {\n    return x;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = sortedKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      var value = map[key];\n      sortedMap[key] = sortValueFn ? sortValueFn(value) : value;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, function (obj) {\n    return obj.name;\n  });\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort(function (obj1, obj2) {\n    var key1 = mapToKey(obj1);\n    var key2 = mapToKey(obj2);\n    return key1.localeCompare(key2);\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/lexicographicSortSchema.mjs\n// module id = 1984\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\n\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\n\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\n\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n\n  var queryType = schema.getQueryType();\n  if (queryType) {\n    operationTypes.push('  query: ' + queryType.name);\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType) {\n    operationTypes.push('  mutation: ' + mutationType.name);\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType) {\n    operationTypes.push('  subscription: ' + subscriptionType.name);\n  }\n\n  return 'schema {\\n' + operationTypes.join('\\n') + '\\n}';\n}\n\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n  throw new Error('Unknown type: ' + type + '.');\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + ('scalar ' + type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + ('type ' + type.name + implementedInterfaces + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + ('interface ' + type.name + ' {\\n') + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + ('union ' + type.name + ' = ' + type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + ('enum ' + type.name + ' {\\n') + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + ('input ' + type.name + ' {\\n') + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  }\n\n  // If every arg does not have a description, print them on one line.\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += ' = ' + print(astFromValue(arg.defaultValue, arg.type));\n  }\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n  var reason = fieldOrEnumVal.deprecationReason;\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"';\n\n  // In some circumstances, a single line can be used for the description.\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  }\n\n  // Format a multi-line block quote to account for leading space.\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n  var parts = line.split(new RegExp('((?: |^).{15,' + (maxLen - 40) + '}(?= |$))'));\n  if (parts.length < 4) {\n    return [line];\n  }\n  var sublines = [parts[0] + parts[1] + parts[2]];\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n  return sublines;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/schemaPrinter.mjs\n// module id = 1985\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { coerceValue } from './coerceValue';\n\n\n/**\n * Deprecated. Use coerceValue() directly for richer information.\n */\nexport function isValidJSValue(value, type) {\n  var errors = coerceValue(value, type).errors;\n  return errors ? errors.map(function (error) {\n    return error.message;\n  }) : [];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/isValidJSValue.mjs\n// module id = 1986\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { TypeInfo } from './TypeInfo';\n\nimport { Kind } from '../language/kinds';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\n\nimport { GraphQLSchema } from '../type/schema';\nimport { ValuesOfCorrectType } from '../validation/rules/ValuesOfCorrectType';\nimport ValidationContext from '../validation/ValidationContext';\n\n/**\n * Utility which determines if a value literal node is valid for an input type.\n *\n * Deprecated. Rely on validation for documents containing literal values.\n */\nexport function isValidLiteralValue(type, valueNode) {\n  var emptySchema = new GraphQLSchema({});\n  var emptyDoc = { kind: Kind.DOCUMENT, definitions: [] };\n  var typeInfo = new TypeInfo(emptySchema, undefined, type);\n  var context = new ValidationContext(emptySchema, emptyDoc, typeInfo);\n  var visitor = ValuesOfCorrectType(context);\n  visit(valueNode, visitWithTypeInfo(typeInfo, visitor));\n  return context.getErrors();\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/isValidLiteralValue.mjs\n// module id = 1987\n// module chunks = 0","\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(asts) {\n  var batchDefinitions = [];\n  for (var i = 0; i < asts.length; i++) {\n    var definitions = asts[i].definitions;\n    for (var j = 0; j < definitions.length; j++) {\n      batchDefinitions.push(definitions[j]);\n    }\n  }\n  return {\n    kind: 'Document',\n    definitions: batchDefinitions\n  };\n} /**\n   * Copyright (c) 2015-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   *  strict\n   */\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/concatAST.mjs\n// module id = 1988\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { visit } from '../language/visitor';\n\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nexport function separateOperations(documentAST) {\n  var operations = [];\n  var fragments = Object.create(null);\n  var positions = new Map();\n  var depGraph = Object.create(null);\n  var fromName = void 0;\n  var idx = 0;\n\n  // Populate metadata and build a dependency graph.\n  visit(documentAST, {\n    OperationDefinition: function OperationDefinition(node) {\n      fromName = opName(node);\n      operations.push(node);\n      positions.set(node, idx++);\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      fromName = node.name.value;\n      fragments[fromName] = node;\n      positions.set(node, idx++);\n    },\n    FragmentSpread: function FragmentSpread(node) {\n      var toName = node.name.value;\n      (depGraph[fromName] || (depGraph[fromName] = Object.create(null)))[toName] = true;\n    }\n  });\n\n  // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n  var separatedDocumentASTs = Object.create(null);\n  operations.forEach(function (operation) {\n    var operationName = opName(operation);\n    var dependencies = Object.create(null);\n    collectTransitiveDependencies(dependencies, depGraph, operationName);\n\n    // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n    var definitions = [operation];\n    Object.keys(dependencies).forEach(function (name) {\n      definitions.push(fragments[name]);\n    });\n    definitions.sort(function (n1, n2) {\n      return (positions.get(n1) || 0) - (positions.get(n2) || 0);\n    });\n\n    separatedDocumentASTs[operationName] = {\n      kind: 'Document',\n      definitions: definitions\n    };\n  });\n\n  return separatedDocumentASTs;\n}\n\n// Provides the empty string for anonymous operations.\nfunction opName(operation) {\n  return operation.name ? operation.name.value : '';\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  var immediateDeps = depGraph[fromName];\n  if (immediateDeps) {\n    Object.keys(immediateDeps).forEach(function (toName) {\n      if (!collected[toName]) {\n        collected[toName] = true;\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    });\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/separateOperations.mjs\n// module id = 1989\n// module chunks = 0","/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType, isNonNullType, isListType, isNamedType } from '../type/definition';\n\nimport { GraphQLDirective } from '../type/directives';\nimport { GraphQLSchema } from '../type/schema';\nimport keyMap from '../jsutils/keyMap';\n\nexport var BreakingChangeType = {\n  FIELD_CHANGED_KIND: 'FIELD_CHANGED_KIND',\n  FIELD_REMOVED: 'FIELD_REMOVED',\n  TYPE_CHANGED_KIND: 'TYPE_CHANGED_KIND',\n  TYPE_REMOVED: 'TYPE_REMOVED',\n  TYPE_REMOVED_FROM_UNION: 'TYPE_REMOVED_FROM_UNION',\n  VALUE_REMOVED_FROM_ENUM: 'VALUE_REMOVED_FROM_ENUM',\n  ARG_REMOVED: 'ARG_REMOVED',\n  ARG_CHANGED_KIND: 'ARG_CHANGED_KIND',\n  NON_NULL_ARG_ADDED: 'NON_NULL_ARG_ADDED',\n  NON_NULL_INPUT_FIELD_ADDED: 'NON_NULL_INPUT_FIELD_ADDED',\n  INTERFACE_REMOVED_FROM_OBJECT: 'INTERFACE_REMOVED_FROM_OBJECT',\n  DIRECTIVE_REMOVED: 'DIRECTIVE_REMOVED',\n  DIRECTIVE_ARG_REMOVED: 'DIRECTIVE_ARG_REMOVED',\n  DIRECTIVE_LOCATION_REMOVED: 'DIRECTIVE_LOCATION_REMOVED',\n  NON_NULL_DIRECTIVE_ARG_ADDED: 'NON_NULL_DIRECTIVE_ARG_ADDED'\n};\n\nexport var DangerousChangeType = {\n  ARG_DEFAULT_VALUE_CHANGE: 'ARG_DEFAULT_VALUE_CHANGE',\n  VALUE_ADDED_TO_ENUM: 'VALUE_ADDED_TO_ENUM',\n  INTERFACE_ADDED_TO_OBJECT: 'INTERFACE_ADDED_TO_OBJECT',\n  TYPE_ADDED_TO_UNION: 'TYPE_ADDED_TO_UNION',\n  NULLABLE_INPUT_FIELD_ADDED: 'NULLABLE_INPUT_FIELD_ADDED',\n  NULLABLE_ARG_ADDED: 'NULLABLE_ARG_ADDED'\n};\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  return [].concat(findRemovedTypes(oldSchema, newSchema), findTypesThatChangedKind(oldSchema, newSchema), findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema), findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema).breakingChanges, findTypesRemovedFromUnions(oldSchema, newSchema), findValuesRemovedFromEnums(oldSchema, newSchema), findArgChanges(oldSchema, newSchema).breakingChanges, findInterfacesRemovedFromObjectTypes(oldSchema, newSchema), findRemovedDirectives(oldSchema, newSchema), findRemovedDirectiveArgs(oldSchema, newSchema), findAddedNonNullDirectiveArgs(oldSchema, newSchema), findRemovedDirectiveLocations(oldSchema, newSchema));\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\nexport function findDangerousChanges(oldSchema, newSchema) {\n  return [].concat(findArgChanges(oldSchema, newSchema).dangerousChanges, findValuesAddedToEnums(oldSchema, newSchema), findInterfacesAddedToObjectTypes(oldSchema, newSchema), findTypesAddedToUnions(oldSchema, newSchema), findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema).dangerousChanges);\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing an entire type.\n */\nexport function findRemovedTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_REMOVED,\n        description: typeName + ' was removed.'\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to changing the type of a type.\n */\nexport function findTypesThatChangedKind(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    if (!newTypeMap[typeName]) {\n      return;\n    }\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (oldType.constructor !== newType.constructor) {\n      breakingChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description: typeName + ' changed from ' + (typeKindName(oldType) + ' to ' + typeKindName(newType) + '.')\n      });\n    }\n  });\n  return breakingChanges;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any\n * breaking or dangerous changes in the newSchema related to arguments\n * (such as removal or change of type of an argument, or a change in an\n * argument's default value).\n */\nexport function findArgChanges(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  var dangerousChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(isObjectType(oldType) || isInterfaceType(oldType)) || !(isObjectType(newType) || isInterfaceType(newType)) || newType.constructor !== oldType.constructor) {\n      return;\n    }\n\n    var oldTypeFields = oldType.getFields();\n    var newTypeFields = newType.getFields();\n\n    Object.keys(oldTypeFields).forEach(function (fieldName) {\n      if (!newTypeFields[fieldName]) {\n        return;\n      }\n\n      oldTypeFields[fieldName].args.forEach(function (oldArgDef) {\n        var newArgs = newTypeFields[fieldName].args;\n        var newArgDef = newArgs.find(function (arg) {\n          return arg.name === oldArgDef.name;\n        });\n\n        // Arg not present\n        if (!newArgDef) {\n          breakingChanges.push({\n            type: BreakingChangeType.ARG_REMOVED,\n            description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' was removed')\n          });\n        } else {\n          var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldArgDef.type, newArgDef.type);\n          if (!isSafe) {\n            breakingChanges.push({\n              type: BreakingChangeType.ARG_CHANGED_KIND,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed type from ') + (oldArgDef.type.toString() + ' to ' + newArgDef.type.toString())\n            });\n          } else if (oldArgDef.defaultValue !== undefined && oldArgDef.defaultValue !== newArgDef.defaultValue) {\n            dangerousChanges.push({\n              type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n              description: oldType.name + '.' + fieldName + ' arg ' + (oldArgDef.name + ' has changed defaultValue')\n            });\n          }\n        }\n      });\n      // Check if a non-null arg was added to the field\n      newTypeFields[fieldName].args.forEach(function (newArgDef) {\n        var oldArgs = oldTypeFields[fieldName].args;\n        var oldArgDef = oldArgs.find(function (arg) {\n          return arg.name === newArgDef.name;\n        });\n        if (!oldArgDef) {\n          if (isNonNullType(newArgDef.type)) {\n            breakingChanges.push({\n              type: BreakingChangeType.NON_NULL_ARG_ADDED,\n              description: 'A non-null arg ' + newArgDef.name + ' on ' + (newType.name + '.' + fieldName + ' was added')\n            });\n          } else {\n            dangerousChanges.push({\n              type: DangerousChangeType.NULLABLE_ARG_ADDED,\n              description: 'A nullable arg ' + newArgDef.name + ' on ' + (newType.name + '.' + fieldName + ' was added')\n            });\n          }\n        }\n      });\n    });\n  });\n\n  return {\n    breakingChanges: breakingChanges,\n    dangerousChanges: dangerousChanges\n  };\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  }\n  throw new TypeError('Unknown type ' + type.constructor.name);\n}\n\nexport function findFieldsThatChangedTypeOnObjectOrInterfaceTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!(isObjectType(oldType) || isInterfaceType(oldType)) || !(isObjectType(newType) || isInterfaceType(newType)) || newType.constructor !== oldType.constructor) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n        var isSafe = isChangeSafeForObjectOrInterfaceField(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = isNamedType(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = isNamedType(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n  });\n  return breakingChanges;\n}\n\nexport function findFieldsThatChangedTypeOnInputObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var breakingChanges = [];\n  var dangerousChanges = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isInputObjectType(oldType) || !isInputObjectType(newType)) {\n      return;\n    }\n\n    var oldTypeFieldsDef = oldType.getFields();\n    var newTypeFieldsDef = newType.getFields();\n    Object.keys(oldTypeFieldsDef).forEach(function (fieldName) {\n      // Check if the field is missing on the type in the new schema.\n      if (!(fieldName in newTypeFieldsDef)) {\n        breakingChanges.push({\n          type: BreakingChangeType.FIELD_REMOVED,\n          description: typeName + '.' + fieldName + ' was removed.'\n        });\n      } else {\n        var oldFieldType = oldTypeFieldsDef[fieldName].type;\n        var newFieldType = newTypeFieldsDef[fieldName].type;\n\n        var isSafe = isChangeSafeForInputObjectFieldOrFieldArg(oldFieldType, newFieldType);\n        if (!isSafe) {\n          var oldFieldTypeString = isNamedType(oldFieldType) ? oldFieldType.name : oldFieldType.toString();\n          var newFieldTypeString = isNamedType(newFieldType) ? newFieldType.name : newFieldType.toString();\n          breakingChanges.push({\n            type: BreakingChangeType.FIELD_CHANGED_KIND,\n            description: typeName + '.' + fieldName + ' changed type from ' + (oldFieldTypeString + ' to ' + newFieldTypeString + '.')\n          });\n        }\n      }\n    });\n    // Check if a field was added to the input object type\n    Object.keys(newTypeFieldsDef).forEach(function (fieldName) {\n      if (!(fieldName in oldTypeFieldsDef)) {\n        if (isNonNullType(newTypeFieldsDef[fieldName].type)) {\n          breakingChanges.push({\n            type: BreakingChangeType.NON_NULL_INPUT_FIELD_ADDED,\n            description: 'A non-null field ' + fieldName + ' on ' + ('input type ' + newType.name + ' was added.')\n          });\n        } else {\n          dangerousChanges.push({\n            type: DangerousChangeType.NULLABLE_INPUT_FIELD_ADDED,\n            description: 'A nullable field ' + fieldName + ' on ' + ('input type ' + newType.name + ' was added.')\n          });\n        }\n      }\n    });\n  });\n  return {\n    breakingChanges: breakingChanges,\n    dangerousChanges: dangerousChanges\n  };\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isNamedType(oldType)) {\n    return (\n      // if they're both named types, see if their names are equivalent\n      isNamedType(newType) && oldType.name === newType.name ||\n      // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (isListType(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      isListType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType) ||\n      // moving from nullable to non-null of the same underlying type is safe\n      isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType)\n    );\n  } else if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return isNonNullType(newType) && isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType);\n  }\n  return false;\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isNamedType(oldType)) {\n    // if they're both named types, see if their names are equivalent\n    return isNamedType(newType) && oldType.name === newType.name;\n  } else if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return isListType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType);\n  } else if (isNonNullType(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType) ||\n      // moving from non-null to nullable of the same underlying type is safe\n      !isNonNullType(newType) && isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType)\n    );\n  }\n  return false;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing types from a union type.\n */\nexport function findTypesRemovedFromUnions(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var typesRemovedFromUnion = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isUnionType(oldType) || !isUnionType(newType)) {\n      return;\n    }\n    var typeNamesInNewUnion = Object.create(null);\n    newType.getTypes().forEach(function (type) {\n      typeNamesInNewUnion[type.name] = true;\n    });\n    oldType.getTypes().forEach(function (type) {\n      if (!typeNamesInNewUnion[type.name]) {\n        typesRemovedFromUnion.push({\n          type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n          description: type.name + ' was removed from union type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return typesRemovedFromUnion;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any dangerous\n * changes in the newSchema related to adding types to a union type.\n */\nexport function findTypesAddedToUnions(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var typesAddedToUnion = [];\n  Object.keys(newTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isUnionType(oldType) || !isUnionType(newType)) {\n      return;\n    }\n    var typeNamesInOldUnion = Object.create(null);\n    oldType.getTypes().forEach(function (type) {\n      typeNamesInOldUnion[type.name] = true;\n    });\n    newType.getTypes().forEach(function (type) {\n      if (!typeNamesInOldUnion[type.name]) {\n        typesAddedToUnion.push({\n          type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n          description: type.name + ' was added to union type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return typesAddedToUnion;\n}\n/**\n * Given two schemas, returns an Array containing descriptions of any breaking\n * changes in the newSchema related to removing values from an enum type.\n */\nexport function findValuesRemovedFromEnums(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var valuesRemovedFromEnums = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isEnumType(oldType) || !isEnumType(newType)) {\n      return;\n    }\n    var valuesInNewEnum = Object.create(null);\n    newType.getValues().forEach(function (value) {\n      valuesInNewEnum[value.name] = true;\n    });\n    oldType.getValues().forEach(function (value) {\n      if (!valuesInNewEnum[value.name]) {\n        valuesRemovedFromEnums.push({\n          type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n          description: value.name + ' was removed from enum type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return valuesRemovedFromEnums;\n}\n\n/**\n * Given two schemas, returns an Array containing descriptions of any dangerous\n * changes in the newSchema related to adding values to an enum type.\n */\nexport function findValuesAddedToEnums(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n\n  var valuesAddedToEnums = [];\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isEnumType(oldType) || !isEnumType(newType)) {\n      return;\n    }\n\n    var valuesInOldEnum = Object.create(null);\n    oldType.getValues().forEach(function (value) {\n      valuesInOldEnum[value.name] = true;\n    });\n    newType.getValues().forEach(function (value) {\n      if (!valuesInOldEnum[value.name]) {\n        valuesAddedToEnums.push({\n          type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n          description: value.name + ' was added to enum type ' + typeName + '.'\n        });\n      }\n    });\n  });\n  return valuesAddedToEnums;\n}\n\nexport function findInterfacesRemovedFromObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n  var breakingChanges = [];\n\n  Object.keys(oldTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isObjectType(oldType) || !isObjectType(newType)) {\n      return;\n    }\n\n    var oldInterfaces = oldType.getInterfaces();\n    var newInterfaces = newType.getInterfaces();\n    oldInterfaces.forEach(function (oldInterface) {\n      if (!newInterfaces.some(function (int) {\n        return int.name === oldInterface.name;\n      })) {\n        breakingChanges.push({\n          type: BreakingChangeType.INTERFACE_REMOVED_FROM_OBJECT,\n          description: typeName + ' no longer implements interface ' + (oldInterface.name + '.')\n        });\n      }\n    });\n  });\n  return breakingChanges;\n}\n\nexport function findInterfacesAddedToObjectTypes(oldSchema, newSchema) {\n  var oldTypeMap = oldSchema.getTypeMap();\n  var newTypeMap = newSchema.getTypeMap();\n  var interfacesAddedToObjectTypes = [];\n\n  Object.keys(newTypeMap).forEach(function (typeName) {\n    var oldType = oldTypeMap[typeName];\n    var newType = newTypeMap[typeName];\n    if (!isObjectType(oldType) || !isObjectType(newType)) {\n      return;\n    }\n\n    var oldInterfaces = oldType.getInterfaces();\n    var newInterfaces = newType.getInterfaces();\n    newInterfaces.forEach(function (newInterface) {\n      if (!oldInterfaces.some(function (int) {\n        return int.name === newInterface.name;\n      })) {\n        interfacesAddedToObjectTypes.push({\n          type: DangerousChangeType.INTERFACE_ADDED_TO_OBJECT,\n          description: newInterface.name + ' added to interfaces implemented ' + ('by ' + typeName + '.')\n        });\n      }\n    });\n  });\n  return interfacesAddedToObjectTypes;\n}\n\nexport function findRemovedDirectives(oldSchema, newSchema) {\n  var removedDirectives = [];\n\n  var newSchemaDirectiveMap = getDirectiveMapForSchema(newSchema);\n  oldSchema.getDirectives().forEach(function (directive) {\n    if (!newSchemaDirectiveMap[directive.name]) {\n      removedDirectives.push({\n        type: BreakingChangeType.DIRECTIVE_REMOVED,\n        description: directive.name + ' was removed'\n      });\n    }\n  });\n\n  return removedDirectives;\n}\n\nfunction findRemovedArgsForDirective(oldDirective, newDirective) {\n  var removedArgs = [];\n  var newArgMap = getArgumentMapForDirective(newDirective);\n\n  oldDirective.args.forEach(function (arg) {\n    if (!newArgMap[arg.name]) {\n      removedArgs.push(arg);\n    }\n  });\n\n  return removedArgs;\n}\n\nexport function findRemovedDirectiveArgs(oldSchema, newSchema) {\n  var removedDirectiveArgs = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findRemovedArgsForDirective(oldDirective, newDirective).forEach(function (arg) {\n      removedDirectiveArgs.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: arg.name + ' was removed from ' + newDirective.name\n      });\n    });\n  });\n\n  return removedDirectiveArgs;\n}\n\nfunction findAddedArgsForDirective(oldDirective, newDirective) {\n  var addedArgs = [];\n  var oldArgMap = getArgumentMapForDirective(oldDirective);\n\n  newDirective.args.forEach(function (arg) {\n    if (!oldArgMap[arg.name]) {\n      addedArgs.push(arg);\n    }\n  });\n\n  return addedArgs;\n}\n\nexport function findAddedNonNullDirectiveArgs(oldSchema, newSchema) {\n  var addedNonNullableArgs = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findAddedArgsForDirective(oldDirective, newDirective).forEach(function (arg) {\n      if (!isNonNullType(arg.type)) {\n        return;\n      }\n\n      addedNonNullableArgs.push({\n        type: BreakingChangeType.NON_NULL_DIRECTIVE_ARG_ADDED,\n        description: 'A non-null arg ' + arg.name + ' on directive ' + (newDirective.name + ' was added')\n      });\n    });\n  });\n\n  return addedNonNullableArgs;\n}\n\nexport function findRemovedLocationsForDirective(oldDirective, newDirective) {\n  var removedLocations = [];\n  var newLocationSet = new Set(newDirective.locations);\n\n  oldDirective.locations.forEach(function (oldLocation) {\n    if (!newLocationSet.has(oldLocation)) {\n      removedLocations.push(oldLocation);\n    }\n  });\n\n  return removedLocations;\n}\n\nexport function findRemovedDirectiveLocations(oldSchema, newSchema) {\n  var removedLocations = [];\n  var oldSchemaDirectiveMap = getDirectiveMapForSchema(oldSchema);\n\n  newSchema.getDirectives().forEach(function (newDirective) {\n    var oldDirective = oldSchemaDirectiveMap[newDirective.name];\n    if (!oldDirective) {\n      return;\n    }\n\n    findRemovedLocationsForDirective(oldDirective, newDirective).forEach(function (location) {\n      removedLocations.push({\n        type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n        description: location + ' was removed from ' + newDirective.name\n      });\n    });\n  });\n\n  return removedLocations;\n}\n\nfunction getDirectiveMapForSchema(schema) {\n  return keyMap(schema.getDirectives(), function (dir) {\n    return dir.name;\n  });\n}\n\nfunction getArgumentMapForDirective(directive) {\n  return keyMap(directive.args, function (arg) {\n    return arg.name;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/findBreakingChanges.mjs\n// module id = 1990\n// module chunks = 0","/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\nimport { GraphQLError } from '../error/GraphQLError';\nimport { visit, visitWithTypeInfo } from '../language/visitor';\n\nimport { getNamedType } from '../type/definition';\nimport { GraphQLSchema } from '../type/schema';\nimport { TypeInfo } from './TypeInfo';\n\n/**\n * A validation rule which reports deprecated usages.\n *\n * Returns a list of GraphQLError instances describing each deprecated use.\n */\nexport function findDeprecatedUsages(schema, ast) {\n  var errors = [];\n  var typeInfo = new TypeInfo(schema);\n\n  visit(ast, visitWithTypeInfo(typeInfo, {\n    Field: function Field(node) {\n      var fieldDef = typeInfo.getFieldDef();\n      if (fieldDef && fieldDef.isDeprecated) {\n        var parentType = typeInfo.getParentType();\n        if (parentType) {\n          var reason = fieldDef.deprecationReason;\n          errors.push(new GraphQLError('The field ' + parentType.name + '.' + fieldDef.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumVal = typeInfo.getEnumValue();\n      if (enumVal && enumVal.isDeprecated) {\n        var type = getNamedType(typeInfo.getInputType());\n        if (type) {\n          var reason = enumVal.deprecationReason;\n          errors.push(new GraphQLError('The enum value ' + type.name + '.' + enumVal.name + ' is deprecated.' + (reason ? ' ' + reason : ''), [node]));\n        }\n      }\n    }\n  }));\n\n  return errors;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/node_modules/graphql/utilities/findDeprecatedUsages.mjs\n// module id = 1991\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildQueryFactory = undefined;\n\nvar _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');\n\nvar _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);\n\nvar _templateObject = (0, _taggedTemplateLiteral3.default)(['\\n                ', '\\n            '], ['\\n                ', '\\n            ']);\n\nvar _graphqlTag = require('graphql-tag');\n\nvar _graphqlTag2 = _interopRequireDefault(_graphqlTag);\n\nvar _buildVariables = require('./buildVariables');\n\nvar _buildVariables2 = _interopRequireDefault(_buildVariables);\n\nvar _buildGqlQuery = require('./buildGqlQuery');\n\nvar _buildGqlQuery2 = _interopRequireDefault(_buildGqlQuery);\n\nvar _getResponseParser = require('./getResponseParser');\n\nvar _getResponseParser2 = _interopRequireDefault(_getResponseParser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildQueryFactory = exports.buildQueryFactory = function buildQueryFactory(buildVariablesImpl, buildGqlQueryImpl, getResponseParserImpl) {\n    return function (introspectionResults) {\n        var knownResources = introspectionResults.resources.map(function (r) {\n            return r.type.name;\n        });\n\n        return function (aorFetchType, resourceName, params) {\n            var resource = introspectionResults.resources.find(function (r) {\n                return r.type.name === resourceName;\n            });\n\n            if (!resource) {\n                throw new Error('Unknown resource ' + resourceName + '. Make sure it has been declared on your server side schema. Known resources are ' + knownResources.join(', '));\n            }\n\n            var queryType = resource[aorFetchType];\n\n            if (!queryType) {\n                throw new Error('No query or mutation matching aor fetch type ' + aorFetchType + ' could be found for resource ' + resource.type.name);\n            }\n\n            var variables = buildVariablesImpl(introspectionResults)(resource, aorFetchType, params, queryType);\n            var query = buildGqlQueryImpl(introspectionResults)(resource, aorFetchType, queryType, variables);\n            var parseResponse = getResponseParserImpl(introspectionResults)(aorFetchType, resource, queryType);\n\n            return {\n                query: (0, _graphqlTag2.default)(_templateObject, query),\n                variables: variables,\n                parseResponse: parseResponse\n            };\n        };\n    };\n};\n\nexports.default = buildQueryFactory(_buildVariables2.default, _buildGqlQuery2.default, _getResponseParser2.default);\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/buildQuery.js\n// module id = 1992\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _extends13 = require('babel-runtime/helpers/extends');\n\nvar _extends14 = _interopRequireDefault(_extends13);\n\nvar _reactAdmin = require('react-admin');\n\nvar _getFinalType = require('./getFinalType');\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nvar _isList = require('./isList');\n\nvar _isList2 = _interopRequireDefault(_isList);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sanitizeValue = function sanitizeValue(type, value) {\n    if (type.name === 'Int') {\n        return parseInt(value);\n    }\n\n    if (type.name === 'Float') {\n        return parseFloat(value);\n    }\n\n    return value;\n};\n\nvar buildGetListVariables = function buildGetListVariables(introspectionResults) {\n    return function (resource, aorFetchType, params) {\n        var filter = Object.keys(params.filter).reduce(function (acc, key) {\n            if (key === 'ids') {\n                return (0, _extends14.default)({}, acc, { ids: params.filter[key] });\n            }\n\n            if ((0, _typeof3.default)(params.filter[key]) === 'object') {\n                var type = introspectionResults.types.find(function (t) {\n                    return t.name === resource.type.name + 'Filter';\n                });\n                var filterSome = type.inputFields.find(function (t) {\n                    return t.name === key + '_some';\n                });\n\n                if (filterSome) {\n                    var _filter = Object.keys(params.filter[key]).reduce(function (acc, k) {\n                        return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, k + '_in', params.filter[key][k]));\n                    }, {});\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + '_some', _filter));\n                }\n            }\n\n            var parts = key.split('.');\n\n            if (parts.length > 1) {\n                if (parts[1] == 'id') {\n                    var _type2 = introspectionResults.types.find(function (t) {\n                        return t.name === resource.type.name + 'Filter';\n                    });\n                    var _filterSome = _type2.inputFields.find(function (t) {\n                        return t.name === parts[0] + '_some';\n                    });\n\n                    if (_filterSome) {\n                        return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, parts[0] + '_some', { id: params.filter[key] }));\n                    }\n\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, parts[0], { id: params.filter[key] }));\n                }\n\n                var _resourceField = resource.type.fields.find(function (f) {\n                    return f.name === parts[0];\n                });\n                var _type = (0, _getFinalType2.default)(_resourceField.type);\n                return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, sanitizeValue(_type, params.filter[key])));\n            }\n\n            var resourceField = resource.type.fields.find(function (f) {\n                return f.name === key;\n            });\n\n            if (resourceField) {\n                var _type3 = (0, _getFinalType2.default)(resourceField.type);\n                var isAList = (0, _isList2.default)(resourceField.type);\n\n                if (isAList) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, Array.isArray(params.filter[key]) ? params.filter[key].map(function (value) {\n                        return sanitizeValue(_type3, value);\n                    }) : sanitizeValue(_type3, [params.filter[key]])));\n                }\n\n                return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, sanitizeValue(_type3, params.filter[key])));\n            }\n\n            return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, params.filter[key]));\n        }, {});\n\n        return {\n            page: parseInt(params.pagination.page) - 1,\n            perPage: parseInt(params.pagination.perPage),\n            sortField: params.sort.field,\n            sortOrder: params.sort.order,\n            filter: filter\n        };\n    };\n};\n\nvar buildCreateUpdateVariables = function buildCreateUpdateVariables() {\n    return function (resource, aorFetchType, params, queryType) {\n        return Object.keys(params.data).reduce(function (acc, key) {\n            if (Array.isArray(params.data[key])) {\n                var arg = queryType.args.find(function (a) {\n                    return a.name === key + 'Ids';\n                });\n\n                if (arg) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + 'Ids', params.data[key].map(function (_ref) {\n                        var id = _ref.id;\n                        return id;\n                    })));\n                }\n            }\n\n            if ((0, _typeof3.default)(params.data[key]) === 'object') {\n                var _arg = queryType.args.find(function (a) {\n                    return a.name === key + 'Id';\n                });\n\n                if (_arg) {\n                    return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key + 'Id', params.data[key].id));\n                }\n            }\n\n            return (0, _extends14.default)({}, acc, (0, _defineProperty3.default)({}, key, params.data[key]));\n        }, {});\n    };\n};\n\nexports.default = function (introspectionResults) {\n    return function (resource, aorFetchType, params, queryType) {\n        switch (aorFetchType) {\n            case _reactAdmin.GET_LIST:\n                {\n                    return buildGetListVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n            case _reactAdmin.GET_MANY:\n                return {\n                    filter: { ids: params.ids }\n                };\n            case _reactAdmin.GET_MANY_REFERENCE:\n                {\n                    var parts = params.target.split('.');\n\n                    return {\n                        filter: (0, _defineProperty3.default)({}, parts[0], { id: params.id })\n                    };\n                }\n            case _reactAdmin.GET_ONE:\n                return {\n                    id: params.id\n                };\n            case _reactAdmin.UPDATE:\n                {\n                    return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n\n            case _reactAdmin.CREATE:\n                {\n                    return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n                }\n\n            case _reactAdmin.DELETE:\n                return {\n                    id: params.id\n                };\n        }\n    };\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/buildVariables.js\n// module id = 1993\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildApolloArgs = exports.buildArgs = exports.getArgType = exports.buildFields = undefined;\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends7 = require('babel-runtime/helpers/extends');\n\nvar _extends8 = _interopRequireDefault(_extends7);\n\nvar _reactAdmin = require('react-admin');\n\nvar _raDataGraphql = require('ra-data-graphql');\n\nvar _graphql = require('graphql');\n\nvar _graphqlify = require('./graphqlify');\n\nvar _getFinalType = require('./getFinalType');\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nvar _isList = require('./isList');\n\nvar _isList2 = _interopRequireDefault(_isList);\n\nvar _isRequired = require('./isRequired');\n\nvar _isRequired2 = _interopRequireDefault(_isRequired);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildFields = exports.buildFields = function buildFields(introspectionResults) {\n    return function (fields) {\n        return fields.reduce(function (acc, field) {\n            var type = (0, _getFinalType2.default)(field.type);\n\n            if (type.name.startsWith('_')) {\n                return acc;\n            }\n\n            if (type.kind !== _graphql.TypeKind.OBJECT) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, {}));\n            }\n\n            var linkedResource = introspectionResults.resources.find(function (r) {\n                return r.type.name === type.name;\n            });\n\n            if (linkedResource) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, { fields: { id: {} } }));\n            }\n\n            var linkedType = introspectionResults.types.find(function (t) {\n                return t.name === type.name;\n            });\n\n            if (linkedType) {\n                return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, field.name, {\n                    fields: buildFields(introspectionResults)(linkedType.fields)\n                }));\n            }\n\n            // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n            // ending with endless circular dependencies\n            return acc;\n        }, {});\n    };\n};\n\nvar getArgType = exports.getArgType = function getArgType(arg) {\n    var type = (0, _getFinalType2.default)(arg.type);\n    var required = (0, _isRequired2.default)(arg.type);\n    var list = (0, _isList2.default)(arg.type);\n\n    return '' + (list ? '[' : '') + type.name + (list ? '!]' : '') + (required ? '!' : '');\n};\n\nvar buildArgs = exports.buildArgs = function buildArgs(query, variables) {\n    if (query.args.length === 0) {\n        return {};\n    }\n\n    var validVariables = Object.keys(variables).filter(function (k) {\n        return typeof variables[k] !== 'undefined';\n    });\n    var args = query.args.filter(function (a) {\n        return validVariables.includes(a.name);\n    }).reduce(function (acc, arg) {\n        return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, '' + arg.name, '$' + arg.name));\n    }, {});\n\n    return args;\n};\n\nvar buildApolloArgs = exports.buildApolloArgs = function buildApolloArgs(query, variables) {\n    if (query.args.length === 0) {\n        return {};\n    }\n\n    var validVariables = Object.keys(variables).filter(function (k) {\n        return typeof variables[k] !== 'undefined';\n    });\n\n    var args = query.args.filter(function (a) {\n        return validVariables.includes(a.name);\n    }).reduce(function (acc, arg) {\n        return (0, _extends8.default)({}, acc, (0, _defineProperty3.default)({}, '$' + arg.name, getArgType(arg)));\n    }, {});\n\n    return args;\n};\n\nexports.default = function (introspectionResults) {\n    return function (resource, aorFetchType, queryType, variables) {\n        var sortField = variables.sortField,\n            sortOrder = variables.sortOrder,\n            metaVariables = (0, _objectWithoutProperties3.default)(variables, ['sortField', 'sortOrder']);\n\n        var apolloArgs = buildApolloArgs(queryType, variables);\n        var args = buildArgs(queryType, variables);\n        var metaArgs = buildArgs(queryType, metaVariables);\n        var fields = buildFields(introspectionResults)(resource.type.fields);\n        if (aorFetchType === _reactAdmin.GET_LIST || aorFetchType === _reactAdmin.GET_MANY || aorFetchType === _reactAdmin.GET_MANY_REFERENCE) {\n            var _result = (0, _graphqlify.encodeQuery)(queryType.name, {\n                params: apolloArgs,\n                fields: {\n                    items: {\n                        field: queryType.name,\n                        params: args,\n                        fields: fields\n                    },\n                    total: {\n                        field: '_' + queryType.name + 'Meta',\n                        params: metaArgs,\n                        fields: { count: {} }\n                    }\n                }\n            });\n\n            return _result;\n        }\n\n        if (aorFetchType === _reactAdmin.DELETE) {\n            return (0, _graphqlify.encodeMutation)(queryType.name, {\n                params: apolloArgs,\n                fields: {\n                    data: {\n                        field: queryType.name,\n                        params: args,\n                        fields: { id: {} }\n                    }\n                }\n            });\n        }\n\n        var query = {\n            params: apolloArgs,\n            fields: {\n                data: {\n                    field: queryType.name,\n                    params: args,\n                    fields: fields\n                }\n            }\n        };\n\n        var result = _raDataGraphql.QUERY_TYPES.includes(aorFetchType) ? (0, _graphqlify.encodeQuery)(queryType.name, query) : (0, _graphqlify.encodeMutation)(queryType.name, query);\n\n        return result;\n    };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/buildGqlQuery.js\n// module id = 1994\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.encodeMutation = exports.encodeQuery = undefined;\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Encodes a graphql query\nvar graphqlify = function graphqlify(fields) {\n    return encodeOperation('query', fields);\n};\n\n// Encodes a graphql query\nvar encodeQuery = exports.encodeQuery = function encodeQuery(_nameOrFields, _fieldsOrNil) {\n    return encodeOperation('query', _nameOrFields, _fieldsOrNil);\n};\n\n// Encodes a graphql mutation\nvar encodeMutation = exports.encodeMutation = function encodeMutation(_nameOrFields, _fieldsOrNil) {\n    return encodeOperation('mutation', _nameOrFields, _fieldsOrNil);\n};\n\n// default export graphqlify\nexports.default = graphqlify;\n\n// Encodes a graphql operation and fragments\n// The output is a complete graphql query.\n//\n//   {a: {fields: {b: 1}}}  => '{a{b}}'\n//   'mutation', {a: {fields: {b: 1}}}  => 'mutation{a{b}}'\n//\n\nfunction encodeOperation(type, _nameOrFields, _fieldsOrNil) {\n    var name = _nameOrFields;\n    var fields = _fieldsOrNil;\n    if (!_fieldsOrNil && (typeof _nameOrFields === 'undefined' ? 'undefined' : (0, _typeof3.default)(_nameOrFields)) === 'object') {\n        name = null;\n        fields = _nameOrFields;\n    }\n\n    var parts = [];\n    var fieldset = void 0;\n\n    if (name && (fields.params || fields.fields)) {\n        fieldset = encodeField(name, fields);\n        parts.push(type + ' ' + fieldset);\n    } else {\n        // stringifying the main query object\n        fieldset = encodeFieldset(fields, null);\n\n        if (name) {\n            parts.push(type + ' ' + name + fieldset);\n        } else {\n            parts.push(type + ' ' + fieldset);\n        }\n    }\n\n    return parts.join(',');\n}\n\n// Encodes a group of fields and fragments\n// The output is a piece of a graphql query.\n//\n//   {a: 1, b: true, c: {}} => '{a,b,c}'\n//   {a: {fields: {b: 1}}}  => '{a{b}}'\n//\nfunction encodeFieldset(fields, fragments) {\n    var parts = [];\n    if (fields) {\n        parts.push(encodeFields(fields));\n    }\n    if (fragments) {\n        fragments.forEach(function (f) {\n            return parts.push('...' + f.name);\n        });\n    }\n    return '{' + parts.join(',') + '}';\n}\n\n// Encodes a set of fields and nested fields.\n// The output is a piece of a graphql query.\n//\n//   {a: 1, b: true, c: {}} => 'a,b,c'\n//   {a: {fields: {b: 1}}}  => 'a{b}'\n//\nfunction encodeFields(fields) {\n    if (!fields || (typeof fields === 'undefined' ? 'undefined' : (0, _typeof3.default)(fields)) !== 'object') {\n        throw new Error('fields cannot be \"' + fields + '\"');\n    }\n\n    var encoded = Object.keys(fields).filter(function (key) {\n        return fields.hasOwnProperty(key) && fields[key];\n    }).map(function (key) {\n        return encodeField(key, fields[key]);\n    });\n\n    if (encoded.length === 0) {\n        throw new Error('fields cannot be empty');\n    }\n\n    return encoded.join(',');\n}\n\n// Encode a single field and nested fields.\n// The output is a piece of a graphql query.\n//\n//   ('a', 1)                 => 'a'\n//   ('a', {field: 'aa'})     => 'a:aa'\n//   ('a', {params: {b: 10}}) => 'a(b:10)'\n//   ('a', {fields: {b: 10}}) => 'a{b}'\n//\nfunction encodeField(key, val) {\n    if ((typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) !== 'object') {\n        return key;\n    }\n\n    var parts = [key];\n\n    if (val.field) {\n        parts.push(':' + val.field);\n    }\n    if (val.params) {\n        parts.push(encodeParams(val.params));\n    }\n    if (val.fields || val.fragments) {\n        parts.push(encodeFieldset(val.fields, val.fragments));\n    }\n\n    return parts.join('');\n}\n\n// Encodes a map of field parameters.\n//\n//   {a: 1, b: true} => '(a:1,b:true)'\n//   {a: ['b', 'c']} => '(a:[\"b\",\"c\"])'\n//   {a: {b: 'c'}}   => '(a:{b:\"c\"})'\n//\nfunction encodeParams(params) {\n    var encoded = encodeParamsMap(params);\n    if (encoded.length === 0) {\n        throw new Error('params cannot be empty');\n    }\n\n    return '(' + encoded.join(',') + ')';\n}\n\n// Encodes an object type field parameter.\n//\n//   {a: {b: {c: 10}}} => '{a:{b:{c:10}}}'\n//   {a: {b: false}}   => '{a:{b:false}}'\n//\nfunction encodeParamsObject(params) {\n    var encoded = encodeParamsMap(params);\n    return '{' + encoded.join(',') + '}';\n}\n\n// Encodes an array type field parameter.\n//\n//   [1, 2, 3]          => '[1,2,3]'\n//   [ {a: 1}, {a: 2} ] => '[{a:1},{a:2}]'\n//\nfunction encodeParamsArray(array) {\n    var encoded = array.map(encodeParamValue);\n    return '[' + encoded.join(',') + ']';\n}\n\n// Encodes a map of field parameters.\n//\n//   {a: 1, b: true} => 'a:1,b:true'\n//   {a: ['b', 'c']} => 'a:[\"b\",\"c\"]'\n//   {a: {b: 'c'}}   => 'a:{b:\"c\"}'\n//\nfunction encodeParamsMap(params) {\n    if (!params || (typeof params === 'undefined' ? 'undefined' : (0, _typeof3.default)(params)) !== 'object') {\n        throw new Error('params cannot be \"' + params + '\"');\n    }\n\n    var keys = Object.keys(params).filter(function (key) {\n        var val = params[key];\n        return params.hasOwnProperty(key) && val !== undefined && val !== null && !Number.isNaN(val);\n    });\n\n    return keys.map(function (key) {\n        return encodeParam(key, params[key]);\n    });\n}\n\n// Encodes a single parameter\n//\n//    ('a', 1) => 'a:1'\n//\nfunction encodeParam(key, val) {\n    return key + ':' + encodeParamValue(val);\n}\n\n// Encodes parameter value\n//\n//   'a'       => '\"a\"'\n//   Enum('a') => 'a'\n//\nfunction encodeParamValue(value) {\n    if (Array.isArray(value)) {\n        return encodeParamsArray(value);\n    }\n    if ((typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {\n        return encodeParamsObject(value);\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    throw new Error('unsupported param type \"' + (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) + '\"');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/graphqlify/index.js\n// module id = 1995\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _graphql = require('graphql');\n\nvar isRequired = function isRequired(type) {\n    if (type.kind === _graphql.TypeKind.LIST) {\n        return isRequired(type.ofType);\n    }\n\n    return type.kind === _graphql.TypeKind.NON_NULL;\n};\n\nexports.default = isRequired;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/isRequired.js\n// module id = 1996\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _extends6 = require('babel-runtime/helpers/extends');\n\nvar _extends7 = _interopRequireDefault(_extends6);\n\nvar _graphql = require('graphql');\n\nvar _reactAdmin = require('react-admin');\n\nvar _getFinalType = require('./getFinalType');\n\nvar _getFinalType2 = _interopRequireDefault(_getFinalType);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sanitizeResource = function sanitizeResource(introspectionResults, resource) {\n    return function (data) {\n        var result = Object.keys(data).reduce(function (acc, key) {\n            if (key.startsWith('_')) {\n                return acc;\n            }\n\n            var field = resource.type.fields.find(function (f) {\n                return f.name === key;\n            });\n            var type = (0, _getFinalType2.default)(field.type);\n\n            if (type.kind !== _graphql.TypeKind.OBJECT) {\n                return (0, _extends7.default)({}, acc, (0, _defineProperty3.default)({}, field.name, data[field.name]));\n            }\n\n            // FIXME: We might have to handle linked types which are not resources but will have to be careful about\n            // endless circular dependencies\n            var linkedResource = introspectionResults.resources.find(function (r) {\n                return r.type.name === type.name;\n            });\n\n            if (linkedResource) {\n                var _extends4;\n\n                var linkedResourceData = data[field.name];\n\n                if (Array.isArray(linkedResourceData)) {\n                    var _extends3;\n\n                    return (0, _extends7.default)({}, acc, (_extends3 = {}, (0, _defineProperty3.default)(_extends3, field.name, data[field.name].map(sanitizeResource(introspectionResults, linkedResource))), (0, _defineProperty3.default)(_extends3, field.name + 'Ids', data[field.name].map(function (d) {\n                        return d.id;\n                    })), _extends3));\n                }\n\n                return (0, _extends7.default)({}, acc, (_extends4 = {}, (0, _defineProperty3.default)(_extends4, field.name + '.id', linkedResourceData ? data[field.name].id : undefined), (0, _defineProperty3.default)(_extends4, field.name, linkedResourceData ? sanitizeResource(introspectionResults, linkedResource)(data[field.name]) : undefined), _extends4));\n            }\n\n            return (0, _extends7.default)({}, acc, (0, _defineProperty3.default)({}, field.name, data[field.name]));\n        }, {});\n\n        return result;\n    };\n};\n\nexports.default = function (introspectionResults) {\n    return function (aorFetchType, resource) {\n        return function (response) {\n            var sanitize = sanitizeResource(introspectionResults, resource);\n            var data = response.data;\n\n            if (aorFetchType === _reactAdmin.GET_LIST || aorFetchType === _reactAdmin.GET_MANY || aorFetchType === _reactAdmin.GET_MANY_REFERENCE) {\n                return {\n                    data: response.data.items.map(sanitize),\n                    total: response.data.total.count\n                };\n            }\n\n            return { data: sanitize(data.data) };\n        };\n    };\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/francois/git/react-admin/packages/ra-data-graphql-simple/lib/getResponseParser.js\n// module id = 1997\n// module chunks = 0"],"sourceRoot":""}